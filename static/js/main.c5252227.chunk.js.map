{"version":3,"sources":["utils.js","useDB.js","parsers.js","components/TagAllDropDown.js","components/IntentAllDropDown.js","components/SkillAllDropDown.js","components/ImportListsDropDown.js","components/Components.js","components/JSONTextEditor.js","LocalStorageUploadManager.js","components/ListAllDropDown.js","components/SearchInput.js","components/ListsManagerSearchBar.js","useListItemRow.js","components/SuggestionComponent.js","ListsManagerRow.js","useDBSingleKey.js","useListItemEditor.js","ListsManager.js","useNluRow.js","NluExampleRow.js","components/EditorSearchBar.js","useNluEditor.js","NluExampleEditor.js","components/NavbarComponent.js","NluImportRow.js","NluImportEditor.js","export/createZip.js","export/exportJOVO.js","export/exportJSON.js","export/exportMycroft.js","export/exportRASA.js","export/index.js","NluSkillsEditor.js","SearchPage.js","App.js","serviceWorker.js","index.js","images/check.svg","images/thumb-down.svg","images/fire.svg","images/waiting.gif","images/thumb-up.svg","images/arrow-thick-left.svg","images/arrow-thick-right.svg"],"names":["generateObjectId","Date","getTime","toString","replace","Math","random","toLowerCase","parentUrl","url","split","slice","join","splitSentences","text","final","splits","splitText","trim","length","push","uniquifyArray","a","Array","isArray","index","map","value","Object","keys","uniquifyArrayOfObjects","field","emptyIndex","concat","values","replaceEntities","example","entities","sort","b","start","offset","newExample","entity","type","end","diff","reducer","state","action","item","items","Error","useDB","database","databaseTable","useReducer","dispatch","localforageStorage","localforage","createInstance","name","storeName","getId","id","findKeyBy","k","loadAll","then","ipromises","key","Promise","iresolve","ireject","getItem","res","all","saveItem","isNewItem","setItem","console","log","undefined","deleteItem","getIdForIndex","removeItem","setItems","clear","findBy","filter","matchFunction","filtered","i","cleanListItem","extractSynonym","parts","sortListSplits","sortExampleSplits","TagAllDropDown","props","Dropdown","as","ButtonGroup","Toggle","size","Button","Menu","style","display","onSubmit","e","preventDefault","tagAll","target","InputGroup","className","onChange","setTagAllValue","tagAllValue","variant","onClick","lookups","tagLookups","skillKey","Item","untagAll","marginLeft","IntentAllDropDown","intentAll","setIntentAllValue","intentAllValue","intentLookups","intentKey","SkillAllDropDown","skillSetAll","setSkillAllValue","skillAllValue","skillLookups","unskillAll","ImportListsDropDown","useState","importTo","importToValue","setImportToValue","float","importListTo","listsLookups","MatchesTallies","fontWeight","filteredItems","HelpMenu","marginRight","to","HelpText","HelpTextImport","HelpTextAbout","HelpTextExport","NewFileButtons","match","FileSelector","FilesList","list","ListGroup","window","confirm","title","importExamples","listName","importLists","width","multiple","handleFileSelection","WithSelectedDropDowns","selectedTally","JSONTextEditor","setTitle","data","setText","isJson","setIsJson","json","setJson","editorMode","setEditorMode","editorOptions","setEditorOptions","params","itemId","useEffect","jsonParsed","JSON","parse","parentLink","linkParts","editorModeOptions","j","minHeight","height","theme","ace","history","mode","allowedModes","stringify","IndexPage","LocalStorageUploadManager","localforageStorageImport","localforageStorageLists","ev","results","forEach","result","file","parsed","generateSplits","newSplits","rasa_nlu_data","common_examples","cleanEntities","el","intent","tags","invocation","intents","l","phrases","phrase","inputs","inputKey","input","markerStart","indexOf","entityi","parseImportText","newTextSplits","textInner","synonym","lists","listKey","uniqueKeys","listItem","q","parseLists","allLists","allListsIndex","listItemIndex","newListItem","setPageMessage","setTimeout","path","render","exact","iprops","ListAllDropDown","SearchInput","searchFilter","setSearchFilter","placeholder","ListsManagerSearchBar","topTagOptions","setTopTagOptions","topTagOptionss","setListFilterValue","unshift","selectedListTally","resetSelection","src","checkImage","alt","selectAll","listFilterValue","createEmptyItem","useListItemRow","splitNumber","selectionState","setSelectionState","setTags","reactTags","React","createRef","tag","onTagDelete","newTags","splice","newItem","newTag","onTagAddition","updateExampleContent","content","updateExampleSynonym","selectItem","isSelected","deselectItem","SuggestionComponent","query","ListsManagerRow","position","textAlign","borderTop","borderRadius","marginTop","placeholderText","minQueryLength","maxSuggestionsLength","autoresize","allowNew","ref","suggestionComponent","suggestions","onDelete","onAddition","singleKey","useListItemEditor","databaseKey","updateLists","useDBSingleKey","setFilteredItems","filteredItemsKeys","setFilteredItemsKeys","listRef","matchText","matchPicklist","itemKeys","val","tagValue","newItems","finalTags","saveItemWrap","current","resetAfterIndex","getItemSize","baseSize","innerWidth","deleteAll","RenderRow","saveNlu","ListsManager","itemData","itemKey","itemCount","itemSize","renderEditor","useNluRow","newEntity","setNewEntity","intentTitle","setIntentTitle","skills","setSkills","reactSkills","createSelection","createTextRange","selRange","collapse","moveStart","moveEnd","select","setSelectionRange","selectionStart","selectionEnd","focus","entityTypeChanged","entityNumber","newEntities","textSelection","startTextSelection","endTextSelection","skill","onSkillDelete","newSkills","newSkill","onSkillAddition","diffPos","findFirstDiffPos","insertionLength","entityIndex","deletionLength","entityClicked","entityKey","entityType","document","getElementById","intentChanged","entityDelete","setSkill","NluExampleRow","textInput","setTextInput","intentOptions","entitiesDropdowns","entityOptions","entityLookups","textSelectionFrom","thumbdownImage","onFocus","onSelect","getSelection","EditorSearchBar","topskillOptions","setSkillFilterValue","setIntentFilterValue","intentFilterValue","skillFilterValue","useNluEditor","updateLookups","useParams","useHistory","skillId","intentId","intentFilter","skillFilter","searchFilterBool","newIntent","location","pathname","intentValue","skillValue","heightPerLine","tagsPerLine","entitiesPerLine","skillsPerLine","tallyExtras","round","saveAll","lsItems","exampleItems","saveLSItems","saveLSItem","NluExampleEditor","NavbarComponent","astyle","paddingLeft","currentPage","pages","show","link","links","page","href","helpButton","helpComponent","Navbar","bg","message","top","left","border","background","padding","minWidth","fireImage","Text","right","waitingImage","zIndex","waiting","NluImportRow","thumbupImage","NluImportEditor","paddingRight","arrowthickleftImage","arrowthickrightImage","createZip","zipStructure","zip","JSZip","recurseZipStructure","files","options","base64","folders","folder","resolve","reject","generateAsync","exportJOVO","jovo","entityTypes","examples","entityExtrasList","inputTypes","exportJSON","usedLists","skillLists","exportMycroft","listsStorage","modelFiles","combinedEntities","exportRASA","cleanIntents","cleanSkill","friendlyTitle","exportFormats","exportFunction","NluSkillsEditor","currentIntent","setCurrentIntent","setInvocation","entitiesForSkill","setEntitiesForSkill","listsForEntity","setListsForEntity","currentSkill","setCurrentSkill","listsManager","collatedItems","setCollatedItems","collatedCounts","setCollatedCounts","skillsStorage","err","entityName","newCollatedItems","newCollatedCounts","exportFormat","now","zipBody","saveAs","skillsList","collatedIntent","useCurrentIntent","completionVariant","Badge","collatedEntity","listTags","listItemKey","listIndex","removeListFromSkillEntity","addListToSkillEntity","SearchPage","SiteMenu","App","setWaiting","pageMessage","setIntentLookups","setEntityLookups","setTagLookups","setSkillLookups","setListsLookups","setSelectedTally","listTally","setListTally","setSelectedListTally","listTallyByList","setListTallyByList","selectedListTallyByList","setSelectedListTallyByList","startWaiting","stopWaiting","newSelectedLists","newLists","tally","selected","distinct","self","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.c5252227.chunk.js","sourcesContent":["//const yaml = require('js-yaml');\n// FUNCTIONS \n\nfunction generateObjectId() {\n    var timestamp = (new Date().getTime() / 1000 | 0).toString(16);\n    return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function() {\n        return (Math.random() * 16 | 0).toString(16);\n    }).toLowerCase();\n}\n   \nfunction parentUrl(url) {\n    return url.split(\"/\").slice(0,-1).join(\"/\") \n}\n\nfunction concatText(text,words) {\n   let parts = text.split(' ')\n   let shorter = parts.slice(0,20).join(' ')\n   return (shorter.length < text.length) ? shorter + '...' : shorter;\n}\n\nfunction splitSentences(text) {\n      var final = []\n      if (text) {\n          // split by newline and full stop\n         var splits = text.split('\\n').join('::::').split('.').join('::::').split('::::') //.map(function(value) { return value.trim()})\n        // trim all splits\n        for (var splitText in splits) {\n            if(splitText.trim().length > 0) final.push(splits[splitText])\n        }\n     }\n     return final;\n}\n\n\n    \n    function findFirstDiffPos(a, b) {\n      if (a === b) return -1;\n      for (var i=0; a[i] === b[i]; i++) {}\n      return i;\n    }\n    \n    function uniquifyArray(a) {\n        //console.log(['UNIQARRAY',a])\n        if (Array.isArray(a)) {\n            var index = {}\n            a.map(function(value) {\n                index[value] = true \n                return null\n            })\n            return Object.keys(index)\n        } else {\n            return []\n        }\n    }\n\n    function uniquifyArrayOfObjects(a,field) {\n         if (Array.isArray(a)) {\n             var index = {}\n            var emptyIndex = null\n            a.map(function(value) {\n                if (value) {\n                    if (value[field]) {\n                        index[value[field]] = value \n                    } else {\n                        emptyIndex = value\n                    }\n                }\n                return null\n            })\n            if (emptyIndex) return [emptyIndex].concat(Object.values(index))\n            else return Object.values(index)\n        } else {\n            return []\n        }\n    }\n    function replaceEntities(example,entities) {\n        // replace entity values with {entityName}\n        // first sort entities by start key\n        entities = entities.sort(function(a,b) {\n          if (a.start < b.start) return -1\n          else return 1  \n        })\n        var offset = 0\n        var newExample = example\n        entities.map(function(entity) {\n            newExample = newExample.slice(0,entity.start + offset)+\"{\"+entity.type+\"}\"+newExample.slice(entity.end + offset)\n            var diff = (entity.end - entity.start) - (entity.type.length + 2)\n            offset -= diff\n            \n        })\n        return newExample\n    }\n    \n    \nexport {generateObjectId, parentUrl, concatText , findFirstDiffPos, splitSentences,uniquifyArray, uniquifyArrayOfObjects, replaceEntities}\n","import {useReducer} from 'react';\nimport {generateObjectId} from './utils'\nimport localforage from 'localforage'\n\n// handle list updates with minimum disruption to top level items\nfunction reducer(state, action) {\n switch (action.type) {\n    case \"append\":\n      if (action.item) {\n        return [...state, action.item];\n      } else return state\n    case \"insert\":\n      if (action.item && typeof action.index === \"number\" && action.index >= 0) {\n          if (state.length > 0) {\n              return [\n                ...state.slice(0, action.index),\n                action.item,\n                ...state.slice(action.index)\n              ];\n          } else return state\n        } else return state\n    case \"remove\":\n      if (typeof action.index === \"number\" && action.index >= 0) {\n          return [\n            ...state.slice(0, action.index),\n            ...state.slice(action.index + 1)\n          ];\n       } else return state \n    case \"update\":\n       if (action.item && typeof action.index === \"number\" && action.index >= 0) {\n            return [\n            ...state.slice(0, action.index),\n            action.item,\n            ...state.slice(action.index + 1)\n          ];\n      } else return state\n    case \"replaceall\":\n        if (typeof action.items === \"object\") {\n            return action.items\n        } else return state\n    default:\n      throw new Error();\n  }\n}\n   \n\n// state manager with local storage backing\nexport default function useDB(database, databaseTable) {\n     const [items, dispatch] = useReducer(reducer,[]);\n     var localforageStorage = localforage.createInstance({\n       name: database ? database : \"localstoragemanager\",\n       storeName   : databaseTable ? databaseTable : 'data',\n     });\n\n    function getId(item) {\n        if (item && item.id) {\n            return item.id\n        } else {\n            throw new Error(\"Missing ID value in getId\")\n        }\n    }\n    function getIdForIndex(index) {\n        if (items && items[index] && items[index].id) {\n            return items[index].id\n        } else {\n            throw new Error(\"Missing ID value in getIdForIndex\")\n        }\n    }\n    \n\n    function loadAll() {\n        localforageStorage.keys().then(function(keys) {\n            var ipromises = []\n            keys.map(function(key) {\n                ipromises.push(new Promise(function(iresolve,ireject) {\n                   localforageStorage.getItem(key).then(function(res) {\n                       iresolve(res)\n                   })\n                }))\n                return null\n            })\n            Promise.all(ipromises).then(function(res) {\n                dispatch({ type: \"replaceall\", items: res });\n            })\n        })\n        \n    }\n\n    \n    // save or create\n    function saveItem(item,index) {\n        if (item) {\n            //console.log(['SAVEDB',item,index])\n            // update sources and save text in seperate localstorage\n            // ensure id\n            var isNewItem = false;\n            if (!item.id) {\n                isNewItem = true;\n                item.id = generateObjectId()\n            }\n            localforageStorage.setItem(item.id,item)\n            if (items.length === 0) {\n                console.log(['SAVEDB len0',item,index])\n                dispatch({ type: \"append\",item: item });\n            } else {\n                if ((index === null || index === undefined)  || isNewItem) {\n                    console.log(['SAVEDB append',item,index])\n                    dispatch({ type: \"append\",item: item });\n                } else {\n                    console.log(['SAVEDB update',item,index])\n                    dispatch({ type: \"update\",item: item, index: index });\n                }\n            }\n            \n        }\n    }\n    \n\n    function findBy(field,value) {\n        var key = findKeyBy(field,value)\n        if (key) return items[key];\n        return null\n    }\n    \n    function findKeyBy(field,value) {\n        for (var k in items) {\n            if (items[k] && items[k][field] === value) return k\n        }\n        return null\n    }\n\n\n    function setItemsWrap(items) {\n        localforageStorage.clear().then(function() {\n            dispatch({ type: \"replaceall\", items: items})\n            if (items) {\n                items.map(function(item) { localforageStorage.setItem(getId(item),item); return null})\n            }\n        })\n        \n    }\n    \n    function deleteItem(index) {\n        var id = getIdForIndex(index)\n        if (id) {\n            localforageStorage.removeItem(id).then(function() {\n                dispatch({ type: \"remove\", index: index})\n            })\n        }\n        \n    }\n    \n    function filter(matchFunction) {\n        var filtered = []\n        if (matchFunction) {\n            items.map(function(item,i) {\n              if (matchFunction(item)) {\n                  filtered.push(item)\n              }  \n              return null\n            })\n        }\n        return filtered\n        \n    }\n    \n    return {getId:getId, loadAll:loadAll, saveItem:saveItem, deleteItem:deleteItem , items:items, setItems:setItemsWrap, findKeyBy:findKeyBy, findBy:findBy, filter: filter}\n    \n}\n","import {splitSentences, generateObjectId} from './utils'\n\nfunction cleanListItem(text) {\n    return text ? text.replace(/[^0-9a-z ,]/gi, '') : ''\n}\n\nfunction extractSynonym(text) {\n    if (text) { \n        var parts = text.split(':')\n        if (parts.length > 1) {\n           return [parts[0],parts.slice(1).join(\":\")]   \n        } else {\n            return ['',text]\n        }\n    } else {\n        return ['','']\n    }\n}\n\nfunction sortListSplits(a,b) {\n    if (a.value < b.value) return -1;  else return 1;\n}\n\nfunction sortExampleSplits(a,b) {\n    if (a.example < b.example) return -1 ;else return 1;\n}\n\nfunction parseLists(text,listName) {\n        var key = listName ? listName : '___'\n        // plain text\n        function generateSplits() {\n            var newTextSplits=[]\n            const splits = splitSentences(text)\n            splits.map(function(textInner,i) {\n                var [synonym, value] = extractSynonym(textInner)\n                value = value.trim().replace(/[^0-9a-z ]/gi, '')\n                if (value && value.length > 0) {\n                    newTextSplits.push({'id':generateObjectId(), 'value':value,'synonym':synonym})\n                }\n                return null\n            })\n            return newTextSplits.sort(sortListSplits);\n        }\n        try {\n            var json = JSON.parse(text)\n            //  JSON ARRAY FORMAT\n            if (Array.isArray(json)) {\n                // value and optional synonyn\n                var lists = {}\n                //console.log(['LISTS',lists])\n                if (json.length > 0 && json[0].value && json[0].value.trim().length > 0) {\n                    for (var i in json) {\n                        var entity = json[i]\n                        if (entity.value && entity.value.trim().length > 0) {\n                            var listKey = entity.list ? entity.list : key\n                            //console.log(['reset push',listKey,lists])\n                            if (!lists[listKey]  ) {\n                                lists[listKey] = []\n                            }\n                            lists[listKey].push({'id':generateObjectId(), 'value':cleanListItem(entity.value),'synonym':entity.synonym})\n                        }\n                    }\n                    // now sort and uniquify each list\n                    \n                    Object.keys(lists).map(function(listKey) {\n                        var list = lists[listKey]\n                        var uniqueKeys = {}\n                        list.map(function(listItem) {\n                           uniqueKeys[listItem.value+':'+listItem.synonym] = listItem\n                           return null\n                        })\n                        lists[listKey] = Object.values(uniqueKeys).sort(sortListSplits)\n                        return null\n                    })\n                    \n                // array of text\n                } else {\n                    var newSplits=[]\n                    for (var q in json) {\n                        var textInner = json[q].trim().replace(/[^0-9a-z]/gi, '')\n                        if (textInner && textInner.length > 0) {\n                            const [synonym, value] = extractSynonym(textInner)\n                            newSplits.push({'id':generateObjectId(), 'value':value,'synonym':synonym, 'list':listName})\n                        }\n                    }\n                    lists[key] = newSplits.sort(sortListSplits)\n                }\n                //console.log(['LISTS',lists])\n                return lists\n                //return items.sort(sortListSplits) \n            // PLAIN TEXT LIST\n            }  else {\n                lists = {}\n                lists[key] = generateSplits() \n                return lists\n            }\n        } catch (e) {\n            console.log(e)\n            // TODO try for yaml\n            //try {\n              //const doc = yaml.safeLoad(text);\n              //console.log(doc);\n            //} catch (e) {\n               // finally text\n                lists = {}\n                lists[key] = generateSplits() \n                return lists\n            //}\n           \n        }  \n}\n\n\nfunction parseImportText(text) {\n        var items = []\n        function generateSplits() {\n            const splits = splitSentences(text)\n            var newSplits=[]\n            splits.map(function(text,i) {\n                if (text && text.trim().length > 0) {\n                 newSplits.push({'id':generateObjectId(), 'example':text,'intent':'',\"entities\":[], \"tags\":[]})\n                }\n                return null\n            })\n            return newSplits.sort(sortExampleSplits)\n        }\n        try {\n            var json = JSON.parse(text)\n            // RASA JSON FORMAT\n            if (json && json.rasa_nlu_data && json.rasa_nlu_data.common_examples) {\n                for (var i in json.rasa_nlu_data.common_examples) {\n                    var entity = json.rasa_nlu_data.common_examples[i]\n                    var cleanEntities = entity.entities && entity.entities.map(function(el,j) { return {type:el.entity, value:el.value, start:el.start, end:el.end} })\n                    if (entity.text && entity.text.trim().length > 0) {\n                        items.push({'id':generateObjectId(), 'example':entity.text,'intent':entity.intent,\"entities\":cleanEntities, tags:[]})\n                    }\n                }\n                return items.sort(sortExampleSplits)\n            // JOVO JSON { \"invocation\": \"my test app\", \"intents\": [{\"name\": \"HelloWorldIntent\",\"phrases\": [\"hello\",\"say hello\"]}] } ,\n            } else if (json && json.invocation && json.intents) {\n                for (var l in json.intents) {\n                    if (json.intents[l] && json.intents[l].phrases) {\n                        for (var k in json.intents[l].phrases) {\n                            if (json.intents[l].phrases[k] && json.intents[l].phrases[k].trim().length > 0)  {\n                                 var phrase = json.intents[l].phrases[k]\n                                 var entities = []\n                                if (json.intents[l].inputs) {\n                                    for (var inputKey in json.intents[l].inputs) {\n                                       var input = json.intents[l].inputs[inputKey]\n                                       //console.log([phrase,input.name])\n                                       const markerStart = phrase.indexOf(\"{\"+input.name+\"}\")\n                                       if (markerStart !== -1)  {\n                                           phrase = phrase.replace(\"{\"+input.name+\"}\",input.name)\n                                       }\n                                       var entityi = {type:input.name, value:input.name , start: markerStart , end: markerStart + input.name.length  }\n                                       entities.push(entityi)\n                                       return null\n                                    }\n                                }\n                                items.push({'id':generateObjectId(), 'example':phrase.trim(),'intent':json.intents[l].name,\"entities\": entities, tags: []})\n                            }\n                        }\n                    }\n                    //console.log(['JOVO IMPORT',items])\n                    //var entity = json.rasa_nlu_data.common_examples[i]\n                    //var cleanEntities = entity.entities && entity.entities.map(function(el,j) { return {type:el.entity, value:el.value, start:el.start, end:el.end} })\n                    //if (entity.text && entity.text.trim().length > 0) items.push({'id':generateObjectId(), 'example':entity.text,'intent':entity.intent,\"entities\":cleanEntities, tags:[]})\n                }\n                return items.sort(sortExampleSplits) //[items, intents, entities, tags]\n            // VANILLA JSON [{example:'',intent:'',entities:[{value:'',start:33,end:45}], tags:['dd']}]\n            } else if (json && json.length > 0 && json[0].example && json[0].example.trim().length > 0) {\n                for (var j in json) {\n                    var item = json[j]\n                    if (item) {\n                        if (item.example && item.example.trim().length > 0) items.push({'id':generateObjectId(), 'example':item.example,'intent':item.intent,\"entities\":item.entities && item.entities.length > 0 && item.entities[0].value ? item.entities : [], tags:item.tags ? item.tags : []})\n                    }\n                }\n                return items.sort(sortExampleSplits) \n            // PLAIN TEXT LIST\n            }  else {\n                return generateSplits()\n            }\n        } catch (e) {\n            console.log(e)\n            // TODO try for yaml\n            //try {\n              //const doc = yaml.safeLoad(text);\n              //console.log(doc);\n            //} catch (e) {\n               // finally text\n            return generateSplits()\n            //}\n           \n        }   \n    }\n    \nexport {parseImportText, parseLists}    \n    \n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst TagAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Tag'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                value={props.tagAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.tagAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setTagAllValue(skillKey); props.tagAll(skillKey)}} >Add to {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.untagAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n      \n              //return <Dropdown  as={ButtonGroup}>\n              //<Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              //<Button   size=\"sm\" >{'Tag'} </Button>\n              //<Dropdown.Menu>\n               //<form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                    //<div className=\"form-group\">\n                      //<input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                    //value={props.tagAllValue} />\n                    //</div>\n                  //</form>\n                  //{props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n                      //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {props.setTagAllValue(tagKey); props.tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n                   //})}\n              //</Dropdown.Menu>\n          //</Dropdown>\n}\nexport default TagAllDropDown\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\n\nconst IntentAllDropDown = function(props) {\n    return  <Dropdown  as={ButtonGroup}>\n              <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button   size=\"sm\" >{'Intent'} </Button>\n              <Dropdown.Menu>\n               <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.intentAll(e.target.value)}} >\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setIntentAllValue(e.target.value)}}\n                    value={props.intentAllValue} />\n                    </div>\n                  </form>\n                  {props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n                      return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {props.setIntentAllValue(intentKey); props.intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n                   })}\n              </Dropdown.Menu>\n          </Dropdown>\n}\nexport default IntentAllDropDown\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst SkillAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Skill'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.skillSetAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setSkillAllValue(e.target.value)}}\n                value={props.skillAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.skillSetAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setSkillAllValue(skillKey); props.skillSetAll(skillKey)}} >Add to {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.unskillAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n      \n      \n    \n    //return <Dropdown  as={ButtonGroup}>\n          //<Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          //<Button   size=\"sm\" >{'Skill'} </Button>\n          //<Dropdown.Menu>\n           //<form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.skillSetAll(e.target.value)}} >\n                //<div className=\"form-group\">\n                  //<input type=\"text\" className=\"form-control\" onChange={function(e) {props.setSkillAllValue(e.target.value)}}\n                //value={props.skillAllValue} />\n                //</div>\n              //</form>\n              //{props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n              //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {props.setSkillAllValue(skillKey); props.skillSetAll(skillKey)}}  >{skillKey}</Dropdown.Item>\n    //})}\n          //</Dropdown.Menu>\n      //</Dropdown>\n}\nexport default SkillAllDropDown\n","import React, {useState} from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst ImportListsDropDown = function(props) {\n    //console.log(props)\n    const [importToValue,setImportToValue] = useState(props.importTo ? props.importTo : '')\n    return <Dropdown style={{float:'right', marginLeft:'0.5em'}} variant=\"success\"  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"md\" variant=\"success\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button variant=\"success\"  size=\"md\" >{'Import Entities as'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.importListTo(e.target.value)}} >\n                <div className=\"form-group\">\n                <InputGroup> \n                    <input type=\"text\" className=\"form-control\" onChange={function(e) {setImportToValue(e.target.value)}}\n                value={importToValue} />\n                    <Button size=\"sm\"  onClick={function(e) {props.importListTo(importToValue)}} >Import</Button>\n                </InputGroup>\n                </div>\n              </form>\n              {props && props.lookups && props.lookups.listsLookups && props.lookups.listsLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setImportToValue(skillKey); props.importListTo(skillKey)}}  >{skillKey}</Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n}\nexport default ImportListsDropDown\n","/* global window */\nimport {Link} from 'react-router-dom'\nimport {Button, ListGroup } from 'react-bootstrap'\nimport React, {Fragment} from 'react';\nimport FileReaderInput from 'react-file-reader-input';\n\nimport TagAllDropDown from './TagAllDropDown'\nimport IntentAllDropDown from './IntentAllDropDown'\nimport SkillAllDropDown from './SkillAllDropDown'\n\nimport ImportListsDropDown from './ImportListsDropDown'\n\nfunction MatchesTallies(props) {\n    return <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{props.filteredItems.length}/{props.items.length} matches </span>\n}\n\nfunction HelpMenu(props) {\n    return <div>\n        <Link style={{marginRight:'1em'}} to=\"/help\" ><Button>Home</Button></Link>\n        <Link style={{marginRight:'1em'}} to=\"/helpimport\" ><Button>Import</Button></Link>\n        <Link style={{marginRight:'1em'}} to=\"/helpexport\" ><Button>Export</Button></Link>\n        <Link style={{marginRight:'1em'}} to=\"/helpabout\" ><Button>About</Button></Link>\n    </div>\n}\n\nfunction HelpText(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n        <HelpMenu/>\n        <h1>NLU tool</h1>\n        <div>This tool is intended to help collect open licensed NLU data. </div>\n        <div>Specifically, it captures sentences with related intent and entity maps.</div>\n        <div>Examples can be tagged for organisation. eg music player, news reader</div>\n        <div>Examples can be collected into your own skills for export into various NLU training data formats.</div>\n        <hr/>\n        <p>Create <Link to=\"/sources\" ><Button>Sources</Button></Link> from pasted text or uploaded files.</p>\n        <p>Use the <Link to=\"/import\" ><Button>Import</Button></Link> page to break text into sentences and create NLU example records.</p>\n        <p><Link to=\"/examples\" ><Button>Organise</Button></Link> your examples using tags and cleanup untagged examples.</p>\n        <p><Link to=\"/search\" ><Button>Search </Button></Link> the community database of NLU example records.</p>\n        <p><Link to=\"/skills\" ><Button>Collect </Button></Link> examples into a skill for export in various training formats.</p>\n        </div>\n}\n\nfunction HelpTextImport(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n    <HelpMenu/>\n            <h1>Importing Data</h1>\n            <div>This tool can import files two types of data\n            <ul>\n                <li>Entity Values</li>\n                <li>Intent Examples</li>\n            </ul>\n            \n            </div>\n            <hr/>\n        </div>\n}\n\nfunction HelpTextAbout(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n    <HelpMenu/>\n            <h1>About</h1>\n            <div>Written by Steve Ryan\n            <ul>\n                <li>Entity Values</li>\n                <li>Intent Examples</li>\n            </ul>\n            \n            </div>\n            <hr/>\n        </div>\n}\n\nfunction HelpTextExport(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n    <HelpMenu/>\n            <h1>Exporting</h1>\n            <div>This tool can currently export to a number of formats including\n            <ul>\n                <li>Native JSON format</li>\n                <li>Mycroft intents and entities for Padatious NLU</li>\n                <li>RASA training data</li>\n                <li>JOVO model files</li>\n            </ul>\n            </div>\n\n        </div>\n}\n\n\nfunction NewFileButtons(props) {\n    return <span>\n        <Link to={props.match.url + '/text'} style={{float:'right'}} ><Button>Paste Text</Button></Link>\n        <FileSelector {...props}/>   \n    </span>\n}\n\nfunction FilesList(props) {\n    //console.log(['man fl ',props])\n     const { items} = props  \n     if (items) {\n       const list = Object.values(items).map(function(item,i) {\n            return <ListGroup.Item  key={i}  >\n                   <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"danger\" onClick={function(e) {if(window.confirm('Really delete source '+items[i].title)) props.deleteItem(i)}} >Delete</Button>\n                   <Link to={props.match.url+\"/text/\"+item.id} ><Button style={{float:'right',marginLeft:'0.5em'}}  >Edit</Button></Link>\n                   <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"success\" onClick={function(e) { props.importExamples(items[i]) }}    >Import Intents</Button>\n                   <ImportListsDropDown lookups={props.lookups} importListTo={function(listName) {props.importLists(items[i],listName)}} importTo={items[i].title} />\n                   <span style={{width:'90%'}}  >{item.title}</span>\n               </ListGroup.Item>\n        })\n        return <ListGroup>{list}</ListGroup>\n    } else {\n        return null\n    }\n}\n\nfunction ListsList(props) {\n     const { items} = props  \n     if (items) {\n       const list = Object.values(items).map(function(item,i) {\n            return <ListGroup.Item  key={i}  >\n                   <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"danger\" onClick={function(e) {if(window.confirm('Really delete list '+items[i].title)) props.deleteItem(i)}} >Delete</Button>\n                   <Link to={props.match.url+\"/text/\"+item.id} ><Button style={{float:'right',marginLeft:'0.5em'}}  >Edit</Button></Link>\n                   <span style={{width:'90%'}}  >{item.title}</span>\n               </ListGroup.Item>\n        })\n        return <ListGroup>{list}</ListGroup>\n    } else {\n        return null\n    }\n}\n\nfunction FileSelector(props) {\n    return <form onSubmit={function(e) {e.preventDefault()}} style={{float:'right'}}>\n            <FileReaderInput multiple as=\"binary\" id=\"my-file-input\"\n                             onChange={props.handleFileSelection}>\n              <Button style={{ marginRight:'0.5em'}} >Select files</Button>\n            </FileReaderInput>\n          </form>\n}\n\nfunction WithSelectedDropDowns(props) {\n    return <Fragment>\n        <span>With {props.lookups.selectedTally} selected&nbsp;</span>\n               \n        <SkillAllDropDown skillSetAll={props.skillSetAll} skillAllValue={props.skillAllValue}  setSkillAllValue={props.setSkillAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n        <IntentAllDropDown intentAll={props.intentAll} intentAllValue={props.intentAllValue} setIntentAllValue={props.setIntentAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n        <TagAllDropDown tagAll={props.tagAll} tagAllValue={props.tagAllValue} setTagAllValue={props.setTagAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n    </Fragment>\n\n}\n\nexport { MatchesTallies,  HelpTextImport,HelpTextExport,HelpTextAbout,HelpText, NewFileButtons, FilesList, ListsList, FileSelector, WithSelectedDropDowns}\n","import {Link} from 'react-router-dom'\nimport {Button,  Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React, {useState, useEffect} from 'react';\n//import FileReaderInput from 'react-file-reader-input';\nimport {generateObjectId, parentUrl} from '../utils'\nimport { JsonEditor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\n//import useDB from './useDB'\n//import useDBSingleKey from './useDBSingleKey'\n//import {parseImportText} from './utils'\n//import localforage from 'localforage'\n//import {NewFileButtons, FileSelector, FilesList} from './Components'\n\nexport default function JSONTextEditor(props) {\n    const [title,setTitle] = useState(props.item && props.item.title ? props.item.title : '')\n    const [text, setText ] = useState(props.item && props.item.data ? props.item.data : '') \n    const [isJson, setIsJson ] = useState(false) \n    const [json, setJson ] = useState([]) \n    const [editorMode, setEditorMode] = useState('json')\n    const [editorOptions, setEditorOptions] = useState(['json','text'])\n    \n    const id = props.match.params.itemId ? props.match.params.itemId  : generateObjectId()\n    const { findKeyBy} = props  \n    const index = findKeyBy('id',id)\n   \n    \n    useEffect(() => {\n        try {\n            if ((text[0] === \"[\" && text[text.length - 1] === \"]\") || (text[0] === \"{\" && text[text.length - 1] === \"}\")) {\n                var jsonParsed = JSON.parse(text)\n                setJson(jsonParsed)\n                setIsJson(true)\n                setEditorOptions(['json','text'])\n                setEditorMode('json')\n            } else {\n                setIsJson(false)\n                setEditorOptions(['text'])\n                setEditorMode('text')\n            }\n        } catch (e) {\n            setIsJson(false)\n            setEditorOptions(['text'])\n            setEditorMode('text')\n        }\n    \n    },[text])\n     \n    var parentLink = parentUrl(props.match.url)\n    var linkParts = props.match.url.split(\"/\")\n    // link up two where id is present\n    if (linkParts[linkParts.length -1] !== \"text\") {\n       parentLink = parentUrl(parentUrl(props.match.url)) \n    }\n    var editorModeOptions = editorOptions.map(function(value,j) {\n      return <Dropdown.Item key={j} value={value} onClick={function(e) {setEditorMode(value); }}  >{value}</Dropdown.Item>\n   })\n    \n    return <div style={{minHeight:'60em'}}>\n          <Dropdown variant='info'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button variant='info'   size=\"sm\"  >\n          <b>{editorMode}</b>\n          </Button>\n          <Dropdown.Menu>\n              {editorModeOptions}\n          </Dropdown.Menu>\n        </Dropdown>\n\n            <span style={{float:'right'}} >\n                \n                {(text && title) && <Link to={parentLink} ><Button onClick={function(e) {props.saveItem({id:id,title:title,data:text},index)}} variant='success' >Save</Button></Link>}\n                {!(text && title) && <Button variant='secondary' >Save</Button>}\n                \n                <Link  to={parentLink} ><Button variant=\"danger\" >Cancel</Button></Link>\n            </span>\n            <label>&nbsp;Title <input size={60}  type='text' onChange={function(e) { setTitle(e.target.value)}}  value={title} /></label>\n            {(!isJson || editorMode === \"text\") && <textarea style={{marginLeft: '0.2em', height:'100%', minHeight:'60em', width:'98%'}}  onChange={function(e) { setText(e.target.value)}}  value={text} ></textarea>}\n            {(isJson && editorMode === \"json\") && <div style={{marginLeft: '0.2em', height:'100%', minHeight:'60em', width:'98%'}} >\n                <JsonEditor\n                value={json}\n                theme={\"ace/theme/github\"}\n                ace={ace}\n                history={true}\n                mode={'code'}\n                allowedModes={['tree','code']}\n                onChange={function(value) { setText(JSON.stringify(value))}}\n            /></div>}\n           \n    </div>\n}\n","import {Route} from 'react-router-dom'\nimport React, {useEffect} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport useDB from './useDB'\nimport {parseImportText, parseLists} from './parsers'\nimport localforage from 'localforage'\nimport {NewFileButtons, FilesList} from './components/Components'\nimport JSONTextEditor from './components/JSONTextEditor'\nimport {generateObjectId, uniquifyArray } from './utils'\n\n// COMPONENTS\nfunction IndexPage(props) {\n    //console.log(['man index ',props])\n    return <div>\n                 <NewFileButtons {...props} />\n                 <h1>Sources</h1>\n                 <FilesList {...props} />\n            </div>\n}\n\nexport default function LocalStorageUploadManager(props) {\n    //console.log('man')\n    //console.log(props)\n     var localforageStorageImport = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'import',\n     });\n     var localforageStorageLists = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'lists',\n     });\n\n\n     const {loadAll, saveItem, deleteItem ,items, findKeyBy, findBy} = useDB('nlutool','sources');\n    \n    // just on mount \n    useEffect(() => {\n        loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    \n    \n    function handleFileSelection(ev, results) {\n        ev.preventDefault()\n        if (results) {\n            results.forEach(result => {\n              const [e, file] = result;\n               var item = {id:null, data:e.target.result, title:file.name}\n                saveItem(item)\n            });\n            \n        }\n    }    \n  \n    function importExamples(item) {\n         //console.log(['import examples',item])\n        if (item && item.id && item.data) {\n            var parsed = parseImportText(item.data)\n            localforageStorageImport.getItem('alldata').then(function(res) {\n                //console.log('IMPORT MERGE',res,parsed,[].concat(parsed,res))\n                localforageStorageImport.setItem('alldata',[].concat(parsed,res)) \n                props.history.push('/import') \n            })\n          } else {\n            throw new Error(\"Missing import data\")\n        }\n    }\n    \n    function importLists(item,title) {\n        //console.log(['import lists',item,title])\n        if (item && item.id && item.data) {\n            var parsed = parseLists(item.data)\n            //console.log(['import lists',parsed])\n            if (parsed) {\n                localforageStorageLists.getItem('alldata').then(function(allLists) {\n                    //console.log(['got list ',allLists])\n                    var allListsIndex = {}\n                    if (!allLists) {\n                        allLists = []\n                    }\n                    // index by value\n                    allLists.map(function(listItem) {\n                        if (listItem && listItem.value && listItem.value.trim().length > 0)  {\n                            allListsIndex[listItem.value] = listItem\n                        }\n                        return null\n                    })\n                    // update incoming list values\n                    Object.keys(parsed).map(function(listName,i) {\n                        var list = parsed[listName]  \n                        if (list) {\n                            list.map(function(listItem,listItemIndex) {\n                                var newListItem = listItem;\n                                // already there, just update tags\n                                if (allListsIndex[listItem.value]) {\n                                    if (listName !== '___') {\n                                        if (listItem.tags) newListItem.tags.push(listName)\n                                        else newListItem.tags = [listName]\n                                    } else {\n                                        newListItem.tags = []\n                                    }\n                                    if (title && title.trim().length > 0) newListItem.tags.push(title.trim())\n                                    // uniquify and sort tags\n                                    newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                                    //var tagsClean = {}\n                                    //newListItem.tags.map(function(tag) {\n                                        //tagsClean[tag] = true \n                                    //})\n                                    //newListItem.tags = Object.keys(tagsClean).sort()\n                                    \n                                    allListsIndex[newListItem.value] = newListItem\n                                // new list item    \n                                } else {\n                                    newListItem = {id: generateObjectId() , value: newListItem.value, synonym: newListItem.synonym ? newListItem.synonym : '', tags:[]}\n                                    \n                                    if (listName !== '___') {\n                                        if (listItem.tags) newListItem.tags.push(listName)\n                                        else newListItem.tags = [listName]\n                                    }\n                                    if (title && title.trim().length > 0) newListItem.tags.push(title.trim())\n                                    // uniquify and sort tags\n                                    newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                                    \n                                    allListsIndex[newListItem.value] = newListItem\n                                }\n                                return null\n                            })\n                        }\n                        return null\n                    })\n                    //console.log('IMPORT MERGE',res,parsed,[].concat(parsed,res))\n                    localforageStorageLists.setItem('alldata',Object.values(allListsIndex)) \n                    props.history.push('/lists') \n                    //props.setPageMessage(<div><b>sdfsdf</b><br/><b>sdfsdf</b><br/><b>sdfsdf</b><br/><b>sdfsdf</b><br/></div>)\n                    props.setPageMessage('Imported '+Object.keys(allListsIndex).length +' entities into the list '+ title)\n                    setTimeout(function() {\n                        props.setPageMessage('')\n                    },2000)\n                })\n            } else {\n                throw new Error(\"Failed import\")\n            }\n        } else {\n            throw new Error(\"Missing import data\")\n        }\n    }\n    \n    //console.log(['RENDER LOMAN',props])\n    return (\n        <div className=\"LocalStorageUploadManager\" >\n            <Route \n                path={[`${props.match.path}/text/:itemId?`, `${props.match.path}/text`]}  \n                render={(props) => <JSONTextEditor {...props} \n                    item={findBy('id',props.match.params.itemId)} \n                    saveItem={saveItem} deleteItem={deleteItem} findKeyBy={findKeyBy} \n                    \n                />}     \n            />\n            <Route {...props} exact path={props.match.path} \n                render={function(iprops) { return  <IndexPage {...props} \n                    items={items}\n                    deleteItem={deleteItem} saveItem={saveItem} importExamples={importExamples} importLists={importLists}\n                    handleFileSelection={handleFileSelection}\n                />}} \n            />\n\n        </div>\n    );\n}\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst ListAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Set List'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                value={props.tagAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.tagAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.listsLookups && props.lookups.listsLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setTagAllValue(skillKey); props.tagAll(skillKey)}} >Add to {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.untagAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n}\nexport default ListAllDropDown\n","import React from 'react'\nconst SearchInput = function({searchFilter,setSearchFilter}) {\n    return (<input style={{marginLeft:'0.5em'}}  type='text' value={searchFilter} \n            onChange={\n                function(e) {\n                    const filter = e.target.value\n                    setSearchFilter(filter); \n                }\n            } placeholder='Search' />)\n}\n    \nexport default SearchInput\n","import React, {useEffect, useState} from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\nimport checkImage from '../images/check.svg'\n\n\nconst ListsManagerSearchBar = function(props) {\n    const [topTagOptions,setTopTagOptions] = useState([])\n    useEffect(() => {\n        //console.log(['kust nabager ',props.lookups.listsLookups])\n        var topTagOptionss = props.lookups.listsLookups && props.lookups.listsLookups.sort().map(function(listKey,i) {\n              return <Dropdown.Item key={i} value={listKey} onClick={function(e) {props.setListFilterValue(listKey)}}  >{listKey}</Dropdown.Item>\n        })\n        topTagOptionss.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setListFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        topTagOptionss.push(<Dropdown.Item key={'Not In A List'} value={'Not In A List'} onClick={function(e) {props.setListFilterValue('Not In A List')}}  ><b>Not In A List</b></Dropdown.Item>)\n        setTopTagOptions(topTagOptionss)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.lookups])\n    \n    return <div>\n            {<span>\n            \n                {props.lookups.selectedListTally > 0 && <Button size=\"lg\"  onClick={function(e) { props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedListTally <= 0 && <Button size=\"lg\" onClick={function(e) { props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button> }\n                \n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'List'+(props.listFilterValue ? ' - '+ props.listFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topTagOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n              <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.listFilterValue)}} >New Entity</Button>\n        </div>\n}\nexport default ListsManagerSearchBar\n","import React, {useState, useEffect} from 'react'\nimport {uniquifyArray, uniquifyArrayOfObjects} from './utils'\nfunction useListItemRow(item, saveItem, splitNumber, style) {\n    const [selectionState, setSelectionState] = useState({})\n    //const [newEntity, setNewEntity] = useState('')\n    // for ReactTags format using objects\n    const [tags, setTags] = useState([])\n    //console.log(['USENLUROW',splitNumber])\n    const reactTags = React.createRef()\n     // tags\n    useEffect(() => {\n        if (item.tags) setTags(item.tags.map(function(tag,i) {return {id:i, name:tag}}))\n    },[item])\n\n     function onTagDelete (i) {\n        const newTags = tags.slice(0)\n        newTags.splice(i, 1)\n        setTags(newTags)\n        var newItem = item\n        newItem.tags = newTags.map(function(newTag) { return newTag.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onTagAddition (tag) {\n        const newTags = [].concat(tags, tag)\n        setTags(uniquifyArrayOfObjects(newTags,'name').sort(function(a,b) {if (a.name > b.name) return 1; else return -1} ))\n        var newItem = item\n        newItem.tags = uniquifyArray(newTags.map(function(newTag) { return newTag.name})).sort()\n        saveItem(newItem,splitNumber)\n      }\n    \n    function updateExampleContent(content) {\n        //console.log(['UPDTEXT', item, content])\n        if (item && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = item //JSON.parse(JSON.stringify(item));\n            \n            newItem.value = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n     function updateExampleSynonym(content) {\n        //console.log('UPDTEXT')\n        if (item && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = item //JSON.parse(JSON.stringify(item));\n            \n            newItem.synonym = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    \n    function selectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = true;\n        saveItem(newItem,splitNumber)\n    }\n   \n    \n    function deselectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = false;\n        saveItem(newItem,splitNumber)\n    } \n    \n    return {    \n        selectionState, setSelectionState, tags, setTags, reactTags, onTagDelete, onTagAddition, updateExampleContent, updateExampleSynonym, selectItem, deselectItem\n    }\n    \n}\nexport default useListItemRow\n","import React from 'react';\nexport default function SuggestionComponent({ item, query }) {\n  return (\n    <span  id={item.id} className={item.name === query ? 'match' : 'no-match'}>\n      {item.name}\n    </span>\n  )\n}\n","/* global window */\nimport {Button } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useListItemRow from './useListItemRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\n\nexport default function ListsManagerRow(props) {\n        const  {item, splitNumber , style} = props;\n       const {    \n            tags, reactTags, \n            onTagDelete, onTagAddition, updateExampleContent,updateExampleSynonym,  selectItem, deselectItem\n        } = useListItemRow(props.item, props.saveItem, props.splitNumber, props.style)\n            \n       \n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                   \n                   <div style={{float:'right'}} > \n                        <Button  variant=\"danger\"  size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} >X</Button>\n               \n                    </div>\n                   \n                  <div style={{float:'left'}}>\n                     {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Select\"  /></Button>}\n                      {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\"  /></Button>}\n                </div>\n                \n                <input style={{float:'left'}} size='25'   \n                       type='text'  value={item.value}  onChange={function(e) { updateExampleContent(e.target.value)}} />\n                    \n                     \n                   \n                     <label style={{float:'left', marginLeft:'0.5em'}} >Synonym <input size='15' type='text' value={item.synonym} onChange={function(e) {updateExampleSynonym(e.target.value)}} /></label>\n                     \n                     <span  style={{float:'left'}}>\n                       <ReactTags\n                        placeholderText=\"Add to list\"\n                        minQueryLength={0}\n                        maxSuggestionsLength={50}\n                        autoresize={false}\n                        allowNew={true}\n                        ref={reactTags}\n                        tags={tags}\n                        suggestionComponent={SuggestionComponent}\n                        suggestions={props.lookups.listsLookups.map(function(listName,i) {return {id: i, name: listName}})}\n                        onDelete={onTagDelete}\n                        onAddition={onTagAddition} /> \n                        </span>\n                  </div> \n               \n                \n                 \n           \n      </div>\n}\n","// USE A SINGLE LOCALSTORAGE KEY FOR PERSISTENCE\n// this is much faster than using set/getItem for each item\n// workable for many thousands of rows\nimport { useEffect, useReducer} from 'react';\n\nimport {generateObjectId} from './utils'\nimport localforage from 'localforage'\n\n// handle list updates with minimum disruption to top level items\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"append\":\n      if (action.item) {\n        return [...state, action.item];\n      } else return state\n     case \"prepend\":\n      if (action.item) {\n        return [action.item,...state];\n      } else return state\n    case \"insert\":\n      if (action.item && typeof action.index === \"number\" && action.index >= 0) {\n          return [\n            ...state.slice(0, action.index),\n            action.item,\n            ...state.slice(action.index)\n          ];\n        } else throw new Error(\"Missing item or index on reduce insert\")\n    case \"remove\":\n      if (typeof action.index === \"number\" && action.index >= 0) {\n          return [\n            ...state.slice(0, action.index),\n            ...state.slice(action.index + 1)\n          ];\n       } else throw new Error(\"Missing index on reduce remove\")\n    case \"update\":\n       if (action.item && typeof action.index === \"number\" && action.index >= 0) {\n            return [\n            ...state.slice(0, action.index),\n            action.item,\n            ...state.slice(action.index + 1)\n          ];\n      } else throw new Error(\"Missing item or index on reduce update\")\n    case \"replaceall\":\n        return action.items\n    default:\n      throw new Error();\n  }\n}\n\n// state manager with local storage backing\nexport default function useDB(database, databaseTable,singleKey) {\n    if (!singleKey) singleKey = 'data'\n     const [items, dispatch] = useReducer(reducer,[]);\n     var localforageStorage = localforage.createInstance({\n       name: database ? database : \"localstoragemanager\",\n       storeName   : databaseTable ? databaseTable : 'single_key_data',\n     });\n\n    useEffect(function() {\n        localforageStorage.setItem(singleKey,items)  \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items])\n\n    function getId(item) {\n        if (item && item.id) {\n            return item.id\n        } else {\n            throw new Error(\"Missing ID value in getId\")\n        }\n    }\n\n    function loadAll() {\n        localforageStorage.getItem(singleKey).then(function(res) {\n          //console.log(['loadall',database, databaseTable,singleKey,res])\n          dispatch({ type: \"replaceall\", items: res ? res : []});\n        })\n    }\n\n    \n    // save or create\n    function saveItem(item,index) {\n        //console.log(['save',item,index])\n        if (item) {\n            // update sources and save text in seperate localstorage\n            // ensure id\n            var isNewItem = false;\n            if (!item.id) {\n                isNewItem = true;\n                item.id = generateObjectId()\n            }\n            if (items.length === 0) {\n                //console.log(['save append len '])\n        \n                dispatch({ type: \"append\",item: item });\n            } else {\n                if ((index === null || index === undefined)  || isNewItem) {\n                //console.log(['save append'])\n                    dispatch({ type: \"prepend\",item: item });\n                } else {\n                    //console.log(['save update'])\n                    dispatch({ type: \"update\",item: item, index: index });\n                }\n            }   \n            \n        }\n    }\n    \n    function findBy(field,value) {\n        var key = findKeyBy(field,value)\n        return items[key];\n    }\n    \n    function findKeyBy(field,value) {\n        for (var k in items) {\n            if (items[k] && items[k][field] === value) return k\n        }\n    }\n\n    function setItemsWrap(items) {\n        localforageStorage.clear().then(function() {\n            dispatch({ type: \"replaceall\", items: items})\n        })\n    }\n    \n    function filter(matchFunction) {\n        var filtered = []\n        if (matchFunction) {\n            items.map(function(item,i) {\n              if (item && matchFunction(item)) {\n                  filtered.push(item)\n              } \n              return null \n            })\n        }\n        return filtered\n        \n    }\n    \n    function deleteItem(index) {\n        dispatch({ type: \"remove\", index: index})\n    }\n    return {getId:getId, loadAll:loadAll, saveItem:saveItem, deleteItem:deleteItem , items:items, setItems:setItemsWrap, findKeyBy:findKeyBy, findBy:findBy, filter: filter}\n    \n}\n","import React, {useState, useEffect} from 'react';\nimport useDBSingleKey from './useDBSingleKey'\n\n\nfunction useListItemEditor(database, databaseTable, databaseKey, updateLists) {\n    const {loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter} = useDBSingleKey(database, databaseTable, databaseKey)\n    const [filteredItems, setFilteredItems] = useState([])\n    const [filteredItemsKeys, setFilteredItemsKeys] = useState([])\n    const [searchFilter, setSearchFilter] = useState('')\n    const [tagAllValue, setTagAllValue] = useState('')\n    const listRef = React.createRef()\n    const [listFilterValue, setListFilterValue] = useState('')\n      \n    useEffect(() => {\n         var filteredItems = filter(function(item) {\n            //return true;\n            var matchText = true\n            if (searchFilter && searchFilter.trim().length >0) {\n                if (item.value.indexOf(searchFilter) !== -1) {\n                    matchText = true\n                } else {\n                    matchText = false\n                }\n            }\n            var matchPicklist = true\n            if (listFilterValue === \"Not In A List\") {\n                //console.log(['tags',item.tags])\n                if (!item.tags || (item.tags && item.tags.length === 0)) {\n                    matchPicklist =  true\n                } else {\n                    matchPicklist = false\n                }\n            } else if (listFilterValue && listFilterValue.trim().length >0) {\n                if (item.tags && item.tags.indexOf(listFilterValue) !== -1) {\n                    matchPicklist = true\n                } else {\n                    matchPicklist = false\n                }\n            }\n            \n            return matchText && matchPicklist\n            //return (item.value.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)) ? true : false\n        })\n        var itemKeys = {}\n        filteredItems.map(function(item) {if (item.id) itemKeys[item.id] = true; return null})\n        filteredItems.sort(function(a,b) { return a.value < b.value ? true : false})\n        setFilteredItems(filteredItems)\n        setFilteredItemsKeys(itemKeys)\n        updateLists(items)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items, searchFilter, listFilterValue])\n    \n    function deleteAll(e)  {\n        if (window.confirm('Really delete all selected')) {\n                if (items) {\n                var newItems = []\n                items.map(function(item,i) {\n                    if (item.id && filteredItemsKeys[item.id]) {\n                       if (!item.isSelected) {\n                           newItems.push(item)\n                       }\n                    } else {\n                        newItems.push(item)\n                    }\n                    return null\n                })\n                setItems(newItems)\n                listRef.current.resetAfterIndex(0);\n            }\n        }\n         \n    }\n    \n    function tagAll(val) {\n        //console.log(['tagall',tagAllValue,val])\n        var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.tags) newItem.tags=[]\n                   if (newItem.tags.indexOf(tagValue) === -1) newItem.tags.push(tagValue)\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n\n    function untagAll(val) {\n        //console.log(['untagall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.tags) newItem.tags=[]\n                   var finalTags = []\n                   newItem.tags.map(function(tag) {\n                       if (tag !== val) {\n                           finalTags.push(tag)\n                       }  \n                       return null\n                   })\n                   newItem.tags = finalTags\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    \n    function resetSelection() {\n         //console.log('reset sa')\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n               var newItem = item\n               newItem.isSelected = false\n               newItems.push(newItem)\n               return null\n            })\n            setItems(newItems)\n            \n        }\n    }\n    \n     function selectAll() {\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item.id && filteredItemsKeys[item.id]) {\n                   var newItem = item\n                   newItem.isSelected = true\n                   newItems.push(newItem)\n                } else {\n                    newItem.isSelected = false\n                    newItems.push(newItem)\n                }\n                return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    function saveItemWrap(item,index) {\n        saveItem(item,index)\n        listRef.current.resetAfterIndex(index);\n        updateLists(items)\n    }\n    \n    function getItemSize(index) {\n        //console.log(window.innerWidth,window.innerHeight)\n        // set parameters for full size > 1024\n        var baseSize = 40\n        //// tiny screen mobile \n        if (window.innerWidth < 430) {\n            baseSize = 120\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n            baseSize = 70\n        }\n        return baseSize\n    }\n    \n   function createEmptyItem(list) {\n       var tags=[]\n        if (list && list !== \"Not In A List\" && list.trim().length > 0) tags.push(list)\n        setSearchFilter('')\n        saveItem({id:null, value:'', synonym:'',tags:tags})\n   }\n    \n    return {\n        loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter, filteredItems, setFilteredItems,\n        searchFilter, setSearchFilter, tagAllValue, setTagAllValue,listRef, listFilterValue, setListFilterValue,\n        tagAll,untagAll, resetSelection, selectAll, saveItemWrap, getItemSize, deleteAll, createEmptyItem\n    }\n}\nexport default useListItemEditor\n","import React, { useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport ListAllDropDown from './components/ListAllDropDown'\n\nimport ListsManagerSearchBar from './components/ListsManagerSearchBar'\nimport ListsManagerRow from './ListsManagerRow'\nimport useListItemEditor from './useListItemEditor'\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <ListsManagerRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups} />\n}\n\nexport default  function ListsManager(props) {\n    const {loadAll, deleteItem ,items, findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, listRef, tagAll,untagAll, resetSelection, selectAll, saveItemWrap, getItemSize,  filteredItems, listFilterValue, setListFilterValue, deleteAll, createEmptyItem} = useListItemEditor('nlutool','lists','alldata', props.updateLists)\n    //const [currentList, setCurrentList] = useState('')\n   \n    useEffect(() => {\n        loadAll()\n        props.updateLists(items)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    //useEffect(() => {\n        //if (importFrom) {\n            //var parsed = parseImportText(importFrom)\n            //setItems(parsed)\n            //props.setImportFrom('')\n        //}\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[props.importFrom])\n    \n    \n  \n    \n    function renderEditor(props) {\n       \n        //if (listFilterValue && listFilterValue.length > 0) {\n            \n            // filter rendered list using callback \n            //var filteredItems = filter(function(item) {\n                //if (!searchFilter || searchFilter.length <=0 ) return true;\n                //const matchSearchFilter = item.example.indexOf(searchFilter) !== -1 \n                        //|| item.intent.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)\n                //return matchSearchFilter && skillFilterValue && item.skills && item.skills.indexOf(skillFilterValue) !== -1\n                \n            //})\n             //var collatedItems={}\n             //var collatedCounts={}\n             //if (filteredItems) {\n                 //filteredItems.map(function(item) {\n                    //if (item.value) {\n                        //if (!collatedItems[item.value]) collatedItems[item.value]=[]\n                        //collatedCounts[item.value] =   (collatedCounts[item.value] > 0) ? collatedCounts[item.value] + 1 : 1;\n                        ////if (collatedItems[item.intent].length < 300) {\n                            //collatedItems[item.value].push(item)\n                        ////}\n                        \n                    //}\n                   //return null;  \n                 //})\n             //}   \n                \n                \n            if (filteredItems && filteredItems.length > 0) {\n               \n               //var tagOptions = props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n                  //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {setTagAllValue(tagKey); tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n               //})\n               //var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n                  //return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {setIntentAllValue(intentKey);intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n               //})\n                return <div>\n                    <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length} matches </span>\n                    \n                     \n                     {props.lookups.selectedListTally > 0 && <span style={{float:'right'}}> \n                        \n                        <span>With {props.lookups.selectedListTally} selected&nbsp;</span>\n                        <ListAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue} untagAll={untagAll} lookups={props.lookups}/>\n                        <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                    </span>} \n                    \n                      <div style={{clear:'both'}}>\n                        <div style={{clear:'both'}}>\n                            <List\n                                key=\"list\"\n                                ref={listRef}\n                                itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups}}\n                                itemKey={index => index}  \n                                className=\"List\"\n                                height={700}\n                                itemCount={filteredItems.length}\n                                itemSize={getItemSize}\n                                width={'100%'}\n                              >{RenderRow}\n                            </List>\n                        </div>\n                    </div>\n               </div>\n\n            }\n                 //<span>{Object.keys(collatedItems).map(function(collatedList, i) {\n                                //var useCurrentList = currentList ? currentList : Object.keys(collatedItems)[0]\n                                \n                                ////const warning = <b>{collatedItems[collatedIntent].length}/{collatedCounts[collatedIntent].length}</b>\n                                ////collatedItems[collatedIntent].length  === collatedCounts[collatedIntent].length ? <b>/dd{collatedCounts[collatedIntent].length}</b> : <b>/{collatedCounts[collatedIntent].length}</b>\n                                //var completionVariant = 'danger'\n                                //if (collatedItems[collatedList].length > 300) {\n                                    //completionVariant = 'success'\n                                //} else if (collatedItems[collatedList].length > 100) {\n                                    //completionVariant = 'primary'\n                                //} else if (collatedItems[collatedList].length > 10) {\n                                    //completionVariant = 'warning'\n                                //} \n                                \n                                \n                                //if (collatedItems[collatedList].length  === collatedCounts[collatedList]) {\n                                        //return <Button key={collatedList} variant={collatedList === useCurrentList ? \"primary\" : \"outline-primary\"} onClick={function() {setCurrentList(collatedList)}}>\n                                            //<Badge variant={completionVariant} > {collatedItems[collatedList].length} </Badge>\n                                            //&nbsp;{collatedList}\n                                        //</Button>\n                                //} else {\n                                    //return <Button variant={collatedList === useCurrentList ? \"primary\" : \"outline-primary\"} onClick={function() {setCurrentList(collatedList)}}>\n                                            //<Badge variant=\"danger\" > {collatedItems[collatedList].length}/{collatedCounts[collatedList]} </Badge>\n                                            //&nbsp;{collatedList}\n                                        //</Button>\n                                //}\n                                \n                        //})}</span>\n                                   \n                                 //} else {\n                                    //return null\n                                //}\n                            //})}\n             //{Object.keys(collatedItems).map(function(collatedList, i) {\n                                //var useCurrentList = currentList ? currentList : Object.keys(collatedItems)[0]\n                                //if (collatedList === useCurrentList) {\n                                    //return \n        //} else {\n            //const skillsList = props.lookups.listLookups ? props.lookups.listLookups.map(function(listItem,i) {return <Button key={i}  onClick={function(e) {setListFilterValue(listItem)}}  style={{marginLeft:'1em'}} >{listItem}</Button>} )   : []\n            //return <div>\n                //<h1>Skills</h1>\n                //{skillsList.length > 0 && skillsList}\n                //{skillsList.length <= 0 && <div>\n                    //You dont have any skills yet. Import some <Link to='/sources'><Button>Sources</Button></Link> \n                //</div>}\n            //</div>\n        //}\n    }\n    \n  \n    return <div>\n       \n        <Link style={{float:'right'}} to=\"/sources\" ><Button variant=\"success\" >Sources</Button></Link>\n                   \n        {<ListsManagerSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} listFilterValue={listFilterValue} setListFilterValue={setListFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} />}\n         \n         \n         {renderEditor(props)}\n    </div>\n            \n}\n      \n\n //{JSON.stringify(items)}\n    //<hr/>\n    \n    \n    //<hr/>\n    //{JSON.stringify(filteredItems)}\n\n\n","import React, {useState, useEffect} from 'react'\nimport {findFirstDiffPos, uniquifyArray, uniquifyArrayOfObjects } from './utils'\nfunction useNluRow(item, saveItem, splitNumber, style) {\n    const [selectionState, setSelectionState] = useState({})\n    const [newEntity, setNewEntity] = useState('')\n    const [intentTitle, setIntentTitle] = useState(item && item.intent ? item.intent : '')\n    // for ReactTags format using objects\n    const [tags, setTags] = useState([])\n    const [skills, setSkills] = useState([])\n    //console.log(['USENLUROW',splitNumber])\n    const reactTags = React.createRef()\n    const reactSkills = React.createRef()\n     // tags\n    useEffect(() => {\n        if (item.tags) setTags(item.tags.map(function(tag,i) {return {id:i, name:tag}}))\n        if (item.skills) setSkills(item.skills.map(function(skill,i) {return {id:i, name:skill}}))\n    },[item])\n\n     function onTagDelete (i) {\n        const newTags = tags.slice(0)\n        newTags.splice(i, 1)\n        setTags(newTags)\n        var newItem = item\n        newItem.tags = newTags.map(function(newTag) { return newTag.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onTagAddition (tag) {\n        const newTags = [].concat(tags, tag)\n        setTags(uniquifyArrayOfObjects(newTags,'name').sort(function(a,b) {if (a.name > b.name) return 1; else return -1} ))\n        var newItem = item\n        newItem.tags = uniquifyArray(newTags.map(function(newTag) { return newTag.name})).sort()\n        saveItem(newItem,splitNumber)\n      }\n      \n      function onSkillDelete (i) {\n        const newSkills = skills.slice(0)\n        newSkills.splice(i, 1)\n        setSkills(newSkills)\n        var newItem = item\n        newItem.skills = newSkills.map(function(newSkill) { return newSkill.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onSkillAddition (skill) {\n        const newSkills = [].concat(skills, skill)\n        setSkills(uniquifyArrayOfObjects(newSkills,'name').sort(function(a,b) {if (a.name > b.name) return 1 ;else return -1} ))\n        var newItem = item\n        newItem.skills = uniquifyArray(newSkills.map(function(newSkill) { return newSkill.name})).sort()\n        saveItem(newItem,splitNumber)\n      }\n    \n        \n    function createSelection(field, start, end) {\n        if (field) {\n            if( field.createTextRange ) {\n                var selRange = field.createTextRange();\n                selRange.collapse(true);\n                selRange.moveStart('character', start);\n                selRange.moveEnd('character', end-start);\n                selRange.select();\n            } else if( field.setSelectionRange ) {\n                field.setSelectionRange(start, end);\n            } else if( field.selectionStart ) {\n                field.selectionStart = start;\n                field.selectionEnd = end;\n            }\n            field.focus();\n        }\n    }\n    \n    function updateExampleContent(content) {\n        //console.log('UPDTEXT')\n        if (item && typeof item.example === \"string\" && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = JSON.parse(JSON.stringify(item));\n            if (item.entities && item.entities.length > 0) {\n                var entities = item.entities\n                // deal with entity ranges * allow for delete multiple\n                const diffPos = findFirstDiffPos(content,item.example)\n                // insertion\n                if (content.length - item.example.length > 0) {\n                    \n                    //console.log('UPDTEXT insert')\n                    const insertionLength = content.length - item.example.length\n                    // update start and end subtract deletionLength\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos < entity.start) {\n                            entity.start += insertionLength\n                            entity.end += insertionLength;\n                        } else if (diffPos < entity.end) {\n                            // update entity value\n                            entity.end += insertionLength;\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                // replace    \n                } \n                else if (content.length === item.example.length) {\n                    //console.log('UPDTEXT replace')\n                    // check if was inside an entity and update value as required\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos >= entity.start && diffPos < entity.end) {\n                            // update entity value\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                // deletion\n                } else {\n                    //console.log('UPDTEXT delete')\n                    const deletionLength = content.length - item.example.length\n                    // update start and end subtract deletionLength\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos < entity.start) {\n                            entity.start += deletionLength\n                            entity.end += deletionLength;\n                        } else if (diffPos < entity.end) {\n                            // update entity value\n                            entity.end += deletionLength;\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                }\n            }\n            newItem.example = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    function entityClicked(entityKey,entityType) {\n        if (item.entities)  {\n            var entities = item.entities\n            if (! selectionState || !selectionState.textSelection || selectionState.textSelection.length === 0) {\n                // select text in string\n                if (entities[entityKey]) {\n                   createSelection(document.getElementById('example_input_'+splitNumber),entities[entityKey].start,entities[entityKey].end)\n                }\n            } else {\n                entityTypeChanged(entityKey,entityType);\n            }\n        }\n    }\n    \n    function entityTypeChanged(entityNumber,type) {\n        var newItem = item\n        if (item.entities) {\n            var newEntities = item.entities ? item.entities : []\n            var entity = newEntities[entityNumber] ? newEntities[entityNumber] : {}\n            entity.type = type\n            if (selectionState && selectionState.textSelection) {\n                entity.value = selectionState.textSelection\n                entity.start = selectionState.startTextSelection\n                entity.end = selectionState.endTextSelection\n            }\n            if (!newEntities[entityNumber]) newEntities.push(entity)\n            else newEntities[entityNumber] = entity\n            \n            newItem.entities = newEntities\n            setSelectionState(null)\n            saveItem(newItem,splitNumber)\n        }\n        \n    }\n    \n    function intentChanged(intent) {\n        var newItem = item \n        newItem.intent = intent\n        saveItem(newItem,splitNumber)\n    }\n \n    \n    function entityDelete(entityNumber) {\n        if (item.entities) {\n            var newItem = item \n            var newEntities = item.entities.slice(0,entityNumber).concat(item.entities.slice(entityNumber + 1))\n            newItem.entities = newEntities\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    function selectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = true;\n        saveItem(newItem,splitNumber)\n    }\n    \n    \n    function setSkill(skill, splitNumber) {\n        //var newItem = item\n        //item.isSelected = true;\n        //props.saveItem(newItem,splitNumber)\n    }\n    \n    function deselectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = false;\n        saveItem(newItem,splitNumber)\n    } \n    \n    return {    \n        intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, setTags, skills, setSkills, reactTags, reactSkills, onTagDelete, onTagAddition, onSkillDelete,onSkillAddition, createSelection, updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem, setSkill, deselectItem\n    }\n    \n}\nexport default useNluRow\n","/* global window */\nimport {Button,   Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React, {useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useNluRow from './useNluRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\nimport thumbdownImage from './images/thumb-down.svg'\n\nexport default function NluExampleRow(props) {\n       const  {item, splitNumber , style} = props;\n       const {    \n            intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, skills, reactTags, reactSkills, \n            onTagDelete, onTagAddition, onSkillDelete,onSkillAddition, updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem,  deselectItem\n        } = useNluRow(props.item, props.saveItem, props.splitNumber, props.style)\n        const [textInput, setTextInput] = useState(props.item && props.item.example ? props.item.example  : '')\n         \n       var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {intentChanged(intentKey)}}  >{intentKey}</Dropdown.Item>\n       })\n       //var skillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n          //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkill(skillKey,props.splitNumber)}}  >{skillKey}</Dropdown.Item>\n       //})\n       // ONE PER ENTITY FOR THIS EXAMPLE\n       var entitiesDropdowns = item && item.entities && item.entities.map(function(entity,i) {\n           var entityOptions = props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item  key={j} value={entityKey} onClick={function(e) {entityTypeChanged(i,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           return<Dropdown style={{marginLeft:'0.2em'}} variant='info'  key={i}  as={ButtonGroup}>\n              <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button variant='info'   size=\"sm\"  onClick={function(e) {entityClicked(i,entity.type)}} >\n              <b>{entity.type}</b> \n                -\n              {entity.value ? entity.value : 'Select Entity Type'}\n              </Button>\n              <Button variant=\"info\" size=\"sm\" onClick={function(e) {entityDelete(i,'')}} >X</Button>\n              <Dropdown.Menu>\n                  <form  style={{display:'inline'}}>\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {entityTypeChanged(i,e.target.value)}}\n                    value={entity.type} />\n                    </div>\n                  </form>\n                  {entityOptions}\n              </Dropdown.Menu>\n            </Dropdown>\n       }) ;\n        //PLUS CREATE NEW WHEN TEXT IS SELECTED\n       if (selectionState  && selectionState.textSelection && selectionState.textSelection.length > 0 &&  selectionState.textSelectionFrom === splitNumber) {\n           var entityOptions =  props.lookups.entityLookups && props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item key={j} value={entityKey} onClick={function(e) {entityTypeChanged(-1,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           entitiesDropdowns.push(<Dropdown key=\"new\" variant='success'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='success'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant='success' size=\"sm\" >New Entity</Button>\n\n          <Dropdown.Menu>\n           <form style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); entityTypeChanged(-1,newEntity)}}>\n                <div className=\"form-group\">\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {setNewEntity(e.target.value)}}\n                value={newEntity} />\n                </div>\n              </form>\n              {entityOptions}\n          </Dropdown.Menu>\n        </Dropdown>)\n       }\n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                  \n                   {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img  style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button>}\n                  {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img  style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button>}\n                  \n                <Button  variant=\"danger\" style={{float:'right'}} onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} ><img src={thumbdownImage} alt=\"Delete\" /> Delete</Button>\n\n                  \n                  <Dropdown  style={{float:'left'}} as={ButtonGroup}>\n                  <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button   size=\"sm\" >{item.intent ? item.intent.toString() : 'Select Intent'} </Button>\n                  <Dropdown.Menu>\n                   <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); intentChanged(intentTitle)}}>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" value={intentTitle} onChange={function(e) {setIntentTitle(e.target.value)}}\n                         />\n                        </div>\n                      </form>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                  </Dropdown>\n                  <span style={{float:'left'}}>{entitiesDropdowns}</span>\n                 \n                   <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add to skill\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactSkills}\n                    tags={skills}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.skillLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onSkillDelete}\n                    onAddition={onSkillAddition} /> \n                    </div>\n                    \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add new tag\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactTags}\n                    tags={tags}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.tagLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onTagDelete}\n                    onAddition={onTagAddition} /> \n                    </div>\n                  \n                  <input     \n                   onFocus={ function(e) {\n                       setSelectionState(null)\n                    }}\n                   onSelect={ function(e) {\n                     var textSelection = window.getSelection().toString(); \n                     setSelectionState({textSelection:textSelection, textSelectionFrom: splitNumber, startTextSelection: e.target.selectionStart, endTextSelection: e.target.selectionEnd})\n                  }}  \n                   type='text' style={{width:'80%'}} value={textInput} id={\"example_input_\"+splitNumber} onChange={function(e) { setTextInput(e.target.value); updateExampleContent(e.target.value)}} />\n                  \n                  \n                \n                \n            </div>\n      </div>\n}\n","import React from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\nimport checkImage from '../images/check.svg'\n\nconst EditorSearchBar = function(props) {\n    var topskillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n          return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {props.setSkillFilterValue(skillKey)}}  >{skillKey}</Dropdown.Item>\n    })\n    topskillOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setSkillFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        \n    var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {props.setIntentFilterValue(intentKey)}}  >{intentKey}</Dropdown.Item>\n    })\n    intentOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setIntentFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        \n    return <div>\n            {<span>\n            \n                {props.lookups.selectedTally > 0 && <Button size=\"lg\"  onClick={function(e) { props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedTally <= 0 && <Button size=\"lg\" onClick={function(e) { props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button> }\n                \n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'Intent '+(props.intentFilterValue ? ' - '+ props.intentFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n            \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'Skill '+(props.skillFilterValue ? ' - '+ props.skillFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topskillOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n             <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.skillFilterValue, props.intentFilterValue)}} >New Intent</Button>\n        </div>\n}\nexport default EditorSearchBar\n","import React, {useState, useEffect} from 'react';\nimport localforage from 'localforage'\nimport useDBSingleKey from './useDBSingleKey'\nimport {uniquifyArray} from './utils'\nimport {useParams, useHistory} from 'react-router-dom'\n\nfunction useNluEditor(database, databaseTable, databaseKey, updateLookups) {\n    const {loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter} = useDBSingleKey(database, databaseTable, databaseKey)\n    const [filteredItems, setFilteredItems] = useState([])\n    const [filteredItemsKeys, setFilteredItemsKeys] = useState([])\n    const [searchFilter, setSearchFilter] = useState('')\n    const [tagAllValue, setTagAllValue] = useState('')\n    const [skillAllValue, setSkillAllValue] = useState('')\n    //const [skillFilterValue, setSkillFilterValue] = useState('')\n    //const [intentFilterValue, setIntentFilterValue] = useState('')\n    const [intentAllValue, setIntentAllValue] = useState('')\n    const listRef = React.createRef()\n    \n    const params = useParams()\n    const history = useHistory()\n    var skillFilterValue = params.skillId ? params.skillId : '';\n    function setSkillFilterValue(value) {\n        //console.log('SETSKILLVAL')\n        //console.log(history)\n        var root = history.location.pathname.split(\"/\")\n        var parts=['/'+root[1]]\n        skillFilterValue = value;\n        if (skillFilterValue.length > 0) {\n            parts.push('/skill/'+skillFilterValue)\n        }\n        if (intentFilterValue.length > 0) {\n            parts.push('/intent/'+intentFilterValue)\n        }\n        //console.log(['ssv',parts,value])\n        history.push(parts.join(''))\n    }\n    var intentFilterValue = params.intentId ? params.intentId : '';\n    \n    function setIntentFilterValue(value) {\n        var parts=['/examples']\n        intentFilterValue = value;\n        if (skillFilterValue.length > 0) {\n            parts.push('/skill/'+skillFilterValue)\n        }\n        if (intentFilterValue.length > 0) {\n            parts.push('/intent/'+intentFilterValue)\n        }\n        history.push(parts.join(''))\n    }\n    \n    //const examplesDB = useDBSingleKey('nlutool','examples','alldata')\n    //var updateLookupsTimeout = null\n    //var updateFilteredTimeout = null\n    //useEffect(() => {\n        ////clearTimeout(updateLookupsTimeout)\n        ////updateLookupsTimeout = setTimeout(function() {\n            \n        ////},2000)\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[items])\n     \n    useEffect(() => {\n        //clearTimeout(updateFilteredTimeout)\n        //console.log('UPDATE FILTERED'+intentFilterValue)\n        //updateFilteredTimeout = setTimeout(function() {\n             //console.log('UPDATE FILTERED NOW')\n             var filteredItems = filter(function(item) {\n                if ((!searchFilter || searchFilter.trim().length <=0 ) && (!skillFilterValue || skillFilterValue.trim().length <=0 ) && (!intentFilterValue || intentFilterValue.trim().length <=0 )) return true;\n                var intentFilter = true\n                if (intentFilterValue && intentFilterValue.length > 0) {\n                    if (item.intent === intentFilterValue) {\n                        intentFilter = true\n                    } else {\n                        intentFilter = false\n                    }\n                }\n                var skillFilter = true\n                if (skillFilterValue && skillFilterValue.length > 0) {\n                    if (item.skills && item.skills.indexOf(skillFilterValue) !== -1) {\n                        skillFilter = true\n                    } else {\n                        skillFilter = false\n                    }\n                }\n                var searchFilterBool = true\n                if (searchFilter && searchFilter.length > 0) {\n                    if (item.example && item.example.indexOf(searchFilter) !== -1 ) {\n                        searchFilterBool = true\n                    } else {\n                        searchFilterBool = false\n                    }\n                }         \n                return searchFilterBool && skillFilter && intentFilter;       \n                //intentFilterValue\n                //return (item.example.indexOf(searchFilter) !== -1 \n                            //&& intentFilter \n                            //&& ((skillFilterValue.length <= 0 || (skillFilterValue.length > 0 && typeof item.skills ===\"object\" && item.skills.indexOf(skillFilterValue) !== -1)) ? true : false\n            })\n            var itemKeys = {}\n            filteredItems.map(function(item) {if (item.id) itemKeys[item.id] = true; return null})\n            filteredItems.sort(function(a,b) { return a.example < b.example ? true : false})\n            setFilteredItems(filteredItems)\n            setFilteredItemsKeys(itemKeys)\n            updateLookups(filteredItems)\n        //},800)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items, searchFilter, skillFilterValue, intentFilterValue])\n    \n    function deleteAll(e)  {\n        if (window.confirm('Really delete all selected examples')) {\n                if (items) {\n                var newItems = []\n                items.map(function(item,i) {\n                    if (item.id && filteredItemsKeys[item.id]) {\n                       if (!item.isSelected) {\n                           newItems.push(item)\n                       }\n                    } else {\n                        newItems.push(item)\n                    }\n                    return null\n                })\n                setItems(newItems)\n                listRef.current.resetAfterIndex(0);\n            }\n        }\n         \n    }\n    \n    function tagAll(val) {\n        //console.log(['tagall',tagAllValue,val])\n        var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.tags) newItem.tags=[]\n                   if (newItem.tags.indexOf(tagValue) === -1) newItem.tags.push(tagValue)\n                   newItem.tags = uniquifyArray(newItem.tags)\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    function intentAll(val) {\n        //console.log(['intentall',intentAllValue,val])\n        var intentValue = val ? val : intentAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = item\n                   newItem.intent = intentValue\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    function resetSelection() {\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n               var newItem = item\n               newItem.isSelected = false\n               newItems.push(newItem)\n               return null\n            })\n            setItems(newItems)\n            \n        }\n    }\n    \n     function selectAll() {\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item.id && filteredItemsKeys[item.id]) {\n                   var newItem = item\n                   newItem.isSelected = true\n                   newItems.push(newItem)\n                } else {\n                    newItem.isSelected = false\n                    newItems.push(newItem)\n                }\n                return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n     function skillSetAll(val) {\n         //console.log(['set skill all',tagAllValue,val])\n        var skillValue = val ? val : skillAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.skills) newItem.skills=[]\n                   if (newItem.skills.indexOf(skillValue) === -1) newItem.skills.push(skillValue)\n                   newItem.skills = uniquifyArray(newItem.skills)\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n       \n    function saveAll(e)  {\n        //console.log(['save akk',filteredItems])\n        if (items) {\n            var newItems = []\n            var lsItems = []\n            filteredItems.map(function(item,i) {\n                if (item.intent && item.intent.length > 0 && item.id && filteredItemsKeys[item.id]) {\n                   if (item.isSelected) {\n                       lsItems.push(item)\n                   } else {\n                       newItems.push(item)\n                   }\n                } else {\n                    newItems.push(item)\n               }\n               return null\n            })\n            saveLSItems(lsItems)\n            setItems(newItems)\n            listRef.current.resetAfterIndex(0);\n        }\n         \n    }\n   \n    function createEmptyItem(skill, intent) {\n        setSearchFilter('')\n        var skills=[]\n        if (skill && skill.trim().length > 0) skills.push(skill)\n        var newIntent=''\n        if (intent && intent.trim().length > 0) newIntent = intent\n        saveItem({id:null, example:'', intent:newIntent, skills:skills,tags:[]})\n   }\n    \n    function saveItemWrap(item,index) {\n        saveItem(item,index)\n        listRef.current.resetAfterIndex(index);\n        updateLookups(items)\n    }\n    \n    function getItemSize(index) {\n        //console.log(window.innerWidth,window.innerHeight)\n        // set parameters for full size > 1024\n        var baseSize = 100\n        var heightPerLine = 70\n        var tagsPerLine = 10\n        var entitiesPerLine = 8\n        var skillsPerLine = 6\n        // tiny screen mobile \n        if (window.innerWidth < 430) {\n            baseSize = 140\n            heightPerLine = 50\n            tagsPerLine = 4\n            entitiesPerLine = 1\n            skillsPerLine = 1\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n            baseSize = 120\n            heightPerLine = 30\n            tagsPerLine = 2\n            entitiesPerLine = 1\n            skillsPerLine = 2\n        }\n        var tallyExtras = 0;\n        var item = items[index]\n        if (item && item.entities) tallyExtras += item.entities.length/entitiesPerLine;\n        if (item && item.tags) tallyExtras += item.tags.length/tagsPerLine;\n        if (item && item.skills) tallyExtras += item.skills.length/skillsPerLine;\n        var size = baseSize + (Math.round(tallyExtras)) * heightPerLine\n        //console.log(['ITEM SIZE',size, baseSize,heightPerLine,tagsPerLine,entitiesPerLine,tallyExtras,item])\n        return size \n    }\n    \n    function saveLSItem(item) {\n        var localforageStorage = localforage.createInstance({\n           name: 'nlutool',\n           storeName   :'examples',\n         });\n         localforageStorage.getItem('alldata').then(function(exampleItems) {\n                exampleItems.push(item)\n                localforageStorage.setItem('alldata',exampleItems)\n         })\n       \n    }\n    \n    function saveLSItems(newItems) {\n        var localforageStorage = localforage.createInstance({\n           name: 'nlutool',\n           storeName   :'examples',\n         });\n         localforageStorage.getItem('alldata').then(function(exampleItems) {\n                newItems.map(function(newItem) { exampleItems.push(newItem ); return null})\n                localforageStorage.setItem('alldata',exampleItems)\n         })\n       \n    }\n\n     \n    function saveNlu(splitNumber) {\n        if (items && items[splitNumber]) {\n            //props.saveNluItem(items[splitNumber]) \n            saveLSItem(items[splitNumber])\n            deleteItem(splitNumber)\n        }\n    }\n    \n      function untagAll(val) {\n        //console.log(['untagall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.tags) newItem.tags=[]\n                   var finalTags = []\n                   newItem.tags.map(function(tag) {\n                       if (tag !== val) {\n                           finalTags.push(tag)\n                       }  \n                       return null\n                   })\n                   newItem.tags = finalTags\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n       function unskillAll(val) {\n        //console.log(['unskillall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.skills) newItem.skills=[]\n                   var finalTags = []\n                   newItem.skills.map(function(tag) {\n                       if (tag !== val) {\n                           finalTags.push(tag)\n                       }  \n                       return null\n                   })\n                   newItem.skills = finalTags\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    //function sortItems() {\n        \n    //}\n    \n\n    \n    return {\n        loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter, filteredItems, setFilteredItems,createEmptyItem, \n        searchFilter, setSearchFilter, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue, skillFilterValue, setSkillFilterValue,intentFilterValue, setIntentFilterValue,\n         intentAllValue, setIntentAllValue, listRef, \n        tagAll,untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, saveAll, saveNlu\n    }\n}\nexport default useNluEditor\n","import React, { useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport NluExampleRow from './NluExampleRow'\nimport EditorSearchBar from './components/EditorSearchBar'\nimport useNluEditor from './useNluEditor'\nimport {MatchesTallies,WithSelectedDropDowns} from './components/Components'\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <NluExampleRow  \n         item={item} splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} \n         lookups={props.data.lookups} />\n}\n\nexport default function NluExampleEditor(props) {\n    const {loadAll, deleteItem , items, findKeyBy, searchFilter, setSearchFilter, skillFilterValue, setSkillFilterValue, intentFilterValue, setIntentFilterValue, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue,  intentAllValue, setIntentAllValue, listRef, tagAll,untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, filteredItems, createEmptyItem} = useNluEditor('nlutool','examples','alldata', props.updateLookups)\n    useEffect(() => {\n        loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    //useEffect(() => {\n        //if (importFrom) {\n            //var parsed = parseImportText(importFrom)\n            //setItems(parsed)\n            //props.setImportFrom('')\n        //}\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[props.importFrom])\n    \n\n    function renderEditor(props) {\n        // filter rendered list using callback \n       //var filteredItems = filter(function(item) {\n                //if (!searchFilter || searchFilter.length <=0 ) return true;\n                //const matchSearchFilter = item.example.indexOf(searchFilter) !== -1 \n                        //|| item.intent.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)\n                //return matchSearchFilter && skillFilterValue && item.skills && item.skills.indexOf(skillFilterValue) !== -1\n            //})\n            \n        if (filteredItems && filteredItems.length > 0) {\n            return <div>\n            <MatchesTallies items={items} filteredItems={filteredItems}/>\n             {props.lookups.selectedTally > 0 && <span style={{float:'right'}}> \n                 <WithSelectedDropDowns\n                  skillSetAll={skillSetAll} skillAllValue={skillAllValue}  setSkillAllValue={setSkillAllValue}  untagAll={untagAll} unskillAll={unskillAll} \n                     intentAll={intentAll} intentAllValue={intentAllValue} setIntentAllValue={setIntentAllValue}  \n                     tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue}  lookups={props.lookups}\n                 />\n                 \n                        \n                \n                 <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n               \n            </span> } \n               \n                <List\n                    ref={listRef}\n                    itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups}}\n                    itemKey={index => index}  \n                    className=\"List\"\n                    height={700}\n                    itemCount={filteredItems.length}\n                    itemSize={getItemSize}\n                    width={'100%'}\n                  >{RenderRow}</List>\n            </div>\n        } else {\n            //{JSON.stringify(filteredItems)}\n            return <div >\n             \n                <div style={{textAlign:'center'}}>\n            <br/><b>No items</b><br/><br/>Upload <Link to=\"/sources\" ><Button>Sources</Button></Link> then <Link to=\"/import\" ><Button>Import</Button></Link>.</div></div>\n        }\n    }\n    \n     return <div>\n        <Link  style={{float:'right'}} to={'/import'} ><Button variant='warning' >Current Import</Button></Link>\n        <EditorSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} skillFilterValue={skillFilterValue} setSkillFilterValue={setSkillFilterValue} resetSelection={resetSelection} selectAll={selectAll}  createEmptyItem={createEmptyItem} intentFilterValue={intentFilterValue} setIntentFilterValue={setIntentFilterValue} untagAll={untagAll} unskillAll={unskillAll}  />\n         {renderEditor(props)}\n    </div>\n    \n}\n      \n\n\n\n\n","/* global window */\nimport React  from 'react';\nimport {Button, Navbar } from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport fireImage from '../images/fire.svg'\nimport waitingImage from '../images/waiting.gif'\n\n\nexport default function NavbarComponent(props) {\n    //console.log(props)\n    var astyle={paddingLeft:'0.3em'}\n    const currentPage = props.history && props.history.location && props.history.location.pathname ? props.history.location.pathname : '/'\n    const pages = {\n        '/': {name: 'NLU Tool',show: false},\n        '/search': {name: 'Search',show: true, link:'https://github.com/syntithenai/opennludata/wiki'},\n        '/sources': {name: 'Sources',show: false},\n        '/import': {name: 'Import',show: false},\n        '/lists': {name: 'Entities',show: true},\n        '/examples': {name: 'Intents',show: true},\n        '/skills': {name: 'Skills',show: true},\n        '/help': {name: 'Help',show: false},\n        \n    }\n    \n    const links = Object.keys(pages).map(function(link,k) {\n        const page = pages[link]\n        if (page.show) {\n            if (page.link) {\n                return <a key={k} style={astyle} href={page.link} ><Button variant='primary' >{page.name}</Button></a>                \n            } else {\n                return <Link key={k} style={astyle} to={link} ><Button variant={link === currentPage ? 'success' : 'primary'}>{page.name}</Button></Link>\n            }\n        }\n        return null\n    })\n    \n    const helpButton = pages[currentPage] && pages[currentPage].helpComponent ? pages[currentPage].helpComponent : <Link to=\"/help\" ><Button>Help</Button></Link>\n    \n//        <Navbar.Text><Button><img src='/menu.svg' alt='menu' /></Button></Navbar.Text>\n\n    return <Navbar  bg=\"dark\" variant=\"dark\"  >\n        {props.message && <div style={{position:'fixed',top:5,left:window.innerWidth ? (window.innerWidth /2 - 40) : 100, border: '2px solid red', background: 'pink', padding: '0.5em', minWidth:'400px' ,borderRadius:'5px'}} >\n            <Button variant=\"danger\" size=\"sm\"  style={{float:'right', fontWeight: 'bold',borderRadius:'20px',marginLeft:'1em'}} onClick={function(e) {props.setPageMessage('')}}>X</Button>{props.message} \n        </div>}\n    \n        <img src={fireImage}  style={{height:'1.8em'}} alt=\"logo\"/>\n        \n         \n        <div style={{width: '100%'}}>\n        {links}\n        </div>\n        \n        {props.message}\n        <Navbar.Text style={{position:'fixed', top:'2px', right:'2px'}} className=\"justify-content-end\" >{helpButton}</Navbar.Text>\n        <img src={waitingImage} alt='waiting' style={{position:'fixed', top:5, right:5, zIndex:99, display: props.waiting ? 'block' : 'none' }} />\n    </Navbar>\n}\n\n\n        //<Navbar.Text><Link to=\"/organise\" ><Button>Organise</Button></Link></Navbar.Text>\n        //<Navbar.Text><Link to=\"/skills\" ><Button>My Skills</Button></Link></Navbar.Text>\n        //<Navbar.Text><Link to=\"/search\" ><Button>Search Community</Button></Link></Navbar.Text>\n","/* global window */\nimport {Button,   Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useNluRow from './useNluRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\nimport thumbdownImage from './images/thumb-down.svg'\nimport thumbupImage from './images/thumb-up.svg'\n\n\nexport default function NluImportRow(props) {\n     const  {item, splitNumber , style} = props;\n       const {    \n            intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, skills, reactTags, reactSkills, \n            onTagDelete, onTagAddition, onSkillDelete,onSkillAddition,  updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem,  deselectItem\n        } = useNluRow(props.item, props.saveItem, props.splitNumber, props.style)\n                \n       var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {intentChanged(intentKey)}}  >{intentKey}</Dropdown.Item>\n       })\n       // ONE PER ENTITY FOR THIS EXAMPLE\n       var entitiesDropdowns = item && item.entities && item.entities.map(function(entity,i) {\n           var entityOptions = props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item  key={j} value={entityKey} onClick={function(e) {entityTypeChanged(i,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           return<Dropdown style={{marginLeft:'0.2em'}} variant='info'  key={i}  as={ButtonGroup}>\n              <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button variant='info'   size=\"sm\"  onClick={function(e) {entityClicked(i,entity.type)}} >\n              <b>{entity.type}</b> \n                -\n              {entity.value ? entity.value : 'Select Entity Type'}\n              </Button>\n              <Button variant=\"info\" size=\"sm\" onClick={function(e) {entityDelete(i,'')}} >X</Button>\n              <Dropdown.Menu>\n                  <form  style={{display:'inline'}}>\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {entityTypeChanged(i,e.target.value)}}\n                    value={entity.type} />\n                    </div>\n                  </form>\n                  {entityOptions}\n              </Dropdown.Menu>\n            </Dropdown>\n       }) ;\n        //PLUS CREATE NEW WHEN TEXT IS SELECTED\n       if (selectionState  && selectionState.textSelection && selectionState.textSelection.length > 0 &&  selectionState.textSelectionFrom === splitNumber) {\n           var entityOptions =  props.lookups.entityLookups && props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item key={j} value={entityKey} onClick={function(e) {entityTypeChanged(-1,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           entitiesDropdowns.push(<Dropdown key=\"new\" variant='success'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='success'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant='success' size=\"sm\" >New Entity</Button>\n\n          <Dropdown.Menu>\n           <form style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); entityTypeChanged(-1,newEntity)}}>\n                <div className=\"form-group\">\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {setNewEntity(e.target.value)}}\n                value={newEntity} />\n                </div>\n              </form>\n              {entityOptions}\n          </Dropdown.Menu>\n        </Dropdown>)\n       }\n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                  \n                   {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button>}\n                  {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button>}\n                  \n                  {item.intent && <Button  style={{float:'right', marginLeft:'0.2em'}}  variant=\"success\"  onClick={function() {props.saveNlu(splitNumber)}} ><img src=\"/thumb-up.svg\" alt=\"Save\" /> Save</Button>}\n                  {!item && <Button   style={{float:'right', marginLeft:'0.2em'}} variant=\"secondary\" ><img src={thumbupImage} alt=\"Save\" /> Import</Button>} \n                  <Button  variant=\"danger\" style={{float:'right'}} onClick={function(e) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}} ><img src={thumbdownImage} alt=\"Delete\" /> Delete</Button>\n                  \n                 \n                  <Dropdown  style={{float:'left'}} as={ButtonGroup}>\n                  <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button   size=\"sm\" >{item.intent ? item.intent.toString() : 'Select Intent'} </Button>\n                  <Dropdown.Menu>\n                   <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); intentChanged(intentTitle)}}>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" value={intentTitle} onChange={function(e) {setIntentTitle(e.target.value)}}\n                         />\n                        </div>\n                      </form>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                  </Dropdown>\n                  <span style={{float:'left'}}>{entitiesDropdowns}</span>\n                 \n                  \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add to skill\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactSkills}\n                    tags={skills}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.skillLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onSkillDelete}\n                    onAddition={onSkillAddition} /> \n                    </div>\n                    \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add new tag\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactTags}\n                    tags={tags}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.tagLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onTagDelete}\n                    onAddition={onTagAddition} /> \n                    </div>\n                  \n                  <input  \n                 \n                   onFocus={ function(e) {\n                       setSelectionState(null)\n                    }}\n                   onSelect={ function(e) {\n                     var textSelection = window.getSelection().toString(); \n                     setSelectionState({textSelection:textSelection, textSelectionFrom: splitNumber, startTextSelection: e.target.selectionStart, endTextSelection: e.target.selectionEnd})\n                  }}  \n                   type='text'   style={{clear:'both', width:'80%'}}  value={item.example} id={\"example_input_\"+splitNumber} \n                   onChange={function(e) { updateExampleContent(e.target.value)}} />\n                  \n                  \n                \n                \n            </div>\n      </div>\n}\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport NluImportRow from './NluImportRow'\nimport EditorSearchBar from './components/EditorSearchBar'\nimport useNluEditor from './useNluEditor'\nimport TagAllDropDown from './components/TagAllDropDown'\nimport IntentAllDropDown from './components/IntentAllDropDown'\nimport SkillAllDropDown from './components/SkillAllDropDown'\nimport arrowthickleftImage from './images/arrow-thick-left.svg'\nimport arrowthickrightImage from './images/arrow-thick-right.svg'\n\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    //console.log(['USENLUROW rr',index])\n    return <NluImportRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups} />\n}\n\n\nexport default function NluImportEditor(props) {\n    \n    //const examplesDB = useDBSingleKey('nlutool','examples','alldata')\n    const {loadAll, deleteItem ,items,  findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue, skillFilterValue, setSkillFilterValue, intentAllValue, setIntentAllValue, listRef, tagAll, untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, saveAll, saveNlu, filteredItems, createEmptyItem} = useNluEditor('nlutool','import','alldata', props.updateLookups)\n    useEffect(() => {\n        loadAll()\n        //examplesDB.loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    //useEffect(() => {\n        //if (importFrom) {\n            //var parsed = parseImportText(importFrom)\n            //setItems(parsed)\n            //props.setImportFrom('')\n        //}\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[props.importFrom])\n    \n    \n    \n   \n    \n    function renderEditor(props) {\n        // filter rendered list using callback \n       \n         //filteredItems.sort(function(oldItem,item) {console.log( ['SORT',oldItem.example,item.example]); return (item.example && oldItem.example && item.example.trim().toLowerCase <= oldItem.example.trim().toLowerCase) })\n           \n        if (filteredItems && filteredItems.length > 0) {\n            \n           //var skillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n                  //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkillAllValue(skillKey); skillSetAll(skillKey)}}  >{skillKey}</Dropdown.Item>\n            //})\n            \n            //var tagOptions = props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n              //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {setTagAllValue(tagKey); tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n           //})\n           //var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n              //return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {setIntentAllValue(intentKey);intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n           //})\n            return <div>\n             <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length}/{items.length} matches </span>\n             {props.lookups.selectedTally > 0 && <span style={{float:'right'}}> \n                <span>With {props.lookups.selectedTally} selected&nbsp;\n              <SkillAllDropDown skillSetAll={skillSetAll} skillAllValue={skillAllValue}  setSkillAllValue={setSkillAllValue}  lookups={props.lookups}/>\n                <IntentAllDropDown intentAll={intentAll} intentAllValue={intentAllValue} setIntentAllValue={setIntentAllValue}  lookups={props.lookups}/>\n                <TagAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue}  lookups={props.lookups}/>\n                \n                </span>\n                <Button style={{marginLeft:'1em'}} onClick={saveAll} variant=\"success\"  >Save Selected</Button> \n                <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                \n            </span> } \n                \n              \n                \n                <List\n                    ref={listRef}\n                    itemData={{items: filteredItems, saveItem: saveItemWrap, saveNlu, deleteItem, findKeyBy, lookups:props.lookups}}\n                    itemKey={index => index}  \n                    className=\"List\"\n                    height={700}\n                    itemCount={filteredItems.length}\n                    itemSize={getItemSize}\n                    width={'100%'}\n                  >{RenderRow}</List>\n            </div>\n            \n            \n        } else {\n            //{JSON.stringify(filteredItems)}\n            return <div >\n                <div style={{textAlign:'center'}}>\n            <br/><b>No more items to import</b><br/><br/>Open <Link to=\"/sources\" ><Button><img style={{height:'1em', paddingRight:'1em'}}  src={arrowthickleftImage} alt=\"Sources\" />Sources</Button></Link> to create more or <Link to=\"/examples\" ><Button>Organise<img src={arrowthickrightImage} alt=\"Intents\" style={{height:'1em', paddingLeft:'1em'}}  /></Button></Link> what you have imported into skills.\n            </div></div>\n        }\n    }\n    // {JSON.stringify(items)}\n    return <div>\n        <Link style={{float:'right'}} to=\"/sources\" ><Button variant=\"success\" >Sources</Button></Link>\n         \n        <EditorSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} skillFilterValue={skillFilterValue} setSkillFilterValue={setSkillFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} untagAll={untagAll} unskillAll={unskillAll}  />\n         {renderEditor(props)}\n    </div>\n    \n    \n}\n      \n\n","import JSZip from 'jszip'\nimport { saveAs } from 'file-saver';\n\nfunction createZip(zipStructure) {\n    var zip = new JSZip();\n     console.log(['ZIP',zipStructure])\n    function recurseZipStructure(zipStructure, path) {\n        if (Array.isArray(zipStructure.files)) {\n            zipStructure.files.map(function(file) {\n                console.log(['ZIP file',file])\n                var options = (file.base64 && file.base64.length > 0) ? {base64: true} : {} \n                if (file.name && file.name.length > 0 && file.content) zip.file(path+\"/\"+file.name,file.content, options);\n                return null\n            })\n        }\n        if (Array.isArray(zipStructure.folders)) {\n            zipStructure.folders.map(function(folder) {\n                console.log(['ZIP folder',folder])\n                if (folder.name && folder.name.length > 0) zip.folder(folder.name);\n                if ((folder.files && folder.files.length > 0) || (folder.folders && folder.folders.length > 0)) {\n                    recurseZipStructure(folder, path+\"/\"+folder.name)\n                }\n                return null\n            })\n        }\n         \n    } \n     \n    recurseZipStructure(zipStructure,'')\n     \n    return new Promise(function(resolve,reject) {\n        zip.generateAsync({type:\"blob\"}).then(function(content) {\n            resolve(content)\n        })\n    })\n}\n\nexport {createZip}\n","import { generateObjectId, uniquifyArray, replaceEntities } from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\n\nasync function exportJOVO(skill) {\n    return new Promise(function(resolve,reject) {\n        var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         var jovo={invocation: skill.invocation}\n         //console.log(['JVO export',skill])\n         var intents = {}\n         var entityTypes={}\n         if (skill.intents) {\n             Object.keys(skill.intents).map(function(intentKey) {\n                 var examples = skill.intents[intentKey]\n                 if (!intents[intentKey])  intents[intentKey] = {name:intentKey, phrases:[], inputs: []}\n                 var inputs = {}\n                 if (Array.isArray(examples)) {\n                     examples.map(function(example) {\n                        intents[intentKey].phrases.push(replaceEntities(example.example,example.entities))\n                        if (Array.isArray(example.entities)) {\n                            example.entities.map(function(entity) {\n                               inputs[entity.type] = true  \n                               if (!Array.isArray(entityTypes[entity.type])) entityTypes[entity.type] = []\n                               entityTypes[entity.type].push(entity.value)\n                            })\n                        }\n                     })\n                 }\n                 intents[intentKey].phrases = uniquifyArray(intents[intentKey].phrases).sort()\n                 intents[intentKey].inputs = Object.keys(inputs).map(function(entityType) { return {name: entityType, type: entityType+\"Type\"} })\n             }) \n         }\n         jovo.intents = Object.values(intents)\n         Object.keys(entityTypes).map(function(entityType) {\n            if (skill.entities && skill.entities[entityType]  && skill.entities[entityType].lists)  {\n                skill.entities[entityType].lists.map(function(entityExtrasList) {\n                   if (skill.lists[entityExtrasList])    {\n                       entityTypes[entityType].concat(skill.lists[entityExtrasList])\n                   }\n                })\n            }\n         })\n         jovo.inputTypes = Object.keys(entityTypes).map(function(entityType) {\n               const values = uniquifyArray(entityTypes[entityType]).sort().map(function(value) {return {value:value}})\n              return {name: entityType+\"Type\", values:values}  \n         })\n         \n             const final =  {folders:[{'name':'models', files:[{name:'en-US.json', content: JSON.stringify(jovo)}] }]   }\n             //console.log(['JVO final',final])\n             resolve(final)\n              \n        //})\n    })\n}\n\n\nasync function exportJOVOZip(skill) {\n    return createZip(await exportJOVO(skill))\n}\n\nexport {exportJOVO, exportJOVOZip}\n","import { generateObjectId } from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\n\nasync function exportJSON(skill) {\n    console.log(['EXPPORT JSON',skill])\n     var listsStorage = localforage.createInstance({\n       name: \"nlutool\",\n       storeName   : \"lists\",\n     });\n     listsStorage.getItem('alldata').then(function(lists) {\n        var usedLists = {}\n        if (skill.entities) {\n            Object.keys(skill.entities).map(function(entity,i) {\n                if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                    skill.entities[entity].lists.map(function(list) {\n                       usedLists[list] = true  \n                    })\n                }\n            })\n        }\n        var skillLists = {}\n        Object.keys(usedLists).map(function(listKey) {\n          skillLists[listKey] = []  \n        })\n        lists.map(function(item) {\n            Object.keys(usedLists).map(function(listKey) {\n                if (item && item.tags && item.tags.indexOf(listKey) !== -1) {\n                    skillLists[listKey].push(item.value)\n                }\n            })\n        })\n        skill.lists = skillLists\n    })\n    return JSON.stringify(skill)\n}\n\nasync function exportJSONZip(skill) {\n    var content = await exportJSON(skill)\n    return JSON.stringify(content)\n    //return createZip({files:[{name:'skill.json', content: await exportJSON(skill)}]})\n}\n\nexport {exportJSON, exportJSONZip}\n","import { generateObjectId, uniquifyArray, replaceEntities } from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\n\n\n\n\nasync function exportMycroft(skill) {\n    return new Promise(function(resolve,reject) {\n        var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         var modelFiles=[]\n         listsStorage.getItem('alldata').then(function(lists) {\n            var usedLists = {}\n            if (skill.entities) {\n                Object.keys(skill.entities).map(function(entity,i) {\n                    if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        skill.entities[entity].lists.map(function(list) {\n                           usedLists[list] = true  \n                        })\n                    }\n                    return null\n                })\n            }\n           \n            var skillLists = {}\n            Object.keys(usedLists).map(function(listKey) {\n              skillLists[listKey] = []  \n              return null\n            })\n           \n           \n            lists.map(function(item) {\n                Object.keys(usedLists).map(function(listKey) {\n                    if (item && item.tags && item.tags.indexOf(listKey) !== -1) {\n                        skillLists[listKey].push(item.value)\n                    }\n                    return null\n                })\n            })\n             // intents - \n             // collate examples, one file per intent\n             var intents={}\n             if (skill.intents) {\n                 Object.keys(skill.intents).map(function(intentKey) {\n                     var examples = skill.intents[intentKey]\n                     if (!Array.isArray(intents[intentKey]))  intents[intentKey] = []\n                     if (Array.isArray(examples)) {\n                         examples.map(function(example) {\n                            intents[intentKey].push(replaceEntities(example.example,example.entities))\n                         })\n                     }\n                     intents[intentKey] = uniquifyArray(intents[intentKey]).sort()\n                 }) \n             }\n             // one per file\n             // entities - merge values and lists values , one entity per file\n             var entities={}\n             if (skill.entities) { \n                 Object.keys(skill.entities).map(function(entityKey) {\n                     var combinedEntities = []\n                     var entity = skill.entities[entityKey]\n                     if (entity.values) {\n                         combinedEntities = combinedEntities.concat(entity.values)\n                     } \n                     if (entity.lists) {\n                         entity.lists.map(function(list) {\n                             if (skill.lists && skill.lists[entityKey]) {\n                                 combinedEntities = combinedEntities.concat(skill.lists[entityKey])\n                            }\n                         })\n                     }\n                     entities[entityKey] = uniquifyArray(combinedEntities).sort()\n                 }) \n             }\n             Object.keys(intents).map(function(intent) {\n                 modelFiles.push({name:intent+'.intent',content: intents[intent].join(\"\\n\")})\n                 return null\n             })\n             Object.keys(entities).map(function(entity) {\n                 modelFiles.push({name: entity+'.entity',content: entities[entity].join(\"\\n\")})\n                 return null\n             })\n              resolve( modelFiles)\n        })\n    })\n}\n\n\nasync function exportMycroftZip(skill) {\n    const files = await exportMycroft(skill)\n    return createZip({files:files})\n}\n\nexport {exportMycroft, exportMycroftZip}\n\n","import { generateObjectId } from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\n\n// just the models subfolder\n// one file per intent\n// one file per entity\nfunction exportRASA(skill) {\n    //var modelFiles=[]\n    var cleanEntities = {}\n    if (skill.entities) {\n        skill.entities.map(function(entity,entityKey) {\n            cleanEntities[entityKey] = entity\n            return null\n        })\n    }\n    var cleanIntents = {}\n    if (skill.intents) {\n        skill.intents.map(function(intent,intentKey) {\n            cleanIntents[intentKey] = intent\n            return null\n        })\n    }\n    var cleanSkill = {title:skill.title, friendlyTitle: skill.friendlyTitle, intents: Object.values(cleanIntents) , entities: Object.values(cleanEntities)}\n    var title = skill.friendlyTitle ? skill.friendlyTitle+'.json'  : (skill.title ? skill.title+'.json' : generateObjectId()+'.json') \n    var content = JSON.stringify(cleanSkill)\n    //console.log(['EXPORT json',content])\n    return createZip(title,{files:[{name:title, content: content}]})\n    \n}\n\n\nfunction exportRASAZip(skill) {\n    return createZip({files:[{name:'skill.json', content: exportRASA(skill)}]})\n}\n\nexport {exportRASA, exportRASAZip}\n","import {exportJOVOZip} from './exportJOVO'\nimport {exportJSONZip} from './exportJSON'\nimport {exportMycroftZip} from './exportMycroft'\nimport {exportRASAZip} from './exportRASA'\n\nvar exportFormats = [\n        {name:'JSON',exportFunction:exportJSONZip},\n        {name:'JOVO',exportFunction:exportJOVOZip},\n        {name:'RASA',exportFunction:exportRASAZip},\n        {name:'Mycroft',exportFunction:exportMycroftZip}\n    ]\n\nexport default exportFormats\n\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button, Dropdown, Badge,ButtonGroup, ListGroup } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport useNluEditor from './useNluEditor'\nimport exportFormats from './export/index'\nimport {exportJSON} from './export/exportJSON'\nimport useDB from './useDB'\nimport {generateObjectId, uniquifyArray} from './utils'\nimport ReactTags from 'react-tag-autocomplete'\nimport SuggestionComponent from './components/SuggestionComponent'\n//import ExportPage from './ExportPage'\nimport { saveAs } from 'file-saver';\n\nimport localforage from 'localforage'\n//const RenderRow = function(props) {\n    //const index = props.index\n    //const style = props.style\n    //const item = props.data.items[index]\n    //return <NluSkillsRow  \n         //item={item}  splitNumber={index} style={style}\n         //saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         //lookups={props.data.lookups} />\n//}\n\n\nexport default  function NluSkillsEditor(props) {\n    const {items, loadAll, skillFilterValue, setSkillFilterValue, filteredItems} = useNluEditor('nlutool','examples','alldata', props.updateLookups)\n    const [currentIntent, setCurrentIntent] = useState('')\n    const [invocation, setInvocation] = useState('')\n    const [entitiesForSkill, setEntitiesForSkill] = useState({})\n    const [listsForEntity, setListsForEntity] = useState({})\n    const [currentSkill, setCurrentSkill] = useState({id:generateObjectId(), invocation:'', title:skillFilterValue, entities:{}})\n    //const skillsManager = useDB('nlutool','skills')\n    const listsManager = useDB('nlutool','lists')\n    const [showExportDialog, setShowExportDialog] = useState(false)\n    const [collatedItems, setCollatedItems] = useState({})\n    const [collatedCounts, setCollatedCounts] = useState({})\n    var skillsStorage = localforage.createInstance({\n       name: \"nlutool\",\n       storeName   : \"skills\",\n     });\n    //const params = useParams()\n    //skillFilterValue = params.skillId;\n    //function setSkillFilterValueWrap(value) {\n        //setSkill\n        //props.history.push('/skills/'+value)\n    //}\n    //const {loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter} = \n    \n    // load all on init\n    useEffect(() => {\n        loadAll()\n        //skillsManager.loadAll()\n        if (skillFilterValue) {\n            //localforage.setItem('key', 'value', function (err) {\n              //// if err is non-null, we got an error\n              skillsStorage.getItem(skillFilterValue, function (err, skill) {\n                // if err is non-null, we got an error. otherwise, value is the value\n                if (err) throw new Error(err)\n                if (skill) {\n                    setCurrentSkill(skill)\n                    setInvocation(skill.invocation)\n                }\n              });\n            //});\n        } \n        listsManager.loadAll()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    // load skill on change skillFilterValue\n    useEffect(() => {\n        //skillsManager.loadAll()\n        if (skillFilterValue) {\n            //localforage.setItem('key', 'value', function (err) {\n              //// if err is non-null, we got an error\n              skillsStorage.getItem(skillFilterValue, function (err, skill) {\n                // if err is non-null, we got an error. otherwise, value is the value\n                if (err) throw new Error(err)\n                if (skill) {\n                    setCurrentSkill(skill)\n                    setInvocation(skill.invocation)\n                }\n              });\n            //});\n        } \n        \n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[skillFilterValue])\n    //// set current skill\n    //useEffect(() => {\n       //if (skillFilterValue && skillFilterValue.length > 0) {\n            ////console.log(['LOAD ALL real ',skillFilterValue,skillsManager.items]) \n            //var filtered = skillsManager.items.filter(function(item) {\n                ////console.log(['skill filter  ',item.title === skillFilterValue,item])\n                ////return true\n                //if (item.title === skillFilterValue) return true\n                //else return false\n            //})\n            ////console.log(['LOAD ALL filtered ',filtered])\n            //if (filtered.length > 0) {\n                //var skill = filtered[0]\n                ////skill.entities = Object.keys(entitiesForSkill).map(function(entity) {\n                    ////entity.lists = listsForEntity[entity] ? listsForEntity[entity] : []\n                    ////return entity\n                ////})\n                //setCurrentSkill(skill)\n                //setInvocation(skill.invocation)\n            //}\n        //}\n    //},[skillsManager.items,skillFilterValue])\n    \n    // load list lookups\n    useEffect(() => {\n        if (listsManager.items.length > 0) { \n            //console.log(['UPD ITEMS',listsManager.items,listsManager.items[0]])\n            props.updateLists(listsManager.items[0])\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[listsManager.items])\n    \n    // collate entitiesForSkills from filtered example \n    useEffect(() => {\n        var entities = {}\n        \n        filteredItems.map(function (item,itemKey) {\n          if (Array.isArray(item.entities)) {\n              item.entities.map(function(entity,entityKey) {\n                 if (entity && entity.type && entity.type.length > 0) {\n                     if (typeof entities[entity.type] !== \"object\") entities[entity.type] = {}\n                     if (!Array.isArray(entities[entity.type].values )) entities[entity.type].values = []\n                     entities[entity.type].values.push(entity.value)\n                 }\n                 return null\n              })\n          }\n          return null\n        })\n        // sort and uniquify\n        Object.keys(entities).map(function(entityName,entityKey) {\n           const entity = entities[entityName]\n           entity.values = uniquifyArray(entity.values).sort()\n           return null\n        })\n        setEntitiesForSkill(entities)\n        \n        // examples collated by intent\n         var newCollatedItems = collatedItems\n         var newCollatedCounts = collatedCounts\n         if (filteredItems) {\n             filteredItems.map(function(item) {\n                if (item.intent) {\n                    if (!newCollatedItems[item.intent]) newCollatedItems[item.intent]=[]\n                    newCollatedCounts[item.intent] =   (newCollatedCounts[item.intent] > 0) ? newCollatedCounts[item.intent] + 1 : 1;\n                    //if (collatedItems[item.intent].length < 300) {\n                        newCollatedItems[item.intent].push({example: item.example, entities: item.entities})\n                    //}\n                    \n                }\n               return null;  \n             })\n             setCollatedItems(newCollatedItems)\n             setCollatedCounts(newCollatedCounts)\n             console.log(['UDPATE SKILL WITH INTENTS',currentSkill, collatedItems])\n             var newSkill = currentSkill;\n             newSkill.intents = collatedItems\n             setCurrentSkill(newSkill)\n             console.log(['UDPATE SKILL WITH INTENTS',JSON.parse(JSON.stringify(newSkill))])\n         }   \n        \n        \n    },[filteredItems])\n    \n     // load invocation into skill\n    useEffect(() => {\n        if (currentSkill) {\n          //console.log(['SET INVOCK HAVE CURRENT SKILL',currentSkill,invocation])\n          var skill = currentSkill\n          skill.invocation = invocation\n          setCurrentSkill(skill)\n          //skillsManager.saveItem(currentSkill,null)\n      }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[invocation])\n    \n    useEffect(() => {\n        console.log('change cs or inv',currentSkill)\n        if (currentSkill && currentSkill.title && currentSkill.title.length > 0) {\n            console.log('change cs or inv real')\n            //var index = skillsManager.findKeyBy('id',newCurrentSkill.id)\n            //if (index != null) {\n            // merge in entity values\n            if (entitiesForSkill) {\n                Object.keys(entitiesForSkill).map(function(entity) {\n                   if (currentSkill.entities && currentSkill.entities[entity]) {\n                       currentSkill.entities[entity].values = entitiesForSkill[entity].values;\n                   }  \n                })\n            }\n            // merge in intents\n            \n            console.log(['save skill ',skillFilterValue,currentSkill])\n            skillsStorage.setItem(skillFilterValue, currentSkill, function (err) {\n                console.log(['saved skill '])\n                if (err)  {\n                    console.log(err)\n                    throw new Error(err)\n                }\n            })\n              //// if err is non-null, we got an error\n            \n            //skillsManager.saveItem(newCurrentSkill,index)\n            //}\n            //\n            //currentSkill.entities = entitiesForSkill\n            //newCurrentSkill.invocation = invocation;\n            //newCurrentSkill.title = skillFilterValue;\n            //console.log(['save now ',index,newCurrentSkill])\n            //setCurrentSkill(newCurrentSkill)\n            \n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[currentSkill,listsForEntity, invocation])\n    \n  \n  \n  //function setInvocation(val) {\n      //console.log('SET INVOCK')\n      ////if (currentSkill) {\n          ////console.log(['SET INVOCK HAVE CURRENT SKILL',currentSkill,val])\n          ////var skill = currentSkill\n          ////skill.invocation = val \n          ////setCurrentSkill(skill)\n      ////}\n  //}\n    \n  function addListToSkillEntity(entity,list) {\n      //console.log(['ADSKOI',currentSkill,currentSkill.entities,entity,list])\n      if (entity && list && list.name) {\n            var skill = currentSkill;\n            if (!skill.entities) skill.entities={}\n            if (!skill.entities[entity]) skill.entities[entity] = {lists:[]}\n            if (!Array.isArray(skill.entities[entity].lists)) skill.entities[entity].lists = []\n            //var newListsForEntity = listsForEntity\n            //console.log(['ADSKOI1.5',skill])\n            skill.entities[entity].lists.push(list.name)\n            skill.entities[entity].lists = uniquifyArray(skill.entities[entity].lists).sort()\n           //newListsForEntity[entity] = uniquifyArray(newListsForEntity).sort()\n            setCurrentSkill(skill)  \n            // force render\n            setListsForEntity(JSON.stringify(skill.entities))  \n            //} else {\n                //console.log(['ADSKOI new'])\n               //newListsForEntity[entity] = [list.name]\n            //}\n             //console.log(['ADSKOI2 final',newListsForEntity])\n            //setListsForEntity(newListsForEntity)\n       } else {\n           console.log([' missing data'])\n       }\n  }\n  \n  function removeListFromSkillEntity(entity, listIndex) {\n      var skill = currentSkill\n      //console.log(['REMOVESKILLFROMLIST',entity,listIndex])\n      if (skill && skill.entities && entity && skill.entities[entity] && skill.entities[entity].lists) {\n          var lists = skill.entities[entity].lists\n          //lists = uniquifyArray([lists.slice(0, listIndex),lists.slice(listIndex + 1)]).sort()\n          lists = lists.slice(0, listIndex).concat(lists.slice(listIndex + 1))\n          \n          skill.entities[entity].lists = lists\n          setCurrentSkill(skill)  \n          setListsForEntity(JSON.stringify(skill.entities))  \n          //console.log(['REMOVESKILLFROMLIST ddd',lists])\n      } \n       //var newEntitiesForSkill = entitiesForSkill\n       //if (newEntitiesForSkill[entity]) {\n           //var lists = newEntitiesForSkill[entity].lists && Array.isArray(newEntitiesForSkill[entity].lists) ? newEntitiesForSkill[entity].lists : [];\n           //newEntitiesForSkill[entity].lists = uniquifyArray([lists.slice(0, listIndex),lists.slice(listIndex + 1)]).sort()\n           //setEntitiesForSkill(newEntitiesForSkill)\n       //}\n  }\n  \n    \n    function renderEditor(props) {\n       \n        if (skillFilterValue && skillFilterValue.length > 0) {\n            \n            // filter rendered list using callback \n            //var filteredItems = filter(function(item) {\n                //if (!searchFilter || searchFilter.length <=0 ) return true;\n                //const matchSearchFilter = item.example.indexOf(searchFilter) !== -1 \n                        //|| item.intent.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)\n                //return matchSearchFilter && skillFilterValue && item.skills && item.skills.indexOf(skillFilterValue) !== -1\n                \n            //})\n             \n                \n                \n            if (filteredItems && filteredItems.length > 0) {\n               \n               //var tagOptions = props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n                  //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {setTagAllValue(tagKey); tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n               //})\n               //var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n                  //return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {setIntentAllValue(intentKey);intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n               //})\n                //CURRENT SKILL: {JSON.stringify(currentSkill)}\n                //<hr/>\n                   //CURRENT SKILL: {JSON.stringify(currentSkill.intents)}\n                //<hr/>\n                \n                   \n                \n                //GENENT: {JSON.stringify(entitiesForSkill)}\n                //<hr/>\n                //LISTS: {JSON.stringify(listsForEntity)}\n                //<hr/>\n                \n                // {<ExportPage showExportDialog={showExportDialog} setShowExportDialog={setShowExportDialog} currentSkill={currentSkill} />}\n                 return <div>\n                     <div><h3>{skillFilterValue} </h3></div>\n                        <div>\n                        <label style={{fontWeight:'bold', marginLeft:'0.5em'}} > Invocation <input type='text' value={invocation} onChange={function(e) {setInvocation(e.target.value)}} /></label>\n                        </div>\n                        <div>\n                            <b style={{marginRight:'1em', marginLeft:'0.5em'}} >Tags</b>\n                            <span></span>\n                        </div>\n                        \n                        <b style={{marginRight:'1em', marginLeft:'0.5em'}} >Intents</b>\n                        <span>{Object.keys(collatedItems).sort().map(function(collatedIntent, i) {\n                                var useCurrentIntent = currentIntent ? currentIntent : Object.keys(collatedItems)[0]\n                                var completionVariant = 'danger'\n                                if (collatedItems[collatedIntent].length > 300) {\n                                    completionVariant = 'success'\n                                } else if (collatedItems[collatedIntent].length > 100) {\n                                    completionVariant = 'primary'\n                                } else if (collatedItems[collatedIntent].length > 10) {\n                                    completionVariant = 'warning'\n                                } \n                                \n                                \n                                if (collatedItems[collatedIntent].length  === collatedCounts[collatedIntent]) {\n                                        return <Link key={collatedIntent} to={\"/examples/skill/\"+skillFilterValue+\"/intent/\"+collatedIntent} ><Button key={collatedIntent} variant={collatedIntent === useCurrentIntent ? \"primary\" : \"outline-primary\"} onClick={function() {setCurrentIntent(collatedIntent)}}>\n                                            <Badge variant={completionVariant} > {collatedItems[collatedIntent].length} </Badge>\n                                            &nbsp;{collatedIntent}\n                                        </Button></Link>\n                                } else {\n                                    return <Link key={collatedIntent} to={\"/examples/skill/\"+skillFilterValue+\"/intent/\"+collatedIntent} ><Button variant={collatedIntent === useCurrentIntent ? \"primary\" : \"outline-primary\"} onClick={function() {setCurrentIntent(collatedIntent)}}>\n                                            <Badge variant=\"danger\" > {collatedItems[collatedIntent].length}/{collatedCounts[collatedIntent]} </Badge>\n                                            &nbsp;{collatedIntent}\n                                        </Button></Link>\n                                }\n                                \n                        })}</span>\n                        <div style={{marginTop:'0.7em'}} >\n                      <b style={{marginRight:'1em', marginLeft:'0.5em'}} >Entities</b><ListGroup>{Object.keys(entitiesForSkill).map(function(collatedEntity, i) {\n                                \n                                const listTags = currentSkill && currentSkill.entities && currentSkill.entities[collatedEntity] && currentSkill.entities[collatedEntity].lists ? currentSkill.entities[collatedEntity].lists.map(function(listItem,listItemKey) {return {id:listItemKey, name:listItem} }) : []\n                                //console.log(listTags)\n                                    return <ListGroup.Item key={collatedEntity} >\n                                            \n                                             <span style={{marginLeft:'1em', float:'left', fontWeight:'bold'}}>&nbsp;{collatedEntity}</span>\n                                          \n                                            <span style={{marginLeft:'1em', float:'left'}}>&nbsp;{entitiesForSkill[collatedEntity].values.slice(0,5).join(\", \")}{entitiesForSkill[collatedEntity].values.length > 5 ? <Badge>... {entitiesForSkill[collatedEntity].values.length - 5} more </Badge> : ''}</span>\n                                            <span style={{marginLeft:'1em', float:'left'}}>\n                                           <label><i></i> <ReactTags\n                                            placeholderText=\"Also use values from \"\n                                            minQueryLength={0}\n                                            maxSuggestionsLength={50}\n                                            autoresize={true}\n                                            allowNew={false}\n                                            tags={listTags}\n                                            suggestionComponent={SuggestionComponent}\n                                            suggestions={props.lookups.listsLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                                            onDelete={function(index) {removeListFromSkillEntity(collatedEntity, index)}}\n                                            onAddition={function(tag) {addListToSkillEntity(collatedEntity, tag)}} /> </label>\n                                            </span>\n                                        </ListGroup.Item>\n                                //}\n                                \n                        })}</ListGroup>\n                        </div>\n               \n                </div>\n\n            }\n            \n        } else {\n            const skillsList = props.lookups.skillLookups ? props.lookups.skillLookups.map(function(skill,i) {return <Button key={i}  onClick={function(e) {setSkillFilterValue(skill)}}  style={{marginLeft:'1em'}} >{skill}</Button>} )   : []\n            return <div>\n                <h1>Skills</h1>\n                {skillsList.length > 0 && skillsList}\n                {skillsList.length <= 0 && <div>\n                    You dont have any skills yet. Import some <Link to='/sources'><Button>Sources</Button></Link> \n                </div>}\n            </div>\n        }\n    }\n    \n    \n     var skillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n          return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkillFilterValue(skillKey)}}  >{skillKey}</Dropdown.Item>\n       })\n       skillOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {setSkillFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n   \n        //<Button style={{float:'right',marginLeft:'0.5em'}}  variant=\"success\" onClick={function() {setShowExportDialog(true)}} >Publish</Button>\n         \n    return <div>\n         {skillFilterValue && skillFilterValue.length > 0 && <Dropdown style={{float:'right',marginLeft:'0.5em'}}  as={ButtonGroup}>\n          <Dropdown.Toggle split variant=\"success\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant=\"success\">Export</Button>\n          <Dropdown.Menu variant=\"success\" >\n              {exportFormats.map(function(exportFormat,i) {\n                  var title = 'opennludata_'+exportFormat.name+'_'+Date.now()\n                return <Dropdown.Item variant=\"success\" key={i} value={exportFormat.name} onClick={function(e) {exportFormat.exportFunction(currentSkill).then(function(zipBody) {\n                saveAs(zipBody, title)\n            })}}  >{exportFormat.name}</Dropdown.Item>\n           })}\n          </Dropdown.Menu>\n        </Dropdown>}\n         {renderEditor(props)}\n    </div>\n            \n}\n      \n","import React, {useState} from 'react';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport {Button, Modal} from 'react-bootstrap'\nimport { Link  } from 'react-router-dom'\n\nfunction SearchPage(props) {\n    const [copied, setCopied] = useState(false)\n    \n    \n    return <div>\n    <h3>Search</h3>\n    <iframe src=\"https://github.com/syntithenai/opennludata/wiki\" ></iframe>\n    \n    \n    </div>\n    \n    \n}\n\nexport default SearchPage\n","import React from 'react';\nimport {useState} from 'react';\nimport {BrowserRouter as  Router, Route, Link  } from 'react-router-dom'\nimport LocalStorageUploadManager from './LocalStorageUploadManager'\nimport ListsManager from './ListsManager'\nimport NluExampleEditor from './NluExampleEditor'\nimport NavbarComponent from './components/NavbarComponent'\nimport {HelpText, HelpTextImport, HelpTextExport, HelpTextAbout} from './components/Components'\nimport NluImportEditor from './NluImportEditor'\nimport NluSkillsEditor from './NluSkillsEditor'\nimport SearchPage from './SearchPage'\nimport {Button} from 'react-bootstrap'\n\n\n\n//import images from './images'\n//console.log(images)\n//const axios = require('axios');\n  //axios.get('https://github.com/syntithenai/opennludata/wiki/test-skill')\n  //.then(function (response) {\n    //// handle success\n    //console.log(response);\n  //})\n  //.catch(function (error) {\n    //// handle error\n    //console.log(error);\n  //})\n//\n\nfunction SiteMenu(props) {\n    var astyle={paddingLeft:'0.3em'}\n    return <div style={{marginLeft:'0.5em'}}>\n            <h1>Menu</h1>\n            \n                <Link style={astyle} to=\"/sources\" ><Button>Sources</Button></Link>\n                <Link style={astyle} to=\"/import\" ><Button>Import</Button></Link>\n                <Link style={astyle} to=\"/examples\" ><Button>Organise</Button></Link>\n                <Link style={astyle} to=\"/skills\" ><Button>Skills </Button></Link>\n                <Link style={astyle} to=\"/search\" ><Button>Search Community </Button></Link>\n        </div>\n}\n\nfunction App() {\n    \n    const [waiting, setWaiting] = useState(false)\n    const [pageMessage, setPageMessage] = useState('')  \n    \n    //const [importFrom, setImportFrom] = useState(null)\n    // example summaries\n    const [intentLookups, setIntentLookups] = useState([])\n    const [entityLookups, setEntityLookups] = useState([])\n    const [tagLookups, setTagLookups] = useState([])\n    const [skillLookups, setSkillLookups] = useState([])\n    const [listsLookups, setListsLookups]= useState([])\n    const [selectedTally, setSelectedTally] = useState(0)\n    \n    // list summaries\n    const [listTally, setListTally] = useState(0)\n    const [selectedListTally, setSelectedListTally] = useState(0)\n    const [listTallyByList, setListTallyByList] = useState({})\n    const [selectedListTallyByList, setSelectedListTallyByList] = useState({})\n    \n    // search bar\n    //https://github.com/search?q=repo:syntithenai/opennludata&type=Wikis\n    const [skillFilterValue, setSkillFilterValue] = useState('')\n  \n\n    \n    function startWaiting() {\n        setWaiting(true)\n    }\n    \n    function stopWaiting() {\n        setTimeout(function() {\n            setWaiting(false)\n        },300)\n    }\n\n    function updateLists(lists) {\n        if (lists) {\n            var newSelectedLists = {}\n            var newLists = {}\n            var tally = 0;\n             var selectedTally = 0;\n            lists.map(function(listItem) {\n                if (listItem && listItem.tags && listItem.tags.length > 0) {\n                    if (listItem.isSelected) {\n                             selectedTally += 1\n                    }\n                    listItem.tags.map(function(tag) {\n                        if (tag && tag.trim().length > 0) {\n                            if (listItem.isSelected) {\n                                 newLists[tag] = (newLists[tag] > 0) ? newLists[tag] + 1 : 1\n                                 newSelectedLists[tag] = (newSelectedLists[tag] > 0) ? newSelectedLists[tag] + 1 : 1\n                            } else {\n                                newLists[tag] = (newLists[tag] >0) ? newLists[tag] + 1 : 1\n                            }\n                        }\n                        return null\n                    })\n                    tally += 1;\n                }\n                return null\n            })\n            setListTally(tally)\n            setSelectedListTally(selectedTally)\n            setSelectedListTallyByList(newSelectedLists)\n            setListTallyByList(newLists)\n            setListsLookups(Object.keys(newLists))\n            //console.log('updated lists', newLists)\n        }\n    }\n\n    function updateLookups(items) {\n        //console.log(['UPDATELOOKUPS',items])\n        if (items && items.length > 0) {\n            var tags = {}\n            var intents = {}\n            var entities = {}\n            var skills = {}\n            var selected = 0;\n            items.map(function(item) {\n                if (item.isSelected) selected = selected + 1;\n               intents[item.intent] = true\n               if (item.tags && item.tags.length > 0) {\n                   item.tags.map(function(tag) {\n                      tags[tag] = true  \n                      return null\n                   })\n               }\n               if (item.skills && item.skills.length > 0) {\n                   item.skills.map(function(skill) {\n                      skills[skill] = true  \n                      return null\n                   })\n               }\n               if (item.entities && item.entities.length > 0) {\n                   item.entities.map(function(entity) {\n                      if (entity.type) {\n                          entities[entity.type] = true  \n                      }\n                      return null\n                   })\n               }\n               return null\n            })\n            const distinct = function(value,index,self) {\n                return self.indexOf(value) === index;\n            }\n            setIntentLookups([].concat(Object.keys(intents),intentLookups).filter(distinct))\n            setEntityLookups([].concat(Object.keys(entities),entityLookups).filter(distinct))\n            setTagLookups([].concat(Object.keys(tags),tagLookups).filter(distinct))\n            setSkillLookups([].concat(Object.keys(skills),skillLookups).filter(distinct))\n            setSelectedTally(selected)\n        }\n    }\n    const lookups = {intentLookups,entityLookups,tagLookups,skillLookups, selectedTally, listsLookups, listTally, selectedListTally, listTallyByList, selectedListTallyByList}\n  return (\n    <div className=\"OpenNluDataApp\">\n           \n        <Router>\n                <Route exact path='*' render={\n                    (props) => {\n                        return <NavbarComponent waiting={waiting} history={props.history} message={pageMessage} setPageMessage={setPageMessage}    />\n                    }}\n                />\n                \n                <Route exact path='/menu' component={SiteMenu} />\n                <Route path='/sources' render={\n                    (props) => <LocalStorageUploadManager {...props}  startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateLookups={updateLookups} updateLists={updateLists} lookups={lookups}  />\n                }/>\n                <Route path='/import' render={\n                    (props) => <NluImportEditor {...props}        lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateLookups={updateLookups}  setPageMessage={setPageMessage}    />}\n                          \n                />\n                \n                <Route exact  path='/examples' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateLookups={updateLookups}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route exact path='/examples/skill/:skillId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateLookups={updateLookups} updateLists={updateLists}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route path='/examples/intent/:intentId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateLookups={updateLookups} updateLists={updateLists}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route exact path='/examples/skill/:skillId/intent/:intentId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateLookups={updateLookups} updateLists={updateLists}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route exact path='/skills/:skillId' render={(props) => <NluSkillsEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateLookups={updateLookups} updateLists={updateLists}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route exact path='/skills/skill/:skillId' render={(props) => <NluSkillsEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateLookups={updateLookups} updateLists={updateLists}  setPageMessage={setPageMessage}    />} \n                />\n\n                 <Route exact path='/skills' render={(props) => <NluSkillsEditor {...props} skillFilterValue={skillFilterValue} setSkillFilterValue={setSkillFilterValue}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateLookups={updateLookups} updateLists={updateLists}  setPageMessage={setPageMessage}    />} \n                />\n                \n               \n                <Route path='/lists' render={\n                    (props) => <ListsManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateLookups={updateLookups}  setPageMessage={setPageMessage}  updateLists={updateLists}   />}\n                          \n                />\n                \n                <Route exact path='/help' component={HelpText}     />\n                <Route exact path='/helpimport' component={HelpTextImport}     />\n                <Route exact path='/helpexport' component={HelpTextExport}     />\n                <Route exact path='/helpabout' component={HelpTextAbout}     />\n                \n                 <Route exact path='/search' component={SearchPage}     />\n                <Route exact path='/' component={HelpText} />\n        </Router>\n    </div>\n  );\n}\n                \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/check.8ab01baf.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumb-down.73b0ce24.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire.ecd49b13.svg\";","module.exports = __webpack_public_path__ + \"static/media/waiting.d362cb3f.gif\";","module.exports = __webpack_public_path__ + \"static/media/thumb-up.f18de183.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-thick-left.f29ee705.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-thick-right.9ba7683e.svg\";"],"sourceRoot":""}
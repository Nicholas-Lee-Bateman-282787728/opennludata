{"version":3,"sources":["utils.js","useDB.js","parsers.js","components/TagAllDropDown.js","components/IntentAllDropDown.js","components/SkillAllDropDown.js","components/ImportListsDropDown.js","components/Components.js","components/JSONTextEditor.js","LocalStorageUploadManager.js","components/ListAllDropDown.js","components/SearchInput.js","components/ListsManagerSearchBar.js","useListItemRow.js","components/SuggestionComponent.js","ListsManagerRow.js","useDBSingleKey.js","useListItemEditor.js","ListsManager.js","useNluRow.js","NluExampleRow.js","components/EditorSearchBar.js","useNluEditor.js","NluExampleEditor.js","components/NavbarComponent.js","NluImportRow.js","NluImportEditor.js","export/createZip.js","export/exportJOVO.js","export/exportJSON.js","export/exportMycroft.js","export/exportRASA.js","export/index.js","NluSkillsEditor.js","SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["generateObjectId","Date","getTime","toString","replace","Math","random","toLowerCase","parentUrl","url","split","slice","join","splitSentences","text","final","splits","splitText","trim","length","push","uniquifyArray","a","Array","isArray","index","map","value","Object","keys","uniquifyArrayOfObjects","field","emptyIndex","concat","values","reducer","state","action","type","item","items","Error","useDB","database","databaseTable","useReducer","dispatch","localforageStorage","localforage","createInstance","name","storeName","getId","id","findKeyBy","k","loadAll","then","ipromises","key","Promise","iresolve","ireject","getItem","res","all","saveItem","isNewItem","setItem","console","log","undefined","deleteItem","getIdForIndex","removeItem","setItems","clear","findBy","filter","matchFunction","filtered","i","cleanListItem","extractSynonym","parts","sortListSplits","b","sortExampleSplits","example","TagAllDropDown","props","Dropdown","as","ButtonGroup","Toggle","size","Button","Menu","style","display","onSubmit","e","preventDefault","tagAll","target","InputGroup","className","onChange","setTagAllValue","tagAllValue","variant","onClick","lookups","tagLookups","sort","skillKey","Item","untagAll","marginLeft","IntentAllDropDown","intentAll","setIntentAllValue","intentAllValue","intentLookups","intentKey","SkillAllDropDown","skillSetAll","setSkillAllValue","skillAllValue","skillLookups","unskillAll","ImportListsDropDown","useState","importTo","importToValue","setImportToValue","float","importListTo","listsLookups","MatchesTallies","fontWeight","filteredItems","HelpText","to","NewFileButtons","match","FileSelector","FilesList","list","ListGroup","window","confirm","title","importExamples","listName","importLists","width","multiple","handleFileSelection","marginRight","WithSelectedDropDowns","selectedTally","JSONTextEditor","setTitle","data","setText","isJson","setIsJson","json","setJson","editorMode","setEditorMode","editorOptions","setEditorOptions","params","itemId","useEffect","jsonParsed","JSON","parse","parentLink","linkParts","editorModeOptions","j","minHeight","height","theme","ace","history","mode","allowedModes","stringify","IndexPage","LocalStorageUploadManager","localforageStorageImport","localforageStorageLists","ev","results","forEach","result","file","parsed","generateSplits","newSplits","rasa_nlu_data","common_examples","entity","cleanEntities","entities","el","start","end","intent","tags","invocation","intents","l","phrases","phrase","inputs","inputKey","input","markerStart","indexOf","entityi","parseImportText","newTextSplits","textInner","synonym","lists","listKey","uniqueKeys","listItem","q","parseLists","allLists","allListsIndex","listItemIndex","newListItem","setPageMessage","setTimeout","path","render","exact","iprops","ListAllDropDown","SearchInput","searchFilter","setSearchFilter","placeholder","ListsManagerSearchBar","topTagOptions","setTopTagOptions","topTagOptionss","setListFilterValue","unshift","selectedListTally","resetSelection","src","alt","selectAll","listFilterValue","createEmptyItem","useListItemRow","splitNumber","selectionState","setSelectionState","setTags","reactTags","React","createRef","tag","onTagDelete","newTags","splice","newItem","newTag","onTagAddition","updateExampleContent","content","updateExampleSynonym","selectItem","isSelected","deselectItem","SuggestionComponent","query","ListsManagerRow","position","textAlign","borderTop","borderRadius","marginTop","placeholderText","minQueryLength","maxSuggestionsLength","autoresize","allowNew","ref","suggestionComponent","suggestions","onDelete","onAddition","singleKey","useListItemEditor","databaseKey","updateLists","useDBSingleKey","setFilteredItems","filteredItemsKeys","setFilteredItemsKeys","listRef","matchText","matchPicklist","itemKeys","val","tagValue","newItems","finalTags","saveItemWrap","current","resetAfterIndex","getItemSize","baseSize","innerWidth","deleteAll","RenderRow","saveNlu","ListsManager","itemData","itemKey","itemCount","itemSize","renderEditor","useNluRow","newEntity","setNewEntity","intentTitle","setIntentTitle","skills","setSkills","reactSkills","createSelection","createTextRange","selRange","collapse","moveStart","moveEnd","select","setSelectionRange","selectionStart","selectionEnd","focus","entityTypeChanged","entityNumber","newEntities","textSelection","startTextSelection","endTextSelection","skill","onSkillDelete","newSkills","newSkill","onSkillAddition","diffPos","findFirstDiffPos","insertionLength","entityIndex","deletionLength","entityClicked","entityKey","entityType","document","getElementById","intentChanged","entityDelete","setSkill","NluExampleRow","textInput","setTextInput","intentOptions","entitiesDropdowns","entityOptions","entityLookups","textSelectionFrom","onFocus","onSelect","getSelection","EditorSearchBar","topskillOptions","setSkillFilterValue","setIntentFilterValue","intentFilterValue","skillFilterValue","useNluEditor","updateLookups","useParams","useHistory","skillId","intentId","intentFilter","skillFilter","searchFilterBool","newIntent","location","pathname","intentValue","skillValue","heightPerLine","tagsPerLine","entitiesPerLine","skillsPerLine","tallyExtras","round","saveAll","lsItems","exampleItems","saveLSItems","saveLSItem","NluExampleEditor","NavbarComponent","astyle","paddingLeft","currentPage","pages","show","link","links","page","href","Navbar","bg","message","top","left","border","background","padding","minWidth","Text","right","zIndex","waiting","NluImportRow","NluImportEditor","paddingRight","createZip","zipStructure","zip","JSZip","recurseZipStructure","files","options","base64","folders","folder","resolve","reject","generateAsync","exportJOVO","cleanIntents","cleanSkill","friendlyTitle","exportJSON","usedLists","skillLists","exportMycroft","exportRASA","exportFormats","exportFunction","NluSkillsEditor","currentIntent","setCurrentIntent","setInvocation","entitiesForSkill","setEntitiesForSkill","listsForEntity","setListsForEntity","currentSkill","setCurrentSkill","listsManager","collatedItems","setCollatedItems","collatedCounts","setCollatedCounts","skillsStorage","err","entityName","newCollatedItems","newCollatedCounts","exportFormat","now","zipBody","saveAs","skillsList","collatedIntent","useCurrentIntent","completionVariant","Badge","collatedEntity","listTags","listItemKey","listIndex","removeListFromSkillEntity","addListToSkillEntity","SearchPage","SiteMenu","App","setWaiting","pageMessage","setIntentLookups","setEntityLookups","setTagLookups","setSkillLookups","setListsLookups","setSelectedTally","listTally","setListTally","setSelectedListTally","listTallyByList","setListTallyByList","selectedListTallyByList","setSelectedListTallyByList","startWaiting","stopWaiting","newSelectedLists","newLists","tally","selected","distinct","self","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0e39b796.chunk.js","sourcesContent":["//const yaml = require('js-yaml');\n// FUNCTIONS \n\nfunction generateObjectId() {\n    var timestamp = (new Date().getTime() / 1000 | 0).toString(16);\n    return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function() {\n        return (Math.random() * 16 | 0).toString(16);\n    }).toLowerCase();\n}\n   \nfunction parentUrl(url) {\n    return url.split(\"/\").slice(0,-1).join(\"/\") \n}\n\nfunction concatText(text,words) {\n   let parts = text.split(' ')\n   let shorter = parts.slice(0,20).join(' ')\n   return (shorter.length < text.length) ? shorter + '...' : shorter;\n}\n\nfunction splitSentences(text) {\n      var final = []\n      if (text) {\n          // split by newline and full stop\n         var splits = text.split('\\n').join('::::').split('.').join('::::').split('::::') //.map(function(value) { return value.trim()})\n        // trim all splits\n        for (var splitText in splits) {\n            if(splitText.trim().length > 0) final.push(splits[splitText])\n        }\n     }\n     return final;\n}\n\n\n    \n    function findFirstDiffPos(a, b) {\n      if (a === b) return -1;\n      for (var i=0; a[i] === b[i]; i++) {}\n      return i;\n    }\n    \n    function uniquifyArray(a) {\n        //console.log(['UNIQARRAY',a])\n        if (Array.isArray(a)) {\n            var index = {}\n            a.map(function(value) {\n                index[value] = true \n                return null\n            })\n            return Object.keys(index)\n        } else {\n            return []\n        }\n    }\n\n    function uniquifyArrayOfObjects(a,field) {\n         if (Array.isArray(a)) {\n             var index = {}\n            var emptyIndex = null\n            a.map(function(value) {\n                if (value) {\n                    if (value[field]) {\n                        index[value[field]] = value \n                    } else {\n                        emptyIndex = value\n                    }\n                }\n                return null\n            })\n            if (emptyIndex) return [emptyIndex].concat(Object.values(index))\n            else return Object.values(index)\n        } else {\n            return []\n        }\n    }\n    \n    \n    \nexport {generateObjectId, parentUrl, concatText , findFirstDiffPos, splitSentences,uniquifyArray, uniquifyArrayOfObjects}\n","import {useReducer} from 'react';\nimport {generateObjectId} from './utils'\nimport localforage from 'localforage'\n\n// handle list updates with minimum disruption to top level items\nfunction reducer(state, action) {\n switch (action.type) {\n    case \"append\":\n      if (action.item) {\n        return [...state, action.item];\n      } else return state\n    case \"insert\":\n      if (action.item && typeof action.index === \"number\" && action.index >= 0) {\n          if (state.length > 0) {\n              return [\n                ...state.slice(0, action.index),\n                action.item,\n                ...state.slice(action.index)\n              ];\n          } else return state\n        } else return state\n    case \"remove\":\n      if (typeof action.index === \"number\" && action.index >= 0) {\n          return [\n            ...state.slice(0, action.index),\n            ...state.slice(action.index + 1)\n          ];\n       } else return state \n    case \"update\":\n       if (action.item && typeof action.index === \"number\" && action.index >= 0) {\n            return [\n            ...state.slice(0, action.index),\n            action.item,\n            ...state.slice(action.index + 1)\n          ];\n      } else return state\n    case \"replaceall\":\n        if (typeof action.items === \"object\") {\n            return action.items\n        } else return state\n    default:\n      throw new Error();\n  }\n}\n   \n\n// state manager with local storage backing\nexport default function useDB(database, databaseTable) {\n     const [items, dispatch] = useReducer(reducer,[]);\n     var localforageStorage = localforage.createInstance({\n       name: database ? database : \"localstoragemanager\",\n       storeName   : databaseTable ? databaseTable : 'data',\n     });\n\n    function getId(item) {\n        if (item && item.id) {\n            return item.id\n        } else {\n            throw new Error(\"Missing ID value in getId\")\n        }\n    }\n    function getIdForIndex(index) {\n        if (items && items[index] && items[index].id) {\n            return items[index].id\n        } else {\n            throw new Error(\"Missing ID value in getIdForIndex\")\n        }\n    }\n    \n\n    function loadAll() {\n        localforageStorage.keys().then(function(keys) {\n            var ipromises = []\n            keys.map(function(key) {\n                ipromises.push(new Promise(function(iresolve,ireject) {\n                   localforageStorage.getItem(key).then(function(res) {\n                       iresolve(res)\n                   })\n                }))\n                return null\n            })\n            Promise.all(ipromises).then(function(res) {\n                dispatch({ type: \"replaceall\", items: res });\n            })\n        })\n        \n    }\n\n    \n    // save or create\n    function saveItem(item,index) {\n        if (item) {\n            //console.log(['SAVEDB',item,index])\n            // update sources and save text in seperate localstorage\n            // ensure id\n            var isNewItem = false;\n            if (!item.id) {\n                isNewItem = true;\n                item.id = generateObjectId()\n            }\n            localforageStorage.setItem(item.id,item)\n            if (items.length === 0) {\n                console.log(['SAVEDB len0',item,index])\n                dispatch({ type: \"append\",item: item });\n            } else {\n                if ((index === null || index === undefined)  || isNewItem) {\n                    console.log(['SAVEDB append',item,index])\n                    dispatch({ type: \"append\",item: item });\n                } else {\n                    console.log(['SAVEDB update',item,index])\n                    dispatch({ type: \"update\",item: item, index: index });\n                }\n            }\n            \n        }\n    }\n    \n\n    function findBy(field,value) {\n        var key = findKeyBy(field,value)\n        if (key) return items[key];\n        return null\n    }\n    \n    function findKeyBy(field,value) {\n        for (var k in items) {\n            if (items[k] && items[k][field] === value) return k\n        }\n        return null\n    }\n\n\n    function setItemsWrap(items) {\n        localforageStorage.clear().then(function() {\n            dispatch({ type: \"replaceall\", items: items})\n            if (items) {\n                items.map(function(item) { localforageStorage.setItem(getId(item),item); return null})\n            }\n        })\n        \n    }\n    \n    function deleteItem(index) {\n        var id = getIdForIndex(index)\n        if (id) {\n            localforageStorage.removeItem(id).then(function() {\n                dispatch({ type: \"remove\", index: index})\n            })\n        }\n        \n    }\n    \n    function filter(matchFunction) {\n        var filtered = []\n        if (matchFunction) {\n            items.map(function(item,i) {\n              if (matchFunction(item)) {\n                  filtered.push(item)\n              }  \n              return null\n            })\n        }\n        return filtered\n        \n    }\n    \n    return {getId:getId, loadAll:loadAll, saveItem:saveItem, deleteItem:deleteItem , items:items, setItems:setItemsWrap, findKeyBy:findKeyBy, findBy:findBy, filter: filter}\n    \n}\n","import {splitSentences, generateObjectId} from './utils'\n\nfunction cleanListItem(text) {\n    return text ? text.replace(/[^0-9a-z ,]/gi, '') : ''\n}\n\nfunction extractSynonym(text) {\n    if (text) { \n        var parts = text.split(':')\n        if (parts.length > 1) {\n           return [parts[0],parts.slice(1).join(\":\")]   \n        } else {\n            return ['',text]\n        }\n    } else {\n        return ['','']\n    }\n}\n\nfunction sortListSplits(a,b) {\n    if (a.value < b.value) return -1;  else return 1;\n}\n\nfunction sortExampleSplits(a,b) {\n    if (a.example < b.example) return -1 ;else return 1;\n}\n\nfunction parseLists(text,listName) {\n        var key = listName ? listName : '___'\n        // plain text\n        function generateSplits() {\n            var newTextSplits=[]\n            const splits = splitSentences(text)\n            splits.map(function(textInner,i) {\n                var [synonym, value] = extractSynonym(textInner)\n                value = value.trim().replace(/[^0-9a-z ]/gi, '')\n                if (value && value.length > 0) {\n                    newTextSplits.push({'id':generateObjectId(), 'value':value,'synonym':synonym})\n                }\n                return null\n            })\n            return newTextSplits.sort(sortListSplits);\n        }\n        try {\n            var json = JSON.parse(text)\n            //  JSON ARRAY FORMAT\n            if (Array.isArray(json)) {\n                // value and optional synonyn\n                var lists = {}\n                //console.log(['LISTS',lists])\n                if (json.length > 0 && json[0].value && json[0].value.trim().length > 0) {\n                    for (var i in json) {\n                        var entity = json[i]\n                        if (entity.value && entity.value.trim().length > 0) {\n                            var listKey = entity.list ? entity.list : key\n                            //console.log(['reset push',listKey,lists])\n                            if (!lists[listKey]  ) {\n                                lists[listKey] = []\n                            }\n                            lists[listKey].push({'id':generateObjectId(), 'value':cleanListItem(entity.value),'synonym':entity.synonym})\n                        }\n                    }\n                    // now sort and uniquify each list\n                    \n                    Object.keys(lists).map(function(listKey) {\n                        var list = lists[listKey]\n                        var uniqueKeys = {}\n                        list.map(function(listItem) {\n                           uniqueKeys[listItem.value+':'+listItem.synonym] = listItem\n                           return null\n                        })\n                        lists[listKey] = Object.values(uniqueKeys).sort(sortListSplits)\n                        return null\n                    })\n                    \n                // array of text\n                } else {\n                    var newSplits=[]\n                    for (var q in json) {\n                        var textInner = json[q].trim().replace(/[^0-9a-z]/gi, '')\n                        if (textInner && textInner.length > 0) {\n                            const [synonym, value] = extractSynonym(textInner)\n                            newSplits.push({'id':generateObjectId(), 'value':value,'synonym':synonym, 'list':listName})\n                        }\n                    }\n                    lists[key] = newSplits.sort(sortListSplits)\n                }\n                //console.log(['LISTS',lists])\n                return lists\n                //return items.sort(sortListSplits) \n            // PLAIN TEXT LIST\n            }  else {\n                lists = {}\n                lists[key] = generateSplits() \n                return lists\n            }\n        } catch (e) {\n            console.log(e)\n            // TODO try for yaml\n            //try {\n              //const doc = yaml.safeLoad(text);\n              //console.log(doc);\n            //} catch (e) {\n               // finally text\n                lists = {}\n                lists[key] = generateSplits() \n                return lists\n            //}\n           \n        }  \n}\n\n\nfunction parseImportText(text) {\n        var items = []\n        function generateSplits() {\n            const splits = splitSentences(text)\n            var newSplits=[]\n            splits.map(function(text,i) {\n                if (text && text.trim().length > 0) {\n                 newSplits.push({'id':generateObjectId(), 'example':text,'intent':'',\"entities\":[], \"tags\":[]})\n                }\n                return null\n            })\n            return newSplits.sort(sortExampleSplits)\n        }\n        try {\n            var json = JSON.parse(text)\n            // RASA JSON FORMAT\n            if (json && json.rasa_nlu_data && json.rasa_nlu_data.common_examples) {\n                for (var i in json.rasa_nlu_data.common_examples) {\n                    var entity = json.rasa_nlu_data.common_examples[i]\n                    var cleanEntities = entity.entities && entity.entities.map(function(el,j) { return {type:el.entity, value:el.value, start:el.start, end:el.end} })\n                    if (entity.text && entity.text.trim().length > 0) {\n                        items.push({'id':generateObjectId(), 'example':entity.text,'intent':entity.intent,\"entities\":cleanEntities, tags:[]})\n                    }\n                }\n                return items.sort(sortExampleSplits)\n            // JOVO JSON { \"invocation\": \"my test app\", \"intents\": [{\"name\": \"HelloWorldIntent\",\"phrases\": [\"hello\",\"say hello\"]}] } ,\n            } else if (json && json.invocation && json.intents) {\n                for (var l in json.intents) {\n                    if (json.intents[l] && json.intents[l].phrases) {\n                        for (var k in json.intents[l].phrases) {\n                            if (json.intents[l].phrases[k] && json.intents[l].phrases[k].trim().length > 0)  {\n                                 var phrase = json.intents[l].phrases[k]\n                                 var entities = []\n                                if (json.intents[l].inputs) {\n                                    for (var inputKey in json.intents[l].inputs) {\n                                       var input = json.intents[l].inputs[inputKey]\n                                       //console.log([phrase,input.name])\n                                       const markerStart = phrase.indexOf(\"{\"+input.name+\"}\")\n                                       if (markerStart !== -1)  {\n                                           phrase = phrase.replace(\"{\"+input.name+\"}\",input.name)\n                                       }\n                                       var entityi = {type:input.name, value:input.name , start: markerStart , end: markerStart + input.name.length  }\n                                       entities.push(entityi)\n                                       return null\n                                    }\n                                }\n                                items.push({'id':generateObjectId(), 'example':phrase.trim(),'intent':json.intents[l].name,\"entities\": entities, tags: []})\n                            }\n                        }\n                    }\n                    //console.log(['JOVO IMPORT',items])\n                    //var entity = json.rasa_nlu_data.common_examples[i]\n                    //var cleanEntities = entity.entities && entity.entities.map(function(el,j) { return {type:el.entity, value:el.value, start:el.start, end:el.end} })\n                    //if (entity.text && entity.text.trim().length > 0) items.push({'id':generateObjectId(), 'example':entity.text,'intent':entity.intent,\"entities\":cleanEntities, tags:[]})\n                }\n                return items.sort(sortExampleSplits) //[items, intents, entities, tags]\n            // VANILLA JSON [{example:'',intent:'',entities:[{value:'',start:33,end:45}], tags:['dd']}]\n            } else if (json && json.length > 0 && json[0].example && json[0].example.trim().length > 0) {\n                for (var j in json) {\n                    var item = json[j]\n                    if (item) {\n                        if (item.example && item.example.trim().length > 0) items.push({'id':generateObjectId(), 'example':item.example,'intent':item.intent,\"entities\":item.entities && item.entities.length > 0 && item.entities[0].value ? item.entities : [], tags:item.tags ? item.tags : []})\n                    }\n                }\n                return items.sort(sortExampleSplits) \n            // PLAIN TEXT LIST\n            }  else {\n                return generateSplits()\n            }\n        } catch (e) {\n            console.log(e)\n            // TODO try for yaml\n            //try {\n              //const doc = yaml.safeLoad(text);\n              //console.log(doc);\n            //} catch (e) {\n               // finally text\n            return generateSplits()\n            //}\n           \n        }   \n    }\n    \nexport {parseImportText, parseLists}    \n    \n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst TagAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Tag'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                value={props.tagAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.tagAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setTagAllValue(skillKey); props.tagAll(skillKey)}} >Add to {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.untagAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n      \n              //return <Dropdown  as={ButtonGroup}>\n              //<Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              //<Button   size=\"sm\" >{'Tag'} </Button>\n              //<Dropdown.Menu>\n               //<form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                    //<div className=\"form-group\">\n                      //<input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                    //value={props.tagAllValue} />\n                    //</div>\n                  //</form>\n                  //{props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n                      //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {props.setTagAllValue(tagKey); props.tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n                   //})}\n              //</Dropdown.Menu>\n          //</Dropdown>\n}\nexport default TagAllDropDown\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\n\nconst IntentAllDropDown = function(props) {\n    return  <Dropdown  as={ButtonGroup}>\n              <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button   size=\"sm\" >{'Intent'} </Button>\n              <Dropdown.Menu>\n               <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.intentAll(e.target.value)}} >\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setIntentAllValue(e.target.value)}}\n                    value={props.intentAllValue} />\n                    </div>\n                  </form>\n                  {props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n                      return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {props.setIntentAllValue(intentKey); props.intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n                   })}\n              </Dropdown.Menu>\n          </Dropdown>\n}\nexport default IntentAllDropDown\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst SkillAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Skill'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.skillSetAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setSkillAllValue(e.target.value)}}\n                value={props.skillAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.skillSetAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setSkillAllValue(skillKey); props.skillSetAll(skillKey)}} >Add to {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.unskillAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n      \n      \n    \n    //return <Dropdown  as={ButtonGroup}>\n          //<Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          //<Button   size=\"sm\" >{'Skill'} </Button>\n          //<Dropdown.Menu>\n           //<form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.skillSetAll(e.target.value)}} >\n                //<div className=\"form-group\">\n                  //<input type=\"text\" className=\"form-control\" onChange={function(e) {props.setSkillAllValue(e.target.value)}}\n                //value={props.skillAllValue} />\n                //</div>\n              //</form>\n              //{props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n              //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {props.setSkillAllValue(skillKey); props.skillSetAll(skillKey)}}  >{skillKey}</Dropdown.Item>\n    //})}\n          //</Dropdown.Menu>\n      //</Dropdown>\n}\nexport default SkillAllDropDown\n","import React, {useState} from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst ImportListsDropDown = function(props) {\n    //console.log(props)\n    const [importToValue,setImportToValue] = useState(props.importTo ? props.importTo : '')\n    return <Dropdown style={{float:'right', marginLeft:'0.5em'}} variant=\"success\"  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"md\" variant=\"success\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button variant=\"success\"  size=\"md\" >{'Import Entities as'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.importListTo(e.target.value)}} >\n                <div className=\"form-group\">\n                <InputGroup> \n                    <input type=\"text\" className=\"form-control\" onChange={function(e) {setImportToValue(e.target.value)}}\n                value={importToValue} />\n                    <Button size=\"sm\"  onClick={function(e) {props.importListTo(importToValue)}} >Import</Button>\n                </InputGroup>\n                </div>\n              </form>\n              {props && props.lookups && props.lookups.listsLookups && props.lookups.listsLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setImportToValue(skillKey); props.importListTo(skillKey)}}  >{skillKey}</Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n}\nexport default ImportListsDropDown\n","/* global window */\nimport {Link} from 'react-router-dom'\nimport {Button, ListGroup } from 'react-bootstrap'\nimport React, {Fragment} from 'react';\nimport FileReaderInput from 'react-file-reader-input';\n\nimport TagAllDropDown from './TagAllDropDown'\nimport IntentAllDropDown from './IntentAllDropDown'\nimport SkillAllDropDown from './SkillAllDropDown'\n\nimport ImportListsDropDown from './ImportListsDropDown'\n\nfunction MatchesTallies(props) {\n    return <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{props.filteredItems.length}/{props.items.length} matches </span>\n}\n\nfunction HelpText(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n        <h1>NLU tool</h1>\n        <div>This tool is intended to help collect open licensed NLU data. </div>\n        <div>Specifically, it captures sentences with related intent and entity maps.</div>\n        <div>Examples can be tagged for organisation. eg music player, news reader</div>\n        <div>Examples can be collected into your own skills for export into various NLU training data formats.</div>\n        <hr/>\n        <p>Create <Link to=\"/sources\" ><Button>Sources</Button></Link> from pasted text or uploaded files.</p>\n        <p>Use the <Link to=\"/import\" ><Button>Import</Button></Link> page to break text into sentences and create NLU example records.</p>\n        <p><Link to=\"/examples\" ><Button>Organise</Button></Link> your examples using tags and cleanup untagged examples.</p>\n        <p><Link to=\"/search\" ><Button>Search </Button></Link> the community database of NLU example records.</p>\n        <p><Link to=\"/skills\" ><Button>Collect </Button></Link> examples into a skill for export in various training formats.</p>\n        </div>\n}\n\nfunction NewFileButtons(props) {\n    return <span>\n        <Link to={props.match.url + '/text'} style={{float:'right'}} ><Button>Paste Text</Button></Link>\n        <FileSelector {...props}/>   \n    </span>\n}\n\nfunction FilesList(props) {\n    //console.log(['man fl ',props])\n     const { items} = props  \n     if (items) {\n       const list = Object.values(items).map(function(item,i) {\n            return <ListGroup.Item  key={i}  >\n                   <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"danger\" onClick={function(e) {if(window.confirm('Really delete source '+items[i].title)) props.deleteItem(i)}} >Delete</Button>\n                   <Link to={props.match.url+\"/text/\"+item.id} ><Button style={{float:'right',marginLeft:'0.5em'}}  >Edit</Button></Link>\n                   <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"success\" onClick={function(e) { props.importExamples(items[i]) }}    >Import Intents</Button>\n                   <ImportListsDropDown lookups={props.lookups} importListTo={function(listName) {props.importLists(items[i],listName)}} importTo={items[i].title} />\n                   <span style={{width:'90%'}}  >{item.title}</span>\n               </ListGroup.Item>\n        })\n        return <ListGroup>{list}</ListGroup>\n    } else {\n        return null\n    }\n}\n\nfunction ListsList(props) {\n     const { items} = props  \n     if (items) {\n       const list = Object.values(items).map(function(item,i) {\n            return <ListGroup.Item  key={i}  >\n                   <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"danger\" onClick={function(e) {if(window.confirm('Really delete list '+items[i].title)) props.deleteItem(i)}} >Delete</Button>\n                   <Link to={props.match.url+\"/text/\"+item.id} ><Button style={{float:'right',marginLeft:'0.5em'}}  >Edit</Button></Link>\n                   <span style={{width:'90%'}}  >{item.title}</span>\n               </ListGroup.Item>\n        })\n        return <ListGroup>{list}</ListGroup>\n    } else {\n        return null\n    }\n}\n\nfunction FileSelector(props) {\n    return <form onSubmit={function(e) {e.preventDefault()}} style={{float:'right'}}>\n            <FileReaderInput multiple as=\"binary\" id=\"my-file-input\"\n                             onChange={props.handleFileSelection}>\n              <Button style={{ marginRight:'0.5em'}} >Select files</Button>\n            </FileReaderInput>\n          </form>\n}\n\nfunction WithSelectedDropDowns(props) {\n    return <Fragment>\n        <span>With {props.lookups.selectedTally} selected&nbsp;</span>\n               \n        <SkillAllDropDown skillSetAll={props.skillSetAll} skillAllValue={props.skillAllValue}  setSkillAllValue={props.setSkillAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n        <IntentAllDropDown intentAll={props.intentAll} intentAllValue={props.intentAllValue} setIntentAllValue={props.setIntentAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n        <TagAllDropDown tagAll={props.tagAll} tagAllValue={props.tagAllValue} setTagAllValue={props.setTagAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n    </Fragment>\n\n}\n\nexport { MatchesTallies,  HelpText, NewFileButtons, FilesList, ListsList, FileSelector, WithSelectedDropDowns}\n","import {Link} from 'react-router-dom'\nimport {Button,  Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React, {useState, useEffect} from 'react';\n//import FileReaderInput from 'react-file-reader-input';\nimport {generateObjectId, parentUrl} from '../utils'\nimport { JsonEditor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\n//import useDB from './useDB'\n//import useDBSingleKey from './useDBSingleKey'\n//import {parseImportText} from './utils'\n//import localforage from 'localforage'\n//import {NewFileButtons, FileSelector, FilesList} from './Components'\n\nexport default function JSONTextEditor(props) {\n    const [title,setTitle] = useState(props.item && props.item.title ? props.item.title : '')\n    const [text, setText ] = useState(props.item && props.item.data ? props.item.data : '') \n    const [isJson, setIsJson ] = useState(false) \n    const [json, setJson ] = useState([]) \n    const [editorMode, setEditorMode] = useState('json')\n    const [editorOptions, setEditorOptions] = useState(['json','text'])\n    \n    const id = props.match.params.itemId ? props.match.params.itemId  : generateObjectId()\n    const { findKeyBy} = props  \n    const index = findKeyBy('id',id)\n   \n    \n    useEffect(() => {\n        try {\n            if ((text[0] === \"[\" && text[text.length - 1] === \"]\") || (text[0] === \"{\" && text[text.length - 1] === \"}\")) {\n                var jsonParsed = JSON.parse(text)\n                setJson(jsonParsed)\n                setIsJson(true)\n                setEditorOptions(['json','text'])\n                setEditorMode('json')\n            } else {\n                setIsJson(false)\n                setEditorOptions(['text'])\n                setEditorMode('text')\n            }\n        } catch (e) {\n            setIsJson(false)\n            setEditorOptions(['text'])\n            setEditorMode('text')\n        }\n    \n    },[text])\n     \n    var parentLink = parentUrl(props.match.url)\n    var linkParts = props.match.url.split(\"/\")\n    // link up two where id is present\n    if (linkParts[linkParts.length -1] !== \"text\") {\n       parentLink = parentUrl(parentUrl(props.match.url)) \n    }\n    var editorModeOptions = editorOptions.map(function(value,j) {\n      return <Dropdown.Item key={j} value={value} onClick={function(e) {setEditorMode(value); }}  >{value}</Dropdown.Item>\n   })\n    \n    return <div style={{minHeight:'60em'}}>\n          <Dropdown variant='info'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button variant='info'   size=\"sm\"  >\n          <b>{editorMode}</b>\n          </Button>\n          <Dropdown.Menu>\n              {editorModeOptions}\n          </Dropdown.Menu>\n        </Dropdown>\n\n            <span style={{float:'right'}} >\n                \n                {(text && title) && <Link to={parentLink} ><Button onClick={function(e) {props.saveItem({id:id,title:title,data:text},index)}} variant='success' >Save</Button></Link>}\n                {!(text && title) && <Button variant='secondary' >Save</Button>}\n                \n                <Link  to={parentLink} ><Button variant=\"danger\" >Cancel</Button></Link>\n            </span>\n            <label>&nbsp;Title <input size={60}  type='text' onChange={function(e) { setTitle(e.target.value)}}  value={title} /></label>\n            {(!isJson || editorMode === \"text\") && <textarea style={{marginLeft: '0.2em', height:'100%', minHeight:'60em', width:'98%'}}  onChange={function(e) { setText(e.target.value)}}  value={text} ></textarea>}\n            {(isJson && editorMode === \"json\") && <div style={{marginLeft: '0.2em', height:'100%', minHeight:'60em', width:'98%'}} >\n                <JsonEditor\n                value={json}\n                theme={\"ace/theme/github\"}\n                ace={ace}\n                history={true}\n                mode={'code'}\n                allowedModes={['tree','code']}\n                onChange={function(value) { setText(JSON.stringify(value))}}\n            /></div>}\n           \n    </div>\n}\n","import {Route} from 'react-router-dom'\nimport React, {useEffect} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport useDB from './useDB'\nimport {parseImportText, parseLists} from './parsers'\nimport localforage from 'localforage'\nimport {NewFileButtons, FilesList} from './components/Components'\nimport JSONTextEditor from './components/JSONTextEditor'\nimport {generateObjectId, uniquifyArray } from './utils'\n\n// COMPONENTS\nfunction IndexPage(props) {\n    //console.log(['man index ',props])\n    return <div>\n                 <NewFileButtons {...props} />\n                 <h1>Sources</h1>\n                 <FilesList {...props} />\n            </div>\n}\n\nexport default function LocalStorageUploadManager(props) {\n    //console.log('man')\n    //console.log(props)\n     var localforageStorageImport = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'import',\n     });\n     var localforageStorageLists = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'lists',\n     });\n\n\n     const {loadAll, saveItem, deleteItem ,items, findKeyBy, findBy} = useDB('nlutool','sources');\n    \n    // just on mount \n    useEffect(() => {\n        loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    \n    \n    function handleFileSelection(ev, results) {\n        ev.preventDefault()\n        if (results) {\n            results.forEach(result => {\n              const [e, file] = result;\n               var item = {id:null, data:e.target.result, title:file.name}\n                saveItem(item)\n            });\n            \n        }\n    }    \n  \n    function importExamples(item) {\n         //console.log(['import examples',item])\n        if (item && item.id && item.data) {\n            var parsed = parseImportText(item.data)\n            localforageStorageImport.getItem('alldata').then(function(res) {\n                //console.log('IMPORT MERGE',res,parsed,[].concat(parsed,res))\n                localforageStorageImport.setItem('alldata',[].concat(parsed,res)) \n                props.history.push('/import') \n            })\n          } else {\n            throw new Error(\"Missing import data\")\n        }\n    }\n    \n    function importLists(item,title) {\n        //console.log(['import lists',item,title])\n        if (item && item.id && item.data) {\n            var parsed = parseLists(item.data)\n            //console.log(['import lists',parsed])\n            if (parsed) {\n                localforageStorageLists.getItem('alldata').then(function(allLists) {\n                    //console.log(['got list ',allLists])\n                    var allListsIndex = {}\n                    if (!allLists) {\n                        allLists = []\n                    }\n                    // index by value\n                    allLists.map(function(listItem) {\n                        if (listItem && listItem.value && listItem.value.trim().length > 0)  {\n                            allListsIndex[listItem.value] = listItem\n                        }\n                        return null\n                    })\n                    // update incoming list values\n                    Object.keys(parsed).map(function(listName,i) {\n                        var list = parsed[listName]  \n                        if (list) {\n                            list.map(function(listItem,listItemIndex) {\n                                var newListItem = listItem;\n                                // already there, just update tags\n                                if (allListsIndex[listItem.value]) {\n                                    if (listName !== '___') {\n                                        if (listItem.tags) newListItem.tags.push(listName)\n                                        else newListItem.tags = [listName]\n                                    } else {\n                                        newListItem.tags = []\n                                    }\n                                    if (title && title.trim().length > 0) newListItem.tags.push(title.trim())\n                                    // uniquify and sort tags\n                                    newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                                    //var tagsClean = {}\n                                    //newListItem.tags.map(function(tag) {\n                                        //tagsClean[tag] = true \n                                    //})\n                                    //newListItem.tags = Object.keys(tagsClean).sort()\n                                    \n                                    allListsIndex[newListItem.value] = newListItem\n                                // new list item    \n                                } else {\n                                    newListItem = {id: generateObjectId() , value: newListItem.value, synonym: newListItem.synonym ? newListItem.synonym : '', tags:[]}\n                                    \n                                    if (listName !== '___') {\n                                        if (listItem.tags) newListItem.tags.push(listName)\n                                        else newListItem.tags = [listName]\n                                    }\n                                    if (title && title.trim().length > 0) newListItem.tags.push(title.trim())\n                                    // uniquify and sort tags\n                                    newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                                    \n                                    allListsIndex[newListItem.value] = newListItem\n                                }\n                                return null\n                            })\n                        }\n                        return null\n                    })\n                    //console.log('IMPORT MERGE',res,parsed,[].concat(parsed,res))\n                    localforageStorageLists.setItem('alldata',Object.values(allListsIndex)) \n                    props.history.push('/lists') \n                    //props.setPageMessage(<div><b>sdfsdf</b><br/><b>sdfsdf</b><br/><b>sdfsdf</b><br/><b>sdfsdf</b><br/></div>)\n                    props.setPageMessage('Imported '+Object.keys(allListsIndex).length +' entities into the list '+ title)\n                    setTimeout(function() {\n                        props.setPageMessage('')\n                    },2000)\n                })\n            } else {\n                throw new Error(\"Failed import\")\n            }\n        } else {\n            throw new Error(\"Missing import data\")\n        }\n    }\n    \n    //console.log(['RENDER LOMAN',props])\n    return (\n        <div className=\"LocalStorageUploadManager\" >\n            <Route \n                path={[`${props.match.path}/text/:itemId?`, `${props.match.path}/text`]}  \n                render={(props) => <JSONTextEditor {...props} \n                    item={findBy('id',props.match.params.itemId)} \n                    saveItem={saveItem} deleteItem={deleteItem} findKeyBy={findKeyBy} \n                    \n                />}     \n            />\n            <Route {...props} exact path={props.match.path} \n                render={function(iprops) { return  <IndexPage {...props} \n                    items={items}\n                    deleteItem={deleteItem} saveItem={saveItem} importExamples={importExamples} importLists={importLists}\n                    handleFileSelection={handleFileSelection}\n                />}} \n            />\n\n        </div>\n    );\n}\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst ListAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Set List'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                value={props.tagAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.tagAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.listsLookups && props.lookups.listsLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setTagAllValue(skillKey); props.tagAll(skillKey)}} >Add to {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.untagAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n}\nexport default ListAllDropDown\n","import React from 'react'\nconst SearchInput = function({searchFilter,setSearchFilter}) {\n    return (<input style={{marginLeft:'0.5em'}}  type='text' value={searchFilter} \n            onChange={\n                function(e) {\n                    const filter = e.target.value\n                    setSearchFilter(filter); \n                }\n            } placeholder='Search' />)\n}\n    \nexport default SearchInput\n","import React, {useEffect, useState} from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\n\nconst ListsManagerSearchBar = function(props) {\n    const [topTagOptions,setTopTagOptions] = useState([])\n    useEffect(() => {\n        //console.log(['kust nabager ',props.lookups.listsLookups])\n        var topTagOptionss = props.lookups.listsLookups && props.lookups.listsLookups.sort().map(function(listKey,i) {\n              return <Dropdown.Item key={i} value={listKey} onClick={function(e) {props.setListFilterValue(listKey)}}  >{listKey}</Dropdown.Item>\n        })\n        topTagOptionss.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setListFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        topTagOptionss.push(<Dropdown.Item key={'Not In A List'} value={'Not In A List'} onClick={function(e) {props.setListFilterValue('Not In A List')}}  ><b>Not In A List</b></Dropdown.Item>)\n        setTopTagOptions(topTagOptionss)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.lookups])\n    \n    return <div>\n            {<span>\n            \n                {props.lookups.selectedListTally > 0 && <Button size=\"lg\"  onClick={function(e) { props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src='/check.svg' alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedListTally <= 0 && <Button size=\"lg\" onClick={function(e) { props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src='/check.svg' alt=\"Select\" /></Button> }\n                \n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'List'+(props.listFilterValue ? ' - '+ props.listFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topTagOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n              <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.listFilterValue)}} >New Entity</Button>\n        </div>\n}\nexport default ListsManagerSearchBar\n","import React, {useState, useEffect} from 'react'\nimport {uniquifyArray, uniquifyArrayOfObjects} from './utils'\nfunction useListItemRow(item, saveItem, splitNumber, style) {\n    const [selectionState, setSelectionState] = useState({})\n    //const [newEntity, setNewEntity] = useState('')\n    // for ReactTags format using objects\n    const [tags, setTags] = useState([])\n    //console.log(['USENLUROW',splitNumber])\n    const reactTags = React.createRef()\n     // tags\n    useEffect(() => {\n        if (item.tags) setTags(item.tags.map(function(tag,i) {return {id:i, name:tag}}))\n    },[item])\n\n     function onTagDelete (i) {\n        const newTags = tags.slice(0)\n        newTags.splice(i, 1)\n        setTags(newTags)\n        var newItem = item\n        newItem.tags = newTags.map(function(newTag) { return newTag.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onTagAddition (tag) {\n        const newTags = [].concat(tags, tag)\n        setTags(uniquifyArrayOfObjects(newTags,'name').sort(function(a,b) {if (a.name > b.name) return 1; else return -1} ))\n        var newItem = item\n        newItem.tags = uniquifyArray(newTags.map(function(newTag) { return newTag.name})).sort()\n        saveItem(newItem,splitNumber)\n      }\n    \n    function updateExampleContent(content) {\n        //console.log(['UPDTEXT', item, content])\n        if (item && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = item //JSON.parse(JSON.stringify(item));\n            \n            newItem.value = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n     function updateExampleSynonym(content) {\n        //console.log('UPDTEXT')\n        if (item && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = item //JSON.parse(JSON.stringify(item));\n            \n            newItem.synonym = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    \n    function selectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = true;\n        saveItem(newItem,splitNumber)\n    }\n   \n    \n    function deselectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = false;\n        saveItem(newItem,splitNumber)\n    } \n    \n    return {    \n        selectionState, setSelectionState, tags, setTags, reactTags, onTagDelete, onTagAddition, updateExampleContent, updateExampleSynonym, selectItem, deselectItem\n    }\n    \n}\nexport default useListItemRow\n","import React from 'react';\nexport default function SuggestionComponent({ item, query }) {\n  return (\n    <span  id={item.id} className={item.name === query ? 'match' : 'no-match'}>\n      {item.name}\n    </span>\n  )\n}\n","/* global window */\nimport {Button } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useListItemRow from './useListItemRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nexport default function ListsManagerRow(props) {\n        const  {item, splitNumber , style} = props;\n       const {    \n            tags, reactTags, \n            onTagDelete, onTagAddition, updateExampleContent,updateExampleSynonym,  selectItem, deselectItem\n        } = useListItemRow(props.item, props.saveItem, props.splitNumber, props.style)\n            \n       \n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                   \n                   <div style={{float:'right'}} > \n                        <Button  variant=\"danger\"  size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} >X</Button>\n               \n                    </div>\n                   \n                  <div style={{float:'left'}}>\n                     {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src='/check.svg' alt=\"Select\"  /></Button>}\n                      {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src='/check.svg' alt=\"Deselect\"  /></Button>}\n                </div>\n                \n                <input style={{float:'left'}} size='25'   \n                       type='text'  value={item.value}  onChange={function(e) { updateExampleContent(e.target.value)}} />\n                    \n                     \n                   \n                     <label style={{float:'left', marginLeft:'0.5em'}} >Synonym <input size='15' type='text' value={item.synonym} onChange={function(e) {updateExampleSynonym(e.target.value)}} /></label>\n                     \n                     <span  style={{float:'left'}}>\n                       <ReactTags\n                        placeholderText=\"Add to list\"\n                        minQueryLength={0}\n                        maxSuggestionsLength={50}\n                        autoresize={false}\n                        allowNew={true}\n                        ref={reactTags}\n                        tags={tags}\n                        suggestionComponent={SuggestionComponent}\n                        suggestions={props.lookups.listsLookups.map(function(listName,i) {return {id: i, name: listName}})}\n                        onDelete={onTagDelete}\n                        onAddition={onTagAddition} /> \n                        </span>\n                  </div> \n               \n                \n                 \n           \n      </div>\n}\n","// USE A SINGLE LOCALSTORAGE KEY FOR PERSISTENCE\n// this is much faster than using set/getItem for each item\n// workable for many thousands of rows\nimport { useEffect, useReducer} from 'react';\n\nimport {generateObjectId} from './utils'\nimport localforage from 'localforage'\n\n// handle list updates with minimum disruption to top level items\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"append\":\n      if (action.item) {\n        return [...state, action.item];\n      } else return state\n     case \"prepend\":\n      if (action.item) {\n        return [action.item,...state];\n      } else return state\n    case \"insert\":\n      if (action.item && typeof action.index === \"number\" && action.index >= 0) {\n          return [\n            ...state.slice(0, action.index),\n            action.item,\n            ...state.slice(action.index)\n          ];\n        } else throw new Error(\"Missing item or index on reduce insert\")\n    case \"remove\":\n      if (typeof action.index === \"number\" && action.index >= 0) {\n          return [\n            ...state.slice(0, action.index),\n            ...state.slice(action.index + 1)\n          ];\n       } else throw new Error(\"Missing index on reduce remove\")\n    case \"update\":\n       if (action.item && typeof action.index === \"number\" && action.index >= 0) {\n            return [\n            ...state.slice(0, action.index),\n            action.item,\n            ...state.slice(action.index + 1)\n          ];\n      } else throw new Error(\"Missing item or index on reduce update\")\n    case \"replaceall\":\n        return action.items\n    default:\n      throw new Error();\n  }\n}\n\n// state manager with local storage backing\nexport default function useDB(database, databaseTable,singleKey) {\n    if (!singleKey) singleKey = 'data'\n     const [items, dispatch] = useReducer(reducer,[]);\n     var localforageStorage = localforage.createInstance({\n       name: database ? database : \"localstoragemanager\",\n       storeName   : databaseTable ? databaseTable : 'single_key_data',\n     });\n\n    useEffect(function() {\n        localforageStorage.setItem(singleKey,items)  \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items])\n\n    function getId(item) {\n        if (item && item.id) {\n            return item.id\n        } else {\n            throw new Error(\"Missing ID value in getId\")\n        }\n    }\n\n    function loadAll() {\n        localforageStorage.getItem(singleKey).then(function(res) {\n          //console.log(['loadall',database, databaseTable,singleKey,res])\n          dispatch({ type: \"replaceall\", items: res ? res : []});\n        })\n    }\n\n    \n    // save or create\n    function saveItem(item,index) {\n        //console.log(['save',item,index])\n        if (item) {\n            // update sources and save text in seperate localstorage\n            // ensure id\n            var isNewItem = false;\n            if (!item.id) {\n                isNewItem = true;\n                item.id = generateObjectId()\n            }\n            if (items.length === 0) {\n                //console.log(['save append len '])\n        \n                dispatch({ type: \"append\",item: item });\n            } else {\n                if ((index === null || index === undefined)  || isNewItem) {\n                //console.log(['save append'])\n                    dispatch({ type: \"prepend\",item: item });\n                } else {\n                    //console.log(['save update'])\n                    dispatch({ type: \"update\",item: item, index: index });\n                }\n            }   \n            \n        }\n    }\n    \n    function findBy(field,value) {\n        var key = findKeyBy(field,value)\n        return items[key];\n    }\n    \n    function findKeyBy(field,value) {\n        for (var k in items) {\n            if (items[k] && items[k][field] === value) return k\n        }\n    }\n\n    function setItemsWrap(items) {\n        localforageStorage.clear().then(function() {\n            dispatch({ type: \"replaceall\", items: items})\n        })\n    }\n    \n    function filter(matchFunction) {\n        var filtered = []\n        if (matchFunction) {\n            items.map(function(item,i) {\n              if (item && matchFunction(item)) {\n                  filtered.push(item)\n              } \n              return null \n            })\n        }\n        return filtered\n        \n    }\n    \n    function deleteItem(index) {\n        dispatch({ type: \"remove\", index: index})\n    }\n    return {getId:getId, loadAll:loadAll, saveItem:saveItem, deleteItem:deleteItem , items:items, setItems:setItemsWrap, findKeyBy:findKeyBy, findBy:findBy, filter: filter}\n    \n}\n","import React, {useState, useEffect} from 'react';\nimport useDBSingleKey from './useDBSingleKey'\n\n\nfunction useListItemEditor(database, databaseTable, databaseKey, updateLists) {\n    const {loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter} = useDBSingleKey(database, databaseTable, databaseKey)\n    const [filteredItems, setFilteredItems] = useState([])\n    const [filteredItemsKeys, setFilteredItemsKeys] = useState([])\n    const [searchFilter, setSearchFilter] = useState('')\n    const [tagAllValue, setTagAllValue] = useState('')\n    const listRef = React.createRef()\n    const [listFilterValue, setListFilterValue] = useState('')\n      \n    useEffect(() => {\n         var filteredItems = filter(function(item) {\n            //return true;\n            var matchText = true\n            if (searchFilter && searchFilter.trim().length >0) {\n                if (item.value.indexOf(searchFilter) !== -1) {\n                    matchText = true\n                } else {\n                    matchText = false\n                }\n            }\n            var matchPicklist = true\n            if (listFilterValue === \"Not In A List\") {\n                //console.log(['tags',item.tags])\n                if (!item.tags || (item.tags && item.tags.length === 0)) {\n                    matchPicklist =  true\n                } else {\n                    matchPicklist = false\n                }\n            } else if (listFilterValue && listFilterValue.trim().length >0) {\n                if (item.tags && item.tags.indexOf(listFilterValue) !== -1) {\n                    matchPicklist = true\n                } else {\n                    matchPicklist = false\n                }\n            }\n            \n            return matchText && matchPicklist\n            //return (item.value.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)) ? true : false\n        })\n        var itemKeys = {}\n        filteredItems.map(function(item) {if (item.id) itemKeys[item.id] = true; return null})\n        filteredItems.sort(function(a,b) { return a.value < b.value ? true : false})\n        setFilteredItems(filteredItems)\n        setFilteredItemsKeys(itemKeys)\n        updateLists(items)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items, searchFilter, listFilterValue])\n    \n    function deleteAll(e)  {\n        if (window.confirm('Really delete all selected')) {\n                if (items) {\n                var newItems = []\n                items.map(function(item,i) {\n                    if (item.id && filteredItemsKeys[item.id]) {\n                       if (!item.isSelected) {\n                           newItems.push(item)\n                       }\n                    } else {\n                        newItems.push(item)\n                    }\n                    return null\n                })\n                setItems(newItems)\n                listRef.current.resetAfterIndex(0);\n            }\n        }\n         \n    }\n    \n    function tagAll(val) {\n        //console.log(['tagall',tagAllValue,val])\n        var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.tags) newItem.tags=[]\n                   if (newItem.tags.indexOf(tagValue) === -1) newItem.tags.push(tagValue)\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n\n    function untagAll(val) {\n        //console.log(['untagall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.tags) newItem.tags=[]\n                   var finalTags = []\n                   newItem.tags.map(function(tag) {\n                       if (tag !== val) {\n                           finalTags.push(tag)\n                       }  \n                       return null\n                   })\n                   newItem.tags = finalTags\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    \n    function resetSelection() {\n         //console.log('reset sa')\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n               var newItem = item\n               newItem.isSelected = false\n               newItems.push(newItem)\n               return null\n            })\n            setItems(newItems)\n            \n        }\n    }\n    \n     function selectAll() {\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item.id && filteredItemsKeys[item.id]) {\n                   var newItem = item\n                   newItem.isSelected = true\n                   newItems.push(newItem)\n                } else {\n                    newItem.isSelected = false\n                    newItems.push(newItem)\n                }\n                return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    function saveItemWrap(item,index) {\n        saveItem(item,index)\n        listRef.current.resetAfterIndex(index);\n        updateLists(items)\n    }\n    \n    function getItemSize(index) {\n        //console.log(window.innerWidth,window.innerHeight)\n        // set parameters for full size > 1024\n        var baseSize = 40\n        //// tiny screen mobile \n        if (window.innerWidth < 430) {\n            baseSize = 120\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n            baseSize = 70\n        }\n        return baseSize\n    }\n    \n   function createEmptyItem(list) {\n       var tags=[]\n        if (list && list !== \"Not In A List\" && list.trim().length > 0) tags.push(list)\n        setSearchFilter('')\n        saveItem({id:null, value:'', synonym:'',tags:tags})\n   }\n    \n    return {\n        loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter, filteredItems, setFilteredItems,\n        searchFilter, setSearchFilter, tagAllValue, setTagAllValue,listRef, listFilterValue, setListFilterValue,\n        tagAll,untagAll, resetSelection, selectAll, saveItemWrap, getItemSize, deleteAll, createEmptyItem\n    }\n}\nexport default useListItemEditor\n","import React, { useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport ListAllDropDown from './components/ListAllDropDown'\n\nimport ListsManagerSearchBar from './components/ListsManagerSearchBar'\nimport ListsManagerRow from './ListsManagerRow'\nimport useListItemEditor from './useListItemEditor'\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <ListsManagerRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups} />\n}\n\nexport default  function ListsManager(props) {\n    const {loadAll, deleteItem ,items, findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, listRef, tagAll,untagAll, resetSelection, selectAll, saveItemWrap, getItemSize,  filteredItems, listFilterValue, setListFilterValue, deleteAll, createEmptyItem} = useListItemEditor('nlutool','lists','alldata', props.updateLists)\n    //const [currentList, setCurrentList] = useState('')\n   \n    useEffect(() => {\n        loadAll()\n        props.updateLists(items)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    //useEffect(() => {\n        //if (importFrom) {\n            //var parsed = parseImportText(importFrom)\n            //setItems(parsed)\n            //props.setImportFrom('')\n        //}\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[props.importFrom])\n    \n    \n  \n    \n    function renderEditor(props) {\n       \n        //if (listFilterValue && listFilterValue.length > 0) {\n            \n            // filter rendered list using callback \n            //var filteredItems = filter(function(item) {\n                //if (!searchFilter || searchFilter.length <=0 ) return true;\n                //const matchSearchFilter = item.example.indexOf(searchFilter) !== -1 \n                        //|| item.intent.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)\n                //return matchSearchFilter && skillFilterValue && item.skills && item.skills.indexOf(skillFilterValue) !== -1\n                \n            //})\n             //var collatedItems={}\n             //var collatedCounts={}\n             //if (filteredItems) {\n                 //filteredItems.map(function(item) {\n                    //if (item.value) {\n                        //if (!collatedItems[item.value]) collatedItems[item.value]=[]\n                        //collatedCounts[item.value] =   (collatedCounts[item.value] > 0) ? collatedCounts[item.value] + 1 : 1;\n                        ////if (collatedItems[item.intent].length < 300) {\n                            //collatedItems[item.value].push(item)\n                        ////}\n                        \n                    //}\n                   //return null;  \n                 //})\n             //}   \n                \n                \n            if (filteredItems && filteredItems.length > 0) {\n               \n               //var tagOptions = props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n                  //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {setTagAllValue(tagKey); tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n               //})\n               //var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n                  //return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {setIntentAllValue(intentKey);intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n               //})\n                return <div>\n                    <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length} matches </span>\n                    \n                     \n                     {props.lookups.selectedListTally > 0 && <span style={{float:'right'}}> \n                        \n                        <span>With {props.lookups.selectedListTally} selected&nbsp;</span>\n                        <ListAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue} untagAll={untagAll} lookups={props.lookups}/>\n                        <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                    </span>} \n                    \n                      <div style={{clear:'both'}}>\n                        <div style={{clear:'both'}}>\n                            <List\n                                key=\"list\"\n                                ref={listRef}\n                                itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups}}\n                                itemKey={index => index}  \n                                className=\"List\"\n                                height={700}\n                                itemCount={filteredItems.length}\n                                itemSize={getItemSize}\n                                width={'100%'}\n                              >{RenderRow}\n                            </List>\n                        </div>\n                    </div>\n               </div>\n\n            }\n                 //<span>{Object.keys(collatedItems).map(function(collatedList, i) {\n                                //var useCurrentList = currentList ? currentList : Object.keys(collatedItems)[0]\n                                \n                                ////const warning = <b>{collatedItems[collatedIntent].length}/{collatedCounts[collatedIntent].length}</b>\n                                ////collatedItems[collatedIntent].length  === collatedCounts[collatedIntent].length ? <b>/dd{collatedCounts[collatedIntent].length}</b> : <b>/{collatedCounts[collatedIntent].length}</b>\n                                //var completionVariant = 'danger'\n                                //if (collatedItems[collatedList].length > 300) {\n                                    //completionVariant = 'success'\n                                //} else if (collatedItems[collatedList].length > 100) {\n                                    //completionVariant = 'primary'\n                                //} else if (collatedItems[collatedList].length > 10) {\n                                    //completionVariant = 'warning'\n                                //} \n                                \n                                \n                                //if (collatedItems[collatedList].length  === collatedCounts[collatedList]) {\n                                        //return <Button key={collatedList} variant={collatedList === useCurrentList ? \"primary\" : \"outline-primary\"} onClick={function() {setCurrentList(collatedList)}}>\n                                            //<Badge variant={completionVariant} > {collatedItems[collatedList].length} </Badge>\n                                            //&nbsp;{collatedList}\n                                        //</Button>\n                                //} else {\n                                    //return <Button variant={collatedList === useCurrentList ? \"primary\" : \"outline-primary\"} onClick={function() {setCurrentList(collatedList)}}>\n                                            //<Badge variant=\"danger\" > {collatedItems[collatedList].length}/{collatedCounts[collatedList]} </Badge>\n                                            //&nbsp;{collatedList}\n                                        //</Button>\n                                //}\n                                \n                        //})}</span>\n                                   \n                                 //} else {\n                                    //return null\n                                //}\n                            //})}\n             //{Object.keys(collatedItems).map(function(collatedList, i) {\n                                //var useCurrentList = currentList ? currentList : Object.keys(collatedItems)[0]\n                                //if (collatedList === useCurrentList) {\n                                    //return \n        //} else {\n            //const skillsList = props.lookups.listLookups ? props.lookups.listLookups.map(function(listItem,i) {return <Button key={i}  onClick={function(e) {setListFilterValue(listItem)}}  style={{marginLeft:'1em'}} >{listItem}</Button>} )   : []\n            //return <div>\n                //<h1>Skills</h1>\n                //{skillsList.length > 0 && skillsList}\n                //{skillsList.length <= 0 && <div>\n                    //You dont have any skills yet. Import some <Link to='/sources'><Button>Sources</Button></Link> \n                //</div>}\n            //</div>\n        //}\n    }\n    \n  \n    return <div>\n       \n        <Link style={{float:'right'}} to=\"/sources\" ><Button variant=\"success\" >Sources</Button></Link>\n                   \n        {<ListsManagerSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} listFilterValue={listFilterValue} setListFilterValue={setListFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} />}\n         \n         \n         {renderEditor(props)}\n    </div>\n            \n}\n      \n\n //{JSON.stringify(items)}\n    //<hr/>\n    \n    \n    //<hr/>\n    //{JSON.stringify(filteredItems)}\n\n\n","import React, {useState, useEffect} from 'react'\nimport {findFirstDiffPos, uniquifyArray, uniquifyArrayOfObjects } from './utils'\nfunction useNluRow(item, saveItem, splitNumber, style) {\n    const [selectionState, setSelectionState] = useState({})\n    const [newEntity, setNewEntity] = useState('')\n    const [intentTitle, setIntentTitle] = useState(item && item.intent ? item.intent : '')\n    // for ReactTags format using objects\n    const [tags, setTags] = useState([])\n    const [skills, setSkills] = useState([])\n    //console.log(['USENLUROW',splitNumber])\n    const reactTags = React.createRef()\n    const reactSkills = React.createRef()\n     // tags\n    useEffect(() => {\n        if (item.tags) setTags(item.tags.map(function(tag,i) {return {id:i, name:tag}}))\n        if (item.skills) setSkills(item.skills.map(function(skill,i) {return {id:i, name:skill}}))\n    },[item])\n\n     function onTagDelete (i) {\n        const newTags = tags.slice(0)\n        newTags.splice(i, 1)\n        setTags(newTags)\n        var newItem = item\n        newItem.tags = newTags.map(function(newTag) { return newTag.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onTagAddition (tag) {\n        const newTags = [].concat(tags, tag)\n        setTags(uniquifyArrayOfObjects(newTags,'name').sort(function(a,b) {if (a.name > b.name) return 1; else return -1} ))\n        var newItem = item\n        newItem.tags = uniquifyArray(newTags.map(function(newTag) { return newTag.name})).sort()\n        saveItem(newItem,splitNumber)\n      }\n      \n      function onSkillDelete (i) {\n        const newSkills = skills.slice(0)\n        newSkills.splice(i, 1)\n        setSkills(newSkills)\n        var newItem = item\n        newItem.skills = newSkills.map(function(newSkill) { return newSkill.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onSkillAddition (skill) {\n        const newSkills = [].concat(skills, skill)\n        setSkills(uniquifyArrayOfObjects(newSkills,'name').sort(function(a,b) {if (a.name > b.name) return 1 ;else return -1} ))\n        var newItem = item\n        newItem.skills = uniquifyArray(newSkills.map(function(newSkill) { return newSkill.name})).sort()\n        saveItem(newItem,splitNumber)\n      }\n    \n        \n    function createSelection(field, start, end) {\n        if (field) {\n            if( field.createTextRange ) {\n                var selRange = field.createTextRange();\n                selRange.collapse(true);\n                selRange.moveStart('character', start);\n                selRange.moveEnd('character', end-start);\n                selRange.select();\n            } else if( field.setSelectionRange ) {\n                field.setSelectionRange(start, end);\n            } else if( field.selectionStart ) {\n                field.selectionStart = start;\n                field.selectionEnd = end;\n            }\n            field.focus();\n        }\n    }\n    \n    function updateExampleContent(content) {\n        //console.log('UPDTEXT')\n        if (item && typeof item.example === \"string\" && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = JSON.parse(JSON.stringify(item));\n            if (item.entities && item.entities.length > 0) {\n                var entities = item.entities\n                // deal with entity ranges * allow for delete multiple\n                const diffPos = findFirstDiffPos(content,item.example)\n                // insertion\n                if (content.length - item.example.length > 0) {\n                    \n                    //console.log('UPDTEXT insert')\n                    const insertionLength = content.length - item.example.length\n                    // update start and end subtract deletionLength\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos < entity.start) {\n                            entity.start += insertionLength\n                            entity.end += insertionLength;\n                        } else if (diffPos < entity.end) {\n                            // update entity value\n                            entity.end += insertionLength;\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                // replace    \n                } \n                else if (content.length === item.example.length) {\n                    //console.log('UPDTEXT replace')\n                    // check if was inside an entity and update value as required\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos >= entity.start && diffPos < entity.end) {\n                            // update entity value\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                // deletion\n                } else {\n                    //console.log('UPDTEXT delete')\n                    const deletionLength = content.length - item.example.length\n                    // update start and end subtract deletionLength\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos < entity.start) {\n                            entity.start += deletionLength\n                            entity.end += deletionLength;\n                        } else if (diffPos < entity.end) {\n                            // update entity value\n                            entity.end += deletionLength;\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                }\n            }\n            newItem.example = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    function entityClicked(entityKey,entityType) {\n        if (item.entities)  {\n            var entities = item.entities\n            if (! selectionState || !selectionState.textSelection || selectionState.textSelection.length === 0) {\n                // select text in string\n                if (entities[entityKey]) {\n                   createSelection(document.getElementById('example_input_'+splitNumber),entities[entityKey].start,entities[entityKey].end)\n                }\n            } else {\n                entityTypeChanged(entityKey,entityType);\n            }\n        }\n    }\n    \n    function entityTypeChanged(entityNumber,type) {\n        var newItem = item\n        if (item.entities) {\n            var newEntities = item.entities ? item.entities : []\n            var entity = newEntities[entityNumber] ? newEntities[entityNumber] : {}\n            entity.type = type\n            if (selectionState && selectionState.textSelection) {\n                entity.value = selectionState.textSelection\n                entity.start = selectionState.startTextSelection\n                entity.end = selectionState.endTextSelection\n            }\n            if (!newEntities[entityNumber]) newEntities.push(entity)\n            else newEntities[entityNumber] = entity\n            \n            newItem.entities = newEntities\n            setSelectionState(null)\n            saveItem(newItem,splitNumber)\n        }\n        \n    }\n    \n    function intentChanged(intent) {\n        var newItem = item \n        newItem.intent = intent\n        saveItem(newItem,splitNumber)\n    }\n \n    \n    function entityDelete(entityNumber) {\n        if (item.entities) {\n            var newItem = item \n            var newEntities = item.entities.slice(0,entityNumber).concat(item.entities.slice(entityNumber + 1))\n            newItem.entities = newEntities\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    function selectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = true;\n        saveItem(newItem,splitNumber)\n    }\n    \n    \n    function setSkill(skill, splitNumber) {\n        //var newItem = item\n        //item.isSelected = true;\n        //props.saveItem(newItem,splitNumber)\n    }\n    \n    function deselectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = false;\n        saveItem(newItem,splitNumber)\n    } \n    \n    return {    \n        intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, setTags, skills, setSkills, reactTags, reactSkills, onTagDelete, onTagAddition, onSkillDelete,onSkillAddition, createSelection, updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem, setSkill, deselectItem\n    }\n    \n}\nexport default useNluRow\n","/* global window */\nimport {Button,   Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React, {useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useNluRow from './useNluRow'\nimport SuggestionComponent from './components/SuggestionComponent'\n\nexport default function NluExampleRow(props) {\n       const  {item, splitNumber , style} = props;\n       const {    \n            intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, skills, reactTags, reactSkills, \n            onTagDelete, onTagAddition, onSkillDelete,onSkillAddition, updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem,  deselectItem\n        } = useNluRow(props.item, props.saveItem, props.splitNumber, props.style)\n        const [textInput, setTextInput] = useState(props.item && props.item.example ? props.item.example  : '')\n         \n       var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {intentChanged(intentKey)}}  >{intentKey}</Dropdown.Item>\n       })\n       //var skillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n          //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkill(skillKey,props.splitNumber)}}  >{skillKey}</Dropdown.Item>\n       //})\n       // ONE PER ENTITY FOR THIS EXAMPLE\n       var entitiesDropdowns = item && item.entities && item.entities.map(function(entity,i) {\n           var entityOptions = props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item  key={j} value={entityKey} onClick={function(e) {entityTypeChanged(i,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           return<Dropdown style={{marginLeft:'0.2em'}} variant='info'  key={i}  as={ButtonGroup}>\n              <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button variant='info'   size=\"sm\"  onClick={function(e) {entityClicked(i,entity.type)}} >\n              <b>{entity.type}</b> \n                -\n              {entity.value ? entity.value : 'Select Entity Type'}\n              </Button>\n              <Button variant=\"info\" size=\"sm\" onClick={function(e) {entityDelete(i,'')}} >X</Button>\n              <Dropdown.Menu>\n                  <form  style={{display:'inline'}}>\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {entityTypeChanged(i,e.target.value)}}\n                    value={entity.type} />\n                    </div>\n                  </form>\n                  {entityOptions}\n              </Dropdown.Menu>\n            </Dropdown>\n       }) ;\n        //PLUS CREATE NEW WHEN TEXT IS SELECTED\n       if (selectionState  && selectionState.textSelection && selectionState.textSelection.length > 0 &&  selectionState.textSelectionFrom === splitNumber) {\n           var entityOptions =  props.lookups.entityLookups && props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item key={j} value={entityKey} onClick={function(e) {entityTypeChanged(-1,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           entitiesDropdowns.push(<Dropdown key=\"new\" variant='success'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='success'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant='success' size=\"sm\" >New Entity</Button>\n\n          <Dropdown.Menu>\n           <form style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); entityTypeChanged(-1,newEntity)}}>\n                <div className=\"form-group\">\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {setNewEntity(e.target.value)}}\n                value={newEntity} />\n                </div>\n              </form>\n              {entityOptions}\n          </Dropdown.Menu>\n        </Dropdown>)\n       }\n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                  \n                   {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img  style={{height:'1em'}} src='/check.svg' alt=\"Select\" /></Button>}\n                  {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img  style={{height:'1em'}} src='/check.svg' alt=\"Deselect\" /></Button>}\n                  \n                <Button  variant=\"danger\" style={{float:'right'}} onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} ><img src=\"/thumb-down.svg\" alt=\"Delete\" /> Delete</Button>\n\n                  \n                  <Dropdown  style={{float:'left'}} as={ButtonGroup}>\n                  <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button   size=\"sm\" >{item.intent ? item.intent.toString() : 'Select Intent'} </Button>\n                  <Dropdown.Menu>\n                   <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); intentChanged(intentTitle)}}>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" value={intentTitle} onChange={function(e) {setIntentTitle(e.target.value)}}\n                         />\n                        </div>\n                      </form>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                  </Dropdown>\n                  <span style={{float:'left'}}>{entitiesDropdowns}</span>\n                 \n                   <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add to skill\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactSkills}\n                    tags={skills}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.skillLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onSkillDelete}\n                    onAddition={onSkillAddition} /> \n                    </div>\n                    \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add new tag\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactTags}\n                    tags={tags}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.tagLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onTagDelete}\n                    onAddition={onTagAddition} /> \n                    </div>\n                  \n                  <input     \n                   onFocus={ function(e) {\n                       setSelectionState(null)\n                    }}\n                   onSelect={ function(e) {\n                     var textSelection = window.getSelection().toString(); \n                     setSelectionState({textSelection:textSelection, textSelectionFrom: splitNumber, startTextSelection: e.target.selectionStart, endTextSelection: e.target.selectionEnd})\n                  }}  \n                   type='text' style={{width:'80%'}} value={textInput} id={\"example_input_\"+splitNumber} onChange={function(e) { setTextInput(e.target.value); updateExampleContent(e.target.value)}} />\n                  \n                  \n                \n                \n            </div>\n      </div>\n}\n","import React from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\n\nconst EditorSearchBar = function(props) {\n    var topskillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n          return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {props.setSkillFilterValue(skillKey)}}  >{skillKey}</Dropdown.Item>\n    })\n    topskillOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setSkillFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        \n    var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {props.setIntentFilterValue(intentKey)}}  >{intentKey}</Dropdown.Item>\n    })\n    intentOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setIntentFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        \n    return <div>\n            {<span>\n            \n                {props.lookups.selectedTally > 0 && <Button size=\"lg\"  onClick={function(e) { props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src='/check.svg' alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedTally <= 0 && <Button size=\"lg\" onClick={function(e) { props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src='/check.svg' alt=\"Select\" /></Button> }\n                \n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'Intent '+(props.intentFilterValue ? ' - '+ props.intentFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n            \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'Skill '+(props.skillFilterValue ? ' - '+ props.skillFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topskillOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n             <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.skillFilterValue, props.intentFilterValue)}} >New Intent</Button>\n        </div>\n}\nexport default EditorSearchBar\n","import React, {useState, useEffect} from 'react';\nimport localforage from 'localforage'\nimport useDBSingleKey from './useDBSingleKey'\nimport {uniquifyArray} from './utils'\nimport {useParams, useHistory} from 'react-router-dom'\n\nfunction useNluEditor(database, databaseTable, databaseKey, updateLookups) {\n    const {loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter} = useDBSingleKey(database, databaseTable, databaseKey)\n    const [filteredItems, setFilteredItems] = useState([])\n    const [filteredItemsKeys, setFilteredItemsKeys] = useState([])\n    const [searchFilter, setSearchFilter] = useState('')\n    const [tagAllValue, setTagAllValue] = useState('')\n    const [skillAllValue, setSkillAllValue] = useState('')\n    //const [skillFilterValue, setSkillFilterValue] = useState('')\n    //const [intentFilterValue, setIntentFilterValue] = useState('')\n    const [intentAllValue, setIntentAllValue] = useState('')\n    const listRef = React.createRef()\n    \n    const params = useParams()\n    const history = useHistory()\n    var skillFilterValue = params.skillId ? params.skillId : '';\n    function setSkillFilterValue(value) {\n        //console.log('SETSKILLVAL')\n        //console.log(history)\n        var root = history.location.pathname.split(\"/\")\n        var parts=['/'+root[1]]\n        skillFilterValue = value;\n        if (skillFilterValue.length > 0) {\n            parts.push('/skill/'+skillFilterValue)\n        }\n        if (intentFilterValue.length > 0) {\n            parts.push('/intent/'+intentFilterValue)\n        }\n        //console.log(['ssv',parts,value])\n        history.push(parts.join(''))\n    }\n    var intentFilterValue = params.intentId ? params.intentId : '';\n    \n    function setIntentFilterValue(value) {\n        var parts=['/examples']\n        intentFilterValue = value;\n        if (skillFilterValue.length > 0) {\n            parts.push('/skill/'+skillFilterValue)\n        }\n        if (intentFilterValue.length > 0) {\n            parts.push('/intent/'+intentFilterValue)\n        }\n        history.push(parts.join(''))\n    }\n    \n    //const examplesDB = useDBSingleKey('nlutool','examples','alldata')\n    //var updateLookupsTimeout = null\n    //var updateFilteredTimeout = null\n    //useEffect(() => {\n        ////clearTimeout(updateLookupsTimeout)\n        ////updateLookupsTimeout = setTimeout(function() {\n            \n        ////},2000)\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[items])\n     \n    useEffect(() => {\n        //clearTimeout(updateFilteredTimeout)\n        //console.log('UPDATE FILTERED'+intentFilterValue)\n        //updateFilteredTimeout = setTimeout(function() {\n             //console.log('UPDATE FILTERED NOW')\n             var filteredItems = filter(function(item) {\n                if ((!searchFilter || searchFilter.trim().length <=0 ) && (!skillFilterValue || skillFilterValue.trim().length <=0 ) && (!intentFilterValue || intentFilterValue.trim().length <=0 )) return true;\n                var intentFilter = true\n                if (intentFilterValue && intentFilterValue.length > 0) {\n                    if (item.intent === intentFilterValue) {\n                        intentFilter = true\n                    } else {\n                        intentFilter = false\n                    }\n                }\n                var skillFilter = true\n                if (skillFilterValue && skillFilterValue.length > 0) {\n                    if (item.skills && item.skills.indexOf(skillFilterValue) !== -1) {\n                        skillFilter = true\n                    } else {\n                        skillFilter = false\n                    }\n                }\n                var searchFilterBool = true\n                if (searchFilter && searchFilter.length > 0) {\n                    if (item.example && item.example.indexOf(searchFilter) !== -1 ) {\n                        searchFilterBool = true\n                    } else {\n                        searchFilterBool = false\n                    }\n                }         \n                return searchFilterBool && skillFilter && intentFilter;       \n                //intentFilterValue\n                //return (item.example.indexOf(searchFilter) !== -1 \n                            //&& intentFilter \n                            //&& ((skillFilterValue.length <= 0 || (skillFilterValue.length > 0 && typeof item.skills ===\"object\" && item.skills.indexOf(skillFilterValue) !== -1)) ? true : false\n            })\n            var itemKeys = {}\n            filteredItems.map(function(item) {if (item.id) itemKeys[item.id] = true; return null})\n            filteredItems.sort(function(a,b) { return a.example < b.example ? true : false})\n            setFilteredItems(filteredItems)\n            setFilteredItemsKeys(itemKeys)\n            updateLookups(filteredItems)\n        //},800)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items, searchFilter, skillFilterValue, intentFilterValue])\n    \n    function deleteAll(e)  {\n        if (window.confirm('Really delete all selected examples')) {\n                if (items) {\n                var newItems = []\n                items.map(function(item,i) {\n                    if (item.id && filteredItemsKeys[item.id]) {\n                       if (!item.isSelected) {\n                           newItems.push(item)\n                       }\n                    } else {\n                        newItems.push(item)\n                    }\n                    return null\n                })\n                setItems(newItems)\n                listRef.current.resetAfterIndex(0);\n            }\n        }\n         \n    }\n    \n    function tagAll(val) {\n        //console.log(['tagall',tagAllValue,val])\n        var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.tags) newItem.tags=[]\n                   if (newItem.tags.indexOf(tagValue) === -1) newItem.tags.push(tagValue)\n                   newItem.tags = uniquifyArray(newItem.tags)\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    function intentAll(val) {\n        //console.log(['intentall',intentAllValue,val])\n        var intentValue = val ? val : intentAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = item\n                   newItem.intent = intentValue\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    function resetSelection() {\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n               var newItem = item\n               newItem.isSelected = false\n               newItems.push(newItem)\n               return null\n            })\n            setItems(newItems)\n            \n        }\n    }\n    \n     function selectAll() {\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item.id && filteredItemsKeys[item.id]) {\n                   var newItem = item\n                   newItem.isSelected = true\n                   newItems.push(newItem)\n                } else {\n                    newItem.isSelected = false\n                    newItems.push(newItem)\n                }\n                return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n     function skillSetAll(val) {\n         //console.log(['set skill all',tagAllValue,val])\n        var skillValue = val ? val : skillAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.skills) newItem.skills=[]\n                   if (newItem.skills.indexOf(skillValue) === -1) newItem.skills.push(skillValue)\n                   newItem.skills = uniquifyArray(newItem.skills)\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n       \n    function saveAll(e)  {\n        //console.log(['save akk',filteredItems])\n        if (items) {\n            var newItems = []\n            var lsItems = []\n            filteredItems.map(function(item,i) {\n                if (item.intent && item.intent.length > 0 && item.id && filteredItemsKeys[item.id]) {\n                   if (item.isSelected) {\n                       lsItems.push(item)\n                   } else {\n                       newItems.push(item)\n                   }\n                } else {\n                    newItems.push(item)\n               }\n               return null\n            })\n            saveLSItems(lsItems)\n            setItems(newItems)\n            listRef.current.resetAfterIndex(0);\n        }\n         \n    }\n   \n    function createEmptyItem(skill, intent) {\n        setSearchFilter('')\n        var skills=[]\n        if (skill && skill.trim().length > 0) skills.push(skill)\n        var newIntent=''\n        if (intent && intent.trim().length > 0) newIntent = intent\n        saveItem({id:null, example:'', intent:newIntent, skills:skills,tags:[]})\n   }\n    \n    function saveItemWrap(item,index) {\n        saveItem(item,index)\n        listRef.current.resetAfterIndex(index);\n        updateLookups(items)\n    }\n    \n    function getItemSize(index) {\n        //console.log(window.innerWidth,window.innerHeight)\n        // set parameters for full size > 1024\n        var baseSize = 100\n        var heightPerLine = 70\n        var tagsPerLine = 10\n        var entitiesPerLine = 8\n        var skillsPerLine = 6\n        // tiny screen mobile \n        if (window.innerWidth < 430) {\n            baseSize = 140\n            heightPerLine = 50\n            tagsPerLine = 4\n            entitiesPerLine = 1\n            skillsPerLine = 1\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n            baseSize = 120\n            heightPerLine = 30\n            tagsPerLine = 2\n            entitiesPerLine = 1\n            skillsPerLine = 2\n        }\n        var tallyExtras = 0;\n        var item = items[index]\n        if (item && item.entities) tallyExtras += item.entities.length/entitiesPerLine;\n        if (item && item.tags) tallyExtras += item.tags.length/tagsPerLine;\n        if (item && item.skills) tallyExtras += item.skills.length/skillsPerLine;\n        var size = baseSize + (Math.round(tallyExtras)) * heightPerLine\n        //console.log(['ITEM SIZE',size, baseSize,heightPerLine,tagsPerLine,entitiesPerLine,tallyExtras,item])\n        return size \n    }\n    \n    function saveLSItem(item) {\n        var localforageStorage = localforage.createInstance({\n           name: 'nlutool',\n           storeName   :'examples',\n         });\n         localforageStorage.getItem('alldata').then(function(exampleItems) {\n                exampleItems.push(item)\n                localforageStorage.setItem('alldata',exampleItems)\n         })\n       \n    }\n    \n    function saveLSItems(newItems) {\n        var localforageStorage = localforage.createInstance({\n           name: 'nlutool',\n           storeName   :'examples',\n         });\n         localforageStorage.getItem('alldata').then(function(exampleItems) {\n                newItems.map(function(newItem) { exampleItems.push(newItem ); return null})\n                localforageStorage.setItem('alldata',exampleItems)\n         })\n       \n    }\n\n     \n    function saveNlu(splitNumber) {\n        if (items && items[splitNumber]) {\n            //props.saveNluItem(items[splitNumber]) \n            saveLSItem(items[splitNumber])\n            deleteItem(splitNumber)\n        }\n    }\n    \n      function untagAll(val) {\n        //console.log(['untagall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.tags) newItem.tags=[]\n                   var finalTags = []\n                   newItem.tags.map(function(tag) {\n                       if (tag !== val) {\n                           finalTags.push(tag)\n                       }  \n                       return null\n                   })\n                   newItem.tags = finalTags\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n       function unskillAll(val) {\n        //console.log(['unskillall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.skills) newItem.skills=[]\n                   var finalTags = []\n                   newItem.skills.map(function(tag) {\n                       if (tag !== val) {\n                           finalTags.push(tag)\n                       }  \n                       return null\n                   })\n                   newItem.skills = finalTags\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    //function sortItems() {\n        \n    //}\n    \n\n    \n    return {\n        loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter, filteredItems, setFilteredItems,createEmptyItem, \n        searchFilter, setSearchFilter, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue, skillFilterValue, setSkillFilterValue,intentFilterValue, setIntentFilterValue,\n         intentAllValue, setIntentAllValue, listRef, \n        tagAll,untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, saveAll, saveNlu\n    }\n}\nexport default useNluEditor\n","import React, { useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport NluExampleRow from './NluExampleRow'\nimport EditorSearchBar from './components/EditorSearchBar'\nimport useNluEditor from './useNluEditor'\nimport {MatchesTallies,WithSelectedDropDowns} from './components/Components'\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <NluExampleRow  \n         item={item} splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} \n         lookups={props.data.lookups} />\n}\n\nexport default function NluExampleEditor(props) {\n    const {loadAll, deleteItem , items, findKeyBy, searchFilter, setSearchFilter, skillFilterValue, setSkillFilterValue, intentFilterValue, setIntentFilterValue, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue,  intentAllValue, setIntentAllValue, listRef, tagAll,untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, filteredItems, createEmptyItem} = useNluEditor('nlutool','examples','alldata', props.updateLookups)\n    useEffect(() => {\n        loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    //useEffect(() => {\n        //if (importFrom) {\n            //var parsed = parseImportText(importFrom)\n            //setItems(parsed)\n            //props.setImportFrom('')\n        //}\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[props.importFrom])\n    \n\n    function renderEditor(props) {\n        // filter rendered list using callback \n       //var filteredItems = filter(function(item) {\n                //if (!searchFilter || searchFilter.length <=0 ) return true;\n                //const matchSearchFilter = item.example.indexOf(searchFilter) !== -1 \n                        //|| item.intent.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)\n                //return matchSearchFilter && skillFilterValue && item.skills && item.skills.indexOf(skillFilterValue) !== -1\n            //})\n            \n        if (filteredItems && filteredItems.length > 0) {\n            return <div>\n            <MatchesTallies items={items} filteredItems={filteredItems}/>\n             {props.lookups.selectedTally > 0 && <span style={{float:'right'}}> \n                 <WithSelectedDropDowns\n                  skillSetAll={skillSetAll} skillAllValue={skillAllValue}  setSkillAllValue={setSkillAllValue}  untagAll={untagAll} unskillAll={unskillAll} \n                     intentAll={intentAll} intentAllValue={intentAllValue} setIntentAllValue={setIntentAllValue}  \n                     tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue}  lookups={props.lookups}\n                 />\n                 \n                        \n                \n                 <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n               \n            </span> } \n               \n                <List\n                    ref={listRef}\n                    itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups}}\n                    itemKey={index => index}  \n                    className=\"List\"\n                    height={700}\n                    itemCount={filteredItems.length}\n                    itemSize={getItemSize}\n                    width={'100%'}\n                  >{RenderRow}</List>\n            </div>\n        } else {\n            //{JSON.stringify(filteredItems)}\n            return <div >\n             \n                <div style={{textAlign:'center'}}>\n            <br/><b>No items</b><br/><br/>Upload <Link to=\"/sources\" ><Button>Sources</Button></Link> then <Link to=\"/import\" ><Button>Import</Button></Link>.</div></div>\n        }\n    }\n    \n     return <div>\n        <Link  style={{float:'right'}} to={'/import'} ><Button variant='warning' >Current Import</Button></Link>\n        <EditorSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} skillFilterValue={skillFilterValue} setSkillFilterValue={setSkillFilterValue} resetSelection={resetSelection} selectAll={selectAll}  createEmptyItem={createEmptyItem} intentFilterValue={intentFilterValue} setIntentFilterValue={setIntentFilterValue} untagAll={untagAll} unskillAll={unskillAll}  />\n         {renderEditor(props)}\n    </div>\n    \n}\n      \n\n\n\n\n","/* global window */\nimport React  from 'react';\nimport {Button, Navbar } from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\n\nexport default function NavbarComponent(props) {\n    //console.log(props)\n    var astyle={paddingLeft:'0.3em'}\n    const currentPage = props.history && props.history.location && props.history.location.pathname ? props.history.location.pathname : '/'\n    const pages = {\n        '/': {name: 'NLU Tool',show: false},\n        '/search': {name: 'Search',show: true, link:'https://github.com/syntithenai/opennludata/wiki'},\n        '/sources': {name: 'Sources',show: false},\n        '/import': {name: 'Import',show: false},\n        '/lists': {name: 'Entities',show: true},\n        '/examples': {name: 'Intents',show: true},\n        '/skills': {name: 'Skills',show: true},\n        '/help': {name: 'Help',show: false},\n        \n    }\n    \n    const links = Object.keys(pages).map(function(link,k) {\n        const page = pages[link]\n        if (page.show) {\n            if (page.link) {\n                return <a key={k} style={astyle} href={page.link} ><Button variant='primary' >{page.name}</Button></a>                \n            } else {\n                return <Link key={k} style={astyle} to={link} ><Button variant={link === currentPage ? 'success' : 'primary'}>{page.name}</Button></Link>\n            }\n        }\n        return null\n    })\n//        <Navbar.Text><Button><img src='/menu.svg' alt='menu' /></Button></Navbar.Text>\n\n    return <Navbar  bg=\"dark\" variant=\"dark\"  >\n        {props.message && <div style={{position:'fixed',top:5,left:window.innerWidth ? (window.innerWidth /2 - 40) : 100, border: '2px solid red', background: 'pink', padding: '0.5em', minWidth:'400px' ,borderRadius:'5px'}} >\n            <Button variant=\"danger\" size=\"sm\"  style={{float:'right', fontWeight: 'bold',borderRadius:'20px',marginLeft:'1em'}} onClick={function(e) {props.setPageMessage('')}}>X</Button>{props.message} \n        </div>}\n    \n        <img src=\"/fire.svg\"  style={{height:'1.8em'}} alt=\"logo\"/>\n        \n         \n        <div style={{width: '100%'}}>\n        {links}\n        </div>\n        \n        {props.message}\n        <Navbar.Text style={{position:'fixed', top:'2px', right:'2px'}} className=\"justify-content-end\" ><Link to=\"/help\" ><Button>Help</Button></Link></Navbar.Text>\n        <img src='/waiting_small.gif' alt='waiting' style={{position:'fixed', top:5, right:5, zIndex:99, display: props.waiting ? 'block' : 'none' }} />\n    </Navbar>\n}\n\n\n        //<Navbar.Text><Link to=\"/organise\" ><Button>Organise</Button></Link></Navbar.Text>\n        //<Navbar.Text><Link to=\"/skills\" ><Button>My Skills</Button></Link></Navbar.Text>\n        //<Navbar.Text><Link to=\"/search\" ><Button>Search Community</Button></Link></Navbar.Text>\n","/* global window */\nimport {Button,   Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useNluRow from './useNluRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nexport default function NluImportRow(props) {\n     const  {item, splitNumber , style} = props;\n       const {    \n            intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, skills, reactTags, reactSkills, \n            onTagDelete, onTagAddition, onSkillDelete,onSkillAddition,  updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem,  deselectItem\n        } = useNluRow(props.item, props.saveItem, props.splitNumber, props.style)\n                \n       var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {intentChanged(intentKey)}}  >{intentKey}</Dropdown.Item>\n       })\n       // ONE PER ENTITY FOR THIS EXAMPLE\n       var entitiesDropdowns = item && item.entities && item.entities.map(function(entity,i) {\n           var entityOptions = props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item  key={j} value={entityKey} onClick={function(e) {entityTypeChanged(i,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           return<Dropdown style={{marginLeft:'0.2em'}} variant='info'  key={i}  as={ButtonGroup}>\n              <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button variant='info'   size=\"sm\"  onClick={function(e) {entityClicked(i,entity.type)}} >\n              <b>{entity.type}</b> \n                -\n              {entity.value ? entity.value : 'Select Entity Type'}\n              </Button>\n              <Button variant=\"info\" size=\"sm\" onClick={function(e) {entityDelete(i,'')}} >X</Button>\n              <Dropdown.Menu>\n                  <form  style={{display:'inline'}}>\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {entityTypeChanged(i,e.target.value)}}\n                    value={entity.type} />\n                    </div>\n                  </form>\n                  {entityOptions}\n              </Dropdown.Menu>\n            </Dropdown>\n       }) ;\n        //PLUS CREATE NEW WHEN TEXT IS SELECTED\n       if (selectionState  && selectionState.textSelection && selectionState.textSelection.length > 0 &&  selectionState.textSelectionFrom === splitNumber) {\n           var entityOptions =  props.lookups.entityLookups && props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item key={j} value={entityKey} onClick={function(e) {entityTypeChanged(-1,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           entitiesDropdowns.push(<Dropdown key=\"new\" variant='success'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='success'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant='success' size=\"sm\" >New Entity</Button>\n\n          <Dropdown.Menu>\n           <form style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); entityTypeChanged(-1,newEntity)}}>\n                <div className=\"form-group\">\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {setNewEntity(e.target.value)}}\n                value={newEntity} />\n                </div>\n              </form>\n              {entityOptions}\n          </Dropdown.Menu>\n        </Dropdown>)\n       }\n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                  \n                   {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src='/check.svg' alt=\"Select\" /></Button>}\n                  {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src='/check.svg' alt=\"Deselect\" /></Button>}\n                  \n                  {item.intent && <Button  style={{float:'right', marginLeft:'0.2em'}}  variant=\"success\"  onClick={function() {props.saveNlu(splitNumber)}} ><img src=\"/thumb-up.svg\" alt=\"Save\" /> Save</Button>}\n                  {!item && <Button   style={{float:'right', marginLeft:'0.2em'}} variant=\"secondary\" ><img src=\"/thumb-up.svg\" alt=\"Save\" /> Import</Button>} \n                  <Button  variant=\"danger\" style={{float:'right'}} onClick={function(e) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}} ><img src=\"/thumb-down.svg\" alt=\"Delete\" /> Delete</Button>\n                  \n                 \n                  <Dropdown  style={{float:'left'}} as={ButtonGroup}>\n                  <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button   size=\"sm\" >{item.intent ? item.intent.toString() : 'Select Intent'} </Button>\n                  <Dropdown.Menu>\n                   <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); intentChanged(intentTitle)}}>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" value={intentTitle} onChange={function(e) {setIntentTitle(e.target.value)}}\n                         />\n                        </div>\n                      </form>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                  </Dropdown>\n                  <span style={{float:'left'}}>{entitiesDropdowns}</span>\n                 \n                  \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add to skill\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactSkills}\n                    tags={skills}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.skillLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onSkillDelete}\n                    onAddition={onSkillAddition} /> \n                    </div>\n                    \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add new tag\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactTags}\n                    tags={tags}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.tagLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onTagDelete}\n                    onAddition={onTagAddition} /> \n                    </div>\n                  \n                  <input  \n                 \n                   onFocus={ function(e) {\n                       setSelectionState(null)\n                    }}\n                   onSelect={ function(e) {\n                     var textSelection = window.getSelection().toString(); \n                     setSelectionState({textSelection:textSelection, textSelectionFrom: splitNumber, startTextSelection: e.target.selectionStart, endTextSelection: e.target.selectionEnd})\n                  }}  \n                   type='text'   style={{clear:'both', width:'80%'}}  value={item.example} id={\"example_input_\"+splitNumber} \n                   onChange={function(e) { updateExampleContent(e.target.value)}} />\n                  \n                  \n                \n                \n            </div>\n      </div>\n}\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport NluImportRow from './NluImportRow'\nimport EditorSearchBar from './components/EditorSearchBar'\nimport useNluEditor from './useNluEditor'\nimport TagAllDropDown from './components/TagAllDropDown'\nimport IntentAllDropDown from './components/IntentAllDropDown'\nimport SkillAllDropDown from './components/SkillAllDropDown'\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    //console.log(['USENLUROW rr',index])\n    return <NluImportRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups} />\n}\n\n\nexport default function NluImportEditor(props) {\n    \n    //const examplesDB = useDBSingleKey('nlutool','examples','alldata')\n    const {loadAll, deleteItem ,items,  findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue, skillFilterValue, setSkillFilterValue, intentAllValue, setIntentAllValue, listRef, tagAll, untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, saveAll, saveNlu, filteredItems, createEmptyItem} = useNluEditor('nlutool','import','alldata', props.updateLookups)\n    useEffect(() => {\n        loadAll()\n        //examplesDB.loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    //useEffect(() => {\n        //if (importFrom) {\n            //var parsed = parseImportText(importFrom)\n            //setItems(parsed)\n            //props.setImportFrom('')\n        //}\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[props.importFrom])\n    \n    \n    \n   \n    \n    function renderEditor(props) {\n        // filter rendered list using callback \n       \n         //filteredItems.sort(function(oldItem,item) {console.log( ['SORT',oldItem.example,item.example]); return (item.example && oldItem.example && item.example.trim().toLowerCase <= oldItem.example.trim().toLowerCase) })\n           \n        if (filteredItems && filteredItems.length > 0) {\n            \n           //var skillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n                  //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkillAllValue(skillKey); skillSetAll(skillKey)}}  >{skillKey}</Dropdown.Item>\n            //})\n            \n            //var tagOptions = props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n              //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {setTagAllValue(tagKey); tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n           //})\n           //var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n              //return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {setIntentAllValue(intentKey);intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n           //})\n            return <div>\n             <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length}/{items.length} matches </span>\n             {props.lookups.selectedTally > 0 && <span style={{float:'right'}}> \n                <span>With {props.lookups.selectedTally} selected&nbsp;\n              <SkillAllDropDown skillSetAll={skillSetAll} skillAllValue={skillAllValue}  setSkillAllValue={setSkillAllValue}  lookups={props.lookups}/>\n                <IntentAllDropDown intentAll={intentAll} intentAllValue={intentAllValue} setIntentAllValue={setIntentAllValue}  lookups={props.lookups}/>\n                <TagAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue}  lookups={props.lookups}/>\n                \n                </span>\n                <Button style={{marginLeft:'1em'}} onClick={saveAll} variant=\"success\"  >Save Selected</Button> \n                <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                \n            </span> } \n                \n              \n                \n                <List\n                    ref={listRef}\n                    itemData={{items: filteredItems, saveItem: saveItemWrap, saveNlu, deleteItem, findKeyBy, lookups:props.lookups}}\n                    itemKey={index => index}  \n                    className=\"List\"\n                    height={700}\n                    itemCount={filteredItems.length}\n                    itemSize={getItemSize}\n                    width={'100%'}\n                  >{RenderRow}</List>\n            </div>\n            \n            \n        } else {\n            //{JSON.stringify(filteredItems)}\n            return <div >\n                <div style={{textAlign:'center'}}>\n            <br/><b>No more items to import</b><br/><br/>Open <Link to=\"/sources\" ><Button><img style={{height:'1em', paddingRight:'1em'}}  src=\"/arrow-thick-left.svg\" alt=\"Sources\" />Sources</Button></Link> to create more or <Link to=\"/examples\" ><Button>Organise<img src=\"/arrow-thick-right.svg\" alt=\"Intents\" style={{height:'1em', paddingLeft:'1em'}}  /></Button></Link> what you have imported into skills.\n            </div></div>\n        }\n    }\n    // {JSON.stringify(items)}\n    return <div>\n        <Link style={{float:'right'}} to=\"/sources\" ><Button variant=\"success\" >Sources</Button></Link>\n         \n        <EditorSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} skillFilterValue={skillFilterValue} setSkillFilterValue={setSkillFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} untagAll={untagAll} unskillAll={unskillAll}  />\n         {renderEditor(props)}\n    </div>\n    \n    \n}\n      \n\n","import JSZip from 'jszip'\nimport { saveAs } from 'file-saver';\n\nfunction createZip(zipStructure) {\n    var zip = new JSZip();\n     \n    function recurseZipStructure(zipStructure, path) {\n        if (Array.isArray(zipStructure.files)) {\n            zipStructure.files.map(function(file) {\n                var options = (file.base64 && file.base64.length > 0) ? {base64: true} : {} \n                if (file.name && file.name.length > 0 && file.content) zip.file(path+\"/\"+file.name,file.content, options);\n                return null\n            })\n        }\n        if (Array.isArray(zipStructure.folders)) {\n            zipStructure.folders.map(function(folder) {\n                if (folder.name && folder.name.length > 0) zip.folder(folder.name);\n                if ((folder.files && folder.files.length > 0) || (folder.folders && folder.folders.length > 0)) {\n                    recurseZipStructure(folder, folder.name)\n                }\n                return null\n            })\n        }\n         \n    } \n     \n    recurseZipStructure(zipStructure,'')\n     \n    return new Promise(function(resolve,reject) {\n        zip.generateAsync({type:\"blob\"}).then(function(content) {\n            resolve(content)\n        })\n    })\n}\n\nexport {createZip}\n","import { generateObjectId } from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\n\n// just the models subfolder\n// one file per intent\n// one file per entity\nfunction exportJOVO(skill) {\n    //var modelFiles=[]\n    var cleanEntities = {}\n    if (skill.entities) {\n        skill.entities.map(function(entity,entityKey) {\n            cleanEntities[entityKey] = entity\n            return null\n        })\n    }\n    var cleanIntents = {}\n    if (skill.intents) {\n        skill.intents.map(function(intent,intentKey) {\n            cleanIntents[intentKey] = intent\n            return null\n        })\n    }\n    var cleanSkill = {title:skill.title, friendlyTitle: skill.friendlyTitle, intents: Object.values(cleanIntents) , entities: Object.values(cleanEntities)}\n    var title = skill.friendlyTitle ? skill.friendlyTitle+'.json'  : (skill.title ? skill.title+'.json' : generateObjectId()+'.json') \n    var content = JSON.stringify(cleanSkill)\n    //console.log(['EXPORT json',content])\n    \n    return createZip(title,{files:[{name:title, content: content}]})\n    \n}\n\n\nfunction exportJOVOZip(skill) {\n    return createZip({files:[{name:'skill.json', content: exportJOVO(skill)}]})\n}\n\nexport {exportJOVO, exportJOVOZip}\n","import { generateObjectId } from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\n\nfunction exportJSON(skill) {\n    console.log(['EXPPORT JSON',skill])\n     var listsStorage = localforage.createInstance({\n       name: \"nlutool\",\n       storeName   : \"lists\",\n     });\n     listsStorage.getItem('alldata').then(function(lists) {\n        var usedLists = {}\n        if (skill.entities) {\n            Object.keys(skill.entities).map(function(entity,i) {\n                if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                    skill.entities[entity].lists.map(function(list) {\n                       usedLists[list] = true  \n                    })\n                }\n            })\n        }\n        var skillLists = {}\n        Object.keys(usedLists).map(function(listKey) {\n          skillLists[listKey] = []  \n        })\n        lists.map(function(item) {\n            Object.keys(usedLists).map(function(listKey) {\n                if (item && item.tags && item.tags.indexOf(listKey) !== -1) {\n                    skillLists[listKey].push(item.value)\n                }\n            })\n        })\n        skill.lists = skillLists\n    })\n    return JSON.stringify(skill)\n}\n\nfunction exportJSONZip(skill) {\n    return createZip({files:[{name:'skill.json', content: exportJSON(skill)}]})\n}\n\nexport {exportJSON, exportJSONZip}\n","import { generateObjectId } from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\n\n\n// just the models subfolder\n// one file per intent\n// one file per entity\nfunction exportMycroft(skill) {\n    var modelFiles=[]\n    var listsStorage = localforage.createInstance({\n       name: \"nlutool\",\n       storeName   : \"lists\",\n     });\n     listsStorage.getItem('alldata').then(function(lists) {\n        console.log(['GOTDATA',lists])\n         //if (err) throw new Error(err)\n        //var itemsManager = useDBSingleKey('nlutool','lists','alldata')\n        //itemsManager.loadAll()\n        var usedLists = {}\n        if (skill.entities) {\n            Object.keys(skill.entities).map(function(entity,i) {\n                if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                    skill.entities[entity].lists.map(function(list) {\n                       usedLists[list] = true  \n                    })\n                }\n            })\n        }\n        console.log(['USELISTS',usedLists])\n       \n        var skillLists = {}\n        Object.keys(usedLists).map(function(listKey) {\n          skillLists[listKey] = []  \n        })\n       \n       \n        lists.map(function(item) {\n            Object.keys(usedLists).map(function(listKey) {\n                if (item && item.tags && item.tags.indexOf(listKey) !== -1) {\n                    skillLists[listKey].push(item.value)\n                }\n            })\n        })\n         console.log(['SKILLLISTS',skillLists])\n        //Object.keys(usedLists).map(function(list) {\n              //skillLists[list] = lists.filter(function(item) {\n                 //if (item && item.tags && item.tags.indexOf(list) !== -1) return true\n                 //else return false  \n              //}).map(function(item) {\n                 //return item.value  \n              //})\n        //});\n        skill.lists = skillLists\n        console.log(['EXPPORT JSON with lists',skill])\n    })\n    //var cleanIntents = {}\n    //if (skill.intents) {\n        //skill.intents.map(function(intent,intentKey) {\n            //cleanIntents[intentKey] = intent\n            //return null\n        //})\n    //}\n    //var cleanSkill = {title:skill.title, friendlyTitle: skill.friendlyTitle, intents: Object.values(cleanIntents) , entities: Object.values(cleanEntities)}\n    //var title = skill.friendlyTitle ? skill.friendlyTitle+'.json'  : (skill.title ? skill.title+'.json' : generateObjectId()+'.json') \n    //var content = JSON.stringify(skill)\n    ////console.log(['EXPORT json',content])\n    console.log([\"GENZIP\",JSON.stringify(skill)])\n        \n    \n    return JSON.stringify(modelFiles)\n}\n\n\nfunction exportMycroftZip(skill) {\n    return createZip({files:[exportMycroft(skill)]})\n}\n\nexport {exportMycroft, exportMycroftZip}\n\n","import { generateObjectId } from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\n\n// just the models subfolder\n// one file per intent\n// one file per entity\nfunction exportRASA(skill) {\n    //var modelFiles=[]\n    var cleanEntities = {}\n    if (skill.entities) {\n        skill.entities.map(function(entity,entityKey) {\n            cleanEntities[entityKey] = entity\n            return null\n        })\n    }\n    var cleanIntents = {}\n    if (skill.intents) {\n        skill.intents.map(function(intent,intentKey) {\n            cleanIntents[intentKey] = intent\n            return null\n        })\n    }\n    var cleanSkill = {title:skill.title, friendlyTitle: skill.friendlyTitle, intents: Object.values(cleanIntents) , entities: Object.values(cleanEntities)}\n    var title = skill.friendlyTitle ? skill.friendlyTitle+'.json'  : (skill.title ? skill.title+'.json' : generateObjectId()+'.json') \n    var content = JSON.stringify(cleanSkill)\n    //console.log(['EXPORT json',content])\n    return createZip(title,{files:[{name:title, content: content}]})\n    \n}\n\n\nfunction exportRASAZip(skill) {\n    return createZip({files:[{name:'skill.json', content: exportRASA(skill)}]})\n}\n\nexport {exportRASA, exportRASAZip}\n","import {exportJOVOZip} from './exportJOVO'\nimport {exportJSONZip} from './exportJSON'\nimport {exportMycroftZip} from './exportMycroft'\nimport {exportRASAZip} from './exportRASA'\n\nvar exportFormats = [\n        {name:'JSON',exportFunction:exportJSONZip},\n        {name:'JOVO',exportFunction:exportJOVOZip},\n        {name:'RASA',exportFunction:exportRASAZip},\n        {name:'Mycroft',exportFunction:exportMycroftZip}\n    ]\n\nexport default exportFormats\n\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button, Dropdown, Badge,ButtonGroup, ListGroup } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport useNluEditor from './useNluEditor'\nimport exportFormats from './export/index'\nimport {exportJSON} from './export/exportJSON'\nimport useDB from './useDB'\nimport {generateObjectId, uniquifyArray} from './utils'\nimport ReactTags from 'react-tag-autocomplete'\nimport SuggestionComponent from './components/SuggestionComponent'\n//import ExportPage from './ExportPage'\nimport { saveAs } from 'file-saver';\n\nimport localforage from 'localforage'\n//const RenderRow = function(props) {\n    //const index = props.index\n    //const style = props.style\n    //const item = props.data.items[index]\n    //return <NluSkillsRow  \n         //item={item}  splitNumber={index} style={style}\n         //saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         //lookups={props.data.lookups} />\n//}\n\n\nexport default  function NluSkillsEditor(props) {\n    const {items, loadAll, skillFilterValue, setSkillFilterValue, filteredItems} = useNluEditor('nlutool','examples','alldata', props.updateLookups)\n    const [currentIntent, setCurrentIntent] = useState('')\n    const [invocation, setInvocation] = useState('')\n    const [entitiesForSkill, setEntitiesForSkill] = useState({})\n    const [listsForEntity, setListsForEntity] = useState({})\n    const [currentSkill, setCurrentSkill] = useState({id:generateObjectId(), invocation:'', title:skillFilterValue, entities:{}})\n    //const skillsManager = useDB('nlutool','skills')\n    const listsManager = useDB('nlutool','lists')\n    const [showExportDialog, setShowExportDialog] = useState(false)\n    const [collatedItems, setCollatedItems] = useState({})\n    const [collatedCounts, setCollatedCounts] = useState({})\n    var skillsStorage = localforage.createInstance({\n       name: \"nlutool\",\n       storeName   : \"skills\",\n     });\n    //const params = useParams()\n    //skillFilterValue = params.skillId;\n    //function setSkillFilterValueWrap(value) {\n        //setSkill\n        //props.history.push('/skills/'+value)\n    //}\n    //const {loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter} = \n    \n    // load all on init\n    useEffect(() => {\n        loadAll()\n        //skillsManager.loadAll()\n        if (skillFilterValue) {\n            //localforage.setItem('key', 'value', function (err) {\n              //// if err is non-null, we got an error\n              skillsStorage.getItem(skillFilterValue, function (err, skill) {\n                // if err is non-null, we got an error. otherwise, value is the value\n                if (err) throw new Error(err)\n                if (skill) {\n                    setCurrentSkill(skill)\n                    setInvocation(skill.invocation)\n                }\n              });\n            //});\n        } \n        listsManager.loadAll()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    // load skill on change skillFilterValue\n    useEffect(() => {\n        //skillsManager.loadAll()\n        if (skillFilterValue) {\n            //localforage.setItem('key', 'value', function (err) {\n              //// if err is non-null, we got an error\n              skillsStorage.getItem(skillFilterValue, function (err, skill) {\n                // if err is non-null, we got an error. otherwise, value is the value\n                if (err) throw new Error(err)\n                if (skill) {\n                    setCurrentSkill(skill)\n                    setInvocation(skill.invocation)\n                }\n              });\n            //});\n        } \n        \n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[skillFilterValue])\n    //// set current skill\n    //useEffect(() => {\n       //if (skillFilterValue && skillFilterValue.length > 0) {\n            ////console.log(['LOAD ALL real ',skillFilterValue,skillsManager.items]) \n            //var filtered = skillsManager.items.filter(function(item) {\n                ////console.log(['skill filter  ',item.title === skillFilterValue,item])\n                ////return true\n                //if (item.title === skillFilterValue) return true\n                //else return false\n            //})\n            ////console.log(['LOAD ALL filtered ',filtered])\n            //if (filtered.length > 0) {\n                //var skill = filtered[0]\n                ////skill.entities = Object.keys(entitiesForSkill).map(function(entity) {\n                    ////entity.lists = listsForEntity[entity] ? listsForEntity[entity] : []\n                    ////return entity\n                ////})\n                //setCurrentSkill(skill)\n                //setInvocation(skill.invocation)\n            //}\n        //}\n    //},[skillsManager.items,skillFilterValue])\n    \n    // load list lookups\n    useEffect(() => {\n        if (listsManager.items.length > 0) { \n            //console.log(['UPD ITEMS',listsManager.items,listsManager.items[0]])\n            props.updateLists(listsManager.items[0])\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[listsManager.items])\n    \n    // collate entitiesForSkills from filtered example \n    useEffect(() => {\n        var entities = {}\n        \n        filteredItems.map(function (item,itemKey) {\n          if (Array.isArray(item.entities)) {\n              item.entities.map(function(entity,entityKey) {\n                 if (entity && entity.type && entity.type.length > 0) {\n                     if (typeof entities[entity.type] !== \"object\") entities[entity.type] = {}\n                     if (!Array.isArray(entities[entity.type].values )) entities[entity.type].values = []\n                     entities[entity.type].values.push(entity.value)\n                 }\n                 return null\n              })\n          }\n          return null\n        })\n        // sort and uniquify\n        Object.keys(entities).map(function(entityName,entityKey) {\n           const entity = entities[entityName]\n           entity.values = uniquifyArray(entity.values).sort()\n           return null\n        })\n        setEntitiesForSkill(entities)\n        \n        // examples collated by intent\n         var newCollatedItems = collatedItems\n         var newCollatedCounts = collatedCounts\n         if (filteredItems) {\n             filteredItems.map(function(item) {\n                if (item.intent) {\n                    if (!newCollatedItems[item.intent]) newCollatedItems[item.intent]=[]\n                    newCollatedCounts[item.intent] =   (newCollatedCounts[item.intent] > 0) ? newCollatedCounts[item.intent] + 1 : 1;\n                    //if (collatedItems[item.intent].length < 300) {\n                        newCollatedItems[item.intent].push({example: item.example, entities: item.entities})\n                    //}\n                    \n                }\n               return null;  \n             })\n             setCollatedItems(newCollatedItems)\n             setCollatedCounts(newCollatedCounts)\n             console.log(['UDPATE SKILL WITH INTENTS',currentSkill, collatedItems])\n             var newSkill = currentSkill;\n             newSkill.intents = collatedItems\n             setCurrentSkill(newSkill)\n             console.log(['UDPATE SKILL WITH INTENTS',JSON.parse(JSON.stringify(newSkill))])\n         }   \n        \n        \n    },[filteredItems])\n    \n     // load invocation into skill\n    useEffect(() => {\n        if (currentSkill) {\n          //console.log(['SET INVOCK HAVE CURRENT SKILL',currentSkill,invocation])\n          var skill = currentSkill\n          skill.invocation = invocation\n          setCurrentSkill(skill)\n          //skillsManager.saveItem(currentSkill,null)\n      }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[invocation])\n    \n    useEffect(() => {\n        console.log('change cs or inv',currentSkill)\n        if (currentSkill && currentSkill.title && currentSkill.title.length > 0) {\n            console.log('change cs or inv real')\n            //var index = skillsManager.findKeyBy('id',newCurrentSkill.id)\n            //if (index != null) {\n            // merge in entity values\n            if (entitiesForSkill) {\n                Object.keys(entitiesForSkill).map(function(entity) {\n                   if (currentSkill.entities && currentSkill.entities[entity]) {\n                       currentSkill.entities[entity].values = entitiesForSkill[entity].values;\n                   }  \n                })\n            }\n            // merge in intents\n            \n            console.log(['save skill ',skillFilterValue,currentSkill])\n            skillsStorage.setItem(skillFilterValue, currentSkill, function (err) {\n                console.log(['saved skill '])\n                if (err)  {\n                    console.log(err)\n                    throw new Error(err)\n                }\n            })\n              //// if err is non-null, we got an error\n            \n            //skillsManager.saveItem(newCurrentSkill,index)\n            //}\n            //\n            //currentSkill.entities = entitiesForSkill\n            //newCurrentSkill.invocation = invocation;\n            //newCurrentSkill.title = skillFilterValue;\n            //console.log(['save now ',index,newCurrentSkill])\n            //setCurrentSkill(newCurrentSkill)\n            \n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[currentSkill,listsForEntity, invocation])\n    \n  \n  \n  //function setInvocation(val) {\n      //console.log('SET INVOCK')\n      ////if (currentSkill) {\n          ////console.log(['SET INVOCK HAVE CURRENT SKILL',currentSkill,val])\n          ////var skill = currentSkill\n          ////skill.invocation = val \n          ////setCurrentSkill(skill)\n      ////}\n  //}\n    \n  function addListToSkillEntity(entity,list) {\n      //console.log(['ADSKOI',currentSkill,currentSkill.entities,entity,list])\n      if (entity && list && list.name) {\n            var skill = currentSkill;\n            if (!skill.entities) skill.entities={}\n            if (!skill.entities[entity]) skill.entities[entity] = {lists:[]}\n            if (!Array.isArray(skill.entities[entity].lists)) skill.entities[entity].lists = []\n            //var newListsForEntity = listsForEntity\n            //console.log(['ADSKOI1.5',skill])\n            skill.entities[entity].lists.push(list.name)\n            skill.entities[entity].lists = uniquifyArray(skill.entities[entity].lists).sort()\n           //newListsForEntity[entity] = uniquifyArray(newListsForEntity).sort()\n            setCurrentSkill(skill)  \n            // force render\n            setListsForEntity(JSON.stringify(skill.entities))  \n            //} else {\n                //console.log(['ADSKOI new'])\n               //newListsForEntity[entity] = [list.name]\n            //}\n             //console.log(['ADSKOI2 final',newListsForEntity])\n            //setListsForEntity(newListsForEntity)\n       } else {\n           console.log([' missing data'])\n       }\n  }\n  \n  function removeListFromSkillEntity(entity, listIndex) {\n      var skill = currentSkill\n      //console.log(['REMOVESKILLFROMLIST',entity,listIndex])\n      if (skill && skill.entities && entity && skill.entities[entity] && skill.entities[entity].lists) {\n          var lists = skill.entities[entity].lists\n          //lists = uniquifyArray([lists.slice(0, listIndex),lists.slice(listIndex + 1)]).sort()\n          lists = lists.slice(0, listIndex).concat(lists.slice(listIndex + 1))\n          \n          skill.entities[entity].lists = lists\n          setCurrentSkill(skill)  \n          setListsForEntity(JSON.stringify(skill.entities))  \n          //console.log(['REMOVESKILLFROMLIST ddd',lists])\n      } \n       //var newEntitiesForSkill = entitiesForSkill\n       //if (newEntitiesForSkill[entity]) {\n           //var lists = newEntitiesForSkill[entity].lists && Array.isArray(newEntitiesForSkill[entity].lists) ? newEntitiesForSkill[entity].lists : [];\n           //newEntitiesForSkill[entity].lists = uniquifyArray([lists.slice(0, listIndex),lists.slice(listIndex + 1)]).sort()\n           //setEntitiesForSkill(newEntitiesForSkill)\n       //}\n  }\n  \n    \n    function renderEditor(props) {\n       \n        if (skillFilterValue && skillFilterValue.length > 0) {\n            \n            // filter rendered list using callback \n            //var filteredItems = filter(function(item) {\n                //if (!searchFilter || searchFilter.length <=0 ) return true;\n                //const matchSearchFilter = item.example.indexOf(searchFilter) !== -1 \n                        //|| item.intent.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)\n                //return matchSearchFilter && skillFilterValue && item.skills && item.skills.indexOf(skillFilterValue) !== -1\n                \n            //})\n             \n                \n                \n            if (filteredItems && filteredItems.length > 0) {\n               \n               //var tagOptions = props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n                  //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {setTagAllValue(tagKey); tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n               //})\n               //var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n                  //return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {setIntentAllValue(intentKey);intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n               //})\n                //CURRENT SKILL: {JSON.stringify(currentSkill)}\n                //<hr/>\n                \n                \n                //GENENT: {JSON.stringify(entitiesForSkill)}\n                //<hr/>\n                //LISTS: {JSON.stringify(listsForEntity)}\n                //<hr/>\n                \n                // {<ExportPage showExportDialog={showExportDialog} setShowExportDialog={setShowExportDialog} currentSkill={currentSkill} />}\n                 return <div>\n                    CURRENT SKILL: {JSON.stringify(currentSkill.intents)}\n                <hr/>\n                \n                       <div><h3>{skillFilterValue} </h3></div>\n                        <div>\n                        <label style={{fontWeight:'bold', marginLeft:'0.5em'}} > Invocation <input type='text' value={invocation} onChange={function(e) {setInvocation(e.target.value)}} /></label>\n                        </div>\n                        \n                        \n                        <b style={{marginRight:'1em', marginLeft:'0.5em'}} >Intents</b>\n                        <span>{Object.keys(collatedItems).sort().map(function(collatedIntent, i) {\n                                var useCurrentIntent = currentIntent ? currentIntent : Object.keys(collatedItems)[0]\n                                var completionVariant = 'danger'\n                                if (collatedItems[collatedIntent].length > 300) {\n                                    completionVariant = 'success'\n                                } else if (collatedItems[collatedIntent].length > 100) {\n                                    completionVariant = 'primary'\n                                } else if (collatedItems[collatedIntent].length > 10) {\n                                    completionVariant = 'warning'\n                                } \n                                \n                                \n                                if (collatedItems[collatedIntent].length  === collatedCounts[collatedIntent]) {\n                                        return <Link key={collatedIntent} to={\"/examples/skill/\"+skillFilterValue+\"/intent/\"+collatedIntent} ><Button key={collatedIntent} variant={collatedIntent === useCurrentIntent ? \"primary\" : \"outline-primary\"} onClick={function() {setCurrentIntent(collatedIntent)}}>\n                                            <Badge variant={completionVariant} > {collatedItems[collatedIntent].length} </Badge>\n                                            &nbsp;{collatedIntent}\n                                        </Button></Link>\n                                } else {\n                                    return <Link key={collatedIntent} to={\"/examples/skill/\"+skillFilterValue+\"/intent/\"+collatedIntent} ><Button variant={collatedIntent === useCurrentIntent ? \"primary\" : \"outline-primary\"} onClick={function() {setCurrentIntent(collatedIntent)}}>\n                                            <Badge variant=\"danger\" > {collatedItems[collatedIntent].length}/{collatedCounts[collatedIntent]} </Badge>\n                                            &nbsp;{collatedIntent}\n                                        </Button></Link>\n                                }\n                                \n                        })}</span>\n                        <div style={{marginTop:'0.7em'}} >\n                      <b style={{marginRight:'1em', marginLeft:'0.5em'}} >Entities</b><ListGroup>{Object.keys(entitiesForSkill).map(function(collatedEntity, i) {\n                                \n                                const listTags = currentSkill && currentSkill.entities && currentSkill.entities[collatedEntity] && currentSkill.entities[collatedEntity].lists ? currentSkill.entities[collatedEntity].lists.map(function(listItem,listItemKey) {return {id:listItemKey, name:listItem} }) : []\n                                //console.log(listTags)\n                                    return <ListGroup.Item key={collatedEntity} >\n                                            \n                                             <span style={{marginLeft:'1em', float:'left', fontWeight:'bold'}}>&nbsp;{collatedEntity}</span>\n                                          \n                                            <span style={{marginLeft:'1em', float:'left'}}>&nbsp;{entitiesForSkill[collatedEntity].values.slice(0,5).join(\", \")}</span>\n                                            <span style={{marginLeft:'1em', float:'left'}}>\n                                           <label><i></i> <ReactTags\n                                            placeholderText=\"Also use values from \"\n                                            minQueryLength={0}\n                                            maxSuggestionsLength={50}\n                                            autoresize={true}\n                                            allowNew={false}\n                                            tags={listTags}\n                                            suggestionComponent={SuggestionComponent}\n                                            suggestions={props.lookups.listsLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                                            onDelete={function(index) {removeListFromSkillEntity(collatedEntity, index)}}\n                                            onAddition={function(tag) {addListToSkillEntity(collatedEntity, tag)}} /> </label>\n                                            </span>\n                                        </ListGroup.Item>\n                                //}\n                                \n                        })}</ListGroup>\n                        </div>\n               \n                </div>\n\n            }\n            \n        } else {\n            const skillsList = props.lookups.skillLookups ? props.lookups.skillLookups.map(function(skill,i) {return <Button key={i}  onClick={function(e) {setSkillFilterValue(skill)}}  style={{marginLeft:'1em'}} >{skill}</Button>} )   : []\n            return <div>\n                <h1>Skills</h1>\n                {skillsList.length > 0 && skillsList}\n                {skillsList.length <= 0 && <div>\n                    You dont have any skills yet. Import some <Link to='/sources'><Button>Sources</Button></Link> \n                </div>}\n            </div>\n        }\n    }\n    \n    \n     var skillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n          return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkillFilterValue(skillKey)}}  >{skillKey}</Dropdown.Item>\n       })\n       skillOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {setSkillFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n   \n        //<Button style={{float:'right',marginLeft:'0.5em'}}  variant=\"success\" onClick={function() {setShowExportDialog(true)}} >Publish</Button>\n         \n    return <div>\n         {skillFilterValue && skillFilterValue.length > 0 && <Dropdown style={{float:'right',marginLeft:'0.5em'}}  as={ButtonGroup}>\n          <Dropdown.Toggle split variant=\"success\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant=\"success\">Export</Button>\n          <Dropdown.Menu variant=\"success\" >\n              {exportFormats.map(function(exportFormat,i) {\n                  var title = 'opennludata_'+exportFormat.name+'_'+Date.now()\n                return <Dropdown.Item variant=\"success\" key={i} value={exportFormat.name} onClick={function(e) {exportFormat.exportFunction(currentSkill).then(function(zipBody) {\n                saveAs(zipBody, title)\n            })}}  >{exportFormat.name}</Dropdown.Item>\n           })}\n          </Dropdown.Menu>\n        </Dropdown>}\n         {renderEditor(props)}\n    </div>\n            \n}\n      \n","import React, {useState} from 'react';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport {Button, Modal} from 'react-bootstrap'\nimport { Link  } from 'react-router-dom'\n\nfunction SearchPage(props) {\n    const [copied, setCopied] = useState(false)\n    \n    \n    return <div>\n    <h3>Search</h3>\n    <iframe src=\"https://github.com/syntithenai/opennludata/wiki\" ></iframe>\n    \n    \n    </div>\n    \n    \n}\n\nexport default SearchPage\n","import React from 'react';\nimport {useState} from 'react';\nimport {BrowserRouter as  Router, Route, Link  } from 'react-router-dom'\nimport LocalStorageUploadManager from './LocalStorageUploadManager'\nimport ListsManager from './ListsManager'\nimport NluExampleEditor from './NluExampleEditor'\nimport NavbarComponent from './components/NavbarComponent'\nimport {HelpText} from './components/Components'\nimport NluImportEditor from './NluImportEditor'\nimport NluSkillsEditor from './NluSkillsEditor'\nimport SearchPage from './SearchPage'\nimport {Button} from 'react-bootstrap'\n//const axios = require('axios');\n  //axios.get('https://github.com/syntithenai/opennludata/wiki/test-skill')\n  //.then(function (response) {\n    //// handle success\n    //console.log(response);\n  //})\n  //.catch(function (error) {\n    //// handle error\n    //console.log(error);\n  //})\n//\n\nfunction SiteMenu(props) {\n    var astyle={paddingLeft:'0.3em'}\n    return <div style={{marginLeft:'0.5em'}}>\n            <h1>Menu</h1>\n            \n                <Link style={astyle} to=\"/sources\" ><Button>Sources</Button></Link>\n                <Link style={astyle} to=\"/import\" ><Button>Import</Button></Link>\n                <Link style={astyle} to=\"/examples\" ><Button>Organise</Button></Link>\n                <Link style={astyle} to=\"/skills\" ><Button>Skills </Button></Link>\n                <Link style={astyle} to=\"/search\" ><Button>Search Community </Button></Link>\n        </div>\n}\n\nfunction App() {\n    \n    const [waiting, setWaiting] = useState(false)\n    const [pageMessage, setPageMessage] = useState('')  \n    \n    //const [importFrom, setImportFrom] = useState(null)\n    // example summaries\n    const [intentLookups, setIntentLookups] = useState([])\n    const [entityLookups, setEntityLookups] = useState([])\n    const [tagLookups, setTagLookups] = useState([])\n    const [skillLookups, setSkillLookups] = useState([])\n    const [listsLookups, setListsLookups]= useState([])\n    const [selectedTally, setSelectedTally] = useState(0)\n    \n    // list summaries\n    const [listTally, setListTally] = useState(0)\n    const [selectedListTally, setSelectedListTally] = useState(0)\n    const [listTallyByList, setListTallyByList] = useState({})\n    const [selectedListTallyByList, setSelectedListTallyByList] = useState({})\n    \n    // search bar\n    //https://github.com/search?q=repo:syntithenai/opennludata&type=Wikis\n    const [skillFilterValue, setSkillFilterValue] = useState('')\n  \n\n    \n    function startWaiting() {\n        setWaiting(true)\n    }\n    \n    function stopWaiting() {\n        setTimeout(function() {\n            setWaiting(false)\n        },300)\n    }\n\n    function updateLists(lists) {\n        if (lists) {\n            var newSelectedLists = {}\n            var newLists = {}\n            var tally = 0;\n             var selectedTally = 0;\n            lists.map(function(listItem) {\n                if (listItem && listItem.tags && listItem.tags.length > 0) {\n                    if (listItem.isSelected) {\n                             selectedTally += 1\n                    }\n                    listItem.tags.map(function(tag) {\n                        if (tag && tag.trim().length > 0) {\n                            if (listItem.isSelected) {\n                                 newLists[tag] = (newLists[tag] > 0) ? newLists[tag] + 1 : 1\n                                 newSelectedLists[tag] = (newSelectedLists[tag] > 0) ? newSelectedLists[tag] + 1 : 1\n                            } else {\n                                newLists[tag] = (newLists[tag] >0) ? newLists[tag] + 1 : 1\n                            }\n                        }\n                        return null\n                    })\n                    tally += 1;\n                }\n                return null\n            })\n            setListTally(tally)\n            setSelectedListTally(selectedTally)\n            setSelectedListTallyByList(newSelectedLists)\n            setListTallyByList(newLists)\n            setListsLookups(Object.keys(newLists))\n            //console.log('updated lists', newLists)\n        }\n    }\n\n    function updateLookups(items) {\n        //console.log(['UPDATELOOKUPS',items])\n        if (items && items.length > 0) {\n            var tags = {}\n            var intents = {}\n            var entities = {}\n            var skills = {}\n            var selected = 0;\n            items.map(function(item) {\n                if (item.isSelected) selected = selected + 1;\n               intents[item.intent] = true\n               if (item.tags && item.tags.length > 0) {\n                   item.tags.map(function(tag) {\n                      tags[tag] = true  \n                      return null\n                   })\n               }\n               if (item.skills && item.skills.length > 0) {\n                   item.skills.map(function(skill) {\n                      skills[skill] = true  \n                      return null\n                   })\n               }\n               if (item.entities && item.entities.length > 0) {\n                   item.entities.map(function(entity) {\n                      if (entity.type) {\n                          entities[entity.type] = true  \n                      }\n                      return null\n                   })\n               }\n               return null\n            })\n            const distinct = function(value,index,self) {\n                return self.indexOf(value) === index;\n            }\n            setIntentLookups([].concat(Object.keys(intents),intentLookups).filter(distinct))\n            setEntityLookups([].concat(Object.keys(entities),entityLookups).filter(distinct))\n            setTagLookups([].concat(Object.keys(tags),tagLookups).filter(distinct))\n            setSkillLookups([].concat(Object.keys(skills),skillLookups).filter(distinct))\n            setSelectedTally(selected)\n        }\n    }\n    const lookups = {intentLookups,entityLookups,tagLookups,skillLookups, selectedTally, listsLookups, listTally, selectedListTally, listTallyByList, selectedListTallyByList}\n  return (\n    <div className=\"OpenNluDataApp\">\n            \n        <Router>\n                <Route exact path='*' render={\n                    (props) => {\n                        return <NavbarComponent waiting={waiting} history={props.history} message={pageMessage} setPageMessage={setPageMessage}    />\n                    }}\n                />\n                \n                <Route exact path='/menu' component={SiteMenu} />\n                <Route path='/sources' render={\n                    (props) => <LocalStorageUploadManager {...props}  startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateLookups={updateLookups} updateLists={updateLists} lookups={lookups}  />\n                }/>\n                <Route path='/import' render={\n                    (props) => <NluImportEditor {...props}        lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateLookups={updateLookups}  setPageMessage={setPageMessage}    />}\n                          \n                />\n                \n                <Route exact  path='/examples' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateLookups={updateLookups}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route exact path='/examples/skill/:skillId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateLookups={updateLookups} updateLists={updateLists}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route path='/examples/intent/:intentId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateLookups={updateLookups} updateLists={updateLists}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route exact path='/examples/skill/:skillId/intent/:intentId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateLookups={updateLookups} updateLists={updateLists}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route exact path='/skills/:skillId' render={(props) => <NluSkillsEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateLookups={updateLookups} updateLists={updateLists}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route exact path='/skills/skill/:skillId' render={(props) => <NluSkillsEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateLookups={updateLookups} updateLists={updateLists}  setPageMessage={setPageMessage}    />} \n                />\n\n                 <Route exact path='/skills' render={(props) => <NluSkillsEditor {...props} skillFilterValue={skillFilterValue} setSkillFilterValue={setSkillFilterValue}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateLookups={updateLookups} updateLists={updateLists}  setPageMessage={setPageMessage}    />} \n                />\n                \n               \n                <Route path='/lists' render={\n                    (props) => <ListsManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateLookups={updateLookups}  setPageMessage={setPageMessage}  updateLists={updateLists}   />}\n                          \n                />\n                \n                <Route exact path='/help' component={HelpText}     />\n                 <Route exact path='/search' component={SearchPage}     />\n                <Route exact path='/' component={HelpText} />\n        </Router>\n    </div>\n  );\n}\n                \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}
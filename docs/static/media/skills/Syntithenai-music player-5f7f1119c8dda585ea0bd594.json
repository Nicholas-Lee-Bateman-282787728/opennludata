{"utterancesLists":[],"tags":[],"_id":"5fa08241610e3d7b6b1f47e1","id":"5f7f1119c8dda585ea0bd594","invocation":"","title":"music player","entities":{"genre":{"values":["blues","classical","jazz","jungle","reggae","relaxing","world"],"alexaType":"AMAZON.Genre","googleType":"@sys.music-genre","lists":["music artists 20c"]},"artist":{"values":["ry cooder","simply red","van halen"],"alexaType":"AMAZON.Artist","googleType":"@sys.music-artist","lists":[]}},"intents":{"play music":[{"example":"play some relaxing music","entities":[{"type":"genre","value":"relaxing","start":10,"end":18}]},{"example":"play some classical music","entities":[{"type":"genre","value":"classical","start":10,"end":19}]},{"example":"play some jungle music","entities":[{"type":"genre","value":"jungle","start":10,"end":16}]},{"example":"give me something by van halen","entities":[{"type":"artist","value":"van halen","start":21,"end":30}]},{"example":"i want to hear some jazz","entities":[{"type":"genre","value":"jazz","start":20,"end":24}]},{"example":"i want to listen to reggae","entities":[{"type":"genre","value":"reggae","start":20,"end":26}]},{"example":"i want to listen to tracks by simply red","entities":[{"type":"artist","value":"simply red","start":30,"end":40}]},{"example":"play some blues music","entities":[{"type":"genre","value":"blues","start":10,"end":15}]},{"example":"play some world music by ry cooder","entities":[{"type":"genre","value":"world","start":10,"end":15},{"type":"artist","value":"ry cooder","start":25,"end":34}]}],"next track":[{"example":"go to the next track"},{"example":"skip this song"},{"example":"skip this track"},{"example":"next song please"},{"example":"next track"}],"previous track":[{"example":"previous track"}],"stop playing":[{"example":"pause","entities":[]},{"example":"stop playing","entities":[]}]},"entitiesData":{"music artists 20c":[{"value":"Foo Fighters","synonym":""},{"value":"Johnny Cash","synonym":""},{"value":"James Brown","synonym":""},{"value":"Jerry Lee Lewis","synonym":""},{"value":"Smokey Robinson & The Miracles","synonym":""},{"value":"Chuck Berry","synonym":""},{"value":"Aretha Franklin","synonym":""},{"value":"Willie Nelson","synonym":""},{"value":"Simon & Garfunkel","synonym":""},{"value":"The Everly Brothers","synonym":""},{"value":"Otis Redding","synonym":""},{"value":"Hank Williams","synonym":""},{"value":"Marvin Gaye","synonym":""},{"value":"Van Morrison","synonym":""},{"value":"The Supremes","synonym":""},{"value":"Bob Dylan","synonym":""},{"value":"The Beatles","synonym":""},{"value":"Neil Young","synonym":""},{"value":"The Temptations","synonym":""},{"value":"Tina Turner","synonym":""},{"value":"Rod Stewart","synonym":""},{"value":"Stevie Wonder","synonym":""},{"value":"Frank Sinatra","synonym":""},{"value":"The Beach Boys","synonym":""},{"value":"Janis Joplin","synonym":""},{"value":"The Righteous Brothers","synonym":""},{"value":"Bob Marley","synonym":""},{"value":"David Bowie","synonym":""},{"value":"The Rolling Stones","synonym":""},{"value":"Jimi Hendrix","synonym":""},{"value":"Alice Cooper","synonym":""},{"value":"The Velvet Underground","synonym":""},{"value":"Lynyrd Skynyrd","synonym":""},{"value":"Bo Diddley","synonym":""},{"value":"The Who","synonym":""},{"value":"Billy Joel","synonym":""},{"value":"Elton John","synonym":""},{"value":"The Doors","synonym":""},{"value":"Pink Floyd","synonym":""},{"value":"Bruce Springsteen","synonym":""},{"value":"Creedence Clearwater Revival","synonym":""},{"value":"Santana","synonym":""},{"value":"Fleetwood Mac","synonym":""},{"value":"Genesis","synonym":""},{"value":"Ray Charles","synonym":""},{"value":"Led Zeppelin","synonym":""},{"value":"Black Sabbath","synonym":""},{"value":"Michael Jackson","synonym":""},{"value":"Parliament Funkadelic","synonym":""},{"value":"Judas Priest","synonym":""},{"value":"Aerosmith","synonym":""},{"value":"Elvis Costello","synonym":""},{"value":"Hall & Oates","synonym":""},{"value":"Kraftwerk","synonym":""},{"value":"Queen","synonym":""},{"value":"Little Richard","synonym":""},{"value":"Earth Wind & Fire","synonym":""},{"value":"The Eagles","synonym":""},{"value":"Van Halen","synonym":""},{"value":"AC/DC","synonym":""},{"value":"KISS","synonym":""},{"value":"Blondie","synonym":""},{"value":"Sex Pistols","synonym":""},{"value":"Talking Heads","synonym":""},{"value":"Iron Maiden","synonym":""},{"value":"The Clash","synonym":""},{"value":"B","synonym":""},{"value":"King","synonym":""},{"value":"Prince","synonym":""},{"value":"U2","synonym":""},{"value":"The Police","synonym":""},{"value":"Whitney Houston","synonym":""},{"value":"Def Leppard","synonym":""},{"value":"Madonna","synonym":""},{"value":"Eurythmics","synonym":""},{"value":"R","synonym":""},{"value":"E","synonym":""},{"value":"M","synonym":""},{"value":"Depeche Mode","synonym":""},{"value":"Run-D","synonym":""},{"value":"C","synonym":""},{"value":"Buddy Holly","synonym":""},{"value":"Anthrax","synonym":""},{"value":"Beastie Boys","synonym":""},{"value":"Metallica","synonym":""},{"value":"Slayer","synonym":""},{"value":"Public Enemy","synonym":""},{"value":"Megadeth","synonym":""},{"value":"Guns N' Roses","synonym":""},{"value":"Radiohead","synonym":""},{"value":"NWA","synonym":""},{"value":"Nirvana","synonym":""},{"value":"Sam Cooke","synonym":""},{"value":"Tupac Shakur","synonym":""},{"value":"Jay-Z","synonym":""},{"value":"Eminem","synonym":""},{"value":"Pearl Jam","synonym":""},{"value":"The Notorious B","synonym":""},{"value":"I","synonym":""},{"value":"G","synonym":""},{"value":"Outkast","synonym":""},{"value":"Justin Timberlake","synonym":""},{"value":"Wu-Tang Clan","synonym":""},{"value":"Amy Winehouse","synonym":""},{"value":"Daft Punk","synonym":""},{"value":"Elvis Presley","synonym":""}]},"utterances":{"welcome sample buttons":{"id":"5f9ea251aa3860eac01fbca6","value":"welcome sample buttons","synonym":"","tags":[],"buttons":[{"label":"next track","utterance":"","link":""},{"label":"previous track","utterance":"","link":""},{"label":"stop playing","utterance":"","link":""},{"label":"play some classical music","utterance":"","link":""},{"label":"play some blues music","utterance":"","link":""}],"audio":[]},"youtube found XXX results":{"id":"5f9d7b59d6c92239ecc9bef3","value":"youtube found XXX results","synonym":"youtube found {youtubeResultsCount} results","tags":[]},"what kind of music":{"id":"5f9d624311267aa5a4826a45","value":"what kind of music","synonym":"what kind of music","tags":[]},"done":{"id":"5f9b5a2c05f865252afc3cd2","value":"done","synonym":"done","tags":[]},"ask youtube criteria":{"id":"5f9d5f30800fd98fe298e669","value":"ask youtube criteria","synonym":"ask youtube criteria","tags":[]},"play youtube video":{"id":"5f9a46cc6f166a1603fdcaaa","value":"play youtube video","synonym":"","tags":["youtube"],"video":[{"label":"","href":"{playingYoutubeVideo}","youtubeVideoId":"{url}","start":"30","end":"33","autoplay":"true"}],"buttons":[]},"play youtube videos":{"id":"5f9d5f9b9d7d5aabf855897d","value":"play youtube videos","synonym":"play youtube videos","tags":[]},"show youtube videos":{"id":"5f9d5f9ac1735e384ff30ae1","value":"show youtube videos","synonym":"show youtube videos","tags":[]},"youtube signin fail":{"id":"5f9d6002045dfcde37f9ed42","value":"youtube signin fail","synonym":"youtube signin fail","tags":[]},"youtube signin success":{"id":"5f9d5ff2be6eb33ca5518177","value":"youtube signin success","synonym":"youtube signin success","tags":[]}},"regexps":[],"rasa":{"slots":{"genre":{"slotType":""},"artist":{"slotType":"","slotAutofill":"No"}}},"created_date":1604354625310,"updated_date":1604450049436,"user":"5f5eda81f38a86365b12efc8","userAvatar":"Syntithenai","__v":1,"actions":{"youtube previous track":{"id":"5f9ea18c2120a0afc52deb0e","value":"youtube previous track","synonyms":"","tags":["youtube"],"apis":[{"text":"youtube","functionCall":"nextTrack"}],"synonym":"api('youtube').previousTrack().then(function(result) {\n    resolve(output,slots)\n})"},"youtube next track":{"id":"5f9ea178bbbe525e42332fc6","value":"youtube next track","synonyms":"","tags":[],"apis":[{"text":"youtube","functionCall":""}],"synonym":"api('youtube').nextTrack().then(function(result) {\n    resolve(output,slots)\n})"},"youtube stop playing ":{"id":"5f9e9f54b7e82660d33fc3c9","value":"youtube stop playing ","synonyms":"","tags":[],"apis":[{"text":"youtube","functionCall":"stop"}],"synonym":"api('youtube').stop()\nresolve(output,slots)"},"play youtube with api":{"id":"5f9b51bdd7a998c3ec96340c","value":"play youtube with api","synonym":"console.log('API INTENT')\nconsole.log(intent)\nvar entities = intent && intent.slots ? intent.slots : {}\nvar criteria = entities['genre'] ? entities['genre'] : (entities['genre'] ? entities['genre'] : '')\n\nconsole.log(['ACTION SESARCH YT',criteria])\n\nif (!criteria) {\n    response('what kind of music').then(function() {\n        resolve(output,slots)\n    })\n} else {\n    api('youtube').init().then(function() {\n        console.log(['ACTION SESARCH YT',criteria])\n        api('youtube').searchMusic(criteria).then(function(result) {\n            console.log(['ACTION SESARCH YTRES ',result])\n            //response('youtube found XXX results').then(function() {\n\n                api('youtube').play().then(function() {\n                    console.log(['done play'])\n                        response('done').then(function() {\n                           // response('la la').then(function() {\n                                console.log(['played first res DONE '])\n                                resolve(output,slots)\n                          //  })\n                        })\n                })\n            //})\n            \n        }) \n    })\n       \n}    \n    \n\n//response('done').then(function() {\n //   resolve(output,slots)\n//})","tags":["youtube"],"apis":[{"text":"youtube","functionCall":"search"}],"responses":[{"text":"done"},{"text":"what kind of music"},{"text":"youtube found XXX results"}],"forms":[]}},"apis":{"youtube":{"id":"5f934e5e404d71acb287473d","value":"youtube","synonym":"console.log(['search yt api',window])\n\n\nvar apiKey=\"AIzaSyC7i_A7pxb5G9-x-qIRa8Ha5MJhwYeNq-o\"\nvar clientId=\"707484414203-p03gstk93f5biqm2g5tcpqfuvho0h1at.apps.googleusercontent.com\"\n\nfunction init() {\n    // initialise\n    return new Promise(function(resolve,reject) {\n        gapi.load(\"client:auth2\", function() {\n            gapi.auth2.init({client_id: clientId});\n            loadClient().then(function() {\n                console.log(\"client loaded\"); \n                resolve()\n            }) \n        });\n    })   \n    \n}\n\nfunction loadClient() {\n    return new Promise(function(resolve,reject) {\n        gapi.client.setApiKey(apiKey);\n        gapi.client.load(\"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\").then(\n            function() { console.log(\"GAPI client loaded for API\"); resolve()},\n            function(err) { console.error(\"Error loading GAPI client for API\", err); reject()}\n        );\n    })\n}\n\nfunction authenticate() {\n    return new Promise(function(resolve,reject) {\n        gapi.auth2.getAuthInstance()\n            .signIn({scope: \"https://www.googleapis.com/auth/youtube.force-ssl\"}).then(\n                function(data) { console.log([\"Sign-in successful\",data]); response('youtube signin success').then(function() {\n                    resolve(data)\n                })},\n                function(err) { console.error(\"Error signing in\", err); resolve() }\n            );\n    })\n}\n\nfunction search(criteria,category) {\n    return new Promise(function(resolve,reject) {\n        if (criteria && criteria.trim()) {\n            gapi.client.youtube.search.list({\n              \"part\": [\n                \"snippet\"\n              ],\n              \"maxResults\": 5,\n              \"q\": criteria,\n              \"type\": [\n                \"video\" \n              ],\n              \"videoCategoryId\": category\n            })\n            .then(function(response) {\n                // Handle the results here (response.result has the parsed body).\n                if (response && response.result && response.result.items) {\n                    console.log('SET TY SLOTS')\n                    slot('youtubeResults',JSON.stringify(response.result.items))\n                    slot('youtubeResultsCount',response.result.items.length)\n                }\n                resolve(response.result)\n            },\n            function(err) { console.error(\"Search youtube error\", err); });\n        } else {\n            response('ask youtube criteria').then(function() {\n                resolve()\n            })\n        }\n    })\n}\n\nfunction searchMusic(criteria) {\n    return search(criteria,\"10\")\n}\n\n\nfunction showResults(result) {\n    var results= []\n    try {\n        videos = JSON.parse(slots['youtubeResults'])\n    } catch (e) {\n        console.log(e)\n    }\n    return new Promise(function(resolve,reject) {\n        console.log(['VID',videos]);\n        if (videos && videos.length > 0 && videos[0] && videos[0].id && videos[0].id.videoId) {\n           // slot('playingYoutubeVideo','https://www.youtube.com/embed/'+ videos[0].id.videoId)\n            response('show youtube videos').then(function() {\n                resolve()\n            })\n        }\n    })\n} \n\nfunction stop() {\n    slot('youtubeIsPlaying',false)\n}\n\nfunction play() {\n    slot('youtubeIsPlaying',true)\n    return playTracks()\n}\n\nfunction playTracks() {\n    return new Promise(function(resolve,reject) {\n        if (slots['youtubeIsPlaying']) { \n            var results= []\n            try {\n                results = JSON.parse(slots['youtubeResults'])\n            } catch (e) {\n                console.log(e)\n            }\n            var currentTrack = slots['playingYoutubeVideoKey'] && slots['playingYoutubeVideoKey'] > 0 ? slots['playingYoutubeVideoKey']  : 1;\n            console.log(['CURRENTTRACK'+currentTrack,results])\n            if (results && results.length >= currentTrack) {\n                console.log('CURRENTTRACK SET SLOTS')\n                slot('playingYoutubeVideo','https://www.youtube.com/embed/'+ results[currentTrack - 1].id.videoId)\n                slot('playingYoutubeVideoKey',currentTrack )\n                console.log('CURRENTTRACK SET SLOTS',slots)\n                response('play youtube video').then(function() {\n                    console.log('CURRENTTRACK played')\n                    if (results && results.length > currentTrack) {\n                        console.log('CURRENTTRACK do next')\n                        slot('playingYoutubeVideoKey',currentTrack + 1 )\n                        playTracks().then(function() {\n                            console.log('CURRENTTRACK done next')\n                          resolve()  \n                        })\n                    } else {\n                        console.log('CURRENTTRACK SET SLOTS no more')\n                        resolve()\n                    }\n                })\n            }\n        } else {\n            resolve()\n        }\n    })\n}\n\nfunction nextTrack() {\n    var currentTrack = slots['playingYoutubeVideoKey'] && slots['playingYoutubeVideoKey'] > 0 ? slots['playingYoutubeVideoKey'] + 1 : 1;\n    slot('playingYoutubeVideoKey',currentTrack )\n    return playTracks()\n}\n\nfunction previousTrack() {\n    var currentTrack = slots['playingYoutubeVideoKey'] && slots['playingYoutubeVideoKey'] > 0 ? slots['playingYoutubeVideoKey'] - 1 : 1;\n    slot('playingYoutubeVideoKey',currentTrack )\n    return playTracks()\n}\n\nfunction playFirstResult(result) {\n    videos = result.items\n    return new Promise(function(resolve,reject) {\n        console.log(['VID fst',videos]);\n        if (videos && videos.length > 0 && videos[0] && videos[0].id && videos[0].id.videoId) {\n            slot('playingYoutubeVideo','https://www.youtube.com/embed/'+ videos[0].id.videoId)\n            slot('playingYoutubeVideoKey',1)\n            console.log(['SS',slots['playingYoutubeVideo']])\n            response('play youtube video').then(function() {\n                resolve()\n            })\n        }\n    })\n} \n\nreturn {\n    init: init, search: search,searchMusic: searchMusic,authenticate: authenticate,showResults: showResults,play : play, nextTrack: nextTrack, previousTrack: previousTrack,playFirstResult: playFirstResult, stop: stop\n}\n","tags":["youtube"],"responses":[{"text":"play youtube video"},{"text":"ask youtube criteria"},{"text":"show youtube videos"},{"text":"play youtube videos"},{"text":"youtube signin success"},{"text":"youtube signin fail"}],"forms":[],"apis":[]}},"rules":[{"rule":"previous","steps":["intent previous track","action youtube previous track"]},{"rule":"next","steps":["intent next track","action youtube next track"]},{"rule":"stop","steps":["intent stop playing","action youtube stop playing "]},{"rule":"play music","steps":["intent play music","action play youtube with api"]},{"rule":"welcome","steps":["intent welcome","utter welcome sample buttons"],"conditions":[]}]}
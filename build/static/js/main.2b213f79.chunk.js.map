{"version":3,"sources":["www/images/arrow-thick-right.svg","index.js","www/images/check.svg","www/utils.js","www/useDB.js","www/useImportMergeFunctions.js","www/useImportUtils.js","www/useImportFunctions.js","www/components/TagAllDropDown.js","www/components/IntentAllDropDown.js","www/components/SkillAllDropDown.js","www/components/Components.js","www/components/JSONTextEditor.js","www/LocalStorageUploadManager.js","www/components/ListAllDropDown.js","www/components/SearchInput.js","www/components/ListsManagerSearchBar.js","www/useListItemRow.js","www/components/SuggestionComponent.js","www/ListsManagerRow.js","www/useDBSingleKey.js","www/useListItemEditor.js","www/ListsManager.js","www/components/UtterancesManagerSearchBar.js","www/UtterancesManagerRow.js","www/UtterancesManager.js","www/components/RegexpsManagerSearchBar.js","www/RegexpsManagerRow.js","www/RegexpsManager.js","www/useNluRow.js","www/NluExampleRow.js","www/components/EditorSearchBar.js","www/useNluEditor.js","www/NluExampleEditor.js","www/components/NavbarComponent.js","www/NluImportRow.js","www/NluImportEditor.js","www/export/createZip.js","www/export/exportJOVO.js","www/export/exportJSON.js","www/export/exportMycroft.js","www/export/RASATemplates.js","www/export/exportRASAMD.js","www/export/exportRASAJSON.js","www/export/index.js","www/PublishPage.js","www/components/DropDownComponent.js","www/components/TagComponent.js","www/components/NluSkillEditorComponent.js","www/useRestEndpoint.js","www/useSkillsEditor.js","www/NluSkillsEditor.js","www/ImportReviewPage.js","www/SkillSearchPage.js","www/App.js","www/serviceWorker.js","www/index.js","www/images/thumb-up.svg","www/images/helpoverview.svg","www/images/singingman.svg","www/images/waiting.gif","www/images/thumb-down.svg","www/images/arrow-thick-left.svg"],"names":["module","exports","__webpack_require__","p","require","balanced","RASA","slotTypes","unfeaturized","text","bool","list","float","min_value","max_value","categorical","values","autofillOptions","GoogleAssistant","entityTypes","Alexa","toSnakeCase","str","toLowerCase","replace","snakeToCamelCase","group","toUpperCase","camelToSnakeCase","letter","concat","generateObjectId","Date","getTime","toString","Math","random","parentUrl","url","split","slice","join","multiplyArrays","a","b","results","map","aval","bval","push","uniquifyArray","Array","isArray","index","value","Object","keys","uniquifyArrayOfObjects","field","emptyIndex","expandOptions","options","body","innerOptions","pre","post","sentence","replaceEntities","example","entities","sort","start","offset","newExample","entity","type","end","diff","length","replaceEntitiesWithValues","replacement","splitSentences","final","splits","splitText","trim","reducer","state","action","parseInt","item","toConsumableArray","items","Error","useDB","database","databaseTable","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","localforageStorage","localforage","createInstance","name","storeName","getId","id","findKeyBy","k","loadAll","then","ipromises","key","Promise","iresolve","ireject","getItem","res","all","updated_date","saveItem","console","log","isNewItem","setItem","found","listItem","listItemIndex","deleteItem","getIdForIndex","removeItem","setItems","clear","findBy","filter","matchFunction","filtered","i","useImportMergeFunctions","localforageStorageIntents","localforageStorageEntities","localforageStorageUtterances","localforageStorageRegexps","localforageStorageSkill","mergeIntents","examples","skill","resolve","reject","allItems","allItemsIndex","JSON","stringify","intent","newItems","replacements","skills","updated","created","error","mergeEntities","allLists","allListsIndex","newListItem","tags","existingAlternatives","synonym","newAlternatives","mergeUtterances","utterances","addTag","mergeRegexps","regexps","mergeSkill","title","detectFileType","json","parse","data","rasa_nlu_data","common_examples","intents","invocation","lists","e","JSZip","loadAsync","zip","forEach","relativePath","zipEntry","indexOf","unzip","content","pathFilters","promises","j","pathFilter","file","async","fileContent","path","catch","filesWithContent","generateIntentSplits","newSplits","line","intentGen","latestText","limit","extractEntities","sortExampleSplits","generateEntitySplits","parts","extractSynonym","alternative","generateUtteranceSplits","tag","cleanListItem","sortListSplits","generateIntentSplitsForMycroft","intentLabel","intentExample","intentKey","generateSplitsFromRasaMd","files","allIntents","allRegexps","allSynonyms","entitiesFromLookup","intentData","lines","headerLine","dataLines","startsWith","regexTitle","entityType","remainder","cleanString","undefined","remainderParts","remainderJSONParts","entityTypeParts","generateSplitsFromRasaJson","cleanEntities","el","generateSplitsFromJovoJson","phrases","phrase","inputs","inputKey","input","markerStart","entityi","useImportFunctions","sendPageMessage","_useImportMergeFuncti","_useImportUtils","useImportUtils_unzip","useImportUtils_generateIntentSplits","useImportUtils_generateEntitySplits","useImportUtils_generateUtteranceSplits","useImportUtils_cleanListItem","useImportUtils_extractSynonym","useImportUtils_sortListSplits","useImportUtils_sortExampleSplits","useImportUtils_detectFileType","useImportUtils_generateSplitsFromJovoJson","useImportUtils_generateSplitsFromRasaJson","useImportUtils_generateSplitsFromRasaMd","useImportUtils_generateIntentSplitsForMycroft","history","useHistory","importTextIntents","arguments","importTextEntities","importIntents","fileType","importJsonIntents","importUtterances","utterance","importTextUtterances","importJsonUtterances","importEntities","importJsonEntities","importAll","entitiesData","utterancesData","importSkillJson","setTimeout","fileParts","fullPath","pathParts","fileName","intentName","nameFromFilename","endsWith","importMycroft","askill1","askill2","askill3","importJovo","importRASA","TagAllDropDown","props","react_default","createElement","Dropdown","as","ButtonGroup","Toggle","size","Button","Menu","style","display","onSubmit","preventDefault","tagAll","target","InputGroup","className","onChange","setTagAllValue","tagAllValue","variant","onClick","lookups","tagLookups","skillKey","Item","untagAll","marginLeft","IntentAllDropDown","intentAll","setIntentAllValue","intentAllValue","intentLookups","SkillAllDropDown","skillSetAll","setSkillAllValue","skillAllValue","skillLookups","unskillAll","MatchesTallies","fontWeight","filteredItems","HelpMenu","react_router_dom","marginRight","to","HelpText","src","helpSVG","width","height","alt","href","HelpTextImport","HelpTextAbout","HelpTextExport","NewFileButtons","match","FileSelector","lib_default","multiple","handleFileSelection","WithSelectedDropDowns","react","selectedTally","components_SkillAllDropDown","components_IntentAllDropDown","components_TagAllDropDown","JSONTextEditor","_useState","useState","_useState2","setTitle","_useState3","_useState4","setText","_useState5","_useState6","isJson","setIsJson","_useState7","_useState8","setJson","_useState9","_useState10","editorMode","setEditorMode","_useState11","_useState12","editorOptions","setEditorOptions","params","itemId","useEffect","jsonParsed","parentLink","linkParts","editorModeOptions","minHeight","es","theme","ace","mode","allowedModes","IndexPage","FilesList","localforageStorageImport","saveSkill","showError","setPageMessage","ListGroup","Fragment","window","confirm","generateAsync","blob","saveAs","downloadZip","Blob","importFunctions","LocalStorageUploadManager","_useDB","ev","result","_result","fileData","created_date","saveItemWrap","react_router","render","assign","exact","iprops","ListAllDropDown","listsLookups","SearchInput","_ref","searchFilter","setSearchFilter","placeholder","ListsManagerSearchBar","topTagOptions","setTopTagOptions","topTagOptionss","listKey","setListFilterValue","unshift","selectedListTally","resetSelection","checkImage","selectAll","components_SearchInput","listFilterValue","createEmptyItem","useListItemRow","splitNumber","selectionState","setSelectionState","setTags","reactTags","React","createRef","onTagDelete","newTags","splice","newItem","newTag","onTagAddition","tagArray","updateExampleContent","updateExampleSynonym","selectItem","isSelected","deselectItem","SuggestionComponent","query","ListsManagerRow","_useListItemRow","position","textAlign","borderTop","borderRadius","marginTop","ReactTags_umd_default","placeholderText","minQueryLength","maxSuggestionsLength","autoresize","allowNew","ref","suggestionComponent","suggestions","listName","onDelete","onAddition","ret","singleKey","initialData","sortFunction","useListItemEditor","databaseKey","updateLists","_useDBSingleKey","useDBSingleKey","setFilteredItems","filteredItemsKeys","setFilteredItemsKeys","listRef","useParams","listId","matchText","matchPicklist","itemKeys","location","pathname","val","tagValue","finalTags","current","resetAfterIndex","getItemSize","baseSize","innerWidth","deleteAll","RenderRow","saveNlu","ListsManager","_useListItemEditor","updateFunctions","components_ListsManagerSearchBar","components_ListAllDropDown","index_esm","itemData","itemKey","itemCount","itemSize","renderEditor","UtterancesManagerSearchBar","utteranceTagsLookups","selectedUtteranceTally","UtterancesManagerRow","UtterancesManager","updateUtterances","components_UtterancesManagerSearchBar","RegexpsManagerSearchBar","regexpTagsLookups","selectedRegexTally","initData","RegexpsManagerRow_UtterancesManagerRow","RegexpsManager","updateRegexps","components_RegexpsManagerSearchBar","useNluRow","newEntity","setNewEntity","intentTitle","setIntentTitle","setSkills","reactSkills","createSelection","createTextRange","selRange","collapse","moveStart","moveEnd","select","setSelectionRange","selectionStart","selectionEnd","focus","entityTypeChanged","entityNumber","newEntities","typeChanged","textSelection","startTextSelection","endTextSelection","isOverlapProblem","bypass","isOverlap","onSkillDelete","newSkills","newSkill","onSkillAddition","diffPos","findFirstDiffPos","insertionLength","entityIndex","deletionLength","entityClicked","entityKey","document","getElementById","intentChanged","entityDelete","setSkill","NluExampleRow","_useNluRow","textInput","setTextInput","intentOptions","entitiesDropdowns","entityOptions","entityLookups","textSelectionFrom","onFocus","onSelect","getSelection","EditorSearchBar","topskillOptions","setSkillFilterValue","setIntentFilterValue","skillFilterValue","intentFilterValue","useNluEditor","updateLookups","skillId","intentId","intentFilter","skillFilter","searchFilterBool","newIntent","intentValue","skillValue","heightPerLine","tagsPerLine","entitiesPerLine","skillsPerLine","tallyExtras","round","saveAll","lsItems","exampleItems","saveLSItem","NluExampleEditor","_useNluEditor","components_EditorSearchBar","NavbarComponent","astyle","paddingLeft","currentPage","pages","/","show","/search","/sources","/regexps","/lists","/utterances","/examples","/skills","/help","setStuff","user","token","access_token","getAxiosClient","get","links","link","page","Navbar","bg","border","message","top","left","background","padding","minWidth","zIndex","fireImage","vAlign","isLoggedIn","waitingImage","right","waiting","NluImportRow","thumbupImage","thumbdownImage","NluImportEditor","paddingRight","arrowthickleftImage","arrowthickrightImage","createZip","zipStructure","recurseZipStructure","base64","folders","folder","exportJOVO","_callee","regenerator_default","wrap","_context","prev","next","abrupt","jovo","entityTypeName","googleType","alexaType","dialogflow","alexa","synonyms","synonymsIndex","entityExtrasList","inputTypes","stop","_callee2","_context2","t0","t1","sent","exportJSON","listsStorage","utterancesStorage","dbEntities","usedLists","filledLists","useList","iitem","utterancesLists","allUtterances","thisUtterance","oresolve","oreject","exportMycroft","modelFiles","combinedEntities","RASATemplates","config","credentials","endpoint","actions","single_action","actionName","domain","stories","session","generateFolderTree","nluContent","fileLookups","actionsContent","configContent","domainContent","credentialsContent","endpointsContent","actionFiles","storyData","folderTree","storyContent","exportFormats","exportFunction","entityLists","entityValue","entityList","synonymsOut","nluOut","intentItem","rasaConfig","rasaCredentials","rasaEndpoint","domainActions","rasaActions","string","snake","substring","domainEntities","domainIntents","domainSlots","slots","domainSlotsMeta","slot","slotType","domainContentParts","rasaSession","utteranceKey","rasaStories","exportRASAMD","regex_features","entity_synonyms","exportRASAJSON","PublishPage","currentSkill","_id","skillToSave","setCurrentSkill","setMongoId","loadSkills","DropDownComponent","filterValue","setFilterValue","optionKey","TagComponent","setRegexpEntity","setRegexpIntent","components_DropDownComponent","NluSkillEditorComponent","utteranceTags","listItemKey","utteranceListTags","rasa","entitiesForSkill","skillTags","marginBottom","removeSkillTag","addSkillTag","collatedItems","collatedIntent","useCurrentIntent","currentIntent","completionVariant","collatedCounts","setCurrentIntent","Badge","collatedEntity","listTags","removeListFromSkillEntity","addListToSkillEntity","setAlexaEntityType","setGoogleAssistantEntityType","tagComponent","regexpsLookups","regexpsCompleteLookups","removeRegexp","addRegexp","utterancesLookups","removeUtterance","addUtterance","removeUtteranceList","addUtteranceList","Tabs","defaultActiveKey","Tab","eventKey","newSlot","newSlotValue","setNewSlotValue","slotAutofill","setRASASlotAutofill","setRASASlotType","deleteSlot","fontStyle","setRASAActions","setRASAConfig","setRASAStories","setRASACredentials","setRASAEndpoint","setRASASession","setInvocation","useRestEndpoint","axiosClient","restUrl","process","modelType","patch","headers","Content-Type","doPatch","put","doPut","doPost","delete","doDelete","doGet","searchItems","skip","populate","queryParts","encodeURIComponent","doGetMany","useSkillsEditor","skillKeys","setSkillKeys","setEntitiesForSkill","listsForEntity","setListsForEntity","listsManager","_useState13","_useState14","setCollatedItems","_useState15","_useState16","collatedTags","setCollatedTags","_useState17","_useState18","setCollatedCounts","_useState19","_useState20","_useState21","_useState22","skillMatches","setSkillMatches","_useState23","_useState24","skillUpdatedMatches","setSkillUpdatedMatches","skillsStorage","examplesStorage","_useRestEndpoint","_useState25","_useState26","_useState27","_useState28","mongoId","findOnlineSkill","loadedSkill","forceReload","thisSkill","entitiesListsData","utterancesListsData","mycroft","err","entityName","indexEntities","_indexIntentsAndTags","newCollatedItems","newCollatedCounts","newCollatedTags","indexIntentsAndTags","_indexIntentsAndTags2","listIndex","regexp","isNaN","NaN","utteranceListsLookups","utteranceStorage","newSlots","NluSkillsEditor","skillsEditor","skillsList","color","toUTCString","publish","exportFormat","now","zipBody","ContextAwareToggle","children","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","isCurrentEventKey","ImportReviewPage","skillTitle","setSkillTitle","collatedIntents","setCollatedIntents","collatedEntities","setCollatedEntities","importData","setImportData","Accordion","Card","Header","counts","Collapse","Body","iikey","ikey","SkillSearchPage","setSuggestions","searchResults","setSearchResults","sourcesDB","importItem","loadSkill","doSearch","queryIn","userAvatar","Form","Row","Col","dist_default","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","onSuggestionSelected","event","_ref2","suggestionValue","suggestionIndex","sectionIndex","method","inputProps","Container","fluid","bStyle","sm","md","lg","xl","margin","axios","SiteMenu","App","setWaiting","pageMessage","setPageMessageInner","messageTimeout","timeout","clearTimeout","setIntentLookups","setEntityLookups","setTagLookups","setSkillLookups","setListsLookups","setSelectedTally","setUtterancesLookups","setUtteranceListsLookups","setUtteranceTagsLookups","setRegexpsLookups","setRegexpsCompleteLookups","regexpListsLookups","setRegexpListsLookups","_useState29","_useState30","setRegexpTagsLookups","_useState31","_useState32","listTally","setListTally","_useState33","_useState34","setSelectedListTally","_useState35","_useState36","listTallyByList","setListTallyByList","_useState37","_useState38","selectedListTallyByList","setSelectedListTallyByList","_useState39","_useState40","regexTally","setRegexTally","_useState41","_useState42","setSelectedRegexTally","_useState43","_useState44","utteranceTally","setUtteranceTally","_useState45","_useState46","setSelectedUtteranceTally","_useState47","_useState48","_useState49","_useState50","setSkillTags","startWaiting","stopWaiting","selected","distinct","self","newSelectedLists","newLists","tally","utteranceLists","utteranceIndex","utteranceCompleteIndex","index_modern","authServer","authServerHostname","setUser","getMediaQueryString","getCsrfQueryString","loadUser","useRefreshToken","logout","saveUser","component","www_ImportReviewPage","align","loginButtons","logoutRedirect","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","StrictMode","www_App","URL","origin","addEventListener","fetch","Service-Worker","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2b213f79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-thick-right.9ba7683e.svg\";","// \"Create React App\" tooling expects to find the WWW root here,\n// so we simply use this file to import the ./www directory.\n//\n// For the backend, we set the container's entrypoint to src/api/index.js\n\nmodule.exports = require('./www')\n","module.exports = __webpack_public_path__ + \"static/media/check.8ab01baf.svg\";","//const yaml = require('js-yaml');\n// FUNCTIONS \nvar balanced = require('balanced-match');\n\nconst RASA = {\n    slotTypes : {\n        'unfeaturized': {},\n        'text': {},\n        'bool': {},\n        'list': {},\n        'float': {'min_value':'int', 'max_value':'int'},\n        'categorical': {'values':'list'}\n    },\n    autofillOptions: ['Yes','No']\n}\n\n// https://cloud.google.com/dialogflow/docs/reference/system-entities\nconst GoogleAssistant = {\n    entityTypes: [\"@sys.date-time\",\"@sys.date\",\"@sys.date-period\",\"@sys.time\",\"@sys.time-period\",\"@sys.number\",\"@sys.cardinal\",\"@sys.ordinal\",\"@sys.number-integer\",\"@sys.number-sequence\",\"@sys.flight-number\",\"@sys.unit-area\",\"@sys.unit-currency\",\"@sys.unit-length\",\"@sys.unit-speed\",\"@sys.unit-volume\",\"@sys.unit-weight\",\"@sys.unit-information\",\"@sys.percentage\",\"@sys.temperature\",\"@sys.duration\",\"@sys.age\",\"@sys.currency-name\",\"@sys.unit-area-name\",\"@sys.unit-length-name\",\"@sys.unit-speed-name\",\"@sys.unit-volume-name\",\"@sys.unit-weight-name\",\"@sys.unit-information-name\",\"@sys.address\",\"@sys.zip-code\",\"@sys.geo-capital\",\"@sys.geo-country\",\"@sys.geo-country-code\",\"@sys.geo-city\",\"@sys.geo-state\",\"@sys.place-attraction\",\"@sys.airport\",\"@sys.location\",\"@sys.email\",\"@sys.phone-number\",\"@sys.person\",\"@sys.music-artist\",\"@sys.music-genre\",\"@sys.color\",\"@sys.language\",\"@sys.any\",\"@sys.url\"]\n}\n\n//https://developer.amazon.com/en-US/docs/alexa/custom-skills/slot-type-reference.html\",\nconst Alexa = {\n    entityTypes: [\"AMAZON.DATE\",\"AMAZON.DURATION\",\"AMAZON.FOUR_DIGIT_NUMBER\",\"AMAZON.NUMBER\",\"AMAZON.Ordinal\",\"AMAZON.PhoneNumber\",\"AMAZON.TIME\",\"AMAZON.SearchQuery\",\"AMAZON.Actor\",\"AMAZON.Airline\",\"AMAZON.Airport\",\"AMAZON.Anaphor\",\"AMAZON.Animal\",\"AMAZON.Artist\",\"AMAZON.Author\",\"AMAZON.Book\",\"AMAZON.City\",\"AMAZON.Color\",\"AMAZON.Corporation\",\"AMAZON.Country\",\"AMAZON.CreativeWorkType\",\"AMAZON.DayOfWeek\",\"AMAZON.FictionalCharacter\",\"AMAZON.FirstName\",\"AMAZON.Food\",\"AMAZON.Genre\",\"AMAZON.Language\",\"AMAZON.Month\",\"AMAZON.Movie\",\"AMAZON.MusicAlbum\",\"AMAZON.MusicGroup\",\"AMAZON.Musician\",\"AMAZON.MusicRecording\",\"AMAZON.Person\",\"AMAZON.RadioChannel\",\"AMAZON.Region\",\"AMAZON.RelativePosition\",\"AMAZON.Room\",\"AMAZON.Sport\",\"AMAZON.StreetName\",\"AMAZON.TVSeries\",\"AMAZON.VideoGame\",\"AMAZON.VisualModeTrigger\"]\n}\n\n\nfunction toSnakeCase(str) {\n    return str.toLowerCase().replace(/[^a-z]/g, '_').replace('__','_')\n}\n\nconst snakeToCamelCase = (str) => str.replace(\n    /([-_][a-z])/g,\n    (group) => group.toUpperCase()\n                    .replace('-', '')\n                    .replace('_', '')\n);\n\nconst camelToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\n\n\n\nfunction generateObjectId() {\n    var timestamp = (new Date().getTime() / 1000 | 0).toString(16);\n    return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function() {\n        return (Math.random() * 16 | 0).toString(16);\n    }).toLowerCase();\n}\n   \nfunction parentUrl(url) {\n    return url.split(\"/\").slice(0,-1).join(\"/\") \n}\n\nfunction concatText(text,words) {\n   let parts = text.split(' ')\n   let shorter = parts.slice(0,20).join(' ')\n   return (shorter.length < text.length) ? shorter + '...' : shorter;\n}\n\n\n\n    \n    function findFirstDiffPos(a, b) {\n      if (a === b) return -1;\n      for (var i=0; a[i] === b[i]; i++) {}\n      return i;\n    }\n    \n    function multiplyArrays(a,b) {\n        var results=[]\n        a.map(function(aval) {\n              b.map(function(bval) {\n                  results.push(aval + bval)\n              })\n        })\n        return results\n    }\n\n    function uniquifyArray(a) {\n        //console.log(['UNIQARRAY',a])\n        if (Array.isArray(a)) {\n            var index = {}\n            a.map(function(value) {\n                index[value] = true \n                return null\n            })\n            return Object.keys(index)\n        } else {\n            return []\n        }\n    }\n\n    function uniquifyArrayOfObjects(a,field) {\n         if (Array.isArray(a)) {\n             var index = {}\n            var emptyIndex = null\n            a.map(function(value) {\n                if (value) {\n                    if (value[field]) {\n                        index[value[field]] = value \n                    } else {\n                        emptyIndex = value\n                    }\n                }\n                return null\n            })\n            if (emptyIndex) return [emptyIndex].concat(Object.values(index))\n            else return Object.values(index)\n        } else {\n            return []\n        }\n    }\n    \n    // recursively expand sentence containing options eg (the|an(y|)|my) into an array of expanded sentences\n    function expandOptions(text) {\n        var options = []\n        var b = balanced('(',')',text)\n        if (b && b.body) {\n            var innerOptions = null\n            var ib = balanced('(',')',b.body)\n            if (ib) {\n                innerOptions = expandOptions(b.body)\n            } else {\n                innerOptions = b.body.split(\"|\")\n            }\n            innerOptions = uniquifyArray(innerOptions)\n            var sentences = uniquifyArray(multiplyArrays(multiplyArrays([b.pre],innerOptions),[b.post]))\n            sentences.map(function(sentence) {\n               options=[].concat(options,expandOptions(sentence))  \n            })\n        } else {\n            options = text.split(\"|\")\n        }\n        return uniquifyArray(options)\n    }\n    \n    function replaceEntities(example,entities) {\n        // replace entity values with {entityName}\n        // first sort entities by start key\n        entities = entities.sort(function(a,b) {\n          if (a.start < b.start) return -1\n          else return 1  \n        })\n        var offset = 0\n        var newExample = example\n        entities.map(function(entity) {\n            newExample = newExample.slice(0,entity.start + offset)+\"{\"+entity.type+\"}\"+newExample.slice(entity.end + offset)\n            var diff = (entity.end - entity.start) - (entity.type.length + 2)\n            offset -= diff\n            return null\n        })\n        return newExample\n    }\n    \n    function replaceEntitiesWithValues(example,entities) {\n        // replace entity values with {entityName}\n        // first sort entities by start key\n        if (example && Array.isArray(entities)) {\n                entities = entities.sort(function(a,b) {\n              if (a.start < b.start) return -1\n              else return 1  \n            })\n            var offset = 0\n            var newExample = example\n            entities.map(function(entity) {\n                var replacement = \"[\"+entity.value+\"](\"+entity.type+\")\"\n                newExample = newExample.slice(0,entity.start + offset)+replacement+newExample.slice(entity.end + offset)\n                var diff = (entity.end - entity.start) - (replacement.length)\n                offset -= diff\n                return null\n            })\n            return newExample\n        } else {\n            return example\n        }\n    }\n    /**\n     *  create array by splitting on newline and fullstop\n     */\n    function splitSentences(text) {\n      var final = []\n      if (text) {\n          // split by newline and full stop\n         var splits = text.split('\\n').join('::::').split('.').join('::::').split('::::') //.map(function(value) { return value.trim()})\n        // trim all splits\n        for (var splitText in splits) {\n            if(splitText.trim().length > 0) final.push(splits[splitText])\n        }\n     }\n     return final;\n    }\n    \nexport {generateObjectId, parentUrl, concatText , findFirstDiffPos,uniquifyArray, multiplyArrays, expandOptions, splitSentences, uniquifyArrayOfObjects, replaceEntities,replaceEntitiesWithValues,  RASA, GoogleAssistant, Alexa, snakeToCamelCase, camelToSnakeCase, toSnakeCase }\n","import {useReducer} from 'react';\nimport {generateObjectId} from './utils'\nimport localforage from 'localforage'\n\n// handle list updates with minimum disruption to top level items\nfunction reducer(state, action) {\n    const index = parseInt(action.index)\n switch (action.type) {\n    case \"append\":\n      if (action.item) {\n        return [...state, action.item];\n      } else return state\n    case \"prepend\":\n      if (action.item) {\n        return [action.item, ...state];\n      } else return state\n    case \"insert\":\n      if (action.item && typeof index === \"number\" ) {\n          if (state.length > 0) {\n              return [\n                ...state.slice(0, index),\n                action.item,\n                ...state.slice(index)\n              ];\n          } else return state\n        } else return state\n    case \"remove\":\n      if (typeof index === \"number\" ) {\n          return [\n            ...state.slice(0, index),\n            ...state.slice(index + 1)\n          ];\n       } else return state \n    case \"update\":\n       if (action.item && typeof index === \"number\" ) {\n           return  [\n            ...state.slice(0, index),\n            action.item,\n            ...state.slice(index + 1)\n          ];\n        } else return state \n    case \"replaceall\":\n        if (typeof action.items === \"object\") {\n            return action.items\n        } else return state\n    default:\n      throw new Error('Invalid reduction in useDB');\n  }\n}\n   \n\n// state manager with local storage backing\nexport default function useDB(database, databaseTable) {\n     const [items, dispatch] = useReducer(reducer,[]);\n     var localforageStorage = localforage.createInstance({\n       name: database ? database : \"localstoragemanager\",\n       storeName   : databaseTable ? databaseTable : 'data',\n     });\n\n    function getId(item) {\n        if (item && item.id) {\n            return item.id\n        } else {\n            throw new Error(\"Missing ID value in getId\")\n        }\n    }\n    function getIdForIndex(index) {\n        if (items && items[index] && items[index].id) {\n            return items[index].id\n        } else {\n            throw new Error(\"Missing ID value in getIdForIndex\")\n        }\n    }\n    \n\n    function loadAll() {\n        localforageStorage.keys().then(function(keys) {\n            var ipromises = []\n            keys.map(function(key) {\n                ipromises.push(new Promise(function(iresolve,ireject) {\n                   localforageStorage.getItem(key).then(function(res) {\n                       iresolve(res)\n                   })\n                }))\n                return null\n            })\n            Promise.all(ipromises).then(function(res) {\n                res = res.sort(function(a,b) {if (a.updated_date < b.updated_date) return 1; else return -1})\n                dispatch({ type: \"replaceall\", items: res });\n            })\n        })\n    }\n\n    \n    // save or create\n    function saveItem(item,index) {\n        if (item) {\n            console.log(['SAVEDB',item,index])\n            // update sources and save text in seperate localstorage\n            // ensure id\n            var isNewItem = false;\n            if (!item.id) {\n                isNewItem = true;\n                item.id = generateObjectId()\n            }\n            localforageStorage.setItem(item.id,item)\n            if (isNewItem) {\n                dispatch({ type: \"prepend\",item: item });\n            } else {\n                if (items) {\n                    var found = null\n                    items.map(function(listItem,listItemIndex) {\n                        if (listItem.id === item.id) {\n                            found = listItemIndex\n                        } \n                        return null\n                    })\n                    if (found != null) {\n                        dispatch({ type: \"update\",item: item , index: found});\n                    } else {\n                        dispatch({ type: \"prepend\",item: item });\n                    }\n                } \n            }  \n        }\n    }\n    \n    function findBy(field,value) {\n        var key = findKeyBy(field,value)\n        if (key) return items[key];\n        return null\n    }\n    \n    function findKeyBy(field,value) {\n        for (var k in items) {\n            if (items[k] && items[k][field] === value) return k\n        }\n        return null\n    }\n\n\n    function setItemsWrap(items) {\n        localforageStorage.clear().then(function() {\n            dispatch({ type: \"replaceall\", items: items})\n            if (items) {\n                items.map(function(item) { localforageStorage.setItem(getId(item),item); return null})\n            }\n        })\n        \n    }\n    \n    function deleteItem(index) {\n        var id = getIdForIndex(index)\n        if (id) {\n            localforageStorage.removeItem(id).then(function() {\n                dispatch({ type: \"remove\", index: index})\n            })\n        }\n        \n    }\n    \n    function filter(matchFunction) {\n        var filtered = []\n        if (matchFunction) {\n            items.map(function(item,i) {\n              if (matchFunction(item)) {\n                  filtered.push(item)\n              }  \n              return null\n            })\n        }\n        return filtered\n        \n    }\n    \n    return {getId:getId, loadAll:loadAll, saveItem:saveItem, deleteItem:deleteItem , items:items, setItems:setItemsWrap, findKeyBy:findKeyBy, findBy:findBy, filter: filter}\n    \n}\n","import localforage from 'localforage'\nimport {uniquifyArray, generateObjectId} from './utils'\n\nexport default function useImportMergeFunctions() {\n\n     var localforageStorageIntents = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'examples',\n     });\n     var localforageStorageEntities = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'lists',\n     });\n     var localforageStorageUtterances = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'utterances',\n     });\n     var localforageStorageRegexps = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'regexps',\n     });\n     var localforageStorageSkill = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'skills',\n     }); \n    /**\n     *  merge an array of json structured intents into the main intent database \n     * \n     *  every import records is tagged with the skill parameter when present\n     */\n    function mergeIntents(examples,skill) {\n        return new Promise(function(resolve, reject) {\n            console.log(['import examples',examples, typeof examples,skill])\n            if (examples) {\n                localforageStorageIntents.getItem('alldata').then(function(allItems) {\n                    var allItemsIndex = {}\n                    if (!allItems) {\n                        allItems = []\n                    }\n                    // index existing items by example\n                    \n                    allItems.map(function(listItem) {\n                        const key = JSON.stringify({entities:listItem.entities ? listItem.entities : [], intent: listItem.intent ? listItem.intent : '', example: listItem.example ? listItem.example : ''})\n                        if (listItem && listItem.example && listItem.example.trim())  {\n                            allItemsIndex[key] = listItem\n                        }\n                        return null\n                    })\n                    var newItems=[]\n                    var replacements=[]\n                    \n                    examples.map(function(listItem) {\n                        if (listItem && listItem.example && listItem.example.trim())  {\n                            // intent example already exists\n                            const key = JSON.stringify({entities:listItem.entities ? listItem.entities : [], intent: listItem.intent ? listItem.intent : '', example: listItem.example ? listItem.example : ''})\n                            listItem.id = listItem.id ? listItem.id : generateObjectId()\n                            if (allItemsIndex[key]) {\n                                replacements.push(listItem)\n                            } else {\n                                newItems.push(listItem)\n                                if (skill) listItem.skills = listItem.skills ? uniquifyArray( listItem.skills.push(skill)) : [skill]\n                            }\n                            //allItemsIndex[listItem.value] = listItem\n                        } \n                        return null\n                    })\n                    var final = []\n                    if (replacements.length > 0) {\n                        replacements.map(function(listItem) {\n                            const key = JSON.stringify({entities:listItem.entities ? listItem.entities : [], intent: listItem.intent ? listItem.intent : '', example: listItem.example ? listItem.example : ''})\n                            if (skill) listItem.skills = listItem.skills ? uniquifyArray( listItem.skills.push(skill)) : [skill]\n                            allItemsIndex[key] = listItem\n                            return null\n                        }); \n                        final = [].concat(newItems,Object.values(allItemsIndex))\n                    } else {\n                        final = [].concat(newItems,allItems)\n                    }\n                    console.log('IMPORT MERGE',final)\n                    localforageStorageIntents.setItem('alldata',final).then(function() {\n                      resolve({updated:replacements.length, created: newItems.length})  \n                    })\n                    //props.history.push('/import') \n                \n                })\n              } else {\n                reject({error:\"Missing import data\"})\n            }\n        })\n    }\n\n\n    function mergeEntities(entities, list) {\n        console.log(['merge entities',entities, list])\n        return new Promise(function(resolve, reject) {\n            if (entities) {\n                localforageStorageEntities.getItem('alldata').then(function(allLists) {\n                    //console.log(['got list ',allLists])\n                    var allListsIndex = {}\n                    if (!allLists) {\n                        allLists = []\n                    }\n                    // index by value\n                    allLists.map(function(listItem) {\n                        if (listItem && listItem.value && listItem.value.trim().length > 0)  {\n                            allListsIndex[listItem.value] = listItem\n                        }\n                        return null\n                    })\n                    var created = 0\n                    var updated = 0;\n                    entities.map(function(listItem,listItemIndex) {\n                        var newListItem = listItem;\n                        newListItem.id = newListItem.id ? newListItem.id : generateObjectId()\n                        // already there, just update tags\n                        if (allListsIndex[listItem.value]) {\n                            updated += 1\n                            newListItem.tags = newListItem.tags ? newListItem.tags : []\n                            if (list && list.trim().length > 0) newListItem.tags.push(list.trim())\n                            // merge alternatives\n                            var existingAlternatives = allListsIndex[listItem.value].synonym ? allListsIndex[listItem.value].synonym.split(\"\\n\") : []\n                            var newAlternatives = newListItem.synonym ? newListItem.synonym.split(\"\\n\") : []\n                            newListItem.synonym = uniquifyArray([].concat(existingAlternatives, newAlternatives)).sort().join(\"\\n\")\n                          \n                            // uniquify and sort tags\n                            newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                            allListsIndex[newListItem.value] = newListItem\n                        // new list item    \n                        } else {\n                            created += 1\n                            newListItem = {id: generateObjectId() , value: newListItem.value, synonym: newListItem.synonym ? newListItem.synonym : '', tags:newListItem.tags ? newListItem.tags : []}\n                            if (list && list.trim().length > 0) newListItem.tags.push(list.trim())\n                            // uniquify and sort tags\n                            newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                            allListsIndex[newListItem.value] = newListItem\n                        }\n                        return null\n                    })\n                    \n                    //console.log('IMPORT MERGE',res,parsed,[].concat(parsed,res))\n                    localforageStorageEntities.setItem('alldata',Object.values(allListsIndex)).then(function() {\n                        resolve({updated:updated, created: created})  \n                    })\n                    //props.history.push('/lists') \n                    ////props.setPageMessage(<div><b>sdfsdf</b><br/><b>sdfsdf</b><br/><b>sdfsdf</b><br/><b>sdfsdf</b><br/></div>)\n                    //props.setPageMessage('Imported '+Object.keys(allListsIndex).length +' entities into the list '+ title)\n                    //setTimeout(function() {\n                        //props.setPageMessage('')\n                    //},2000)\n                })\n            } else {\n                reject({error:\"Failed import\"})\n            }\n        })\n    }\n    \n    function mergeUtterances(utterances,addTag) {\n        console.log(['merge utterances',utterances, addTag])\n        return new Promise(function(resolve, reject) {\n            if (utterances) {\n                localforageStorageUtterances.getItem('alldata').then(function(allLists) {\n                    //console.log(['got list ',allLists])\n                    var allListsIndex = {}\n                    if (!allLists) {\n                        allLists = []\n                    }\n                    // index by value\n                    allLists.map(function(listItem) {\n                        if (listItem && listItem.value && listItem.value.trim().length > 0)  {\n                            allListsIndex[listItem.value] = listItem\n                        }\n                        return null\n                    })\n                    var created = 0\n                    var updated = 0;\n                    utterances.map(function(listItem,listItemIndex) {\n                        var newListItem = listItem;\n                        newListItem.id = newListItem.id ? newListItem.id : generateObjectId()\n                        // already there, just append tag and alternatives\n                        if (allListsIndex[listItem.value]) {\n                            updated += 1\n                            newListItem.tags = newListItem.tags ? newListItem.tags : []\n                            // merge alternatives\n                            var existingAlternatives = allListsIndex[listItem.value].synonym ? allListsIndex[listItem.value].synonym.split(\"\\n\") : []\n                            var newAlternatives = newListItem.synonym ? newListItem.synonym.split(\"\\n\") : []\n                            newListItem.synonym = uniquifyArray([].concat(existingAlternatives, newAlternatives)).sort().join(\"\\n\")\n                            // add tag ?\n                            if (addTag && addTag.trim().length > 0) newListItem.tags.push(addTag.trim())\n                            // uniquify and sort tags\n                            newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                            allListsIndex[newListItem.value] = newListItem\n                        // new list item    \n                        } else {\n                            created += 1\n                            newListItem = {id: generateObjectId() , value: newListItem.value, synonym: newListItem.synonym ? newListItem.synonym : '', tags:[]}\n                            if (addTag && addTag.trim().length > 0) newListItem.tags.push(addTag.trim())\n                            // uniquify and sort tags\n                            newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                            allListsIndex[newListItem.value] = newListItem\n                        }\n                        return null\n                    })\n                    \n                    //console.log('IMPORT MERGE',res,parsed,[].concat(parsed,res))\n                    localforageStorageUtterances.setItem('alldata',Object.values(allListsIndex)).then(function() {\n                        resolve({updated:updated, created: created})  \n                    })\n                    //props.history.push('/lists') \n                    ////props.setPageMessage(<div><b>sdfsdf</b><br/><b>sdfsdf</b><br/><b>sdfsdf</b><br/><b>sdfsdf</b><br/></div>)\n                    //props.setPageMessage('Imported '+Object.keys(allListsIndex).length +' entities into the list '+ title)\n                    //setTimeout(function() {\n                        //props.setPageMessage('')\n                    //},2000)\n                })\n            } else {\n                reject({error:\"Failed import\"})\n            }\n        })\n    }\n    \n    \n    function mergeRegexps(regexps,addTag) {\n        console.log(['merge regexps',regexps, addTag])\n        return new Promise(function(resolve, reject) {\n            if (regexps) {\n                localforageStorageRegexps.getItem('alldata').then(function(allLists) {\n                    //console.log(['got list ',allLists])\n                    var allListsIndex = {}\n                    if (!allLists) {\n                        allLists = []\n                    }\n                    // index by value\n                    allLists.map(function(listItem) {\n                        if (listItem && listItem.value && listItem.value.trim().length > 0)  {\n                            allListsIndex[listItem.value] = listItem\n                        }\n                        return null\n                    })\n                    var created = 0\n                    var updated = 0;\n                    regexps.map(function(listItem,listItemIndex) {\n                        var newListItem = listItem;\n                        newListItem.id = newListItem.id ? newListItem.id : generateObjectId()\n                        // already there, just append tag and alternatives\n                        if (allListsIndex[listItem.value]) {\n                            updated += 1\n                            newListItem.tags = newListItem.tags ? newListItem.tags : []\n                            // merge alternatives\n                            //var existingAlternatives = allListsIndex[listItem.value].synonym ? allListsIndex[listItem.value].synonym.split(\"\\n\") : []\n                            //var newAlternatives = newListItem.synonym ? newListItem.synonym.split(\"\\n\") : []\n                            //newListItem.synonym = uniquifyArray([].concat(existingAlternatives, newAlternatives)).sort().join(\"\\n\")\n                            // add tag ?\n                            if (addTag && addTag.trim().length > 0) newListItem.tags.push(addTag.trim())\n                            // uniquify and sort tags\n                            newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                            allListsIndex[newListItem.value] = newListItem\n                        // new list item    \n                        } else {\n                            created += 1\n                            newListItem = {id: generateObjectId() , value: newListItem.value, synonym: newListItem.synonym ? newListItem.synonym : '', tags:[]}\n                            if (addTag && addTag.trim().length > 0) newListItem.tags.push(addTag.trim())\n                            // uniquify and sort tags\n                            newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                            allListsIndex[newListItem.value] = newListItem\n                        }\n                        return null\n                    })\n                    \n                    console.log('IMPORT MERGE reg',allListsIndex)\n                    localforageStorageRegexps.setItem('alldata',Object.values(allListsIndex)).then(function() {\n                        resolve({updated:updated, created: created})  \n                    })\n              \n                })\n            } else {\n                reject({error:\"Failed import\"})\n            }\n        })\n    }\n    \n    function mergeSkill(skill) {\n        console.log(['merge skill',skill])\n        return new Promise(function(resolve, reject) {\n            if (skill && skill.title) {\n                localforageStorageSkill.getItem(skill.title).then(function(found) {\n                    // merge ?\n                    if (found) {\n                        console.log(['found skill',skill])\n                        localforageStorageSkill.setItem(skill.title,skill).then(function() {\n                            resolve({})  \n                        })\n                    } else {\n                        console.log(['create skill',skill])\n                        localforageStorageSkill.setItem(skill.title,skill).then(function() {\n                            resolve({})  \n                        })\n\n                    }\n                    \n                })\n            } else {\n                reject({error:\"Failed import\"})\n            }\n        })\n    }\n    \n\n    return  {mergeIntents, mergeEntities, mergeUtterances, mergeRegexps, mergeSkill}\n\n}\n","import JSZip from 'jszip'\nimport parenthesis from 'parenthesis'\nimport {generateObjectId, uniquifyArray, multiplyArrays, expandOptions, splitSentences} from './utils'\n\nvar balanced = require('balanced-match');\n\n\n    function detectFileType(item) {\n        return new Promise(function(resolve,reject) {\n            console.log(['DETECT FILE TYPE',item])\n            try {\n                var json = JSON.parse(item.data)\n                // RASA JSON FORMAT\n                if (json && json.rasa_nlu_data && json.rasa_nlu_data.common_examples) {\n                    resolve( {type: 'rasa.json'})\n                // JOVO JSON { \"invocation\": \"my test app\", \"intents\": [{\"name\": \"HelloWorldIntent\",\"phrases\": [\"hello\",\"say hello\"]}] } ,\n                } else if (json && json.title && json.intents && json.entities && json.id) {\n                    resolve({type: 'opennlu.skill'})\n                } else if (json && json.invocation && json.intents) {\n                    resolve({type: 'jovo.json'})\n                } else if (json && json.utterances) {\n                    resolve({type: 'opennlu.utterances'})\n                } else if (json && json.lists) {\n                    resolve({type: 'opennlu.lists'})\n                } else if (json && json.regexps) {\n                    resolve({type: 'opennlu.regexps'})\n                } else {\n                    resolve({type: 'json'})\n                }\n            } catch (e) {\n                // try zip file\n                var zip = new JSZip();\n                 zip.loadAsync(item.data)                                   // 1) read the Blob\n                .then(function(zip) {\n                    var found={}\n                    zip.forEach(function (relativePath, zipEntry) {  // 2) print entries\n                        console.log( zipEntry.name)\n                        // rasa\n                        if (zipEntry.name.indexOf('/domain.yml') !== -1) found['rasa_domain'] = true \n                        if (zipEntry.name.indexOf('/data/nlu.md') !== -1) found['rasa_data'] = true\n                        // jovo\n                        if (zipEntry.name.indexOf('/project.js') !== -1) found['jovo_project'] = true\n                        if (zipEntry.name.indexOf('/models/en-US.js') !== -1) found['jovo_lang'] = true\n                        // mycroft\n                        if (zipEntry.name.indexOf('/__init__.py') !== -1) found['mycroft_index'] = true\n                        if (zipEntry.name.indexOf('/vocab') !== -1) found['mycroft_vocab'] = true\n                        console.log(['FOUND',found])\n                    });\n                    console.log(['FOUND',found])\n                    if (found['rasa_domain'] && found['rasa_data']) {\n                        resolve({type: 'rasa.zip'})\n                    } else if (found['rasa_domain'] && found['rasa_data']) {\n                        resolve({type: 'jovo.zip'})\n                    } else if (found['mycroft_index'] && found['mycroft_vocab']) {\n                        resolve({type: 'mycroft.zip'})\n                    } else if (found['jovo_project'] && found['jovo_lang']) {\n                        resolve({type: 'jovo.zip'})\n                    } else {\n                        resolve()\n                    }\n                }, function (e) {\n                    //console.log('NOT ZIP')\n                    //console.log(e)\n                    \n                    if (item.data && item.data.indexOf('## intent:') !== -1) {\n                        resolve({type: 'rasa.markdown'})\n                    } else {\n                        resolve({type: 'text'})\n                    }\n                });\n                \n            }  \n        })\n               \n    }\n\n\n/**\n *  unzip a file and extract the content for files matching paths found in pathFilters array\n */\nfunction unzip(content,pathFilters) {\n    return new Promise (function( resolve, reject) {\n        var zip = new JSZip();\n        zip.loadAsync(content)\n        .then(function(zip) {\n            var promises=[]\n            zip.forEach(function (relativePath, zipEntry) {\n                //console.log(relativePath,zipEntry)\n                var found = false\n                for (var j in pathFilters) {\n                    var pathFilter = pathFilters[j]\n                    if ( zipEntry.name.indexOf(pathFilter) !== -1) { \n                        found = true\n                    }\n                }\n                if (found) { \n                    promises.push( new Promise(function(iresolve,ireject) {\n                        zip.file(relativePath).async(\"string\").then(function(fileContent) {\n                            \n                             //console.log('got ont')\n                             iresolve({path:zipEntry.name, data: fileContent})\n                        })\n                    }).catch(function(e) {\n                            \n                    }))\n                }\n            })\n            Promise.all(promises).then(function(filesWithContent) {\n                resolve(filesWithContent)\n            })\n        });\n    })\n}\n\n\n\n\n/**\n *  create entity objects from split sentences\n */\n  \nfunction generateIntentSplits(text, intent) {\n    const splits = splitSentences(text)\n\n     function extractEntities(text) {\n        var entities=[]\n        var latestText = text\n        var b = balanced('{','}',latestText)\n        var limit = 20\n        while (b && limit) {\n            var entity = { value:b.body, start: b.start, end: b.end, type:b.body }\n            entities.push(entity)\n            latestText = b.pre + b.body + b.post\n            b = balanced('{','}',latestText)\n            limit --\n        }\n        return {'id':generateObjectId(), example: latestText, entities: entities, tags: []}\n    }\n        \n    var newSplits=[]\n    splits.map(function(text,i) {\n        if (text && text.trim().length > 0) {\n           expandOptions(text).map(function(line) {\n                var intentGen = extractEntities(line)\n                intentGen.intent = intent;\n                newSplits.push(intentGen)\n            }) \n           //newSplits.push({'id':generateObjectId(), 'example':text,'intent':intent ? intent : '',\"entities\":[], \"tags\":[]})\n        }\n        return null\n    })\n    return newSplits.sort(sortExampleSplits)\n}\n\n/**\n *  create entity objects from split sentences\n * eg synonym_value value value or value value value\n */\nfunction generateEntitySplits(text, entity) {\n    const splits = splitSentences(text)\n    var newSplits=[]\n    splits.map(function(text,i) {\n        if (text && text.trim().length > 0) {\n            var parts = extractSynonym(text.trim())\n            parts[1].map(function(alternative) {\n                newSplits.push({'id':generateObjectId(), 'value':alternative, synonym:parts[0], \"tags\":entity? [entity] : []})\n                return null\n            })\n        }\n        return null\n    })\n    return newSplits.sort(sortExampleSplits)\n}\n\n\n/**\n *  create entity objects from split sentences\n */\nfunction generateUtteranceSplits(text, tag) {\n        //console.log(['GEN UTT',text,tag])\n    const splits = splitSentences(text)\n    var newSplits=[]\n    splits.map(function(text,i) {\n        if (text && text.trim().length > 0) {\n            newSplits.push({'id':generateObjectId(), 'value':text, synonym:'', \"tags\":tag ? [tag] : []})\n        }\n        return null\n    })\n    return newSplits.sort(sortExampleSplits)\n}\n\n\n    \nfunction cleanListItem(text) {\n    return text ? text.replace(/[^0-9a-z ,]/gi, '') : ''\n}\n\n/**\n *  try to extract a synonym from a line of text by splitting on _\n */\nfunction extractSynonym(text) {\n    if (text) { \n        var parts = text.split('___')\n        if (parts.length > 1) {\n           return [parts[0],parts.slice(1)]   \n        } else {\n            return ['',[text]]\n        }\n    } else {\n        return ['',[]]\n    }\n}\n/**\n *   extract utterances alternatives by splitting on _\n */\nfunction extractAlternatives(text) {\n    if (text) { \n        var parts = text.split('___')\n        if (parts.length > 1) {\n           return [parts[0],parts.slice(1).join(\"\\n\")]   \n        } else {\n            return [text,'']\n        }\n    } else {\n        return ['','']\n    }\n}\n\nfunction sortListSplits(a,b) {\n    if (a.value < b.value) return -1;  else return 1;\n}\n\nfunction sortExampleSplits(a,b) {\n    if (a.example < b.example) return -1 ;else return 1;\n}\n\n\n    function extractLookupFilenamesFromRasaMd(item) {\n        var filenames=[]\n        if (item.data) {\n            item.data.split(\"##\").map(function(intentData,intentKey) {\n                var lines = intentData.split(\"\\n\")  \n                var headerLine = lines[0].trim()\n                var dataLines = (lines.length > 1) ? lines.slice(1) : []\n                if (headerLine.startsWith(\"lookup\")) {\n                     for (var i in dataLines) {\n                         filenames.push(dataLines[i])\n                     }\n                }\n            })\n        }\n    }       \n\n    function generateIntentSplitsForMycroft(item, intentLabel) {\n        var intents = []\n        if (item) {\n            item.split(\"\\n\").map(function(intentExample,intentKey) {\n                expandOptions(intentExample).map(function(line) {\n                    var intent = extractEntities(line)\n                    intent.intent = intentLabel;\n                    intents.push(intent)\n                })\n            })\n        }\n        return intents\n        \n        function extractEntities(text) {\n            var entities=[]\n            var latestText = text\n            var b = balanced('{','}',latestText)\n            var limit = 20\n            while (b && limit) {\n                var entity = { value:b.body, start: b.start, end: b.end, type:b.body }\n                entities.push(entity)\n                latestText = b.pre + b.body + b.post\n                b = balanced('{','}',latestText)\n                limit --\n            }\n            return {'id':generateObjectId(), example: latestText, entities: entities, tags:[]}\n        }\n\n    }\n\n\n    function generateSplitsFromRasaMd(item, files) {\n        var allIntents=[]\n        //var allEntities={}\n        var allRegexps={}\n        var allSynonyms={}\n        var entitiesFromLookup={}\n                                           \n        var items = []\n        if (item.data) {\n            item.data.split(\"##\").map(function(intentData,intentKey) {\n                var lines = intentData.split(\"\\n\")  \n                var headerLine = lines[0].trim()\n                var dataLines = (lines.length > 1) ? lines.slice(1) : []\n                \n                if (headerLine.startsWith(\"regex\")) {\n                    var regexTitle = headerLine.slice(6).trim()\n                    for (var i in dataLines) {\n                        var value = dataLines[i].slice(1).trim() // remove leading -\n                        if (regexTitle && value) {\n                            allRegexps[regexTitle] = Array.isArray(allRegexps[regexTitle]) ? allRegexps[regexTitle]  : []\n                            allRegexps[regexTitle].push(value)\n                        }\n                    }\n                } else if (headerLine.startsWith(\"synonym\")) {\n                    var synonym = headerLine.slice(8).trim()\n                    for (var i in dataLines) {\n                        var value = dataLines[i].slice(1).trim() // remove leading -\n                        if (synonym && value) {\n                            allSynonyms[synonym] = Array.isArray(allSynonyms[synonym]) ? allSynonyms[synonym]  : []\n                            allSynonyms[synonym].push(value)\n                        }\n                    }\n                } else if (headerLine.startsWith(\"lookup\")) {\n                    // NOTE lookups can only be loaded if files are also provided (from zip), reading a single MD/JSON nlu data file will skip the lookups\n                    if (files) {\n                        var entityType = headerLine.slice(7).trim()\n                        for (var i in dataLines) {\n                            var path = dataLines[i].trim()\n                            if (path && files[path]) {\n                                var entityLines = files[path].split(\"\\n\")\n                                entityLines.map(function(value) {\n                                    if (value && value.trim()) {\n                                        if (entitiesFromLookup[value]) {\n                                            entitiesFromLookup[value].tags = entitiesFromLookup[value].tags ? entitiesFromLookup[value].tags : []\n                                        } else {\n                                            entitiesFromLookup[value] = {tags:  [entityType]}\n                                        }\n                                    }\n                                })\n                            } \n                        }\n                    }\n                } else if (headerLine.startsWith(\"intent\")) {\n                    \n                    var intent = headerLine.slice(7)\n                    for (var i in dataLines) {\n                        var entities = {}\n                        var example = dataLines[i].slice(1).trim() // remove leading -\n                        var intentData = {intent: intent, example: example}\n                        if (example.length > 0) {\n                            console.log(example)// extract entities\n                            var remainder = example\n                            var cleanString = example\n                            var parts = balanced('[', ']', remainder)\n                            //console.log(['PAREN',parts])\n                            var limit=10\n                            while (limit > 0 && parts && parts !== undefined && typeof parts === \"object\") {\n                                var entity = {}\n                            \n                                limit --\n                                remainder = parts.post\n                                entity.value = parts.body\n                                entity.start = parts.start\n                                entity.end = parts.end\n                                //cleanString = cleanString.slice(0,entity.start) + entity.value + cleanString.slice(entity.end+1)\n                                \n                                var remainderParts = balanced('(',')',parts.post)\n                                var remainderJSONParts = balanced('{','}',parts.post)\n                                //console.log(['PARENEND',entity, cleanString, remainderParts])\n                                if ((remainderParts && remainderParts.body) && (remainderJSONParts && remainderJSONParts.body)) {\n                                    // both in remainder so use earliest start\n                                    if (remainderJSONParts.start < remainderParts.start) {\n                                        try {\n                                            var entityTypeParts = JSON.parse(\"{\"+remainderJSONParts.body+\"}\")\n                                            entity.type = entityTypeParts.entityTypes\n                                            if (entityTypeParts.synonym && entityTypeParts.synonym.length > 0) {\n                                                allSynonyms[entityTypeParts.synonym] = allSynonyms[entityTypeParts.synonym] ? allSynonyms[entityTypeParts.synonym] : []\n                                                allSynonyms[entityTypeParts.synonym].push(entity.value)\n                                                entity.synonym = entityTypeParts.synonym\n                                            }\n                                        } catch (e) {}\n                                        //cleanString = cleanString.slice(0,remainderJSONParts.start) + cleanString.slice(remainderJSONParts.end+1)\n                                    } else {\n                                        var entityTypeParts = remainderParts.body.split(\":\")\n                                        entity.type = entityTypeParts[0]\n                                        if (entityTypeParts.length > 1 && entityTypeParts[1].length > 0) {\n                                            allSynonyms[entityTypeParts[1]] = allSynonyms[entityTypeParts[1]] ? allSynonyms[entityTypeParts[1]] : []\n                                            allSynonyms[entityTypeParts[1]].push(entity.value)\n                                            entity.synonym = entityTypeParts[1]\n                                        }\n                                        //cleanString = cleanString.slice(0,remainderParts.start) + cleanString.slice(remainderParts.end+1)\n                                    } \n                                    \n                                \n                                } else if (remainderJSONParts && remainderJSONParts.body) {\n                                    try {\n                                            var entityTypeParts = JSON.parse(\"{\"+remainderJSONParts.body+\"}\")\n                                            entity.type = entityTypeParts.entityTypes\n                                            if (entityTypeParts.synonym && entityTypeParts.synonym.length > 0) {\n                                                allSynonyms[entityTypeParts.synonym] = allSynonyms[entityTypeParts.synonym] ? allSynonyms[entityTypeParts.synonym] : []\n                                                allSynonyms[entityTypeParts.synonym].push(entity.value)\n                                                entity.synonym = entityTypeParts.synonym\n                                            }\n                                        } catch (e) {}\n                                        //cleanString = cleanString.slice(0,remainderJSONParts.start) + cleanString.slice(remainderJSONParts.end+1)\n                                } else if (remainderParts && remainderParts.body) {\n                                    var entityTypeParts = remainderParts.body.split(\":\")\n                                    entity.type = entityTypeParts[0]\n                                    if (entityTypeParts.length > 1 && entityTypeParts[1].length > 0) {\n                                        allSynonyms[entityTypeParts[1]] = allSynonyms[entityTypeParts[1]] ? allSynonyms[entityTypeParts[1]] : []\n                                        allSynonyms[entityTypeParts[1]].push(entity.value)\n                                        entity.synonym = entityTypeParts[1]\n                                    }\n                                    cleanString = parts.pre + entity.value + parts.post.slice(0,remainderParts.start) + parts.post.slice(remainderParts.end+1)\n                                } else {\n                                    throw new Error('Invalid bracket structure at line '+intentKey)\n                                }\n                                console.log(['ENTITY',entity, cleanString])\n                                //allEntities[entity.type] = entity\n                                intentData.entities = Array.isArray(intentData.entities) ? intentData.entities : []\n                                intentData.entities.push(entity)\n                                parts = balanced('[', ']', remainder)\n                            }\n                            intentData.example = cleanString\n                            allIntents.push(intentData)\n                            console.log(['INTENT',intentData])\n                            \n                            \n                        }\n                    }\n                }\n                \n            })\n            \n           \n            \n        } \n        console.log(['rasa json IMPORT',allIntents, allRegexps, allSynonyms, entitiesFromLookup])\n        return {intents: allIntents}\n    }\n\n    function generateSplitsFromRasaJson(item) {\n        var items = []\n        try {\n            var json = JSON.parse(item.data)\n            if (json && json.rasa_nlu_data && json.rasa_nlu_data.common_examples) {\n                for (var i in json.rasa_nlu_data.common_examples) {\n                    var entity = json.rasa_nlu_data.common_examples[i]\n                    var cleanEntities = entity.entities && entity.entities.map(function(el,j) { return {type:el.entity, value:el.value, start:el.start, end:el.end} })\n                    if (entity.text && entity.text.trim().length > 0) {\n                        items.push({'id':generateObjectId(), 'example':entity.text,'intent':entity.intent,\"entities\":cleanEntities, tags:[]})\n                    }\n                }\n            }\n            console.log(['rasa json IMPORT',items])\n        } catch(e) {}\n        return {intents: items}\n    }\n\n\n    function generateSplitsFromJovoJson(item) {\n        var items = []\n        try {\n            var json = JSON.parse(item.data)\n            console.log(['JOVO IMPORT',json])\n            if (json && json.invocation && json.intents) {\n                json.intents.map(function(intent) {\n                    if (intent && intent.phrases) {\n                        intent.phrases.map(function(phrase) {\n                            console.log(['JOVO IMPORT',phrase])\n                            if (phrase && phrase.trim().length > 0)  {\n                                 var entities = []\n                                if (intent.inputs) {\n                                    for (var inputKey in intent.inputs) {\n                                       var input = intent.inputs[inputKey]\n                                       //console.log([phrase,input.name])\n                                       const markerStart = phrase.indexOf(\"{\"+input.name+\"}\")\n                                       if (markerStart !== -1)  {\n                                           phrase = phrase.replace(\"{\"+input.name+\"}\",input.name)\n                                       }\n                                       var entityi = {type:input.name, value:input.name , start: markerStart , end: markerStart + input.name.length  }\n                                       entities.push(entityi)\n                                       return null\n                                    }\n                                }\n                                console.log(['JOVO IMPORT pushg item',intent.name])\n                                \n                                items.push({'id':generateObjectId(), 'example':phrase.trim(),'intent':intent.name,\"entities\": entities, tags: []})\n                                console.log(['JOVO IMPORT pushed item',JSON.parse(JSON.stringify(items))])\n                                \n                            }\n                            return null\n                        })\n                    }\n                    return null\n                })\n                console.log(['JOVO done IMPORT',items])\n            }\n        } catch(e) {}\n        return {intents: items}\n    }   \n\nexport default function useImportUtils() { return  {unzip, splitSentences, generateIntentSplits, generateEntitySplits, generateUtteranceSplits, cleanListItem, extractSynonym, sortListSplits, sortExampleSplits, detectFileType, generateSplitsFromJovoJson, generateSplitsFromRasaJson, generateSplitsFromRasaMd, generateIntentSplitsForMycroft}}\n","import useImportMergeFunctions from './useImportMergeFunctions'\nimport useImportUtils from './useImportUtils'\nimport {useHistory} from 'react-router-dom'\nexport default function useImportFunctions(sendPageMessage) {\n    \n    const {mergeEntities, mergeIntents, mergeUtterances, mergeRegexps, mergeSkill} = useImportMergeFunctions()\n    const {unzip, splitSentences, generateIntentSplits, generateEntitySplits, generateUtteranceSplits, generateIntentSplitsForMycroft, cleanListItem, extractSynonym, sortListSplits, sortExampleSplits, detectFileType, generateSplitsFromJovoJson, generateSplitsFromRasaJson, generateSplitsFromRasaMd} = useImportUtils()\n    const history = useHistory()\n    /* ONCLICK FUNCTIONS */   \n    \n\n    /**\n     * Import complete skill without review phase\n     */\n    \n    function importSkillJson(item) {\n        return new Promise(function( resolve, reject) {\n            var data = {}\n            try {\n                data = JSON.parse(item.data)\n                console.log(['IMPSKILL',data])\n        \n                // create examples (intents)\n                if (data.title) {\n                    if (data.intents) {\n                        var intents = []\n                        Object.keys(data.intents).map(function(intent) {\n                            if (data.intents[intent]) {\n                                data.intents[intent].map(function(example) {\n                                      example.intent = intent\n                                      \n                                      intents.push(example)\n                                })\n                            }\n                        })\n                        mergeIntents(intents, data.title)\n                    }\n                    // create entities\n                    if (data.entitiesData) {\n                        var entities = []\n                        Object.keys(data.entitiesData).map(function(tag) {\n                            if (data.entitiesData[tag]) {\n                                data.entitiesData[tag].map(function(entity) {\n                                      entity.tags = Array.isArray(entity.tags) ? entity.tags : []\n                                      entity.tags.push(tag)\n                                      entities.push(entity)\n                                })\n                            }\n                        })\n                        mergeEntities(entities)\n                    }\n                    // create utterances\n                    if (data.utterancesData) {\n                        var utterances = []\n                        Object.values(data.utterancesData).map(function(utterance) {\n                            utterances.push(utterance)\n                        })\n                        mergeUtterances(utterances)\n                    }\n                    // create regexps\n                    if (data.regexps) {\n                        var regexps = data.regexps.map(function(utterance) {\n                            if (utterance) {\n                                return {value: utterance.name, synonym: utterance.synonym}\n                            }\n                            return {}\n                        })\n                        mergeRegexps(regexps)\n                    }\n                    mergeSkill(data)\n                }\n                // TODO CREATE OTHER RECORDS - INTENT,ENT,UTT,REG\n            } catch(e) {}\n            resolve(data)\n        })\n    }\n    \n\n    /**\n     * Import intents, entities, and utterances \n     */\n    function importAll(item) {\n        return new Promise(function(resolve, reject) {\n             console.log(['import examples',item])\n             if (item) {\n                  switch(item.fileType) {\n                    case 'opennlu.skill':\n                        importSkillJson(item).then(function(skill) {\n                            //resolve(skill)  \n                            if (skill.title && skill.intents && Object.keys(skill.intents).length > 0) {\n                                setTimeout(function() {\n                                    history.push(\"/skills/skill/\"+skill.title)\n                                },500)\n                            } else {\n                                if (sendPageMessage) sendPageMessage('Failed to load skill. Missing title or intents.',3000)\n                            }\n                            if (sendPageMessage) sendPageMessage('Imported',2000)\n                        })\n                        break;\n                    case 'mycroft.zip':\n                        importMycroft(item).then(function(skill) {\n                            resolve(skill)  \n                        })\n                        break;\n                    case 'rasa.json':\n                        const askill1 = generateSplitsFromRasaJson(item)\n                        resolve(askill1)\n                        break;\n                    case 'rasa.markdown':\n                        const askill2 = generateSplitsFromRasaMd(item)\n                        resolve(askill2)\n                        break;\n                    \n                    case 'jovo.json':\n                        const askill3 = generateSplitsFromJovoJson(item)\n                        resolve(askill3)\n                        break;\n                    case 'jovo.zip':\n                        importJovo(item).then(function(skill) {\n                            resolve(skill)  \n                        })\n                        break;\n                    case 'rasa.zip':\n                        importRASA(item).then(function(skill) {\n                            resolve(skill)  \n                        })\n                        break;\n                    default:\n                        reject({error:'Invalid file type for import'})\n                  }\n             } else {\n                reject({error:'Failed to import'})\n            }\n        })\n    }\n    \n    \n    function importTextIntents(item, intent = '') {\n         console.log(['text',item.data])\n         return generateIntentSplits(item.data, intent)\n       }\n    \n        \n    function importTextEntities(item, entity = '') {\n         console.log(['text',item.data])\n         return generateEntitySplits(item.data, entity)\n    }\n    \n        \n    function importTextUtterances(item, utterance = '') {\n         console.log(['text',item.data])\n         return {utterances: generateUtteranceSplits(item.data, utterance)}\n    }\n    \n    \n    function importJsonIntents(item) {\n        return new Promise(function( resolve, reject) {\n            console.log(['json',item.data])\n            resolve([])\n        })\n    }\n    \n    function importJsonEntities(item) {\n        return new Promise(function( resolve, reject) {\n            console.log(['json',item.data])\n            resolve([])\n        })\n    }\n    \n    function importJsonUtterances(item) {\n        return new Promise(function( resolve, reject) {\n            console.log(['json',item.data])\n            resolve([])\n        })\n    }\n    \n    \n    function importJovo(item) {\n        return new Promise(function( resolve, reject) {\n            unzip(item.data,['/project.js','/models/*.js']).then(function(files) {\n                console.log(['jovo',files])\n                resolve(files)\n            })\n        })\n    }\n    \n    function importRASA(item) {\n        return new Promise(function( resolve, reject) {\n            unzip(item.data,['/domain.yml','nlu.md','nlu.json']).then(function(files) {\n                //console.log(['rasa',files])\n                resolve(files)\n            })\n        })\n    }\n    \n    function importMycroft(item) {\n        return new Promise(function( resolve, reject) {\n            unzip(item.data,['.intent','.dialog','.entity']).then(function(files) {\n                //console.log(['mycroft',files])\n                var skill = {}\n                var utterances=[]\n                var intents=[]\n                var entities = []\n                \n                function nameFromFilename(fullPath) {\n                    if (fullPath && fullPath.split) {\n                        var pathParts = fullPath.split(\"/\")\n                        var fileName = pathParts[pathParts.length -1]\n                        var intentName = fileName.slice(0,fileName.length - 7)\n                        return intentName\n                    }\n                    return '_'\n                }\n                \n                if (files) {\n                    files.map(function(file) {\n                        \n                        // for now no internationalisation\n                       if (file && file.path && file.path.toLowerCase().indexOf('/en-us/') !== -1)  {\n                           var fileParts = file.path.split(\"/\")\n                           var name = nameFromFilename(file.path)\n                           if (file.path.endsWith('.intent') && file.data) {\n                               console.log(file.path, file.data, generateIntentSplits(file.data, name))\n                               var intent = fileParts.length > 1 ? fileParts[fileParts.length -1].replace('.intent','') : ''\n                               intents = [].concat(generateIntentSplitsForMycroft(file.data, intent), intents)\n                           } else if (file.path.endsWith('.dialog')) {\n                               console.log(file.path, file.data, generateUtteranceSplits(file.data, name))   \n                               var utterance = fileParts.length > 1 ? fileParts[fileParts.length -1].replace('.dialog','')  : ''\n                               utterances = [].concat(generateUtteranceSplits(file.data, utterance), utterances)\n                           } else if (file.path.endsWith('.entity')) {\n                               console.log(file.path, file.data, generateEntitySplits(file.data, name)) \n                               var entity = fileParts.length > 1 ? fileParts[fileParts.length -1].replace('.entity','')  : ''\n                               entities = [].concat(generateEntitySplits(file.data, entity), entities)\n                           }\n                       }\n                    })\n                }\n                skill.utterances = utterances\n                skill.intents = intents\n                skill.entities = entities\n                console.log(['MYIMNPO',skill])\n                resolve(skill)\n            })\n        })\n    }\n\n    function importEntities(item) {\n          return new Promise(function(resolve, reject) {\n             console.log(['import entities',item])\n             if (item) {\n                  switch(item.fileType) {\n                      case 'text':\n                        resolve({entities:importTextEntities(item, item.title)})\n                        break;\n                    case 'json':\n                        importJsonEntities(item).then(function(entities) {\n                            resolve({entities:entities})  \n                        })\n                        break;\n                    \n                    default:\n                        throw new Error('Invalid file type for import')\n                  }\n             }\n             reject('Failed to import')\n        })\n    }\n\n    function importUtterances(item) {\n         return new Promise(function(resolve, reject) {\n             console.log(['import utterances',item])\n             if (item) {\n                  switch(item.fileType) {\n                      case 'text':\n                        resolve(importTextUtterances(item, item.title))\n                        break;\n                    case 'json':\n                        importJsonUtterances(item).then(function(utterances) {\n                            resolve({utterances:utterances})  \n                        })\n                        break;\n                    \n                    default:\n                        throw new Error('Invalid file type for import')\n                  }\n             }\n             reject('Failed to import')\n        })\n    }\n    \n\n    function importIntents(item) {\n          return new Promise(function(resolve, reject) {\n             console.log(['import intents',item])\n             if (item) {\n                  switch(item.fileType) {\n                      case 'text':\n                        resolve({intents:importTextIntents(item, item.title)})\n                        break;\n                    case 'json':\n                        importJsonIntents(item).then(function(intents) {\n                            resolve({intents:intents})  \n                        })\n                        break;\n                    \n                    default:\n                        throw new Error('Invalid file type for import')\n                  }\n             }\n             reject('Failed to import')\n        })\n    }\n        \n    \n \n    \n    \n    return {importIntents, importUtterances, importEntities, importAll, detectFileType}\n}\n\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst TagAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Tag'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                value={props.tagAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.tagAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setTagAllValue(skillKey); props.tagAll(skillKey)}} >Add {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.untagAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n      \n              //return <Dropdown  as={ButtonGroup}>\n              //<Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              //<Button   size=\"sm\" >{'Tag'} </Button>\n              //<Dropdown.Menu>\n               //<form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                    //<div className=\"form-group\">\n                      //<input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                    //value={props.tagAllValue} />\n                    //</div>\n                  //</form>\n                  //{props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n                      //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {props.setTagAllValue(tagKey); props.tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n                   //})}\n              //</Dropdown.Menu>\n          //</Dropdown>\n}\nexport default TagAllDropDown\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\n\nconst IntentAllDropDown = function(props) {\n    return  <Dropdown  as={ButtonGroup}>\n              <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button   size=\"sm\" >{'Intent'} </Button>\n              <Dropdown.Menu>\n               <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.intentAll(e.target.value)}} >\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setIntentAllValue(e.target.value)}}\n                    value={props.intentAllValue} />\n                    </div>\n                  </form>\n                  {props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n                      return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {props.setIntentAllValue(intentKey); props.intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n                   })}\n              </Dropdown.Menu>\n          </Dropdown>\n}\nexport default IntentAllDropDown\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst SkillAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Skill'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.skillSetAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setSkillAllValue(e.target.value)}}\n                value={props.skillAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.skillSetAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setSkillAllValue(skillKey); props.skillSetAll(skillKey)}} >Add to {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.unskillAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n      \n      \n    \n    //return <Dropdown  as={ButtonGroup}>\n          //<Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          //<Button   size=\"sm\" >{'Skill'} </Button>\n          //<Dropdown.Menu>\n           //<form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.skillSetAll(e.target.value)}} >\n                //<div className=\"form-group\">\n                  //<input type=\"text\" className=\"form-control\" onChange={function(e) {props.setSkillAllValue(e.target.value)}}\n                //value={props.skillAllValue} />\n                //</div>\n              //</form>\n              //{props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n              //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {props.setSkillAllValue(skillKey); props.skillSetAll(skillKey)}}  >{skillKey}</Dropdown.Item>\n    //})}\n          //</Dropdown.Menu>\n      //</Dropdown>\n}\nexport default SkillAllDropDown\n","/* global window */\nimport {Link} from 'react-router-dom'\nimport {Button, ListGroup } from 'react-bootstrap'\nimport ImportListsDropDown from './ImportListsDropDown'\n\nimport React, {Fragment} from 'react';\nimport FileReaderInput from 'react-file-reader-input';\n\nimport TagAllDropDown from './TagAllDropDown'\nimport IntentAllDropDown from './IntentAllDropDown'\nimport SkillAllDropDown from './SkillAllDropDown'\n\n\nimport helpSVG from '../images/helpoverview.svg'\n\nfunction MatchesTallies(props) {\n    return <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{props.filteredItems.length}/{props.items.length} matches </span>\n}\n\nfunction HelpMenu(props) {\n    return <div>\n        <Link style={{marginRight:'1em'}} to=\"/help\" ><Button>Home</Button></Link>\n        <Link style={{marginRight:'1em'}} to=\"/helpimport\" ><Button>Import</Button></Link>\n        <Link style={{marginRight:'1em'}} to=\"/helpexport\" ><Button>Export</Button></Link>\n        <Link style={{marginRight:'1em'}} to=\"/helpabout\" ><Button>About</Button></Link>\n    </div>\n}\n\nfunction HelpText(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n        <HelpMenu/>\n        <h1>NLU tool</h1>\n        <img src={helpSVG} style={{width: '80%', height:'15em' }} alt=\"Help Overview\"/>\n<br/><br/>        \n        <div>This tool helps voice developers build vocabularies for their applications by providing <b>import and export of various NLU training data formats</b>, and a <b>searchable database of community submitted, open licensed skills.</b>\n        </div>\n\n       <hr/>\n       <p><Link to=\"/search\" ><Button>Search </Button></Link> the community database of NLU example records.</p>\n         <p><Link to=\"/sources\" ><Button>Sources</Button></Link> to edit and import skills, pasted text or uploaded files.</p>\n        <p><Link to=\"/examples\" ><Button>Organise</Button></Link> your examples using tags and cleanup untagged examples.</p>\n        <p><Link to=\"/skills\" ><Button>Skills</Button></Link> to add platform metadata for export in various training formats or publishing to the community database.</p>\n        \n        <hr/>\n        <h3>Features</h3>\n        <ul>\n            <li>Search for open licenced training data submitted by the community</li>\n            <li>Import training data from text files, RASA , JOVO (Alexa, Google), Mycroft and native JSON.</li>\n            <li>Edit training data and tag entities in intent examples</li>\n            <li>Filtering, tagging, multiple selection and bulk operations to quickly collect training data into an exportable skill</li>\n            <li>Virtual rendering with react-window is used to allow fast rendering of lists of intents and entities with many thousands of values</li>\n            <li>Export training data suitable for RASA, JOVO and Mycroft</li>\n            <li>Publish your skill to the community repository under an open source license</li>\n            \n        </ul>\n        <ul>\n            <li>This tool is a Progressive Web Application. Most features work without the Internet.</li>\n            <li>MIT Open Source licensed code at <a target=\"_new\" href=\"https://github.com/syntithenai/opennludata\" >Github</a></li>\n            <li>Cross platform nodejs server</li>\n            <li>Published skills are committed to Github to ensure long term availability of collected data.</li>\n            <li>To ensure ongoing availability, the web pages are hosted with github pages and the search interface relies on static data generated during publishing so a database/backend server is only required when publishing)</li>\n             <li>When the Internet is available, <b>this site uses Google Analytics to measure engagement and improve future versions.</b> </li>\n        </ul>\n        \n        \n        \n        \n    </div>\n}\n\nfunction HelpTextImport(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n    <HelpMenu/>\n            <h1>Importing Data</h1>\n            <div>This tool can import files a variety of file formats and allows you to cherry pick intents, entities and utterances.\n            <br/>\n            You can use zip files to to upload and import many files that make up a skill for Mycroft, RASA or JOVO \n            <br/>\n           <ul>\n                <li><h3>Text</h3>\n                    \n                </li>\n                <li><h3>JSON</h3>\n                \n                </li>\n                <li><h3>OpenNlu JSON</h3>\n                \n                </li>\n                <li><h3>RASA</h3>\n                \n                </li>\n                <li><h3>JOVO</h3>\n                \n                </li>\n                <li><h3>Mycroft</h3>\n                \n                </li>\n\n            </ul>\n            \n            </div>\n            <hr/>\n        </div>\n}\n\nfunction HelpTextAbout(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n    <HelpMenu/>\n            <h1>About</h1>\n<br/>\n            <div><h3>Bugs/Feedback</h3>Please share any feedback on the <a target=\"_new\" href=\"https://github.com/syntithenai/opennludata/issues\" >Github Issues Page</a></div>\n            <br/>\n             <div>The <a target=\"_new\" href=\"https://github.com/syntithenai/opennludata\" >source code</a> for this tool is available under an MIT Open Source Licence. </div>\n            <hr/>\n            \n             <div>Icons from  The Noun Project and others.</div>\n             <ul>\n             <li>Man Singing by Gan Khoon Lay from  <a href='https://thenounproject.com/term/man-singing/642288/' target=\"_new\" >The Noun Project</a></li>\n             <li>Head by hunotika from <a href='https://thenounproject.com/term/head/184237/' target=\"_new\" >The Noun Project</a></li>\n             </ul>\n             <hr/>\n              <div>Using many open source libraries including</div>\n                <ul>\n                <li><a target=\"_new\" href=\"https://www.npmjs.com/package/create-node-app\" >create-node-app</a> </li>\n                <li><a target=\"_new\" href=\"https://github.com/syntithenai/react-express-oauth-login-system\" >react-express-oauth-login-system</a> for oauth based login with support for social providers</li>\n                <li><a target=\"_new\" href=\"https://github.com/localForage/localForage\" >localForage</a> for cross platform local persistence.</li>\n                <li><a target=\"_new\" href=\"https://github.com/florianholzapfel/express-restify-mongoose\" >express-restify-mongoose</a> to simplify API development.</li>\n                <li><a target=\"_new\" href=\"https://github.com/bvaughn/react-window\" >react-window</a> for virtual rendering, allowing for lists with many thousands of elements.</li>\n                <li><a target=\"_new\" href=\"https://github.com/josdejong/jsoneditor\" >JSON editor</a> for editing uploaded sources.</li>\n                <li>react, bootstrap, express, mongodb and mongoose</li>\n                </ul>\n            <hr/>\n        </div>\n}\n\nfunction HelpTextExport(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n    <HelpMenu/>\n            <h1>Exporting</h1>\n            <div>This tool can currently export to a number of formats including\n            <ul>\n                <li>Native JSON format</li>\n                <li>Mycroft intents and entities for Padatious NLU</li>\n                <li>RASA training data</li>\n                <li>JOVO model files</li>\n            </ul>\n            </div>\n\n        </div>\n}\n\n\nfunction NewFileButtons(props) {\n    return <span>\n        <Link to={props.match.url + '/text'} style={{float:'right'}} ><Button>Paste Text</Button></Link>\n        <FileSelector {...props}/>   \n    </span>\n}\n\n\nfunction ListsList(props) {\n     const { items} = props  \n     if (items) {\n       const list = Object.values(items).map(function(item,i) {\n            return <ListGroup.Item  key={i}  >\n                   <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"danger\" onClick={function(e) {if(window.confirm('Really delete list '+items[i].title)) props.deleteItem(i)}} >Delete</Button>\n                   <Link to={props.match.url+\"/text/\"+item.id} ><Button style={{float:'right',marginLeft:'0.5em'}}  >Edit</Button></Link>\n                   <span style={{width:'90%'}}  >{item.title}</span>\n               </ListGroup.Item>\n        })\n        return <ListGroup>{list}</ListGroup>\n    } else {\n        return null\n    }\n}\n\nfunction FileSelector(props) {\n    return <form onSubmit={function(e) {e.preventDefault()}} style={{float:'right'}}>\n            <FileReaderInput multiple as=\"binary\" id=\"my-file-input\"\n                             onChange={props.handleFileSelection}>\n              <Button style={{ marginRight:'0.5em'}} >Select files</Button>\n            </FileReaderInput>\n          </form>\n}\n\nfunction WithSelectedDropDowns(props) {\n    return <Fragment>\n        <span>With {props.lookups.selectedTally} selected&nbsp;</span>\n               \n        <SkillAllDropDown skillSetAll={props.skillSetAll} skillAllValue={props.skillAllValue}  setSkillAllValue={props.setSkillAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n        <IntentAllDropDown intentAll={props.intentAll} intentAllValue={props.intentAllValue} setIntentAllValue={props.setIntentAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n        <TagAllDropDown tagAll={props.tagAll} tagAllValue={props.tagAllValue} setTagAllValue={props.setTagAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n    </Fragment>\n\n}\n\nexport { MatchesTallies,  HelpTextImport,HelpTextExport,HelpTextAbout,HelpText, NewFileButtons, ListsList, FileSelector, WithSelectedDropDowns}\n","import {Link} from 'react-router-dom'\nimport {Button,  Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React, {useState, useEffect} from 'react';\n//import FileReaderInput from 'react-file-reader-input';\nimport {generateObjectId, parentUrl} from '../utils'\nimport { JsonEditor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\n//import useDB from './useDB'\n//import useDBSingleKey from './useDBSingleKey'\n//import {parseImportText} from './utils'\n//import localforage from 'localforage'\n//import {NewFileButtons, FileSelector, FilesList} from './Components'\n\nexport default function JSONTextEditor(props) {\n    const [title,setTitle] = useState(props.item && props.item.title ? props.item.title : '')\n    const [text, setText ] = useState(props.item && props.item.data ? props.item.data : '') \n    const [isJson, setIsJson ] = useState(false) \n    const [json, setJson ] = useState([]) \n    const [editorMode, setEditorMode] = useState('json')\n    const [editorOptions, setEditorOptions] = useState(['json','text'])\n    \n    const id = props.match.params.itemId ? props.match.params.itemId  : generateObjectId()\n    const { findKeyBy} = props  \n    const index = findKeyBy('id',id)\n   \n    \n    useEffect(() => {\n        try {\n            if ((text[0] === \"[\" && text[text.length - 1] === \"]\") || (text[0] === \"{\" && text[text.length - 1] === \"}\")) {\n                var jsonParsed = JSON.parse(text)\n                setJson(jsonParsed)\n                setIsJson(true)\n                setEditorOptions(['json','text'])\n                setEditorMode('json')\n            } else {\n                setIsJson(false)\n                setEditorOptions(['text'])\n                setEditorMode('text')\n            }\n        } catch (e) {\n            setIsJson(false)\n            setEditorOptions(['text'])\n            setEditorMode('text')\n        }\n    \n    },[text])\n     \n    var parentLink = parentUrl(props.match.url)\n    var linkParts = props.match.url.split(\"/\")\n    // link up two where id is present\n    if (linkParts[linkParts.length -1] !== \"text\") {\n       parentLink = parentUrl(parentUrl(props.match.url)) \n    }\n    var editorModeOptions = editorOptions.map(function(value,j) {\n      return <Dropdown.Item key={j} value={value} onClick={function(e) {setEditorMode(value); }}  >{value}</Dropdown.Item>\n   })\n    \n    return <div style={{minHeight:'60em'}}>\n          <Dropdown variant='info'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button variant='info'   size=\"sm\"  >\n          <b>{editorMode}</b>\n          </Button>\n          <Dropdown.Menu>\n              {editorModeOptions}\n          </Dropdown.Menu>\n        </Dropdown>\n\n            <span style={{float:'right'}} >\n                \n                {(text && title) && <Link to={parentLink} ><Button onClick={function(e) {props.saveItem({id:id,title:title,data:text},index)}} variant='success' >Save</Button></Link>}\n                {!(text && title) && <Button variant='secondary' >Save</Button>}\n                \n                <Link  to={parentLink} ><Button variant=\"danger\" >Cancel</Button></Link>\n            </span>\n            <label>&nbsp;Title <input size={60}  type='text' onChange={function(e) { setTitle(e.target.value)}}  value={title} /></label>\n            {(!isJson || editorMode === \"text\") && <textarea style={{marginLeft: '0.2em', height:'100%', minHeight:'60em', width:'98%'}}  onChange={function(e) { setText(e.target.value)}}  value={text} ></textarea>}\n            {(isJson && editorMode === \"json\") && <div style={{marginLeft: '0.2em', height:'100%', minHeight:'60em', width:'98%'}} >\n                <JsonEditor\n                value={json}\n                theme={\"ace/theme/github\"}\n                ace={ace}\n                history={true}\n                mode={'code'}\n                allowedModes={['tree','code']}\n                onChange={function(value) { setText(JSON.stringify(value))}}\n            /></div>}\n           \n    </div>\n}\n","import {Route} from 'react-router-dom'\nimport React, {useEffect} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport useDB from './useDB'\nimport useImportFunctions from './useImportFunctions'\nimport { saveAs } from 'file-saver';\nimport JSZip from 'jszip'\nimport {NewFileButtons} from './components/Components'\nimport JSONTextEditor from './components/JSONTextEditor'\n//import {generateObjectId, uniquifyArray } from './utils'\nimport {Link} from 'react-router-dom'\nimport {Button, ListGroup } from 'react-bootstrap'\n//import ImportListsDropDown from './components/ImportListsDropDown'\nimport localforage from 'localforage'\n\n// COMPONENTS\nfunction IndexPage(props) {\n    //console.log(['man index ',props])\n    return <div>\n                 <NewFileButtons {...props} />\n                 <h1>Sources</h1>\n                 <FilesList {...props} />\n            </div>\n}\n\n\n\nfunction FilesList(props) {\n    //console.log(['man fl ',props])\n       \n    var localforageStorageImport = localforage.createInstance({\n        name: 'nlutool',\n        storeName   :'importing',\n    });\n    \n    \n     const { items} = props  \n     var saveSkill=function (skill) {\n        localforageStorageImport.setItem('alldata',skill).then(function() {\n            props.history.push('/importreview')\n        })\n     }\n     var showError = function(e) {\n         if (e.error) props.setPageMessage(e.error,2000)\n         else props.setPageMessage(e.toString(),2000)\n     }\n     \n    function downloadZip(item) {\n        var zip = new JSZip();\n        zip.loadAsync(item.data)\n        .then(function(zip) {\n            zip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\n                saveAs(blob, item.title);      \n            })\n        });\n     }\n    \n     \n     if (items) {\n       const list = Object.values(items).map(function(item,i) {\n            return <ListGroup.Item  key={i}  >\n\n                   \n                  \n                    {(item && item.fileType) && <>\n                         <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"danger\" onClick={function(e) {if(window.confirm('Really delete source '+item.title+'-'+i)) props.deleteItem(i)}} >Delete</Button>\n                    \n                    {item.fileType.endsWith(\".zip\") && <Button style={{float:\"right\", marginLeft:'0.5em'}} onClick={function() {downloadZip(item)}}>Download</Button>}\n\n                    {!item.fileType.endsWith(\".zip\") && <Button style={{float:\"right\", marginLeft:'0.5em'}} onClick={function() {saveAs(new Blob([item.data], {type: 'application/'+item.fileType}), item.title+'.'+item.fileType)}}>Download</Button>}\n    \n                   {/* Can't edit zip files*/}\n                   {!item.fileType.endsWith('.zip') && <Link to={props.match.url+\"/text/\"+item.id} ><Button style={{float:'right',marginLeft:'0.5em'}}  >Edit</Button></Link>}\n                   \n                   {item.fileType === \"text\" && <div className=\"textimportbuttons\" >\n                       <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"success\" onClick={function(e) { props.importFunctions.importIntents(item).then(saveSkill).catch(showError)  }}    >Import Intents</Button>\n                       <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"success\" onClick={function(e) { props.importFunctions.importEntities(item).then(saveSkill).catch(showError)  }}    >Import Entities</Button>\n                       <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"success\" onClick={function(e) { props.importFunctions.importUtterances(item).then(saveSkill).catch(showError)  }}    >Import Utterances</Button>\n                    </div>}\n                    \n                    {item.fileType !== \"text\" && <>\n                       {/* Import whatever is available */}\n                       {<Button style={{float:'right', marginLeft:'0.5em'}} variant=\"success\" \n                           onClick={function(e) { \n                               props.importFunctions.importAll(item)\n                               // save import results and redirect to import overview\n                               .then(saveSkill).catch(showError) \n                            }}    >Import</Button>}\n                    </>}\n                    \n                   \n                   <span style={{width:'90%'}}  > {item.fileType && <Button>{item.fileType}</Button>}&nbsp;&nbsp;&nbsp;{item.title}</span>\n                 \n                  </>}\n               </ListGroup.Item>\n        })\n        return <ListGroup>{list}</ListGroup>\n    } else {\n        return null\n    }\n}\n //{/* Only import utterances */}\n                       //{(item.fileType === \"rasa.zip\" || item.fileType === \"mycroft.zip\"  || item.fileType === \"opennlu.zip\"  || item.fileType !== \"opennlu.lists\") && <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"success\" onClick={function(e) { props.importFunctions.importUtterances(items[i]) }}    >Import Utterances</Button>}\n                       //{/* Only import entities */}\n                       //{<ImportListsDropDown lookups={props.lookups} importListTo={function(listName) {props.importFunctions.importEntities(items[i],listName)}} importTo={items[i].title} /> }\nexport default function LocalStorageUploadManager(props) {\n    //console.log('man')\n    //console.log(props)\n     \n    var importFunctions = useImportFunctions(props.setPageMessage)\n     \n\n     const {loadAll, saveItem, deleteItem ,items, findKeyBy, findBy} = useDB('nlutool','sources');\n    \n    // just on mount \n    useEffect(() => {\n        loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    \n    \n    function handleFileSelection(ev, results) {\n        ev.preventDefault()\n        if (results) {\n            results.forEach(result => {\n              const [e, file] = result;\n              console.log(['upl result',e, file,e.target.result])\n               var item = {id:null, data:e.target.result, title:file.name}\n               importFunctions.detectFileType(item).then(function(fileData) {\n                    if (fileData && fileData.type) {\n                        item.fileType = fileData.type\n                        item.created_date = new Date().getTime()\n                        //if (item.fileType.endsWith('.zip')) {\n                            //item.data = new File([item.data],'application/zip')\n                        //}\n                        console.log(['SET ITEM TYPE', item.fileType])\n                        saveItem(item,0)\n                    } else {\n                        props.setPageMessage('Invalid file type')\n                        setTimeout(function() {\n                            props.setPageMessage('')\n                        },2000)\n                    }\n                })\n            });\n            \n        }\n    }    \n  \n    function saveItemWrap(item,index) {\n        importFunctions.detectFileType(item).then(function(fileData) {\n            item.fileType = fileData.type\n            item.created_date = new Date().getTime()\n            console.log(['SET ITEM TYPE', item.fileType])\n            saveItem(item,index)\n        })\n    }\n    \n    //console.log(['RENDER LOMAN',props])\n    return (\n        <div className=\"LocalStorageUploadManager\" >\n            <Route \n                path={[`${props.match.path}/text/:itemId?`, `${props.match.path}/text`]}  \n                render={(props) => <JSONTextEditor {...props} \n                    item={findBy('id',props.match.params.itemId)} \n                    saveItem={saveItemWrap} deleteItem={deleteItem} findKeyBy={findKeyBy} \n                    \n                />}     \n            />\n            <Route {...props} exact path={props.match.path} \n                render={function(iprops) { return  <IndexPage {...props} \n                    items={items}\n                    deleteItem={deleteItem} saveItem={saveItemWrap} importFunctions={importFunctions} \n                    handleFileSelection={handleFileSelection} \n                />}} \n            />\n\n        </div>\n    );\n}\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst ListAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Set List'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                value={props.tagAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.tagAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.listsLookups && props.lookups.listsLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setTagAllValue(skillKey); props.tagAll(skillKey)}} >Add to {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.untagAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n}\nexport default ListAllDropDown\n","import React from 'react'\nconst SearchInput = function({searchFilter,setSearchFilter}) {\n    return (<input style={{marginLeft:'0.5em'}}  type='text' value={searchFilter} \n            onChange={\n                function(e) {\n                    const filter = e.target.value\n                    setSearchFilter(filter); \n                }\n            } placeholder='Search' />)\n}\n    \nexport default SearchInput\n","import React, {useEffect, useState} from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\nimport checkImage from '../images/check.svg'\n\n\nconst ListsManagerSearchBar = function(props) {\n    const [topTagOptions,setTopTagOptions] = useState([])\n    useEffect(() => {\n        //console.log(['kust nabager ',props.lookups.listsLookups])\n        var topTagOptionss = props.lookups.listsLookups && props.lookups.listsLookups.sort().map(function(listKey,i) {\n              return <Dropdown.Item key={i} value={listKey} onClick={function(e) {props.setListFilterValue(listKey)}}  >{listKey}</Dropdown.Item>\n        })\n        topTagOptionss.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setListFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        topTagOptionss.push(<Dropdown.Item key={'Not In A List'} value={'Not In A List'} onClick={function(e) {props.setListFilterValue('Not In A List')}}  ><b>Not In A List</b></Dropdown.Item>)\n        setTopTagOptions(topTagOptionss)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.lookups])\n    \n    return <div>\n            {<span>\n            \n                {props.lookups.selectedListTally > 0 && <Button size=\"lg\"  onClick={function(e) { props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedListTally <= 0 && <Button size=\"lg\" onClick={function(e) { props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button> }\n                \n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'List'+(props.listFilterValue ? ' - '+ props.listFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topTagOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n              \n              <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.listFilterValue)}} >New Entity</Button>\n              <Button  style={{marginLeft:'1em'}} variant=\"primary\" onClick={function(e) {props.sort(function(a,b) { if (a.value < b.value) return -1; else return 1;})}} >Sort</Button>\n        </div>\n}\nexport default ListsManagerSearchBar\n","import React, {useState, useEffect} from 'react'\nimport {uniquifyArray, uniquifyArrayOfObjects} from './utils'\nfunction useListItemRow(item, saveItem, splitNumber, style) {\n    const [selectionState, setSelectionState] = useState({})\n    //const [newEntity, setNewEntity] = useState('')\n    // for ReactTags format using objects\n    const [tags, setTags] = useState([])\n    //console.log(['USENLUROW',splitNumber])\n    const reactTags = React.createRef()\n     // tags\n    useEffect(() => {\n        if (item.tags) setTags(item.tags.map(function(tag,i) {return {id:i, name:tag}}))\n    },[item])\n\n     function onTagDelete (i) {\n        const newTags = tags.slice(0)\n        newTags.splice(i, 1)\n        setTags(newTags)\n        var newItem = item\n        newItem.tags = newTags.map(function(newTag) { return newTag.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onTagAddition (tag) {\n         console.log(['ontagad',tag, tags])\n         if (tag && tag.name.trim().length > 0) {\n            const newTags = [].concat(tags, tag)\n            console.log(['ontagad new',newTags])\n            var newItem = item\n            var tagArray = uniquifyArray(newTags.map(function(newTag) { return newTag.name}))\n            newItem.tags = tagArray.sort()\n            console.log(['ontagad presave',tagArray,JSON.parse(JSON.stringify(newItem)),splitNumber])\n            saveItem(newItem,splitNumber)\n            console.log(['ontagad saved'])\n            setTags(uniquifyArrayOfObjects(newTags,'name').sort(function(a,b) {if (a.name > b.name) return 1; else return -1} ))\n            \n        }\n      }\n    \n    function updateExampleContent(content) {\n        //console.log(['UPDTEXT', item, content])\n        if (item && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = item //JSON.parse(JSON.stringify(item));\n            \n            newItem.value = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n     function updateExampleSynonym(content) {\n        //console.log('UPDTEXT')\n        if (item && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = item //JSON.parse(JSON.stringify(item));\n            \n            newItem.synonym = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    \n    function selectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = true;\n        console.log(['SELECT LIST ITEM',newItem,splitNumber])\n        saveItem(newItem,splitNumber)\n    }\n   \n    \n    function deselectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = false;\n        console.log(['DESELECT LIST ITEM',newItem,splitNumber])\n        saveItem(newItem,splitNumber)\n    } \n    \n    return {    \n        selectionState, setSelectionState, tags, setTags, reactTags, onTagDelete, onTagAddition, updateExampleContent, updateExampleSynonym, selectItem, deselectItem\n    }\n    \n}\nexport default useListItemRow\n","import React from 'react';\nexport default function SuggestionComponent({ item, query }) {\n  return (\n    <span  id={item.id} className={item.name === query ? 'match' : 'no-match'}>\n      {item.name}\n    </span>\n  )\n}\n","/* global window */\nimport {Button } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useListItemRow from './useListItemRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\n\nexport default function ListsManagerRow(props) {\n        const  {item, splitNumber , style} = props;\n       const {    \n            tags, reactTags, \n            onTagDelete, onTagAddition, updateExampleContent,updateExampleSynonym,  selectItem, deselectItem\n        } = useListItemRow(props.item, props.saveItem, props.splitNumber, props.style)\n            \n       \n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                   \n                   <div style={{float:'right'}} > \n                        <Button  variant=\"danger\"  size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} >X</Button>\n               \n                    </div>\n                   \n                  <div style={{float:'left'}}>\n                     {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Select\"  /></Button>}\n                      {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\"  /></Button>}\n                </div>\n                \n                <input style={{float:'left'}} size='25'   \n                       type='text'  value={item.value}  onChange={function(e) { updateExampleContent(e.target.value)}} />\n                    \n                     \n                   \n                     <label style={{float:'left', marginLeft:'0.5em'}} >Synonym <input size='15' type='text' value={item.synonym} onChange={function(e) {updateExampleSynonym(e.target.value)}} /></label>\n                     <label style={{float:'left', marginLeft:'0.5em'}} >\n                     <span  style={{float:'left', marginRight:'0.5em'}}>Lists </span>\n                     <span  style={{float:'left'}}>\n                       <ReactTags\n                        placeholderText=\"Add to list\"\n                        minQueryLength={0}\n                        maxSuggestionsLength={50}\n                        autoresize={false}\n                        allowNew={true}\n                        ref={reactTags}\n                        tags={tags}\n                        suggestionComponent={SuggestionComponent}\n                        suggestions={props.lookups.listsLookups.map(function(listName,i) {return {id: i, name: listName}})}\n                        onDelete={onTagDelete}\n                        onAddition={onTagAddition} /> \n                        </span>\n                    </label>\n                  </div> \n               \n                \n                 \n           \n      </div>\n}\n","// USE A SINGLE LOCALSTORAGE KEY FOR PERSISTENCE\n// this is much faster than using set/getItem for each item\n// workable for many thousands of rows\nimport { useEffect, useReducer} from 'react';\n\nimport {generateObjectId} from './utils'\nimport localforage from 'localforage'\n\n// handle list updates with minimum disruption to top level items\nfunction reducer(state, action) {\n    const index = parseInt(action.index)\n    //console.log(['REDUCE',action.type,action.index, action.item,action.items,state])\n    switch (action.type) {\n    case \"append\":\n      if (action.item) {\n        return [...state, action.item];\n      } else return state\n    case \"prepend\":\n      if (action.item) {\n        return [action.item,...state];\n      } else return state\n    case \"insert\":\n      if (action.item && typeof index === \"number\" ) {\n          if (state.length > 0) {\n              return [\n                ...state.slice(0, index),\n                action.item,\n                ...state.slice(index)\n              ];\n          } else return state\n        } else return state\n    case \"remove\":\n      if (typeof index === \"number\" ) {\n          return [\n            ...state.slice(0, index),\n            ...state.slice(index + 1)\n          ];\n       } else return state \n    case \"update\":\n       if (action.item && typeof index === \"number\" ) {\n           return  [\n            ...state.slice(0, index),\n            action.item,\n            ...state.slice(index + 1)\n          ];\n        } else return state \n    case \"replaceall\":\n        if (typeof action.items === \"object\") {\n            return action.items\n        } else return state\n    case \"sort\":\n    //console.log(['DISP SORT',action.sort])\n        if (typeof action.sort === \"function\") {\n            var ret = state.sort(action.sort)\n            //console.log(['DISP SORT ret',ret])\n            return [...ret]\n        } else return state\n    default:\n      throw new Error('Invalid reduction in useDBSingleKey');\n  }\n    \n}\n\n// state manager with local storage backing\nexport default function useDB(database, databaseTable,singleKey, initialData=[]) {\n    //console.log(['use db single key', database, databaseTable,singleKey])\n    if (!singleKey) singleKey = 'data'\n     const [items, dispatch] = useReducer(reducer,initialData);\n     var localforageStorage = localforage.createInstance({\n       name: database ? database : \"localstoragemanager\",\n       storeName   : databaseTable ? databaseTable : 'single_key_data',\n     });\n\n    \n    useEffect(function() {\n        //console.log(['dbsingle key items loaded',items])\n        //loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    useEffect(function() {\n        //console.log(['dbsingle key items updated',items])\n        localforageStorage.setItem(singleKey,items)  \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items])\n\n    function getId(item) {\n        if (item && item.id) {\n            return item.id\n        } else {\n            throw new Error(\"Missing ID value in getId\")\n        }\n    }\n\n    function loadAll() {\n        return new Promise(function(resolve, reject) {\n            localforageStorage.getItem(singleKey).then(function(res) {\n              //console.log(['loadall',database, databaseTable,singleKey,res])\n              dispatch({ type: \"replaceall\", items: res ? res : initialData});\n              resolve(res)\n            })\n        })\n    }\n\n    \n    // save or create\n    function saveItem(item,index) {\n        //console.log(['save',item,index])\n        if (item) {\n            // update sources and save text in seperate localstorage\n            // ensure id\n            var isNewItem = false;\n            if (!item.id) {\n                isNewItem = true;\n                item.id = generateObjectId()\n            }\n             \n            if (isNewItem) {\n                dispatch({ type: \"prepend\",item: item });\n            } else {\n                //var intIndex = parseInt(index)\n                //if (intIndex != NaN) {\n                    //if (intIndex > 0) {\n                        //dispatch({ type: \"update\",item: item , index: intIndex});\n                    //} else {\n                        //dispatch({ type: \"prepend\",item: item });\n                    //}\n                //} else \n                if (items) {\n                    var found = null\n                    items.map(function(listItem,listItemIndex) {\n                        if (listItem.id === item.id) {\n                            found = listItemIndex\n                        } \n                        return null\n                    })\n                    if (found != null) {\n                        dispatch({ type: \"update\",item: item , index: found});\n                    } else {\n                        dispatch({ type: \"prepend\",item: item });\n                    }\n              \n                } \n            }  \n            \n        }\n    }\n    \n    function findBy(field,value) {\n        var key = findKeyBy(field,value)\n        return items[key];\n    }\n    \n    function findKeyBy(field,value) {\n        for (var k in items) {\n            if (items[k] && items[k][field] === value) return k\n        }\n    }\n\n    function setItemsWrap(items) {\n        localforageStorage.clear().then(function() {\n            dispatch({ type: \"replaceall\", items: items})\n        })\n    }\n    \n    function sort(sortFunction) {\n        dispatch({ type: \"sort\", sort: sortFunction})\n    }\n    \n    function filter(matchFunction) {\n        var filtered = []\n        if (matchFunction) {\n            items.map(function(item,i) {\n              if (item && matchFunction(item)) {\n                  filtered.push(item)\n              } \n              return null \n            })\n        }\n        return filtered\n        \n    }\n    \n    function deleteItem(index) {\n        dispatch({ type: \"remove\", index: index})\n    }\n    return {getId:getId, loadAll:loadAll, saveItem:saveItem, deleteItem:deleteItem , items:items, setItems:setItemsWrap, findKeyBy:findKeyBy, findBy:findBy, filter: filter, sort: sort}\n    \n}\n","import React, {useState, useEffect} from 'react';\nimport useDBSingleKey from './useDBSingleKey'\nimport {useParams, useHistory} from 'react-router-dom'\n\nfunction useListItemEditor(database, databaseTable, databaseKey, updateLists, initialData) {\n    const {loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter, sort} = useDBSingleKey(database, databaseTable, databaseKey, initialData)\n    const [filteredItems, setFilteredItems] = useState([])\n    const [filteredItemsKeys, setFilteredItemsKeys] = useState([])\n    const [searchFilter, setSearchFilter] = useState('')\n    const [tagAllValue, setTagAllValue] = useState('')\n    const listRef = React.createRef()\n    //const [listFilterValue, setListFilterValue] = useState('')\n    \n    var params = useParams()\n    var listFilterValue = params.listId ? params.listId : '';\n    var history = useHistory()\n    function setListFilterValue(value) {\n        var root = history.location.pathname.split(\"/\")\n        var parts=['/'+root[1]]\n        parts.push('/'+value)\n        history.push(parts.join(''))\n    }\n   \n      \n    useEffect(() => {\n         var filteredItems = filter(function(item) {\n            //return true;\n            var matchText = true\n            if (searchFilter && searchFilter.trim().length >0) {\n                if (item.value && item.value.toLowerCase().indexOf(searchFilter.toLowerCase()) !== -1 ) {\n                    matchText = true\n                } else {\n                    matchText = false\n                }\n            }\n            var matchPicklist = true\n            if (listFilterValue === \"Not In A List\") {\n                //console.log(['tags',item.tags])\n                if (!item.tags || (item.tags && item.tags.length === 0)) {\n                    matchPicklist =  true\n                } else {\n                    matchPicklist = false\n                }\n            } else if (listFilterValue && listFilterValue.trim().length >0) {\n                if (item.tags && item.tags.indexOf(listFilterValue) !== -1) {\n                    matchPicklist = true\n                } else {\n                    matchPicklist = false\n                }\n            }\n            \n            return matchText && matchPicklist\n            //return (item.value.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)) ? true : false\n        })\n        var itemKeys = {}\n        filteredItems.map(function(item) {if (item.id) itemKeys[item.id] = true; return null})\n        filteredItems.sort(function(a,b) { return (a.value ? a.value.toLowerCase() : '') < (b.value ? b.value.toLowerCase() : '') ? true : false})\n        setFilteredItems(filteredItems)\n        setFilteredItemsKeys(itemKeys)\n        updateLists(filteredItems)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items, searchFilter, listFilterValue])\n    \n    function deleteAll(e)  {\n        if (window.confirm('Really delete all selected')) {\n            if (items) {\n                var newItems = []\n                items.map(function(item,i) {\n                    // dump items without id\n                    if (item && item.id) {\n                        // only delete filtered items\n                        if (filteredItemsKeys[item.id]) {\n                           // only delete selected filtered items\n                           if (!item.isSelected) {\n                               newItems.push(item)\n                           }\n                        // not filtered so push\n                        } else {\n                            newItems.push(item)\n                        }\n                    }\n                    return null\n                })\n                setItems(newItems)\n                listRef.current.resetAfterIndex(0);\n            }\n        }\n    }\n    \n    function tagAll(val) {\n        console.log(['tagall',tagAllValue,val])\n        var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item && item.id) { \n                    if (item.isSelected && filteredItemsKeys[item.id]) {\n                       var newItem = JSON.parse(JSON.stringify(item));\n                       if (!newItem.tags) newItem.tags=[]\n                       if (newItem.tags.indexOf(tagValue) === -1) newItem.tags.push(tagValue)\n                       newItems.push(newItem)\n                    } else {\n                       newItems.push(item)\n                    }\n                }\n               return null\n            })\n            setItems(newItems)\n        }\n    }\n\n    function untagAll(val) {\n        console.log(['untagall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n               if (item && item.id) {\n                   if (item.isSelected && filteredItemsKeys[item.id]) {\n                       var newItem = JSON.parse(JSON.stringify(item));\n                       if (!newItem.tags) newItem.tags=[]\n                       var finalTags = []\n                       newItem.tags.map(function(tag) {\n                           if (tag !== val) {\n                               finalTags.push(tag)\n                           }  \n                           return null\n                       })\n                       newItem.tags = finalTags\n                       newItems.push(newItem)\n                   } else {\n                       newItems.push(item)\n                   }  \n               }\n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    \n    function resetSelection() {\n         //console.log('reset sa')\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item) {\n                    var newItem = item\n                   newItem.isSelected = false\n                   newItems.push(newItem)\n                }\n               return null\n            })\n            setItems(newItems)\n            \n        }\n    }\n    \n     function selectAll() {\n         console.log(['SELECTALL',items])\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item && item.id) {\n                    var newItem = item\n                    if (item.id && filteredItemsKeys[item.id]) {\n                       newItem.isSelected = true\n                       newItems.push(newItem)\n                    } else {\n                        newItem.isSelected = false\n                        newItems.push(newItem)\n                    }\n                }\n                return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    //function sort() {\n         //console.log(['SORT',items])\n         //if (items) {\n            //var newItems = items.sort(function(a,b) { if (a.value < b.value) return -1; else return 1;})\n            //setItems(newItems)\n            //listRef.current.resetAfterIndex(0);\n            //console.log(['SORTed',newItems])\n        //}\n    //}\n    \n    function saveItemWrap(item,index) {\n        console.log(['SAVE ITEM WRAP',item,index])\n        if (item) {\n            saveItem(item,index)\n            listRef.current.resetAfterIndex(index);\n            updateLists(items)\n        }\n    }\n    \n    function getItemSize(index) {\n        //console.log(window.innerWidth,window.innerHeight)\n        // set parameters for full size > 1024\n        var baseSize = 40\n        //// tiny screen mobile \n        if (window.innerWidth < 430) {\n            baseSize = 120\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n            baseSize = 70\n        }\n        return baseSize\n    }\n    \n   function createEmptyItem(list) {\n       var tags=[]\n        if (list && list !== \"Not In A List\" && list.trim().length > 0) tags.push(list)\n        setSearchFilter('')\n        saveItem({id:null, value:'', synonym:'',tags:tags})\n   }\n    \n    return {\n        loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter, filteredItems, setFilteredItems, sort, \n        searchFilter, setSearchFilter, tagAllValue, setTagAllValue,listRef, listFilterValue, setListFilterValue,\n        tagAll,untagAll, resetSelection, selectAll, saveItemWrap, getItemSize, deleteAll, createEmptyItem\n    }\n}\nexport default useListItemEditor\n","import React, { useEffect} from 'react';\nimport './App.css';\n//import {Link, useParams, useHistory} from 'react-router-dom'\nimport {Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport ListAllDropDown from './components/ListAllDropDown'\n\nimport ListsManagerSearchBar from './components/ListsManagerSearchBar'\nimport ListsManagerRow from './ListsManagerRow'\nimport useListItemEditor from './useListItemEditor'\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <ListsManagerRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups} />\n}\n\nexport default  function ListsManager(props) {\n    const {listFilterValue, setListFilterValue, loadAll, deleteItem ,items, findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, listRef, tagAll,untagAll, resetSelection, selectAll, saveItemWrap, getItemSize,  filteredItems, deleteAll, createEmptyItem, sort} = useListItemEditor('nlutool','lists','alldata', props.updateFunctions.updateLists)\n    //const [currentList, setCurrentList] = useState('')\n\n    useEffect(() => {\n        loadAll()\n        props.updateFunctions.updateLists(items)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    useEffect(() => {\n        //props.updateFunctions.updateLists(filteredItems)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[filteredItems])\n    \n    \n  \n    \n    function renderEditor(props) {\n                \n            if (filteredItems && filteredItems.length > 0) {\n                return <div>\n                    <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length} matches </span>\n                    \n                     \n                     {props.lookups.selectedListTally > 0 && <span style={{float:'right'}}> \n                        \n                        <span>With {props.lookups.selectedListTally} selected&nbsp;</span>\n                        <ListAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue} untagAll={untagAll} lookups={props.lookups}/>\n                        <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                    </span>} \n                    \n                      <div style={{clear:'both'}}>\n                        <div style={{clear:'both'}}>\n                            <List\n                                key=\"list\"\n                                ref={listRef}\n                                itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups}}\n                                itemKey={index => index}  \n                                className=\"List\"\n                                height={700}\n                                itemCount={filteredItems.length}\n                                itemSize={getItemSize}\n                                width={'100%'}\n                              >{RenderRow}\n                            </List>\n                        </div>\n                    </div>\n               </div>\n          }\n    }\n    \n   return <div>\n   \n        {<ListsManagerSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} listFilterValue={listFilterValue} setListFilterValue={setListFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} sort={sort} />}\n         \n         {renderEditor(props)}\n    </div>\n            \n}\n      \n","import React, {useEffect, useState} from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\nimport checkImage from '../images/check.svg'\n\n\nconst UtterancesManagerSearchBar = function(props) {\n    const [topTagOptions,setTopTagOptions] = useState([])\n    useEffect(() => {\n        //console.log(['kust nabager ',props.lookups.listsLookups])\n        var topTagOptionss = props.lookups.utteranceTagsLookups && props.lookups.utteranceTagsLookups.sort().map(function(listKey,i) {\n              return <Dropdown.Item key={i} value={listKey} onClick={function(e) {props.setListFilterValue(listKey)}}  >{listKey}</Dropdown.Item>\n        })\n        topTagOptionss.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setListFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        topTagOptionss.push(<Dropdown.Item key={'Not In A List'} value={'Not In A List'} onClick={function(e) {props.setListFilterValue('Not In A List')}}  ><b>Not In A List</b></Dropdown.Item>)\n        setTopTagOptions(topTagOptionss)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.lookups])\n    \n    return <div>\n            {<span>\n            \n                {props.lookups.selectedUtteranceTally > 0 && <Button size=\"lg\"  onClick={function(e) {console.log(['reset sel']); props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedUtteranceTally <= 0 && <Button size=\"lg\" onClick={function(e) {console.log(['sel all']); props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button> }\n                \n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'List'+(props.listFilterValue ? ' - '+ props.listFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topTagOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n              <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.listFilterValue)}} >New Utterance</Button>\n              <Button  style={{marginLeft:'1em'}} variant=\"primary\" onClick={function(e) {props.sort(function(a,b) { if (a.value < b.value) return -1; else return 1;})}} >Sort</Button>\n        </div>\n}\nexport default UtterancesManagerSearchBar\n","/* global window */\nimport {Button } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useListItemRow from './useListItemRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\n\nexport default function UtterancesManagerRow(props) {\n        const  {item, splitNumber , style} = props;\n       const {    \n            tags, reactTags, \n            onTagDelete, onTagAddition, updateExampleContent,updateExampleSynonym,  selectItem, deselectItem\n        } = useListItemRow(props.item, props.saveItem, props.splitNumber, props.style)\n            \n       \n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                   \n                   <div style={{float:'right'}} > \n                        <Button  variant=\"danger\"  size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} >X</Button>\n                    </div>\n                   \n                  <div style={{float:'left'}}>\n                     {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Select\"  /></Button>}\n                      {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\"  /></Button>}\n                </div>\n                \n                <input style={{float:'left'}} size='25'   \n                       type='text'  value={item.value}  onChange={function(e) { updateExampleContent(e.target.value)}} />\n                    \n                     \n                     <label style={{float:'left', marginLeft:'0.5em'}} >\n                     <span  style={{float:'left', marginRight:'0.5em'}}>Lists </span>\n                     <span  style={{float:'left'}}>\n                       <ReactTags\n                        placeholderText=\"Add to list\"\n                        minQueryLength={0}\n                        maxSuggestionsLength={50}\n                        autoresize={false}\n                        allowNew={true}\n                        ref={reactTags}\n                        tags={tags}\n                        suggestionComponent={SuggestionComponent}\n                        suggestions={props.lookups.utteranceTagsLookups.map(function(listName,i) {return {id: i, name: listName}})}\n                        onDelete={onTagDelete}\n                        onAddition={onTagAddition} /> \n                        </span>\n                        </label>\n                        \n                        \n                        \n                    <label style={{float:'left', marginLeft:'0.5em'}} ><span style={{float:'left', marginRight:'0.5em'}}>Alternatives</span> \n                        <textarea style={{width:\"34em\", height:\"5em\"}} type='text' value={item.synonym} onChange={function(e) {updateExampleSynonym(e.target.value)}} />\n                    </label>\n                  </div> \n               \n                \n                 \n           \n      </div>\n}\n","/* global window */\nimport React, { useEffect} from 'react';\nimport './App.css';\n//import {Link, useParams, useHistory} from 'react-router-dom'\nimport {Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport ListAllDropDown from './components/ListAllDropDown'\n\nimport UtterancesManagerSearchBar from './components/UtterancesManagerSearchBar'\nimport UtterancesManagerRow from './UtterancesManagerRow'\nimport useListItemEditor from './useListItemEditor'\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <UtterancesManagerRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups} />\n}\n\nexport default  function UtterancesManager(props) {\n    const {listFilterValue, setListFilterValue, loadAll, deleteItem , findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, listRef, tagAll,untagAll, resetSelection, selectAll, saveItemWrap,  filteredItems, deleteAll, createEmptyItem, sort} = useListItemEditor('nlutool','utterances','alldata', props.updateFunctions.updateUtterances)\n    //const [currentList, setCurrentList] = useState('')\n\n    function getItemSize() {\n        if (window.innerWidth < 430) {\n               return 220\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n               return 160\n        } else {\n            return 130\n        }\n    }\n\n    useEffect(() => {\n        loadAll()\n        //props.updateFunctions.updateLists(items)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n   \n    \n    function renderEditor(props) {\n            if (filteredItems && filteredItems.length > 0) {\n            \n                return <div>\n                    <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length} matches </span>\n                     \n                     {props.lookups.selectedUtteranceTally > 0 && <span style={{float:'right'}}> \n                        \n                        <span>With {props.lookups.selectedUtteranceTally} selected&nbsp;</span>\n                        <ListAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue} untagAll={untagAll} lookups={props.lookups}/>\n                        <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                    </span>} \n                    \n                      <div style={{clear:'both'}}>\n                        <div style={{clear:'both'}}>\n                            <List\n                                key=\"list\"\n                                ref={listRef}\n                                itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups}}\n                                itemKey={index => index}  \n                                className=\"List\"\n                                height={700}\n                                itemCount={filteredItems.length}\n                                itemSize={getItemSize}\n                                width={'100%'}\n                              >{RenderRow}\n                            </List>\n                        </div>\n                    </div>\n               </div>\n\n            }\n              \n    }\n    \n  \n    return <div>\n       \n                   \n        {<UtterancesManagerSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} listFilterValue={listFilterValue} setListFilterValue={setListFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} sort={sort} />}\n         \n         \n         {renderEditor(props)}\n    </div>\n            \n}\n      \n\n //{JSON.stringify(items)}\n    //<hr/>\n    \n    \n    //<hr/>\n    //{JSON.stringify(filteredItems)}\n\n\n","import React, {useEffect, useState} from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\nimport checkImage from '../images/check.svg'\n\n\nconst RegexpsManagerSearchBar = function(props) {\n    const [topTagOptions,setTopTagOptions] = useState([])\n    useEffect(() => {\n        //console.log(['kust nabager ',props.lookups.listsLookups])\n        var topTagOptionss = props.lookups.regexpTagsLookups && props.lookups.regexpTagsLookups.sort().map(function(listKey,i) {\n              return <Dropdown.Item key={i} value={listKey} onClick={function(e) {props.setListFilterValue(listKey)}}  >{listKey}</Dropdown.Item>\n        })\n        topTagOptionss.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setListFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        topTagOptionss.push(<Dropdown.Item key={'Not In A List'} value={'Not In A List'} onClick={function(e) {props.setListFilterValue('Not In A List')}}  ><b>Not Tagged</b></Dropdown.Item>)\n        setTopTagOptions(topTagOptionss)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.lookups])\n    \n    return <div>\n            {<span>\n                {props.lookups.selectedRegexTally > 0 && <Button size=\"lg\"  onClick={function(e) { props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedRegexTally <= 0 && <Button size=\"lg\" onClick={function(e) { props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button> }\n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'Tag'+(props.listFilterValue ? ' - '+ props.listFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topTagOptions} \n                  </Dropdown.Menu>\n                </Dropdown>}\n              <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.listFilterValue)}} >New Expression</Button>\n              <Button  style={{marginLeft:'1em'}} variant=\"primary\" onClick={function(e) {props.sort(function(a,b) { if (a.value < b.value) return -1; else return 1;})}} >Sort</Button>\n        </div>\n}\nexport default RegexpsManagerSearchBar\n","/* global window */\nimport {Button } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useListItemRow from './useListItemRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\n\nexport default function UtterancesManagerRow(props) {\n        const  {item, splitNumber , style} = props;\n       const {    \n            tags, reactTags, \n            onTagDelete, onTagAddition, updateExampleContent,updateExampleSynonym,  selectItem, deselectItem\n        } = useListItemRow(props.item, props.saveItem, props.splitNumber, props.style)\n            \n       \n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                   \n                   <div style={{float:'right'}} > \n                        <Button  variant=\"danger\"  size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} >X</Button>\n               \n                    </div>\n                   \n                  <div style={{float:'left'}}>\n                     {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Select\"  /></Button>}\n                      {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\"  /></Button>}\n                  </div>\n                  \n                <label><span style={{float:'left', marginLeft:'0.5em', marginRight:'0.5em'}}>Description </span> <input style={{float:'left'}} size='50'   \n                       type='text'  value={item.value}  onChange={function(e) { updateExampleContent(e.target.value)}} /></label>\n                \n                \n                     \n                     <label style={{float:'right', marginRight:'2em'}} >\n                     <span  style={{float:'left', marginRight:'0.5em'}}>Tags </span>\n                     <span  style={{float:'left'}}>\n                       <ReactTags\n                        placeholderText=\"Add tag\"\n                        minQueryLength={0}\n                        maxSuggestionsLength={50}\n                        autoresize={false}\n                        allowNew={true}\n                        ref={reactTags}\n                        tags={tags}\n                        suggestionComponent={SuggestionComponent}\n                        suggestions={props.lookups.regexpTagsLookups.map(function(listName,i) {return {id: i, name: listName}})}\n                        onDelete={onTagDelete}\n                        onAddition={function(a, b) {console.log('ADD REGEXP TAG',a,b) ; onTagAddition(a)}} /> \n                        </span>\n                        </label>\n                        \n                        \n                      \n                    <label style={{float:'left', marginLeft:'0.5em'}} ><span style={{float:'left', marginRight:'0.5em'}}>Regular Expression</span> \n                        <textarea style={{width:'60em',height:'6em'}}  type='text' value={item.synonym} onChange={function(e) {updateExampleSynonym(e.target.value)}} />\n                    </label>\n                    \n                    \n                  </div> \n               \n                \n                 \n           \n      </div>\n}\n","/* global window */\nimport React, { useEffect} from 'react';\nimport './App.css';\n//import {Link, useParams, useHistory} from 'react-router-dom'\nimport {Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport ListAllDropDown from './components/ListAllDropDown'\nimport {generateObjectId} from './utils'\nimport RegexpsManagerSearchBar from './components/RegexpsManagerSearchBar'\nimport RegexpsManagerRow from './RegexpsManagerRow'\nimport useListItemEditor from './useListItemEditor'\n\nvar initData = [\n    {\n      \"value\": \"Proper Noun/Name\",\n      \"synonym\": \"\\t\\n(?<FirstName>[A-Z]\\\\.?\\\\w*\\\\-?[A-Z]?\\\\w*)\\\\s?(?<MiddleName>[A-Z]\\\\w*|[A-Z]?\\\\.?)\\\\s?(?<LastName>[A-Z]\\\\w*\\\\-?[A-Z]?\\\\w*)(?:,\\\\s|)(?<Suffix>Jr\\\\.|Sr\\\\.|IV|III|II|)\"\n    },\n    {\n      \"value\": \"Credit Card (Visa/Mastercard/Discover/American Express/Diners Club)\",\n      \"synonym\": \"^((4\\\\d{3})|(5[1-5]\\\\d{2})|(6011))-?\\\\d{4}-?\\\\d{4}-?\\\\d{4}|3[4,7]\\\\d{13}$\\t\\n^((?:4\\\\d{3})|(?:5[1-5]\\\\d{2})|(?:6011)|(?:3[68]\\\\d{2})|(?:30[012345]\\\\d))[ -]?(\\\\d{4})[ -]?(\\\\d{4})[ -]?(\\\\d{4}|3[4,7]\\\\d{13})$\"\n    },\n    {\n      \"value\": \"Positive Integer\",\n      \"synonym\": \"^(0|(\\\\+)?[1-9]{1}[0-9]{0,8}|(\\\\+)?[1-3]{1}[0-9]{1,9}|(\\\\+)?[4]{1}([0-1]{1}[0-9]{8}|[2]{1}([0-8]{1}[0-9]{7}|[9]{1}([0-3]{1}[0-9]{6}|[4]{1}([0-8]{1}[0-9]{5}|[9]{1}([0-5]{1}[0-9]{4}|[6]{1}([0-6]{1}[0-9]{3}|[7]{1}([0-1]{1}[0-9]{2}|[2]{1}([0-8]{1}[0-9]{1}|[9]{1}[0-5]{1})))))))))$\"\n    },\n    {\n      \"value\": \"US Currency\",\n      \"synonym\": \"^\\\\$(\\\\d{1,3}(\\\\,\\\\d{3})*|(\\\\d+))(\\\\.\\\\d{2})?$\\n^\\\\$?([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(\\\\.[0-9][0-9])?$\"\n    },\n    {\n      \"value\": \"URL\",\n      \"synonym\": \"^(ht|f)tp(s?)\\\\:\\\\/\\\\/[a-zA-Z0-9\\\\-\\\\._]+(\\\\.[a-zA-Z0-9\\\\-\\\\._]+){2,}(\\\\/?)([a-zA-Z0-9\\\\-\\\\.\\\\?\\\\,\\\\'\\\\/\\\\\\\\\\\\+&amp;%\\\\$#_]*)?$\"\n    },\n    {\n      \"value\": \"Domain Name\",\n      \"synonym\": \"^([a-zA-Z0-9]([a-zA-Z0-9\\\\-]{0,61}[a-zA-Z0-9])?\\\\.)*[a-zA-Z0-9]([a-zA-Z0-9\\\\-]{0,61}[a-zA-Z0-9])?$\\n^([a-zA-Z0-9]([a-zA-Z0-9\\\\-]{0,61}[a-zA-Z0-9])?\\\\.)+[a-zA-Z]{2,6}$\"\n    },\n    {\n      \"value\": \"Email Address\",\n      \"synonym\": \"^([a-zA-Z0-9_\\\\-\\\\.]+)@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.)|(([a-zA-Z0-9\\\\-]+\\\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\\\]?)$\"\n    },\n    {\n      \"value\": \"US Zipcode\",\n      \"synonym\": \"(^(?!0{5})(\\\\d{5})(?!-?0{4})(-?\\\\d{4})?$)\\n(^(?!0{5})(\\\\d{5})(?!-?0{4})(-?\\\\d{4})?$)\"\n    },\n    {\n      \"value\": \"UK Postcode\",\n      \"synonym\": \"^[A-Za-z]{1,2}[0-9A-Za-z]{1,2}[ ]?[0-9]{0,1}[A-Za-z]{2}$\"\n    }\n  ]\n\ninitData = initData.map(function(item) {\n  return Object.assign(item,{id:generateObjectId()})  \n})\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <RegexpsManagerRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups} />\n}\n\nexport default  function RegexpsManager(props) {\n    const {listFilterValue, setListFilterValue, loadAll, deleteItem , findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, listRef, tagAll,untagAll, resetSelection, selectAll, saveItemWrap,  filteredItems, deleteAll, createEmptyItem, sort} = useListItemEditor('nlutool','regexps','alldata', props.updateFunctions.updateRegexps, initData)\n    //const [currentList, setCurrentList] = useState('')\n\n    function getItemSize() {\n        if (window.innerWidth < 430) {\n               return 390\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n               return 325\n        } else {\n            return 205\n        }\n    }\n\n    useEffect(() => {\n        loadAll()\n        //props.updateFunctions.updateLists(items)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n   \n    function renderEditor(props) {\n            if (filteredItems && filteredItems.length > 0) {\n            \n                return <div>\n                    <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length} matches </span>\n                     \n                     {props.lookups.selectedRegexTally > 0 && <span style={{float:'right'}}> \n                        <span>With {props.lookups.selectedRegexTally} selected&nbsp;</span>\n                        <ListAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue} untagAll={untagAll} lookups={props.lookups}/>\n                        <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                    </span>} \n                    \n                      <div style={{clear:'both'}}>\n                        <div style={{clear:'both'}}>\n                            <List\n                                key=\"list\"\n                                ref={listRef}\n                                itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups}}\n                                itemKey={index => index}  \n                                className=\"List\"\n                                height={700}\n                                itemCount={filteredItems.length}\n                                itemSize={getItemSize}\n                                width={'100%'}\n                              >{RenderRow}\n                            </List>\n                        </div>\n                    </div>\n               </div>\n\n            }\n              \n    }\n    \n  \n    return <div>\n        \n                   \n        {<RegexpsManagerSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} listFilterValue={listFilterValue} setListFilterValue={setListFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} sort={sort} />}\n         \n         \n         {renderEditor(props)}\n    </div>\n            \n}\n      \n\n //{JSON.stringify(items)}\n    //<hr/>\n    \n    \n    //<hr/>\n    //{JSON.stringify(filteredItems)}\n\n\n","import React, {useState, useEffect} from 'react'\nimport {findFirstDiffPos, uniquifyArray, uniquifyArrayOfObjects } from './utils'\nfunction useNluRow(item, saveItem, splitNumber, style, setPageMessage) {\n    const [selectionState, setSelectionState] = useState({})\n    const [newEntity, setNewEntity] = useState('')\n    const [intentTitle, setIntentTitle] = useState(item && item.intent ? item.intent : '')\n    // for ReactTags format using objects\n    const [tags, setTags] = useState([])\n    const [skills, setSkills] = useState([])\n    //console.log(['USENLUROW',splitNumber])\n    const reactTags = React.createRef()\n    const reactSkills = React.createRef()\n     // tags\n    useEffect(() => {\n        if (item.tags) setTags(item.tags.map(function(tag,i) {return {id:i, name:tag}}))\n        if (item.skills) setSkills(item.skills.map(function(skill,i) {return {id:i, name:skill}}))\n    },[item])\n\n     function onTagDelete (i) {\n        const newTags = tags.slice(0)\n        newTags.splice(i, 1)\n        setTags(newTags)\n        var newItem = item\n        newItem.tags = newTags.map(function(newTag) { return newTag.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onTagAddition (tag) {\n        if (tag && tag.name.trim().length > 0) {\n            const newTags = [].concat(tags, tag)\n            setTags(uniquifyArrayOfObjects(newTags,'name').sort(function(a,b) {if (a.name > b.name) return 1; else return -1} ))\n            var newItem = item\n            newItem.tags = uniquifyArray(newTags.map(function(newTag) { return newTag.name})).sort()\n            saveItem(newItem,splitNumber)\n        }\n      }\n      \n      function onSkillDelete (i) {\n        const newSkills = skills.slice(0)\n        newSkills.splice(i, 1)\n        setSkills(newSkills)\n        var newItem = item\n        newItem.skills = newSkills.map(function(newSkill) { return newSkill.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onSkillAddition (skill) {\n         if (skill && skill.name.trim().length > 0) {\n            const newSkills = [].concat(skills, skill)\n            setSkills(uniquifyArrayOfObjects(newSkills,'name').sort(function(a,b) {if (a.name > b.name) return 1 ;else return -1} ))\n            var newItem = item\n            newItem.skills = uniquifyArray(newSkills.map(function(newSkill) { return newSkill.name})).sort()\n            saveItem(newItem,splitNumber)\n        }\n     }\n    \n        \n    function createSelection(field, start, end) {\n        if (field) {\n            if( field.createTextRange ) {\n                var selRange = field.createTextRange();\n                selRange.collapse(true);\n                selRange.moveStart('character', start);\n                selRange.moveEnd('character', end-start);\n                selRange.select();\n            } else if( field.setSelectionRange ) {\n                field.setSelectionRange(start, end);\n            } else if( field.selectionStart ) {\n                field.selectionStart = start;\n                field.selectionEnd = end;\n            }\n            field.focus();\n        }\n    }\n    \n    function updateExampleContent(content) {\n        //console.log('UPDTEXT')\n        if (item && typeof item.example === \"string\" && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = JSON.parse(JSON.stringify(item));\n            if (item.entities && item.entities.length > 0) {\n                var entities = item.entities\n                // deal with entity ranges * allow for delete multiple\n                const diffPos = findFirstDiffPos(content,item.example)\n                // insertion\n                if (content.length - item.example.length > 0) {\n                    \n                    //console.log('UPDTEXT insert')\n                    const insertionLength = content.length - item.example.length\n                    // update start and end subtract deletionLength\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos < entity.start) {\n                            entity.start += insertionLength\n                            entity.end += insertionLength;\n                        } else if (diffPos < entity.end) {\n                            // update entity value\n                            entity.end += insertionLength;\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                // replace    \n                } \n                else if (content.length === item.example.length) {\n                    //console.log('UPDTEXT replace')\n                    // check if was inside an entity and update value as required\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos >= entity.start && diffPos < entity.end) {\n                            // update entity value\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                // deletion\n                } else {\n                    //console.log('UPDTEXT delete')\n                    const deletionLength = content.length - item.example.length\n                    // update start and end subtract deletionLength\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos < entity.start) {\n                            entity.start += deletionLength\n                            entity.end += deletionLength;\n                        } else if (diffPos < entity.end) {\n                            // update entity value\n                            entity.end += deletionLength;\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                }\n            }\n            newItem.example = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    function entityClicked(entityKey,entityType) {\n        if (item.entities)  {\n            var entities = item.entities\n            if (! selectionState || !selectionState.textSelection || selectionState.textSelection.length === 0) {\n                // select text in string\n                if (entities[entityKey]) {\n                   createSelection(document.getElementById('example_input_'+splitNumber),entities[entityKey].start,entities[entityKey].end)\n                }\n            } else {\n                entityTypeChanged(entityKey,entityType);\n            }\n        }\n    }\n    \n    function entityTypeChanged(entityNumber,type) {\n        //console.log(['ENTY TYPE CHANGE',entityNumber,type])\n        var newItem = item\n        if (!Array.isArray(item.entities)) {\n            item.entities = []\n        }\n         //console.log(['ENTY TYPE CHANGE ITEM ENT',item.entities])\n        var newEntities = item.entities \n        var entity = newEntities[entityNumber] ? newEntities[entityNumber] : {}\n        const typeChanged = !(type && type.length > 0 && type === entity.type)\n        //console.log(['ENTY TYPE CHANGED',typeChanged,type,entity.type])\n        entity.type = type\n        if (selectionState && selectionState.textSelection) {\n            //console.log(['HAVE SELECTION',selectionState.textSelection])\n            const start = selectionState.startTextSelection\n            const end = selectionState.endTextSelection\n            var isOverlapProblem = false;\n            if (typeof parseInt(start) === \"number\" && typeof parseInt(end) === \"number\") {\n                item.entities.map(function(entity) {\n                    // is OK if updating entity \n                    const bypass = !typeChanged && entity.type === type\n                    const isOverlap = (entity.start > start && entity.start < end) || (entity.end > start && entity.end < end)\n                    //console.log(['CHECK ENTITY',bypass, isOverlap, entity.type,start,end,entity.start,entity.end])\n                    if (!bypass && isOverlap) isOverlapProblem = true\n                    return null\n                })\n            }\n            if (isOverlapProblem) {\n                setPageMessage('Overlap with existing entity !')\n                setTimeout(function() {\n                    setPageMessage('')\n                },2000)\n            } else {\n                entity.value = selectionState.textSelection\n                entity.start = selectionState.startTextSelection\n                entity.end = selectionState.endTextSelection\n                if (!newEntities[entityNumber]) newEntities.push(entity)\n                else newEntities[entityNumber] = entity\n                newItem.entities = newEntities\n                setSelectionState(null)\n                saveItem(newItem,splitNumber)\n            }\n        } else {\n            if (!newEntities[entityNumber]) newEntities.push(entity)\n            else newEntities[entityNumber] = entity\n            newItem.entities = newEntities\n            setSelectionState(null)\n            saveItem(newItem,splitNumber)\n        }\n        \n    }\n    \n    function intentChanged(intent) {\n        var newItem = item \n        newItem.intent = intent\n        saveItem(newItem,splitNumber)\n    }\n \n    \n    function entityDelete(entityNumber) {\n        if (item.entities) {\n            var newItem = item \n            var newEntities = item.entities.slice(0,entityNumber).concat(item.entities.slice(entityNumber + 1))\n            newItem.entities = newEntities\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    function selectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = true;\n        saveItem(newItem,splitNumber)\n    }\n    \n    \n    function setSkill(skill, splitNumber) {\n        //var newItem = item\n        //item.isSelected = true;\n        //props.saveItem(newItem,splitNumber)\n    }\n    \n    function deselectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = false;\n        saveItem(newItem,splitNumber)\n    } \n    \n    return {    \n        intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, setTags, skills, setSkills, reactTags, reactSkills, onTagDelete, onTagAddition, onSkillDelete,onSkillAddition, createSelection, updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem, setSkill, deselectItem\n    }\n    \n}\nexport default useNluRow\n","/* global window */\nimport {Button,   Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React, {useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useNluRow from './useNluRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\n\nexport default function NluExampleRow(props) {\n       const  {item, splitNumber , style} = props;\n       const {    \n            intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, skills, reactTags, reactSkills, \n            onTagDelete, onTagAddition, onSkillDelete,onSkillAddition, updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem,  deselectItem\n        } = useNluRow(props.item, props.saveItem, props.splitNumber, props.style, props.setPageMessage)\n        const [textInput, setTextInput] = useState(props.item && props.item.example ? props.item.example  : '')\n         \n       var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {intentChanged(intentKey)}}  >{intentKey}</Dropdown.Item>\n       })\n       //var skillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n          //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkill(skillKey,props.splitNumber)}}  >{skillKey}</Dropdown.Item>\n       //})\n       // ONE PER ENTITY FOR THIS EXAMPLE\n       var entitiesDropdowns = item && item.entities ? item.entities.map(function(entity,i) {\n           var entityOptions = props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item  key={j} value={entityKey} onClick={function(e) {entityTypeChanged(i,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           return<Dropdown style={{marginLeft:'0.2em'}} variant='info'  key={i}  as={ButtonGroup}>\n              <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button variant='info'   size=\"sm\"  onClick={function(e) {entityClicked(i,entity.type)}} >\n              <b>{entity.type}</b> \n                -\n              {entity.value ? entity.value : 'Select Entity Type'}\n              </Button>\n              <Button variant=\"info\" size=\"sm\" onClick={function(e) {entityDelete(i,'')}} >X</Button>\n              <Dropdown.Menu>\n                  <form  style={{display:'inline'}}>\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {entityTypeChanged(i,e.target.value)}}\n                    value={entity.type} />\n                    </div>\n                  </form>\n                  {entityOptions}\n              </Dropdown.Menu>\n            </Dropdown>\n       }) : [];\n        //PLUS CREATE NEW WHEN TEXT IS SELECTED\n       if (selectionState  && selectionState.textSelection && selectionState.textSelection.length > 0 &&  selectionState.textSelectionFrom === splitNumber) {\n           var entityOptions =  props.lookups.entityLookups && props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item key={j} value={entityKey} onClick={function(e) {entityTypeChanged(-1,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           entitiesDropdowns.push(<Dropdown key=\"new\" variant='success'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='success'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant='success' size=\"sm\" >New Entity</Button>\n\n          <Dropdown.Menu>\n           <form style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); entityTypeChanged(-1,newEntity)}}>\n                <div className=\"form-group\">\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {setNewEntity(e.target.value)}}\n                value={newEntity} />\n                </div>\n              </form>\n              {entityOptions}\n          </Dropdown.Menu>\n        </Dropdown>)\n       }\n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                  \n                   {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img  style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button>}\n                  {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img  style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button>}\n                  \n                <Button  variant=\"danger\" size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} >X</Button>\n                 \n                 \n                  <Dropdown  style={{float:'left'}} as={ButtonGroup}>\n                  <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button   size=\"sm\" >{item.intent ? item.intent.toString() : 'Select Intent'} </Button>\n                  <Dropdown.Menu>\n                   <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); intentChanged(intentTitle)}}>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" value={intentTitle} onChange={function(e) {setIntentTitle(e.target.value)}}\n                         />\n                        </div>\n                      </form>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                  </Dropdown>\n                  <span style={{float:'left'}}>{entitiesDropdowns}</span>\n                 \n                   <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add to skill\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactSkills}\n                    tags={skills}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.skillLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onSkillDelete}\n                    onAddition={onSkillAddition} /> \n                    </div>\n                    \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add new tag\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactTags}\n                    tags={tags}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.tagLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onTagDelete}\n                    onAddition={onTagAddition} /> \n                    </div>\n                  \n                  <input     \n                   onFocus={ function(e) {\n                       setSelectionState(null)\n                    }}\n                   onSelect={ function(e) {\n                     var textSelection = window.getSelection().toString(); \n                     setSelectionState({textSelection:textSelection, textSelectionFrom: splitNumber, startTextSelection: e.target.selectionStart, endTextSelection: e.target.selectionEnd})\n                  }}  \n                   type='text' style={{width:'80%'}} value={textInput} id={\"example_input_\"+splitNumber} onChange={function(e) { setTextInput(e.target.value); updateExampleContent(e.target.value)}} />\n                  \n                  \n                \n                \n            </div>\n      </div>\n}\n","import React from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\nimport checkImage from '../images/check.svg'\n\nconst EditorSearchBar = function(props) {\n    var topskillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n          return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {props.setSkillFilterValue(skillKey)}}  >{skillKey}</Dropdown.Item>\n    })\n    topskillOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setSkillFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        \n    var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {props.setIntentFilterValue(intentKey)}}  >{intentKey}</Dropdown.Item>\n    })\n    intentOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setIntentFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        \n    return <div>\n            {<span>\n            \n                {props.lookups.selectedTally > 0 && <Button size=\"lg\"  onClick={function(e) { props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedTally <= 0 && <Button size=\"lg\" onClick={function(e) { props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button> }\n                \n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'Skill '+(props.skillFilterValue ? ' - '+ props.skillFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topskillOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n                \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'Intent '+(props.intentFilterValue ? ' - '+ props.intentFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n            \n             <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.skillFilterValue, props.intentFilterValue)}} >New Intent</Button>\n             <Button  style={{marginLeft:'1em'}} variant=\"primary\" onClick={function(e) {props.sort(function(a,b) { if (a.value < b.value) return -1; else return 1;})}} >Sort</Button>\n        </div>\n}\nexport default EditorSearchBar\n","import React, {useState, useEffect} from 'react';\nimport localforage from 'localforage'\nimport useDBSingleKey from './useDBSingleKey'\nimport {uniquifyArray, generateObjectId} from './utils'\nimport {useParams, useHistory} from 'react-router-dom'\n\nfunction useNluEditor(database, databaseTable, databaseKey, updateLookups) {\n    //console.log([\"USENLUEDITOR\",database, databaseTable, databaseKey])\n    const {loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter, sort} = useDBSingleKey(database, databaseTable, databaseKey)\n    //console.log([\"USENLUEDITOR items\",items])\n    const [filteredItems, setFilteredItems] = useState([])\n    const [filteredItemsKeys, setFilteredItemsKeys] = useState([])\n    const [searchFilter, setSearchFilter] = useState('')\n    const [tagAllValue, setTagAllValue] = useState('')\n    const [skillAllValue, setSkillAllValue] = useState('')\n    //const [skillFilterValue, setSkillFilterValue] = useState('')\n    //const [intentFilterValue, setIntentFilterValue] = useState('')\n    const [intentAllValue, setIntentAllValue] = useState('')\n    const listRef = React.createRef()\n    \n    const params = useParams()\n    const history = useHistory()\n    var skillFilterValue = params.skillId ? params.skillId : '';\n    function setSkillFilterValue(value) {\n        //console.log('SETSKILLVAL')\n        //console.log(history)\n        var root = history.location.pathname.split(\"/\")\n        var parts=['/'+root[1]]\n        skillFilterValue = value;\n        if (skillFilterValue.length > 0) {\n            parts.push('/skill/'+skillFilterValue)\n        }\n        if (intentFilterValue.length > 0) {\n            parts.push('/intent/'+intentFilterValue)\n        }\n        //console.log(['ssv',parts,value])\n        history.push(parts.join(''))\n    }\n    var intentFilterValue = params.intentId ? params.intentId : '';\n    \n    function setIntentFilterValue(value) {\n        var root = history.location.pathname.split(\"/\")\n        var parts=['/'+root[1]]\n        intentFilterValue = value;\n        if (skillFilterValue.length > 0) {\n            parts.push('/skill/'+skillFilterValue)\n        }\n        if (intentFilterValue.length > 0) {\n            parts.push('/intent/'+intentFilterValue)\n        }\n        history.push(parts.join(''))\n    }\n    \n    //const examplesDB = useDBSingleKey('nlutool','examples','alldata')\n    //var updateLookupsTimeout = null\n    //var updateFilteredTimeout = null\n    //useEffect(() => {\n        ////clearTimeout(updateLookupsTimeout)\n        ////updateLookupsTimeout = setTimeout(function() {\n            \n        ////},2000)\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[items])\n     \n    useEffect(() => {\n        //clearTimeout(updateFilteredTimeout)\n        //console.log('UPDATE FILTERED'+intentFilterValue)\n        //updateFilteredTimeout = setTimeout(function() {\n             //console.log('UPDATE FILTERED NOW')\n             var filteredItems = filter(function(item) {\n                if ((!searchFilter || searchFilter.trim().length <=0 ) && (!skillFilterValue || skillFilterValue.trim().length <=0 ) && (!intentFilterValue || intentFilterValue.trim().length <=0 )) return true;\n                var intentFilter = true\n                if (intentFilterValue && intentFilterValue.length > 0) {\n                    if (item.intent === intentFilterValue) {\n                        intentFilter = true\n                    } else {\n                        intentFilter = false\n                    }\n                }\n                var skillFilter = true\n                if (skillFilterValue && skillFilterValue.length > 0) {\n                    if (item.skills && item.skills.indexOf(skillFilterValue) !== -1) {\n                        skillFilter = true\n                    } else {\n                        skillFilter = false\n                    }\n                }\n                var searchFilterBool = true\n                if (searchFilter && searchFilter.length > 0) {\n                    if (item.example && item.example.toLowerCase().indexOf(searchFilter.toLowerCase()) !== -1 ) {\n                        searchFilterBool = true\n                    } else {\n                        searchFilterBool = false\n                    }\n                }         \n                return searchFilterBool && skillFilter && intentFilter;       \n                //intentFilterValue\n                //return (item.example.indexOf(searchFilter) !== -1 \n                            //&& intentFilter \n                            //&& ((skillFilterValue.length <= 0 || (skillFilterValue.length > 0 && typeof item.skills ===\"object\" && item.skills.indexOf(skillFilterValue) !== -1)) ? true : false\n            })\n            var itemKeys = {}\n            filteredItems.map(function(item) {if (item.id) itemKeys[item.id] = true; return null})\n            filteredItems.sort(function(a,b) { return (a.value ? a.value.toLowerCase() : '') < (b.value ? b.value.toLowerCase() : '') ? true : false})\n            setFilteredItems(filteredItems)\n            setFilteredItemsKeys(itemKeys)\n            updateLookups(filteredItems)\n        //},800)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items, searchFilter, skillFilterValue, intentFilterValue])\n    \n    function deleteAll(e)  {\n        if (window.confirm('Really delete all selected')) {\n            if (items) {\n                var newItems = []\n                items.map(function(item,i) {\n                    // dump items without id\n                    if (item && item.id) {\n                        // only delete filtered items\n                        if (filteredItemsKeys[item.id]) {\n                           // only delete selected filtered items\n                           if (!item.isSelected) {\n                               newItems.push(item)\n                           }\n                        // not filtered so push\n                        } else {\n                            newItems.push(item)\n                        }\n                    }\n                    return null\n                })\n                setItems(newItems)\n                listRef.current.resetAfterIndex(0);\n            }\n        }\n    }\n    \n    function tagAll(val) {\n        console.log(['tagall',tagAllValue,val])\n        var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item && item.id) { \n                    if (item.isSelected && filteredItemsKeys[item.id]) {\n                       var newItem = JSON.parse(JSON.stringify(item));\n                       if (!newItem.tags) newItem.tags=[]\n                       if (newItem.tags.indexOf(tagValue) === -1) newItem.tags.push(tagValue)\n                       newItems.push(newItem)\n                    } else {\n                       newItems.push(item)\n                    }\n                }\n               return null\n            })\n            setItems(newItems)\n        }\n    }\n\n    function untagAll(val) {\n        console.log(['untagall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n               if (item && item.id) {\n                   if (item.isSelected && filteredItemsKeys[item.id]) {\n                       var newItem = JSON.parse(JSON.stringify(item));\n                       if (!newItem.tags) newItem.tags=[]\n                       var finalTags = []\n                       newItem.tags.map(function(tag) {\n                           if (tag !== val) {\n                               finalTags.push(tag)\n                           }  \n                           return null\n                       })\n                       newItem.tags = finalTags\n                       newItems.push(newItem)\n                   } else {\n                       newItems.push(item)\n                   }  \n               }\n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    function intentAll(val) {\n        //console.log(['intentall',intentAllValue,val])\n        var intentValue = val ? val : intentAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item && item.id) {\n                   if (item.isSelected && filteredItemsKeys[item.id]) {\n                       var newItem = item\n                       newItem.intent = intentValue\n                       newItems.push(newItem)\n                   } else {\n                       newItems.push(item)\n                   }  \n                }\n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    function resetSelection() {\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item) {\n                   var newItem = item\n                   newItem.isSelected = false\n                   newItems.push(newItem)\n                } \n               return null\n            })\n            setItems(newItems)\n            \n        }\n    }\n    \n    function selectAll() {\n         console.log(['SELECTALL',items])\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item && item.id) {\n                    var newItem = item\n                    if (item.id && filteredItemsKeys[item.id]) {\n                       newItem.isSelected = true\n                       newItems.push(newItem)\n                    } else {\n                        newItem.isSelected = false\n                        newItems.push(newItem)\n                    }\n                }\n                return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    \n    \n     function skillSetAll(val) {\n         //console.log(['set skill all',tagAllValue,val])\n        var skillValue = val ? val : skillAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n               if (item && item.id) { \n                   if (item.isSelected && filteredItemsKeys[item.id]) {\n                       var newItem = JSON.parse(JSON.stringify(item));\n                       if (!newItem.skills) newItem.skills=[]\n                       if (newItem.skills.indexOf(skillValue) === -1) newItem.skills.push(skillValue)\n                       newItem.skills = uniquifyArray(newItem.skills)\n                       newItems.push(newItem)\n                   } else {\n                       newItems.push(item)\n                   }  \n                }\n               return null\n            })\n            setItems(newItems)\n        }\n    }\n\n       function unskillAll(val) {\n        //console.log(['unskillall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n               if (item && item.id) { \n                   if (item.isSelected && filteredItemsKeys[item.id]) {\n                       var newItem = JSON.parse(JSON.stringify(item));\n                       if (!newItem.skills) newItem.skills=[]\n                       var finalTags = []\n                       newItem.skills.map(function(tag) {\n                           if (tag !== val) {\n                               finalTags.push(tag)\n                           }  \n                           return null\n                       })\n                       newItem.skills = finalTags\n                       newItems.push(newItem)\n                   } else {\n                       newItems.push(item)\n                   }  \n                }\n               return null\n            })\n            setItems(newItems)\n        }\n    }\n        \n       \n    function saveAll(e)  {\n        console.log(['save akk',filteredItems])\n        if (items) {\n            var newItems = []\n            var lsItems = []\n            filteredItems.map(function(item,i) {\n                if (item.intent && item.intent.length > 0 && item.id && filteredItemsKeys[item.id]) {\n                   if (item.isSelected) {\n                       lsItems.push(item)\n                   } else {\n                       newItems.push(item)\n                   }\n                } else {\n                    newItems.push(item)\n               }\n               return null\n            })\n            //saveLSItems(lsItems)\n            setItems(newItems)\n            listRef.current.resetAfterIndex(0);\n        }\n         \n    }\n   \n    function createEmptyItem(skill, intent) {\n        console.log(['CREATE EMPTY EXAMPLE'])\n        setSearchFilter('')\n        var skills=[]\n        if (skill && skill.trim().length > 0) skills.push(skill)\n        var newIntent=''\n        if (intent && intent.trim().length > 0) newIntent = intent\n        saveItemWrap({id:generateObjectId(), example:'', intent:newIntent, skills:skills,tags:[]},0)\n        console.log(['SAVED NEW EXAMPLE',{id:null, example:'', intent:newIntent, skills:skills,tags:[]}])\n    }\n    \n    function saveItemWrap(item,index) {\n        saveItem(item,index)\n        \n        console.log(['SAVEITEMWRAP',listRef,listRef ? listRef.current : 'notcurrent'])\n        if (listRef && listRef.current) listRef.current.resetAfterIndex(index);\n        updateLookups(items)\n    }\n    \n    function getItemSize(index) {\n        //console.log(window.innerWidth,window.innerHeight)\n        // set parameters for full size > 1024\n        var baseSize = 100\n        var heightPerLine = 70\n        var tagsPerLine = 10\n        var entitiesPerLine = 8\n        var skillsPerLine = 6\n        // tiny screen mobile \n        if (window.innerWidth < 430) {\n            baseSize = 140\n            heightPerLine = 50\n            tagsPerLine = 4\n            entitiesPerLine = 1\n            skillsPerLine = 1\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n            baseSize = 120\n            heightPerLine = 30\n            tagsPerLine = 2\n            entitiesPerLine = 1\n            skillsPerLine = 2\n        }\n        var tallyExtras = 0;\n        var item = items[index]\n        if (item && item.entities) tallyExtras += item.entities.length/entitiesPerLine;\n        if (item && item.tags) tallyExtras += item.tags.length/tagsPerLine;\n        if (item && item.skills) tallyExtras += item.skills.length/skillsPerLine;\n        var size = baseSize + (Math.round(tallyExtras)) * heightPerLine\n        //console.log(['ITEM SIZE',size, baseSize,heightPerLine,tagsPerLine,entitiesPerLine,tallyExtras,item])\n        return size \n    }\n    \n    function saveLSItem(item) {\n        var localforageStorage = localforage.createInstance({\n           name: 'nlutool',\n           storeName   :'examples',\n         });\n         localforageStorage.getItem('alldata').then(function(exampleItems) {\n                exampleItems.push(item)\n                localforageStorage.setItem('alldata',exampleItems)\n         })\n       \n    }\n    \n    function saveLSItems(newItems) {\n        if (newItems) {\n            var localforageStorage = localforage.createInstance({\n               name: 'nlutool',\n               storeName   :'examples',\n             });\n             localforageStorage.getItem('alldata').then(function(exampleItems) {\n                 if (exampleItems) {\n                    newItems.map(function(newItem) { exampleItems.push(newItem ); return null})\n                    localforageStorage.setItem('alldata',exampleItems)\n                 }\n             })\n        }\n    }\n\n     \n    function saveNlu(splitNumber) {\n        if (items && items[splitNumber]) {\n            //props.saveNluItem(items[splitNumber]) \n            saveLSItem(items[splitNumber])\n            deleteItem(splitNumber)\n        }\n    }\n\n    //function sortItems() {\n        \n    //}\n    \n\n    \n    return {\n        loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter, filteredItems, setFilteredItems,createEmptyItem, sort, \n        searchFilter, setSearchFilter, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue, skillFilterValue, setSkillFilterValue,intentFilterValue, setIntentFilterValue,\n         intentAllValue, setIntentAllValue, listRef, \n        tagAll,untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, saveAll, saveNlu\n    }\n}\nexport default useNluEditor\n","import React, { useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport NluExampleRow from './NluExampleRow'\nimport EditorSearchBar from './components/EditorSearchBar'\nimport useNluEditor from './useNluEditor'\nimport {MatchesTallies,WithSelectedDropDowns} from './components/Components'\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <NluExampleRow  \n         item={item} splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} \n         lookups={props.data.lookups} setPageMessage={props.data.setPageMessage} />\n}\n\nexport default function NluExampleEditor(props) {\n    const {loadAll, deleteItem , items, findKeyBy, searchFilter, setSearchFilter, skillFilterValue, setSkillFilterValue, intentFilterValue, setIntentFilterValue, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue,  intentAllValue, setIntentAllValue, listRef, tagAll,untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, filteredItems, createEmptyItem, sort} = useNluEditor('nlutool','examples','alldata', props.updateFunctions.updateLookups)\n    useEffect(() => {\n        loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    //useEffect(() => {\n        //if (importFrom) {\n            //var parsed = parseImportText(importFrom)\n            //setItems(parsed)\n            //props.setImportFrom('')\n        //}\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[props.importFrom])\n    \n\n    function renderEditor(props) {\n        // filter rendered list using callback \n       //var filteredItems = filter(function(item) {\n                //if (!searchFilter || searchFilter.length <=0 ) return true;\n                //const matchSearchFilter = item.example.indexOf(searchFilter) !== -1 \n                        //|| item.intent.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)\n                //return matchSearchFilter && skillFilterValue && item.skills && item.skills.indexOf(skillFilterValue) !== -1\n            //})\n          \n        if (filteredItems && filteredItems.length > 0) {\n            return <div>\n          \n          <MatchesTallies items={items} filteredItems={filteredItems}/>\n             {props.lookups.selectedTally > 0 && <span style={{float:'right'}}> \n                 <WithSelectedDropDowns\n                  skillSetAll={skillSetAll} skillAllValue={skillAllValue}  setSkillAllValue={setSkillAllValue}  untagAll={untagAll} unskillAll={unskillAll} \n                     intentAll={intentAll} intentAllValue={intentAllValue} setIntentAllValue={setIntentAllValue}  \n                     tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue}  lookups={props.lookups}\n                 />\n                 <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n               \n            </span> } \n               \n                <List\n                    key=\"intentlist\"  \n                    ref={listRef}\n                    itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups, setPageMessage: props.setPageMessage}}\n                    itemKey={index => index}  \n                    className=\"List\"\n                    height={700}\n                    itemCount={filteredItems.length}\n                    itemSize={getItemSize}\n                    width={'100%'}\n                  >{RenderRow}</List>\n            </div>\n        } else {\n            //{JSON.stringify(filteredItems)}\n            return <div >\n             \n                <div style={{textAlign:'center'}}>\n            <br/><b>No items</b><br/><br/>Upload <Link to=\"/sources\" ><Button>Sources</Button></Link> then <Link to=\"/import\" ><Button>Import</Button></Link>.</div></div>\n        }\n    }\n    \n     return <div>\n        <EditorSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} skillFilterValue={skillFilterValue} setSkillFilterValue={setSkillFilterValue} resetSelection={resetSelection} selectAll={selectAll}  createEmptyItem={createEmptyItem} intentFilterValue={intentFilterValue} setIntentFilterValue={setIntentFilterValue} untagAll={untagAll} unskillAll={unskillAll} sort={sort}  />\n         {renderEditor(props)}\n    </div>\n    \n}\n      \n\n\n\n\n","/* global window */\nimport React , {useState, useEffect} from 'react';\nimport {Button, Navbar } from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport fireImage from '../images/singingman.svg'\nimport waitingImage from '../images/waiting.gif'\nimport ReactGA from 'react-ga';\n\n\n//ReactGA.initialize('UA-3712973-4');\n\nexport default function NavbarComponent(props) {\n    //console.log(props)\n    //ReactGA.pageview(props.history.location.pathname);\n    var astyle={paddingLeft:'0.3em'}\n    const currentPage = props.history && props.history.location && props.history.location.pathname ? props.history.location.pathname : '/'\n    const pages = {\n        '/': {name: 'NLU Tool',show: false},\n        '/search': {name: 'Search',show: true},//link:'https://github.com/syntithenai/opennludata/wiki'\n        '/sources': {name: 'Import',show: true},\n        '/regexps': {name: 'RegExps',show: true},\n        '/lists': {name: 'Entities',show: true},\n        '/utterances': {name: 'Utterances',show: true},\n        '/examples': {name: 'Intents',show: true},\n        '/skills': {name: 'Skills',show: true},\n        '/help': {name: 'Help',show: true},\n        \n    }\n     var [stuff, setStuff] = useState('')\n   \n    useEffect(() => {\n        if (props.user && props.user.token && props.user.token.access_token) { \n             console.log('GETresS' )\n            var axiosClient = props.getAxiosClient(props.user.token.access_token)\n            axiosClient.get('http://localhost:5000/api/v1/skill/count').then(function(res) {\n                setStuff(res)\n                console.log(res)\n            })\n        }\n    },[(props.user && props.user.token && props.user.token.access_token ? props.user.token.access_token: '')])\n    \n    const links = Object.keys(pages).map(function(link,k) {\n        const page = pages[link]\n        if (page.show) {\n            if (page.link) {\n                return <a key={k} style={astyle} href={page.link} ><Button variant='primary' >{page.name}</Button></a>                \n            } else {\n                return <Link key={k} style={astyle} to={link} ><Button variant={currentPage.indexOf(link) !== -1 ? 'success' : 'primary'}>{page.name}</Button></Link>\n            }\n        }\n        return null\n    })\n    \n    //const helpButton = pages[currentPage] && pages[currentPage].helpComponent ? pages[currentPage].helpComponent : <Link to=\"/help\" ><Button>Help</Button></Link>\n    \n//        <Navbar.Text><Button><img src='/menu.svg' alt='menu' /></Button></Navbar.Text>\n\n    return <Navbar  bg=\"dark\" variant=\"dark\"  style={{width:'100%', border:''}} >\n        \n        {props.message && <div style={{position:'fixed',top:100,left:window.innerWidth ? (window.innerWidth /2 - 40) : 100, border: '2px solid red', background: 'pink', padding: '0.5em', minWidth:'400px' ,borderRadius:'5px', zIndex:999}} >\n            <Button variant=\"danger\" size=\"sm\"  style={{float:'right', fontWeight: 'bold',borderRadius:'20px',marginLeft:'1em'}} onClick={function(e) {props.setPageMessage('')}}>X</Button>{props.message} \n        </div>}\n        \n        <img src={fireImage}  style={{height:'5em', marginRight:'0.4em'}} alt=\"logo\"/>\n         <div style={{width: '100%'}}>\n        \n        {links}\n        </div>\n        \n         <div style={{float:'right', vAlign:'top', minWidth:'10em', marginRight:'0em'}}>\n        {props.isLoggedIn() && \n            <div>\n                <a style={{display:'inline'}}  href=\"/login/profile\" ><Button variant=\"primary\" >{'Profile'}</Button></a>\n                <a style={{display:'inline'}}  href=\"/login/logout\" ><Button variant=\"danger\" >Logout</Button></a>\n            </div>\n        }\n        { !props.isLoggedIn() && \n            <a href=\"/login/login\" ><Button variant=\"success\" >Login</Button></a>\n        }\n        \n        </div>\n        \n         <img src={waitingImage} alt='waiting' style={{position:'fixed', top:5, right:5, zIndex:99, display: props.waiting ? 'block' : 'none' }} />\n    </Navbar>\n}\n\n\n        //<Navbar.Text><Link to=\"/organise\" ><Button>Organise</Button></Link></Navbar.Text>\n        //<Navbar.Text><Link to=\"/skills\" ><Button>My Skills</Button></Link></Navbar.Text>\n        //<Navbar.Text><Link to=\"/search\" ><Button>Search Community</Button></Link></Navbar.Text>\n","/* global window */\nimport {Button,   Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useNluRow from './useNluRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\nimport thumbdownImage from './images/thumb-down.svg'\nimport thumbupImage from './images/thumb-up.svg'\n\n\nexport default function NluImportRow(props) {\n     const  {item, splitNumber , style} = props;\n       const {    \n            intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, skills, reactTags, reactSkills, \n            onTagDelete, onTagAddition, onSkillDelete,onSkillAddition,  updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem,  deselectItem\n        } = useNluRow(props.item, props.saveItem, props.splitNumber, props.style, props.setPageMessage)\n                \n       var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {intentChanged(intentKey)}}  >{intentKey}</Dropdown.Item>\n       })\n       // ONE PER ENTITY FOR THIS EXAMPLE\n       var entitiesDropdowns = item && item.entities ? item.entities.map(function(entity,i) {\n           var entityOptions = props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item  key={j} value={entityKey} onClick={function(e) {entityTypeChanged(i,entityKey)}}  >{entityKey}</Dropdown.Item>\n           }) \n           return<Dropdown style={{marginLeft:'0.2em'}} variant='info'  key={i}  as={ButtonGroup}>\n              <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button variant='info'   size=\"sm\"  onClick={function(e) {entityClicked(i,entity.type)}} >\n              <b>{entity.type}</b> \n                -\n              {entity.value ? entity.value : 'Select Entity Type'}\n              </Button>\n              <Button variant=\"info\" size=\"sm\" onClick={function(e) {entityDelete(i,'')}} >X</Button>\n              <Dropdown.Menu>\n                  <form  style={{display:'inline'}}>\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {entityTypeChanged(i,e.target.value)}}\n                    value={entity.type} />\n                    </div>\n                  </form>\n                  {entityOptions}\n              </Dropdown.Menu>\n            </Dropdown>\n       }): [] ;\n        //PLUS CREATE NEW WHEN TEXT IS SELECTED\n       if (selectionState  && selectionState.textSelection && selectionState.textSelection.length > 0 &&  selectionState.textSelectionFrom === splitNumber) {\n           var entityOptions =  props.lookups.entityLookups && props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item key={j} value={entityKey} onClick={function(e) {entityTypeChanged(-1,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           entitiesDropdowns.push(<Dropdown key=\"new\" variant='success'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='success'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant='success' size=\"sm\" >New Entity</Button>\n\n          <Dropdown.Menu>\n           <form style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); entityTypeChanged(-1,newEntity)}}>\n                <div className=\"form-group\">\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {setNewEntity(e.target.value)}}\n                value={newEntity} />\n                </div>\n              </form>\n              {entityOptions}\n          </Dropdown.Menu>\n        </Dropdown>)\n       }\n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                  \n                   {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button>}\n                  {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button>}\n                  \n                  {item.intent && <Button  style={{float:'right', marginLeft:'0.2em'}}  variant=\"success\"  onClick={function() {props.saveNlu(splitNumber)}} ><img src={thumbupImage} alt=\"Save\" /> Save</Button>}\n                  {!item && <Button   style={{float:'right', marginLeft:'0.2em'}} variant=\"secondary\" ><img src={thumbupImage} alt=\"Save\" /> Import</Button>} \n                  <Button  variant=\"danger\" style={{float:'right'}} onClick={function(e) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}} ><img src={thumbdownImage} alt=\"Delete\" /> Delete</Button>\n                  \n                 \n                  <Dropdown  style={{float:'left'}} as={ButtonGroup}>\n                  <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button   size=\"sm\" >{item.intent ? item.intent.toString() : 'Select Intent'} </Button>\n                  <Dropdown.Menu>\n                   <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); intentChanged(intentTitle)}}>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" value={intentTitle} onChange={function(e) {setIntentTitle(e.target.value)}}\n                         />\n                        </div>\n                      </form>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                  </Dropdown>\n                  <span style={{float:'left'}}>{entitiesDropdowns}</span>\n                 \n                  \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add to skill\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactSkills}\n                    tags={skills}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.skillLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onSkillDelete}\n                    onAddition={onSkillAddition} /> \n                    </div>\n                    \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add new tag\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactTags}\n                    tags={tags}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.tagLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onTagDelete}\n                    onAddition={onTagAddition} /> \n                    </div>\n                  \n                  <input  \n                 \n                   onFocus={ function(e) {\n                       setSelectionState(null)\n                    }}\n                   onSelect={ function(e) {\n                     var textSelection = window.getSelection().toString(); \n                     setSelectionState({textSelection:textSelection, textSelectionFrom: splitNumber, startTextSelection: e.target.selectionStart, endTextSelection: e.target.selectionEnd})\n                  }}  \n                   type='text'   style={{clear:'both', width:'80%'}}  value={item.example} id={\"example_input_\"+splitNumber} \n                   onChange={function(e) { updateExampleContent(e.target.value)}} />\n                  \n                  \n                \n                \n            </div>\n      </div>\n}\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport NluImportRow from './NluImportRow'\nimport EditorSearchBar from './components/EditorSearchBar'\nimport useNluEditor from './useNluEditor'\nimport TagAllDropDown from './components/TagAllDropDown'\nimport IntentAllDropDown from './components/IntentAllDropDown'\nimport SkillAllDropDown from './components/SkillAllDropDown'\nimport arrowthickleftImage from './images/arrow-thick-left.svg'\nimport arrowthickrightImage from './images/arrow-thick-right.svg'\n\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    //console.log(['USENLUROW rr',index])\n    return <NluImportRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups}  setPageMessage={props.data.setPageMessage} />\n}\n\n\nexport default function NluImportEditor(props) {\n    \n    //const examplesDB = useDBSingleKey('nlutool','examples','alldata')\n    const {loadAll, deleteItem ,items,  findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue, skillFilterValue, setSkillFilterValue, intentFilterValue, setIntentFilterValue, intentAllValue, setIntentAllValue, listRef, tagAll, untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, saveAll, saveNlu, filteredItems, createEmptyItem, sort} = useNluEditor('nlutool','import','alldata', props.updateFunctions.updateLookups)\n    useEffect(() => {\n        loadAll()\n        //examplesDB.loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    //useEffect(() => {\n        //if (importFrom) {\n            //var parsed = parseImportText(importFrom)\n            //setItems(parsed)\n            //props.setImportFrom('')\n        //}\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[props.importFrom])\n    \n    \n    \n   \n    \n    function renderEditor(props) {\n        // filter rendered list using callback \n       \n         //filteredItems.sort(function(oldItem,item) {console.log( ['SORT',oldItem.example,item.example]); return (item.example && oldItem.example && item.example.trim().toLowerCase <= oldItem.example.trim().toLowerCase) })\n           \n        if (filteredItems && filteredItems.length > 0) {\n            \n           //var skillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n                  //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkillAllValue(skillKey); skillSetAll(skillKey)}}  >{skillKey}</Dropdown.Item>\n            //})\n            \n            //var tagOptions = props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n              //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {setTagAllValue(tagKey); tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n           //})\n           //var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n              //return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {setIntentAllValue(intentKey);intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n           //})\n            return <div>\n             <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length}/{items.length} matches </span>\n             {props.lookups.selectedTally > 0 && <span style={{float:'right'}}> \n                <span>With {props.lookups.selectedTally} selected&nbsp;\n              <SkillAllDropDown skillSetAll={skillSetAll} skillAllValue={skillAllValue}  setSkillAllValue={setSkillAllValue}  lookups={props.lookups}  untagAll={untagAll} unskillAll={unskillAll}/>\n                <IntentAllDropDown intentAll={intentAll} intentAllValue={intentAllValue} setIntentAllValue={setIntentAllValue}  lookups={props.lookups}  untagAll={untagAll} unskillAll={unskillAll}/>\n                <TagAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue}  lookups={props.lookups}  untagAll={untagAll} unskillAll={unskillAll}/>\n                \n                </span>\n                <Button style={{marginLeft:'1em'}} onClick={saveAll} variant=\"success\"  >Save Selected</Button> \n                <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                \n            </span> } \n                \n              \n                \n                <List\n                    ref={listRef}\n                    itemData={{items: filteredItems, saveItem: saveItemWrap, saveNlu, deleteItem, findKeyBy, lookups:props.lookups, setPageMessage: props.setPageMessage}}\n                    itemKey={index => index}  \n                    className=\"List\"\n                    height={700}\n                    itemCount={filteredItems.length}\n                    itemSize={getItemSize}\n                    width={'100%'}\n                  >{RenderRow}</List>\n            </div>\n            \n            \n        } else {\n            //{JSON.stringify(filteredItems)}\n            return <div >\n                <div style={{textAlign:'center'}}>\n            <br/><b>No more items to import</b><br/><br/>Open <Link to=\"/sources\" ><Button><img style={{height:'1em', paddingRight:'1em'}}  src={arrowthickleftImage} alt=\"Sources\" />Sources</Button></Link> to create more or <Link to=\"/examples\" ><Button>Organise<img src={arrowthickrightImage} alt=\"Intents\" style={{height:'1em', paddingLeft:'1em'}}  /></Button></Link> what you have imported into skills.\n            </div></div>\n        }\n    }\n    // {JSON.stringify(items)}\n    return <div>\n         \n        <EditorSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} skillFilterValue={skillFilterValue} setSkillFilterValue={setSkillFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} untagAll={untagAll} unskillAll={unskillAll} intentFilterValue={intentFilterValue} setIntentFilterValue={setIntentFilterValue}  sort={sort} />\n         {renderEditor(props)}\n    </div>\n    \n    \n}\n      \n\n","import JSZip from 'jszip'\n\nfunction createZip(zipStructure) {\n    var zip = new JSZip();\n     console.log(['ZIP',zipStructure])\n    function recurseZipStructure(zipStructure, path) {\n        if (Array.isArray(zipStructure.files)) {\n            zipStructure.files.map(function(file) {\n                console.log(['ZIP file',file])\n                var options = (file.base64 && file.base64.length > 0) ? {base64: true} : {} \n                if (file.name && file.name.length > 0 && file.content) zip.file(path+\"/\"+file.name,file.content, options);\n                return null\n            })\n        }\n        if (Array.isArray(zipStructure.folders)) {\n            zipStructure.folders.map(function(folder) {\n                console.log(['ZIP folder',folder])\n                if (folder.name && folder.name.length > 0) zip.folder(folder.name);\n                if ((folder.files && folder.files.length > 0) || (folder.folders && folder.folders.length > 0)) {\n                    recurseZipStructure(folder, path+\"/\"+folder.name)\n                }\n                return null\n            })\n        }\n         \n    } \n     \n    recurseZipStructure(zipStructure,'')\n     \n    return new Promise(function(resolve,reject) {\n        zip.generateAsync({type:\"blob\"}).then(function(content) {\n            resolve(content)\n        })\n    })\n}\n\nexport {createZip}\n","import {  uniquifyArray, replaceEntities } from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\n\nasync function exportJOVO(skill) {\n     return new Promise(function(resolve,reject) {\n         var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         listsStorage.getItem('alldata').then(function(lists) {\n             var jovo={invocation: skill.invocation}\n             //console.log(['JVO export',skill])\n             var intents = {}\n             var entityTypes={}\n             if (skill.intents) {\n                 Object.keys(skill.intents).map(function(intentKey) {\n                     var examples = skill.intents[intentKey]\n                     if (!intents[intentKey])  intents[intentKey] = {name:intentKey, phrases:[], inputs: []}\n                     var inputs = {}\n                     if (Array.isArray(examples)) {\n                         examples.map(function(example) {\n                            intents[intentKey].phrases.push(replaceEntities(example.example,example.entities))\n                            if (Array.isArray(example.entities)) {\n                                example.entities.map(function(entity) {\n                                   inputs[entity.type] = true  \n                                   if (!Array.isArray(entityTypes[entity.type])) entityTypes[entity.type] = []\n                                   entityTypes[entity.type].push(entity.value)\n                                   return null\n                                })\n                            }\n                            return null\n                         })\n                     }\n                     intents[intentKey].phrases = uniquifyArray(intents[intentKey].phrases).sort()\n                     intents[intentKey].inputs = Object.keys(inputs).map(function(entityType) { \n                         var entityTypeName = entityType+\"Type\"\n                         if (skill.entities && skill.entities[entityType] && (skill.entities[entityType].googleType || skill.entities[entityType].alexaType)) {\n                             entityTypeName ={}\n                             if (skill.entities[entityType].googleType) entityTypeName.dialogflow = skill.entities[entityType].googleType\n                             if (skill.entities[entityType].alexaType) entityTypeName.alexa = skill.entities[entityType].alexaType\n                         } \n                         return {name: entityType, type: entityTypeName} \n                    })\n                    return null\n                 }) \n             }\n             jovo.intents = Object.values(intents)\n             //console.log(['skill lists',entityTypes, skill.lists])\n             //var usedLists = {}\n             //if (skill.entities) {\n                //Object.keys(skill.entities).map(function(entity,i) {\n                    //if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        //skill.entities[entity].lists.map(function(list) {\n                           //usedLists[list] = true  \n                        //})\n                    //}\n                //})\n             //}\n            \n             //lists.map(function(item) {\n                 //console.log(['LIST',item])\n                 //Object.keys(usedLists).map(function(listKey) {\n                    //console.log([listKey,item.tags.indexOf(listKey) !== -1, item.tags])\n                    //if (item && item.tags && item.tags.indexOf(listKey) !== -1) {\n                        //console.log('list item used ')\n                        //entityTypes[listKey].push(item.value)\n                    //}\n                //})\n            //})\n            var synonyms = {}\n            var synonymsIndex = {}\n            lists.map(function(item) {\n                 if (item.value && item.value.trim().length > 0) {\n                    if (item.synonym) {\n                        if (!Array.isArray(synonymsIndex[item.synonym])) synonymsIndex[item.synonym] = [] \n                        synonyms[item.value] = item.synonym\n                        synonymsIndex[item.synonym].push(item.value)\n                    }\n                    Object.keys(entityTypes).map(function(entityType) {\n                        if (skill.entities && skill.entities[entityType]  && skill.entities[entityType].lists)  {\n                            skill.entities[entityType].lists.map(function(entityExtrasList) {\n                                //console.log(['li',entityExtrasList,item.tags,item.tags.indexOf(entityExtrasList)])\n                                if (item && item.tags && item.tags.indexOf(entityExtrasList) !== -1) {\n                                    //console.log(['USE ENTITY',entityType, entityExtrasList,lists[entityExtrasList]])\n                                    entityTypes[entityType].push(item.value)\n                               }\n                               return null\n                            })\n                        }\n                        return null\n                    })\n                }\n                return null\n            })\n             \n            console.log(['synonyms',synonyms, synonymsIndex])\n        \n            jovo.inputTypes = Object.keys(entityTypes).map(function(entityType) {\n            //console.log(['JOVOEX',lists,entityType])\n                const values = []\n                uniquifyArray(entityTypes[entityType]).sort().map(function(value) {\n                    if (!synonyms[value]) {\n                        if (value && value.trim().length > 0) values.push( {value:value})\n                    }\n                    return null\n                })\n                Object.keys(synonymsIndex).map(function(synonym) {\n                    if (synonym && synonym.trim().length > 0) values.push({value:synonym, synonyms:synonymsIndex[synonym] })\n                    return null\n                })\n                return {name: entityType+\"Type\", values:values}  \n            })\n                    \n            \n            \n            console.log(['inputtypes',jovo.inputTypes])\n            //console.log(['JVO final',jovo])\n            const content = JSON.stringify(jovo)\n             const final =  {folders:[{'name':'models', files:[{name:'en-US.json', content: content}] }]   }\n             //console.log(['JVO final',final])\n             resolve(final)\n              \n        })\n    })\n}\n\n\nasync function exportJOVOZip(skill) {\n    return createZip(await exportJOVO(skill))\n}\n\nexport {exportJOVO, exportJOVOZip}\n","import localforage from 'localforage'\n\n\n/* export skill\n * to ensure the completeness of the skill model add\n *   - utterancesData\n *   - entitiesData\n * which are both arrays of objects containing value and synonym(alternatives) eg {value:\"cat\", synonym:\"kitty\\npussy\"}\n */\nfunction exportJSON(skill) {\n    console.log(['EXPPORT JSON',skill])\n    var listsStorage = localforage.createInstance({\n        name: \"nlutool\",\n        storeName   : \"lists\",\n    });\n    var utterancesStorage = localforage.createInstance({\n        name: \"nlutool\",\n        storeName   : \"utterances\",\n    });\n    var promises = []    \n    // entities - just entities in entity lists\n    promises.push(new Promise(function(resolve,reject) {\n        if (skill && skill.entities) {\n             listsStorage.getItem('alldata').then(function(dbEntities) {\n                 var usedLists = {}\n                 var filledLists = {}\n                 console.log(skill.entities)\n                 if (skill && skill.entities) {\n                     Object.values(skill.entities).map(function(entity) {\n                        if (entity.lists) entity.lists.map(function(list) {\n                            usedLists[list] = true  \n                        })  \n                        return null\n                     })\n                     console.log(['USEDLISTS',usedLists])\n                     Object.keys(usedLists).map(function(useList) {\n                         filledLists[useList] = dbEntities.filter(function(item) {if (item.tags && item.tags.indexOf(useList) !== -1) return true; else return false }).map(function(iitem) {\n                             return {value:iitem.value, synonym: iitem.synonym}  \n                         })\n                     })\n                     console.log(['FILLEDLISTS',filledLists])\n                    console.log(['SETSKILL',JSON.parse(JSON.stringify(skill))])\n                 }\n                 resolve(filledLists)\n             })\n        } else {\n            resolve({})\n        }\n    }))\n    promises.push(new Promise(function(resolve,reject) {\n        var utterances = {}\n        console.log(['SHOULD ADD UTTS',skill.utterancesLists, skill.utterances])\n        if (skill.utterancesLists || skill.utterances) { \n            utterancesStorage.getItem('alldata').then(function(allUtterances) {\n                if (Array.isArray(allUtterances)) {\n                    allUtterances.map(function(thisUtterance) {\n                        if (skill.utterances) { \n                            skill.utterances.map(function(listKey) {\n                                if (thisUtterance.value === listKey) utterances[thisUtterance.value] = {value:thisUtterance.value, synonym:thisUtterance.synonym, tags: thisUtterance.tags}\n                                return null\n                            })\n                            \n                        }\n                        if (skill.utterancesLists) { \n                            skill.utterancesLists.map(function(listKey) {\n                                if (thisUtterance.tags && thisUtterance.tags.indexOf(listKey) !== -1) utterances[thisUtterance.value] = {value:thisUtterance.value, synonym:thisUtterance.synonym, tags: thisUtterance.tags}\n                                return null\n                            })\n                            \n                        }\n                        return null \n                    })\n                    console.log(['SET UITTER GLOLBA',utterances])\n                    \n                }\n                resolve(utterances)\n            })\n       } else {\n           resolve({})\n       }\n    }))\n            \n    return new Promise(function(oresolve,oreject) {\n       //skill.entitiesData = filledLists\n        //skill.utterancesData = utterances                   \n        Promise.all(promises).then(function(data) {\n            console.log(['LOIADED LOOKUPS',data])\n            var newSkill = skill\n            newSkill.entitiesData = data[0]\n            newSkill.utterancesData = data[1]\n            console.log(['resolve JSON',newSkill])\n            oresolve(newSkill)\n        })\n        \n    })\n}\n\nfunction exportJSONZip(skill) {\n    return new Promise(function(resolve,reject) {\n        exportJSON(skill).then(function(content) {\n            console.log(['content',skill])\n            const blob = new Blob([JSON.stringify(content, null, 2)], {type : 'application/json'});\n            resolve(blob)\n        })\n    })\n    //return createZip({files:[{name:'skill.json', content: await exportJSON(skill)}]})\n}\n\nexport {exportJSON, exportJSONZip}\n\n\n          \n //listsStorage.getItem('alldata').then(function(lists) {\n             //console.log(['LISTS',lists])\n            //var usedLists = {}\n            //if (skill.entities) {\n                //Object.keys(skill.entities).map(function(entity,i) {\n                    //if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        //skill.entities[entity].lists.map(function(list) {\n                           //usedLists[list] = true  \n                           //return null\n                        //})\n                    //}\n                    //return null\n                //})\n            //}\n            //var skillLists = {}\n            //Object.keys(usedLists).map(function(listKey) {\n              //skillLists[listKey] = []  \n              //return null\n            //})\n            //if (lists) lists.map(function(item) {\n                //Object.keys(usedLists).map(function(listKey) {\n                    ////console.log([listKey,item.tags.indexOf(listKey) !== -1, item.tags])\n                    //if (item && item.tags && item.tags.indexOf(listKey) !== -1) {\n                        ////console.log('list item used ')\n                        //skillLists[listKey].push(item.value)\n                    //}\n                    //return null\n                //})\n                //return null\n            //})\n            //skill.lists = skillLists\n            \n                //// utterances\n                //if (props.currentSkill && props.currentSkill.utterances) {\n                     //utterancesStorage.getItem('alldata').then(function(dbUtterances) {\n                         //var usedLists = {}\n                         //var filledLists = {}\n                         //console.log(props.currentSkill.utterances)\n                         //if (props.currentSkill && props.currentSkill.utterancesLists) {\n                             //Object.values(props.currentSkill.utterancesLists).map(function(utterance) {\n                                //usedLists[utterance] = true  \n                                //return null\n                             //})\n                             //console.log(['USEDLISTS',usedLists])\n                             //Object.keys(usedLists).map(function(useList) {\n                                 //filledLists[useList] = dbUtterances.filter(function(item) {if (item.tags && item.tags.indexOf(useList) !== -1) return true; else return false }).map(function(iitem) {\n                                     //return {value:iitem.value, synonym: iitem.synonym}  \n                                 //})\n                             //})\n                             //console.log(['FILLEDLISTS',filledLists])\n                              //var skill = props.currentSkill\n                              //skill.utterancesData = filledLists\n                              //resolve(skill)\n                         //}\n                     //})\n                    \n                //}\n","import {  uniquifyArray, replaceEntities } from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\n\n\n\n\nasync function exportMycroft(skill) {\n    return new Promise(function(resolve,reject) {\n        var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         var modelFiles=[]\n         listsStorage.getItem('alldata').then(function(lists) {\n            //var usedLists = {}\n            //if (skill.entities) {\n                //Object.keys(skill.entities).map(function(entity,i) {\n                    //if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        //skill.entities[entity].lists.map(function(list) {\n                           //usedLists[list] = true  \n                        //})\n                    //}\n                    //return null\n                //})\n            //}\n           \n            \n            \n           \n             // intents - \n             // collate examples, one file per intent\n             var intents={}\n             if (skill.intents) {\n                 Object.keys(skill.intents).map(function(intentKey) {\n                     var examples = skill.intents[intentKey]\n                     if (!Array.isArray(intents[intentKey]))  intents[intentKey] = []\n                     if (Array.isArray(examples)) {\n                         examples.map(function(example) {\n                            intents[intentKey].push(replaceEntities(example.example,example.entities))\n                            return null\n                         })\n                     }\n                     intents[intentKey] = uniquifyArray(intents[intentKey]).sort()\n                    return null\n                 }) \n             }\n             // one per file\n             // entities - merge values and lists values , one entity per file\n             var entities={}\n             if (skill.entities) { \n                 Object.keys(skill.entities).map(function(entityKey) {\n                     var combinedEntities = []\n                     var entity = skill.entities[entityKey]\n                     if (entity.values) {\n                         combinedEntities = combinedEntities.concat(entity.values)\n                     } \n                     if (entity.lists) {\n                         //var skillLists = {}\n                         //Object.keys(usedLists).map(function(listKey) {\n                          //skillLists[listKey] = []  \n                          //return null\n                        //})\n                       \n                       console.log(['add from lists',entity.lists])\n                        lists.map(function(item) {\n                            entity.lists.map(function(listKey) {\n                                console.log([listKey,item.tags.indexOf(listKey) !== -1, item.tags])\n                                if (item && item.tags && item.tags.indexOf(listKey) !== -1) {\n                                    console.log('list item used ')\n                                    combinedEntities.push(item.value)\n                                }\n                                return null\n                            })\n                            return null\n                        })\n                     }\n                     entities[entityKey] = uniquifyArray(combinedEntities).sort()\n                     return null\n                 }) \n             }\n             \n             Object.keys(intents).map(function(intent) {\n                 modelFiles.push({name:intent+'.intent',content: intents[intent].join(\"\\n\")})\n                 return null\n             })\n             Object.keys(entities).map(function(entity) {\n                 modelFiles.push({name: entity+'.entity',content: entities[entity].join(\"\\n\")})\n                 return null\n             })\n              resolve( modelFiles)\n        })\n    })\n}\n\n\nasync function exportMycroftZip(skill) {\n    const files = await exportMycroft(skill)\n    return createZip({files:files})\n}\n\nexport {exportMycroft, exportMycroftZip}\n\n","const RASATemplates = {\n    config: `\nlanguage: en\npipeline:\n  - name: WhitespaceTokenizer\n  - name: RegexFeaturizer\n  - name: LexicalSyntacticFeaturizer\n  - name: CountVectorsFeaturizer\n  - name: CountVectorsFeaturizer\n    analyzer: \"char_wb\"\n    min_ngram: 1\n    max_ngram: 4\n  - name: ResponseSelector\n    epochs: 100\n  - name: DIETClassifier\n    epochs: 100\n  - name: EntitySynonymMapper\n\npolicies:\n  - name: FormPolicy\n  - name: MemoizationPolicy\n  - name: TEDPolicy\n    max_history: 5\n    epochs: 100\n  - name: MappingPolicy\n  - name: \"FallbackPolicy\"\n    nlu_threshold: 0.5\n    core_threshold: 0.3\n    fallback_action_name: \"action_default_fallback\"\n    `,\n    credentials: `\n# This file contains the credentials for the voice & chat platforms\n# which your bot is using.\n# https://rasa.com/docs/rasa/user-guide/messaging-and-voice-channels/\n\nrest:\n#  # you don't need to provide anything here - this channel doesn't\n#  # require any credentials\n\n\n#facebook:\n#  verify: \"<verify>\"\n#  secret: \"<your secret>\"\n#  page-access-token: \"<your page access token>\"\n\n#slack:\n#  slack_token: \"<your slack token>\"\n#  slack_channel: \"<the slack channel>\"\n\n#socketio:\n#  user_message_evt: <event name for user message>\n#  bot_message_evt: <event name for but messages>\n#  session_persistence: <true/false>\n\n#mattermost:\n#  url: \"https://<mattermost instance>/api/v4\"\n#  token: \"<bot token>\"\n#  webhook_url: \"<callback URL>\"\n\n#rasa:\n  #url: \"http://localhost:5002/api\"\n \n    `,\n    endpoint: `\n#action_endpoint:\n#  url: http://localhost:5055/webhook\n\n    `,\n    actions:  `\n\"\"\" RASA actions \"\"\"\n \n    `,\n    single_action: function(className, actionName) {\n        return `\n\"\"\" RASA action \"\"\"\nimport sys\nimport logging\nfrom typing import Any, Text, Dict, List\nfrom datetime import datetime\nfrom rasa_sdk import Action, Tracker\nfrom rasa_sdk.executor import CollectingDispatcher\nfrom rasa_sdk.events import SlotSet, FollowupAction\n\nclass `+className+`(Action):\n    def name(self) -> Text:\n        return \"`+actionName+`\"\n    def run(self, dispatcher: CollectingDispatcher,\n            tracker: Tracker,\n            domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:\n        var slotsets = []\n        logger = logging.getLogger(__name__)    \n        logger.debug('Action `+actionName+`')\n        return [SlotSet(\"hermod_force_end\", \"true\"),SlotSet(\"hermod_force_continue\", None)] \n        \n        dispatcher.utter_message(text=\"Action `+actionName+`\")\n        return slotsets\n    \n    `\n    }\n    ,\n    domain: `\nsession_config:\n  carry_over_slots_to_new_session: true\n  session_expiration_time: 5    \n\n`,\n    stories:`\n## greet + location/price + cuisine + num people    <!-- name of the story - just for debugging -->\n* greet\n   - action_ask_howcanhelp\n* inform{\"location\": \"rome\", \"price\": \"cheap\"}  <!-- user utterance, in format intent{entities} -->\n   - action_on_it\n   - action_ask_cuisine\n* inform{\"cuisine\": \"spanish\"}\n   - action_ask_numpeople        <!-- action that the bot should execute -->\n* inform{\"people\": \"six\"}\n   - action_ack_dosearch    \n`,\n    session:`\nsession_config:\n  carry_over_slots_to_new_session: true\n  session_expiration_time: 5\n`\n}\nexport default RASATemplates\n","import { replaceEntitiesWithValues, uniquifyArray, snakeToCamelCase, camelToSnakeCase, toSnakeCase} from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\nimport RASATemplates from './RASATemplates'\n\n\n function generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContent, credentialsContent, endpointsContent, actionFiles, storyData) {\n    var folderTree = {\n        files:[\n            {name:'actions.py',content:actionsContent},\n            {name:'config.yml',content:configContent},\n            {name:'domain.yml',content:domainContent},\n            {name:'credentials.yml',content:credentialsContent},\n            {name:'endpoints.yml',content:endpointsContent}\n        ], \n        folders:[\n            {name:'actions', files:actionFiles}, \n            {name:'data', \n                files:[{name:'nlu.md', content: nluContent}, {name:'stories.md', content: storyData ? storyData : ''}], \n                folders:[{name:'lookups', files:fileLookups}]\n            }\n        ]\n    }\n    console.log(['TREE GEN',folderTree])\n    return folderTree\n}\n\n// just the models subfolder\n// one file per intent\n// one file per entity\nfunction exportRASAMD(skill) {\n     //\"rasa_nlu_data\": {\n        //\"common_examples\": [],\n        //\"regex_features\" : [],\n        //\"lookup_tables\"  : [],\n        //\"entity_synonyms\": []\n    //}\n    //{\"rasa_nlu_data\":{\"regex_features\":[],\"entity_synonyms\":[{\"synonyms\":[\"biggest city\",\"capital city\"],\"value\":\"capital\"}],\"common_examples\":[{\"text\":\"sounds good sounds good thank you\",\"intent\":\"affirmative\",\"entities\":[]},\n      //{\"text\":\"what is the use of a actinometer\",\"intent\":\"ask_attribute\",\"entities\":[{\"end\":15,\"entity\":\"attribute\",\"start\":12,\"value\":\"use\"},{\"end\":32,\"entity\":\"thing\",\"start\":21,\"value\":\"actinometer\"}]}\n    console.log(['EXPPORT RASA',skill])\n    return new Promise(function(resolve,reject) {\n         var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         var utterancesStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"utterances\",\n         });\n        \n        //resolve({files:[{name:'nlu.md', content: content}]})\n         \n         // LOAD ENTITY LISTS\n         listsStorage.getItem('alldata').then(function(lists) {\n            \n            console.log(['LISTS',lists])\n            \n            // for each entity, collate entity values and lists values\n            var entityLists = {}\n            if (skill.entities) {\n                Object.keys(skill.entities).map(function(entity,i) {\n                    const entityValue = skill.entities[entity]\n                    // values from examples\n                    if (entityValue && entityValue.values) {\n                        entityLists[entity] = entityValue.values\n                    } \n                    // values from tags\n                    if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        lists.map(function(listItem,listItemIndex) {\n                            skill.entities[entity].lists.map(function(entityList) {\n                               if (listItem.tags && listItem.tags.indexOf(entityList) !== -1) {\n                                   entityLists[entity].push(listItem.value)\n                               }\n                               return null\n                            })\n                            return null\n                        })\n                    }\n                    return null\n                })\n            }\n             console.log(['LISTS2',entityLists])\n             // lookup lists\n             var fileLookups=[]\n             var lookups = []\n             Object.keys(entityLists).map(function(entity) {\n                 var values = entityLists[entity]\n                 fileLookups.push({name:entity+\".txt\",content:values.join(\"\\n\")})\n                 lookups.push('## lookup:'+entity)\n                 lookups.push(\"data/lookups/\"+entity+\".txt\")\n                 return null\n             })\n             \n            \n            // collate synonyms\n            //var synonyms = {}\n            var synonymsIndex = {}\n            lists.map(function(item) {\n                 if (item.value && item.value.trim().length > 0) {\n                    if (item.synonym) {\n                        if (!Array.isArray(synonymsIndex[item.synonym])) synonymsIndex[item.synonym] = [] \n                        //synonyms[item.value] = item.synonym\n                        synonymsIndex[item.synonym].push(item.value)\n                    }\n                }\n                return null\n            })\n            console.log(['synonyms',synonymsIndex])\n            var synonymsOut = []\n            Object.keys(synonymsIndex).map(function(synonym) {\n                synonymsOut.push('## synonym:'+synonym)\n                uniquifyArray(synonymsIndex[synonym]).sort().map(function(item) {\n                    // TODO CONVERT TO RASA MD EXAMPLE WITH ENTITIES\n                    synonymsOut.push('- '+item)\n                    return null\n                }) \n                synonymsOut.push(\"\\n\")\n                return null\n            })\n            console.log(['synonyms OUT',synonymsOut])\n            \n            // COMMON EXAMPLES  \n            var nluOut=[]\n            if (skill.intents) {\n                console.log(['have intents',skill.intents])\n                Object.keys(skill.intents).map(function(intentKey) {\n                    const intentItem = skill.intents[intentKey]\n                    console.log('have intent ',intentKey,intentItem)\n                    nluOut.push('## intent:'+intentKey)\n                    var examples = []\n                    intentItem.map(function(example) {\n                        // TODO CONVERT TO RASA MD EXAMPLE WITH ENTITIES\n                        console.log(['INTY',example])\n                        if (example && example.example && example.example.trim().length > 0) {  \n                            var key = replaceEntitiesWithValues(example.example, example.entities)\n                            examples[key] = '- '+key\n                        }\n                        return null\n                    }) \n                    nluOut=[...nluOut, ...Object.values(examples)]\n                    nluOut.push(\"\\n\")\n                    return null\n                })\n            }\n            var nluContent = nluOut.join(\"\\n\")+\"\\n\"+synonymsOut.join(\"\\n\")+lookups.join(\"\\n\")\n            console.log(nluContent)\n            // CONSTANTS\n             var configContent = skill.rasaConfig ? skill.rasaConfig : RASATemplates.config\n            //var domainContent = ''\n            var credentialsContent = skill.rasaCredentials ? skill.rasaCredentials : RASATemplates.credentials\n            var endpointsContent = skill.rasaEndpoint ? skill.rasaEndpoint : RASATemplates.endpoint\n            \n            // RASA ACTIONS\n            var actionsContent = RASATemplates.actions\n            var domainActions = []\n            \n            var actionFiles = []\n            if (Array.isArray(skill.rasaActions)) {\n                skill.rasaActions.map(function(action) {\n                    if (action && action.trim().length > 0) {\n                        var string = snakeToCamelCase(toSnakeCase(camelToSnakeCase(action)))\n                        var snake = camelToSnakeCase(string)+'_action'\n                        domainActions.push(snake)\n                        var name = string && string.trim().length > 0 ? string[0].toUpperCase() + string.substring(1) : ''\n                        actionFiles.push({name:name+'Action.py', content:RASATemplates.single_action(name+'Action',snake)})\n                        actionsContent+=\"\\n import \"+name+'Action.py'\n                    }\n                    return null\n                })\n            }\n            var domainEntities = skill.entities ? Object.keys(skill.entities) : []\n            var domainIntents = skill.intents ? Object.keys(skill.intents) : []\n            var domainSlots = skill.slots ?  Object.keys(skill.slots) : (skill.entities ? Object.keys(skill.entities) : [])\n            var domainSlotsMeta = {}\n            domainSlots.map(function(slot) {\n               domainSlotsMeta[slot] = {\n                   type: skill.slots && skill.slots[slot] &&  skill.slots[slot].slotType ? skill.slots[slot].slotType : 'unfeaturized'\n                }\n               return null\n            })\n            console.log(['DOMAIN',domainEntities, domainIntents, domainSlots, domainSlotsMeta])\n            \n            var domainContentParts=[]\n            if (domainIntents.length > 0) {\n                domainContentParts.push(\"intents:\")\n                domainIntents.map(function(intent) {\n                    domainContentParts.push(\"- \"+intent)\n                    // TODO\n                    // TODO +\":\" plus intent entities\n                    // domainContentParts.push(\"  use_entities:\\n\")\n                    // domainContentParts.push(\"  - \"+entityForIntent)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            \n            if (domainEntities.length > 0) {\n                domainContentParts.push(\"entities:\")\n                domainEntities.map(function(entity) {\n                    domainContentParts.push(\"- \"+entity)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            if (domainSlots.length > 0) {\n                domainContentParts.push(\"slots:\")\n                domainSlots.map(function(slot,i) {\n                    domainContentParts.push(\"  \"+slot+\":\")\n                    domainContentParts.push(\"    type: \"+domainSlotsMeta[slot].type)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            // append session config\n            if (skill.rasaSession) skill.rasaSession.trim().split(\"\\n\").map(function(line) {\n                domainContentParts.push(line)\n                return null\n            })\n            \n            // UTTERANCES\n            var utterances = {}\n            if (skill.utterancesLists || skill.utterances) { \n                utterancesStorage.getItem('alldata').then(function(allUtterances) {\n                    if (Array.isArray(allUtterances)) {\n                        allUtterances.map(function(thisUtterance) {\n                            if (skill.utterances) { \n                                skill.utterances.map(function(listKey) {\n                                    if (thisUtterance.value === listKey) utterances[thisUtterance.value] = thisUtterance  \n                                    return null\n                                })\n                            }\n                            if (skill.utterancesLists) { \n                                skill.utterancesLists.map(function(listKey) {\n                                    if (thisUtterance.tags && thisUtterance.tags.indexOf(listKey) !== -1) utterances[thisUtterance.value] = thisUtterance  \n                                    return null\n                                })\n                                \n                            }\n                            return null\n                        })\n                        \n                         //fileLookups.push({name:toSnakeCase(utterance.value)+'.txt',content:''})\n                             \n                        \n                         // generate domainContent\n                         if (Object.keys(utterances).length > 0) {\n                             domainContentParts.push('responses:')\n                             Object.keys(utterances).map(function(utteranceKey) {\n                                    var utterance = utterances[utteranceKey]\n                                    domainContentParts.push('utter_'+toSnakeCase(utterance.value))\n                                    domainContentParts.push('- text: '+utterance.value)\n                                    if (utterance.synonyms && utterance.synonyms.length > 0) {\n                                        utterance.synonyms.map(function(synonym) {\n                                            domainContentParts.push('- text: '+synonym)\n                                            return null\n                                        })\n                                    } \n                                    return null\n                             })\n                         }\n                         resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n                    } else {\n                        resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n                    }\n                })\n               \n                \n            } else {\n                resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n            }\n        })\n        \n    })\n}\n\n\nfunction exportRASAMDZip(skill) {\n    return new Promise(function(resolve,reject) {\n        exportRASAMD(skill).then(function(data) {\n            createZip(data).then(function(res) {\n                resolve(res)\n            })\n        })\n    })\n}\n\nexport {exportRASAMD, exportRASAMDZip}\n","import { replaceEntitiesWithValues, snakeToCamelCase, camelToSnakeCase, toSnakeCase} from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\nimport RASATemplates from './RASATemplates'\n\n function generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContent, credentialsContent, endpointsContent, actionFiles, storyContent) {\n    var folderTree = {\n        files:[\n            {name:'actions.py',content:actionsContent},\n            {name:'config.yml',content:configContent},\n            {name:'domain.yml',content:domainContent},\n            {name:'credentials.yml',content:credentialsContent},\n            {name:'endpoints.yml',content:endpointsContent}\n        ], \n        folders:[\n            {name:'actions', files:actionFiles}, \n            {name:'data', \n                files:[{name:'nlu.json', content: nluContent}, {name:'stories.md', content: storyContent ? storyContent : ''}], \n                folders:[{name:'lookups', files:fileLookups}]\n            }\n        ]\n    }\n    console.log(['TREE GEN',folderTree])\n    return folderTree\n}\n\n// just the models subfolder\n// one file per intent\n// one file per entity\nfunction exportRASAJSON(skill) {\n //\"rasa_nlu_data\": {\n        //\"common_examples\": [],\n        //\"regex_features\" : [],\n        //\"lookup_tables\"  : [],\n        //\"entity_synonyms\": []\n    //}\n    //{\"rasa_nlu_data\":{\"regex_features\":[],\"entity_synonyms\":[{\"synonyms\":[\"biggest city\",\"capital city\"],\"value\":\"capital\"}],\"common_examples\":[{\"text\":\"sounds good sounds good thank you\",\"intent\":\"affirmative\",\"entities\":[]},\n      //{\"text\":\"what is the use of a actinometer\",\"intent\":\"ask_attribute\",\"entities\":[{\"end\":15,\"entity\":\"attribute\",\"start\":12,\"value\":\"use\"},{\"end\":32,\"entity\":\"thing\",\"start\":21,\"value\":\"actinometer\"}]}\n    console.log(['EXPPORT RASA',skill])\n    return new Promise(function(resolve,reject) {\n         var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         var utterancesStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"utterances\",\n         });\n        \n        //resolve({files:[{name:'nlu.md', content: content}]})\n         \n         // LOAD ENTITY LISTS\n         listsStorage.getItem('alldata').then(function(lists) {\n            \n            console.log(['LISTS',lists])\n            \n            // for each entity, collate entity values and lists values\n            var entityLists = {}\n            if (skill.entities) {\n                Object.keys(skill.entities).map(function(entity,i) {\n                    const entityValue = skill.entities[entity]\n                    // values from examples\n                    if (entityValue && entityValue.values) {\n                        entityLists[entity] = entityValue.values\n                    } \n                    // values from tags\n                    if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        lists.map(function(listItem,listItemIndex) {\n                            skill.entities[entity].lists.map(function(entityList) {\n                               if (listItem.tags && listItem.tags.indexOf(entityList) !== -1) {\n                                   entityLists[entity].push(listItem.value)\n                               }\n                               return null\n                            })\n                            return null\n                        })\n                    }\n                    return null\n                })\n            }\n             console.log(['LISTS2',entityLists])\n             // lookup lists\n             var fileLookups=[]\n             var lookups = []\n             Object.keys(entityLists).map(function(entity) {\n                 var values = entityLists[entity]\n                 fileLookups.push({name:entity+\".txt\",content:values.join(\"\\n\")})\n                 lookups.push('## lookup:'+entity)\n                 lookups.push(\"data/lookups/\"+entity+\".txt\")\n                 return null\n             })\n             \n            \n            // collate synonyms\n            //var synonyms = {}\n            var synonymsIndex = {}\n            if (lists) lists.map(function(item) {\n                 if (item.value && item.value.trim().length > 0) {\n                    if (item.synonym) {\n                        if (!Array.isArray(synonymsIndex[item.synonym])) synonymsIndex[item.synonym] = [] \n                        //synonyms[item.value] = item.synonym\n                        synonymsIndex[item.synonym].push(item.value)\n                    }\n                }\n                return null\n            })\n            console.log(['synonyms',synonymsIndex])\n            //var synonymsOut = []\n            //Object.keys(synonymsIndex).map(function(synonym) {\n                //synonymsOut.push('## synonym:'+synonym)\n                //uniquifyArray(synonymsIndex[synonym]).sort().map(function(item) {\n                    //// TODO CONVERT TO RASA MD EXAMPLE WITH ENTITIES\n                    //synonymsOut.push('- '+item)\n                    //return null\n                //}) \n                //synonymsOut.push(\"\\n\")\n                //return null\n            //})\n            //console.log(['synonyms OUT',synonymsOut])\n            \n            // COMMON EXAMPLES  \n            var nluOut={}\n            if (skill.intents) {\n                console.log(['have intents',skill.intents])\n                Object.keys(skill.intents).map(function(intentKey) {\n                    const intentItem = skill.intents[intentKey]\n                    console.log('have intent ',intentKey,intentItem)\n                    //nluOut.push('## intent:'+intentKey)\n                    //var examples = []\n                    intentItem.map(function(example) {\n                        // TODO CONVERT TO RASA MD EXAMPLE WITH ENTITIES\n                        if (example && example.example && example.example.trim().length > 0) {\n                            console.log(['INTY',example])\n                            var key = replaceEntitiesWithValues(example.example, example.entities)\n                            nluOut[key] = {\n                                \"text\":key,\n                                \"intent\":intentKey,\n                                \"entities\":example.entities ? example.entities.map(function(entity) {\n                                    return {\"end\":entity.end,\"entity\":entity.type,\"start\":entity.start,\"value\":entity.value}\n                                }) : []\n                            }\n                        }\n                        //'- '+replaceEntitiesWithValues(example.example, example.entities))\n                        return null\n                    }) \n                    //nluOut=[...nluOut, ...uniquifyArray(examples)]\n                    //nluOut.push(\"\\n\")\n                    return null\n                })\n            }\n            var nluContent=JSON.stringify({\n                \"rasa_nlu_data\":{\n                    \"regex_features\":[],\n                    \"entity_synonyms\":Object.keys(synonymsIndex).map(function(synonym) {\n                       //var synValues =synonymsIndex[synonym]  \n                       return {synonyms:synonymsIndex[synonym]  , value:synonym}\n                    }),\n                    \"common_examples\":Object.values(nluOut)\n                }\n            })\n            \n           \n            //var nluContent = nluOut.join(\"\\n\")+\"\\n\"+synonymsOut.join(\"\\n\")+lookups.join(\"\\n\")\n            \n            \n            console.log(nluContent)\n            // CONSTANTS\n            var configContent = skill.rasaConfig ? skill.rasaConfig : RASATemplates.config\n            //var domainContent = ''\n            var credentialsContent = skill.rasaCredentials ? skill.rasaCredentials : RASATemplates.credentials\n            var endpointsContent = skill.rasaEndpoint ? skill.rasaEndpoint : RASATemplates.endpoint\n            \n            // RASA ACTIONS\n            var actionsContent = RASATemplates.actions\n            var domainActions = []\n            \n            var actionFiles = []\n            if (Array.isArray(skill.rasaActions)) {\n                skill.rasaActions.map(function(action) {\n                    if (action && action.trim().length > 0) {\n                        var string = snakeToCamelCase(toSnakeCase(camelToSnakeCase(action)))\n                        var snake = camelToSnakeCase(string)+'_action'\n                        domainActions.push(snake)\n                        var name = string && string.trim().length > 0 ? string[0].toUpperCase() + string.substring(1) : ''\n                        actionFiles.push({name:name+'Action.py', content:RASATemplates.single_action(name+'Action',snake)})\n                        actionsContent+=\"\\n import \"+name+'Action.py'\n                    }\n                    return null\n                })\n            }\n            var domainEntities = skill.entities ? Object.keys(skill.entities) : []\n            var domainIntents = skill.intents ? Object.keys(skill.intents) : []\n            var domainSlots = skill.slots ?  Object.keys(skill.slots) : (skill.entities ? Object.keys(skill.entities) : [])\n            var domainSlotsMeta = {}\n            domainSlots.map(function(slot) {\n               domainSlotsMeta[slot] = {\n                   type: skill.slots && skill.slots[slot] &&  skill.slots[slot].slotType ? skill.slots[slot].slotType : 'unfeaturized'\n                }\n               return null\n            })\n            console.log(['DOMAIN',domainEntities, domainIntents, domainSlots, domainSlotsMeta])\n            \n            var domainContentParts=[]\n            if (domainIntents.length > 0) {\n                domainContentParts.push(\"intents:\")\n                domainIntents.map(function(intent) {\n                    domainContentParts.push(\"- \"+intent)\n                    // TODO\n                    //+\":\" to intent line\n                    // domainContentParts.push(\"  use_entities:\\n\")\n                    // domainContentParts.push(\"  - \"+entityForIntent)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            \n            if (domainEntities.length > 0) {\n                domainContentParts.push(\"entities:\")\n                domainEntities.map(function(entity) {\n                    domainContentParts.push(\"- \"+entity)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            if (domainSlots.length > 0) {\n                domainContentParts.push(\"slots:\")\n                domainSlots.map(function(slot,i) {\n                    domainContentParts.push(\"  \"+slot+\":\")\n                    domainContentParts.push(\"    type: \"+domainSlotsMeta[slot].type)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            // append session config\n            if (skill.rasaSession) skill.rasaSession.trim().split(\"\\n\").map(function(line) {\n                domainContentParts.push(line)\n                return null\n            })\n            \n            // UTTERANCES\n            var utterances = {}\n            if (skill.utterancesLists || skill.utterances) { \n                utterancesStorage.getItem('alldata').then(function(allUtterances) {\n                    if (Array.isArray(allUtterances)) {\n                        allUtterances.map(function(thisUtterance) {\n                            if (skill.utterances) { \n                                skill.utterances.map(function(listKey) {\n                                    if (thisUtterance.value === listKey) utterances[thisUtterance.value] = thisUtterance  \n                                    return null\n                                })\n                            }\n                            if (skill.utterancesLists) { \n                                skill.utterancesLists.map(function(listKey) {\n                                    if (thisUtterance.tags && thisUtterance.tags.indexOf(listKey) !== -1) utterances[thisUtterance.value] = thisUtterance  \n                                    return null\n                                })\n                                \n                            }\n                            return null\n                        })\n                        \n                         //fileLookups.push({name:toSnakeCase(utterance.value)+'.txt',content:''})\n                             \n                        \n                         // generate domainContent\n                         if (Object.keys(utterances).length > 0) {\n                             domainContentParts.push('responses:')\n                             Object.keys(utterances).map(function(utteranceKey) {\n                                    var utterance = utterances[utteranceKey]\n                                    domainContentParts.push('utter_'+toSnakeCase(utterance.value))\n                                    domainContentParts.push('- text: '+utterance.value)\n                                    if (utterance.synonyms && utterance.synonyms.length > 0) {\n                                        utterance.synonyms.map(function(synonym) {\n                                            domainContentParts.push('- text: '+synonym)\n                                            return null\n                                        })\n                                    } \n                                    return null\n                             })\n                         }\n                         resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n                    } else {\n                        resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n                    }\n                })\n               \n                \n            } else {\n                resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n            }\n        })\n        \n    })\n}\n\n\nfunction exportRASAJSONZip(skill) {\n    return new Promise(function(resolve,reject) {\n        exportRASAJSON(skill).then(function(data) {\n            createZip(data).then(function(res) {\n                resolve(res)\n            })\n        })\n    })\n}\n\nexport {exportRASAJSON, exportRASAJSONZip}\n","import {exportJOVOZip} from './exportJOVO'\nimport {exportJSONZip} from './exportJSON'\nimport {exportMycroftZip} from './exportMycroft'\n//import {exportRASAZip} from './exportRASA'\nimport {exportRASAMDZip} from './exportRASAMD'\nimport {exportRASAJSONZip} from './exportRASAJSON'\n\nvar exportFormats = [\n        {name:'JSON',exportFunction:exportJSONZip},\n        {name:'JOVO',exportFunction:exportJOVOZip},\n        {name:'Mycroft',exportFunction:exportMycroftZip},\n        //{name:'RASA',exportFunction:exportRASAZip},\n        {name:'RASA Markdown',exportFunction:exportRASAMDZip},\n        {name:'RASA JSON',exportFunction:exportRASAJSONZip}\n    ]\n\nexport default exportFormats\n\n","//,   Dropdown, ButtonGroup\nimport {Button } from 'react-bootstrap'\nimport React, {useEffect} from 'react';\nimport {Link} from 'react-router-dom'\nimport localforage from 'localforage'\nimport {exportJSON} from './export/exportJSON'\n \nexport default  function PublishPage(props) {\n \n\n\n    return <div>\n             <Link to={\"/skills/skill/\"+props.currentSkill.title} ><Button variant=\"success\" style={{float:'right'}} >Back to Skill</Button></Link>\n             <h1>Publish</h1>\n                <div>Ready to share your skill - <b>{props.currentSkill.title}</b>,  so other people can download and remix your intents, entities and utterances into new skills.</div>\n                <br/>\n                <div ><b>By publishing your extension, you are agreeing to the following</b>\n                <ul>\n                    <li>Your skill will be available for download under an MIT Open Source License, allowing people to download the data and do whatever they want with it.</li>\n                    <li>Your skill will be committed to the <a href=\"https://github.com/syntithenai/opennludata\" target=\"_new\">Github repository</a> </li>\n                    <li>Your skill can be unpublished/deleted from the searchable index but will remain in the history of the git repository.</li>\n                </ul>\n                </div>\n                \n                <div>Submitted skills can be found using the search tools on this website. </div>\n                <br/>\n               \n                <div style={{width: '100%',textAlign:'center'}}>\n                   {!props.currentSkill._id && <Button variant=\"success\" style={{display:'inline'}} onClick={function(e) {\n                       exportJSON(props.currentSkill).then(function(skillToSave) {\n                           props.saveItem('Skill',skillToSave)\n                           //{_id:props.currentSkill._id, id:props.currentSkill.id, title:props.currentSkill.title, json: JSON.stringify(props.currentSkill)})\n                           .then(function(res) {\n                               console.log(['SSKIL created',res]) \n                               if (res && res.data && res.data._id) {\n                                   props.setCurrentSkill(res.data)\n                                   props.setMongoId(res.data._id)\n                                   props.setPageMessage('Published',3000)\n                                   props.updateFunctions.loadSkills().then(function() {\n                                        props.history.push(\"/skills/skill/\"+props.currentSkill.title)\n                                   })\n                                   //console.log('updtecurrent skill ',currentSkill)\n                               } \n                            })\n                        })\n                    }} >Publish {props.currentSkill.title}</Button>}\n                   \n                   \n                   {props.currentSkill._id && <Button variant=\"success\" style={{display:'inline'}} onClick={function(e) {\n                       exportJSON(props.currentSkill).then(function(skillToSave) {\n                           props.saveItem('Skill',skillToSave)\n                           //{_id:props.currentSkill._id, id:props.currentSkill.id, title:props.currentSkill.title, json: JSON.stringify(props.currentSkill)})\n                           .then(function(res) {\n                               console.log(['SSKIL updated',res]) \n                               if (res && res.data && res.data._id) {\n                                   props.setCurrentSkill(res.data)\n                                   props.setMongoId(res.data._id)\n                                   props.setPageMessage('Published',3000)\n                                   props.updateFunctions.loadSkills().then(function() {\n                                        props.history.push(\"/skills/skill/\"+props.currentSkill.title)\n                                   })\n                               } \n                            })  \n                        })  \n                    }} >Publish Again</Button>}\n                    \n                    \n                    {props.currentSkill._id && <Button variant=\"danger\" style={{display:'inline'}} onClick={function(e) {\n                       props.setMongoId('') \n                       props.deleteItem('Skill',props.currentSkill._id).then(function(res) {\n                           props.setMongoId(null)\n                           console.log(['SSKIL deleted',res]) \n                               props.setPageMessage('Unpublished',3000)\n                               props.updateFunctions.loadSkills().then(function() {\n                                    props.history.push(\"/skills/skill/\"+props.currentSkill.title)\n                                })\n                       }) \n                       \n                    }} >Unpublish</Button>}\n                </div>\n       </div>\n}\n","import React, {useState} from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst DropDownComponent = function(props) {\n    \n    var [filterValue, setFilterValue] = useState(props.value ? props.value : '')\n    \n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{props.value ? props.title + \" - \" + props.value : props.title} </Button>\n          <Dropdown.Menu>\n               <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; }} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {setFilterValue(e.target.value)}}\n                value={filterValue} />\n                </InputGroup>\n                \n              </form>\n              {Array.isArray(props.options) && props.options.map(function(optionKey,i) {\n                  //console.log([optionKey, filterValue])\n                   //if (filterValue.trim().length == 0 || optionKey.toLowerCase().indexOf(filterValue.toLowerCase()) !== -1) {\n                       return <Dropdown.Item style={{minHeight:'1.4em'}} key={i} value={optionKey} onClick={function(e) {setFilterValue(optionKey); props.selectItem(optionKey)}}  >\n                            {optionKey ? optionKey : <b>None</b>}\n                        </Dropdown.Item>\n                    //} else return null;\n              })}\n          </Dropdown.Menu>\n      </Dropdown>\n\n}\nexport default DropDownComponent\n","//{ tag, removeButtonText, onDelete }\nimport React from 'react';\nimport {ListGroup, Button} from 'react-bootstrap'\n//import { Link  } from 'react-router-dom'\nimport DropDownComponent from './DropDownComponent'\n\nexport default function TagComponent(props) {\n     let that = this\n     console.log(props.tag)\n    // hack to pass functions through\n    const {lookups, setRegexpEntity, setRegexpIntent}  = props\n  return (\n    <ListGroup.Item type='button'  style={{width:'100%'}} >\n       <Button  variant=\"danger\" size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}}  onClick={function(e) {if (window.confirm('Really delete')) {props.onDelete(e)}}} >X</Button>\n      {props.tag.name}  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; \n        <div style={{float:'right'}}> \n          &nbsp;&nbsp;<DropDownComponent title={'Intent'} value={props.tag && props.tag.intent ? props.tag.intent :''} options={lookups && lookups.intentLookups ? lookups.intentLookups : []} selectItem={function(e) {setRegexpIntent(props.tag.id,e)}} />\n          &nbsp;&nbsp;<DropDownComponent title={'Entity'} value={props.tag && props.tag.entity ? props.tag.entity :''} options={lookups && lookups.entityLookups ? lookups.entityLookups : []} selectItem={function(e) {setRegexpEntity(props.tag.id,e)}} />&nbsp;&nbsp;\n        </div>\n    </ListGroup.Item>\n  )\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport {Button, Badge , ListGroup , Tabs, Tab} from 'react-bootstrap'\n//import useNluEditor from './useNluEditor'\n//import exportFormats from './export/index'\n////import {exportJSON} from './export/exportJSON'\n//import useDB from './useDB'\nimport {RASA, GoogleAssistant, Alexa} from '../utils'\nimport ReactTags from 'react-tag-autocomplete'\nimport SuggestionComponent from './SuggestionComponent'\nimport TagComponent from './TagComponent'\nimport DropDownComponent from './DropDownComponent'\nimport RASATemplates from '../export/RASATemplates'\n//import ExportPage from './ExportPage'\n//import PublishPage from './PublishPage'\n//import { saveAs } from 'file-saver';\n//import useRestEndpoint from './useRestEndpoint'\n       \nexport default function NluSkillEditorComponent(props) {\n    //console.log(['skill ',props])\n    if (props.skillFilterValue && props.skillFilterValue.length > 0) {\n        if (props.filteredItems && props.filteredItems.length > 0) {\n           \n            const utteranceTags = props.currentSkill && props.currentSkill.utterances ? props.currentSkill.utterances.map(function(listItem,listItemKey) {return {id:listItemKey, name:listItem} }) : []\n            const utteranceListTags = props.currentSkill && props.currentSkill.utterancesLists ? props.currentSkill.utterancesLists.map(function(listItem,listItemKey) {return {id:listItemKey, name:listItem} }) : []\n            const slots = props.currentSkill && props.currentSkill.rasa && props.currentSkill.rasa.slots ? props.currentSkill.rasa.slots : props.entitiesForSkill;\n            const skillTags = props.currentSkill && props.currentSkill.tags ? props.currentSkill.tags.map(function(tag,i) {return {id: i, name: tag}}):[]\n            return <div>\n                 <div><h3>{props.skillFilterValue} </h3></div>\n                    <div style={{marginTop:'0.7em', marginBottom:'0.7em'}} >\n                        <b style={{marginRight:'1em', marginLeft:'0.5em'}} >Tags</b>\n                         <ReactTags\n                            placeholderText=\"Select Tags  \"\n                            minQueryLength={0}\n                            maxSuggestionsLength={50}\n                            autoresize={true}\n                            allowNew={true}\n                            tags={skillTags}\n                            suggestions={[]}                           \n                            onDelete={function(index) {props.removeSkillTag(index)}}\n                            onAddition={function(tag) {props.addSkillTag(tag)}} />\n                    </div>\n                    <div style={{marginTop:'0.7em', marginBottom:'0.7em', borderTop: '2px solid black'}} >\n                        <b style={{marginRight:'1em', marginLeft:'0.5em'}} >Intents</b>\n                        <span>{Object.keys(props.collatedItems).sort().map(function(collatedIntent, i) {\n                                var useCurrentIntent = props.currentIntent ? props.currentIntent : Object.keys(props.collatedItems)[0]\n                                var completionVariant = 'danger'\n                                if (props.collatedItems[collatedIntent].length > 300) {\n                                    completionVariant = 'success'\n                                } else if (props.collatedItems[collatedIntent].length > 100) {\n                                    completionVariant = 'primary'\n                                } else if (props.collatedItems[collatedIntent].length > 10) {\n                                    completionVariant = 'warning'\n                                } \n                                \n                                \n                                if (props.collatedItems[collatedIntent].length  === props.collatedCounts[collatedIntent]) {\n                                        return <Link key={collatedIntent} to={\"/examples/skill/\"+props.skillFilterValue+\"/intent/\"+collatedIntent} ><Button key={collatedIntent} variant={collatedIntent === useCurrentIntent ? \"primary\" : \"outline-primary\"} onClick={function() {props.setCurrentIntent(collatedIntent)}}>\n                                            <Badge variant={completionVariant} > {props.collatedItems[collatedIntent].length} </Badge>\n                                            &nbsp;{collatedIntent}\n                                        </Button></Link>\n                                } else {\n                                    return <Link key={collatedIntent} to={\"/examples/skill/\"+props.skillFilterValue+\"/intent/\"+collatedIntent} ><Button variant={collatedIntent === useCurrentIntent ? \"primary\" : \"outline-primary\"} onClick={function() {props.setCurrentIntent(collatedIntent)}}>\n                                            <Badge variant=\"danger\" > {props.collatedItems[collatedIntent].length}/{props.collatedCounts[collatedIntent]} </Badge>\n                                            &nbsp;{collatedIntent}\n                                        </Button></Link>\n                                }\n                                \n                        })}</span>\n                    </div>\n                    <div style={{marginTop:'0.7em', borderTop: '2px solid black'}} >\n                  <b style={{marginRight:'1em', marginLeft:'0.5em'}} >Entities</b><ListGroup>{Object.keys(props.entitiesForSkill).map(function(collatedEntity, i) {\n                            \n                           \n                            const listTags = props.currentSkill && props.currentSkill.entities && props.currentSkill.entities[collatedEntity] && props.currentSkill.entities[collatedEntity].lists ? props.currentSkill.entities[collatedEntity].lists.map(function(listItem,listItemKey) {return {id:listItemKey, name:listItem} }) : []\n                            //console.log(listTags)\n                                return <ListGroup.Item key={collatedEntity} >\n                                        \n                                         <span style={{marginLeft:'1em', float:'left', fontWeight:'bold'}}>&nbsp;{collatedEntity}</span>\n                                      \n                                        <span style={{marginLeft:'1em', float:'left'}}>&nbsp;{props.entitiesForSkill[collatedEntity] && props.entitiesForSkill[collatedEntity].values && props.entitiesForSkill[collatedEntity].values.slice(0,5).join(\", \")}{props.entitiesForSkill[collatedEntity] && props.entitiesForSkill[collatedEntity].values && props.entitiesForSkill[collatedEntity].values.length > 5 ? <Badge>... {props.entitiesForSkill[collatedEntity] && props.entitiesForSkill[collatedEntity].values && props.entitiesForSkill[collatedEntity].values.length - 5} more </Badge> : ''}</span>\n                                        <span style={{marginLeft:'1em', float:'left'}}>\n                                       <label><i></i> <ReactTags\n                                        placeholderText=\"Also use values from \"\n                                        minQueryLength={0}\n                                        maxSuggestionsLength={50}\n                                        autoresize={true}\n                                        allowNew={false}\n                                        tags={listTags}\n                                        suggestionComponent={SuggestionComponent}\n                                        suggestions={props.lookups.listsLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                                        onDelete={function(index) {props.removeListFromSkillEntity(collatedEntity, index)}}\n                                        onAddition={function(tag) {props.addListToSkillEntity(collatedEntity, tag)}} /> </label>\n                                        </span>\n                                        <div style={{float:'right'}} >\n                                            <DropDownComponent options={[\"\",...Alexa.entityTypes]} title=\"Alexa\" value={props.currentSkill.entities && props.currentSkill.entities[collatedEntity] && props.currentSkill.entities[collatedEntity].alexaType ? props.currentSkill.entities[collatedEntity].alexaType : ''} selectItem={function(entityType) {\n                                                props.setAlexaEntityType(collatedEntity,entityType)\n                                            }} />\n                                            &nbsp;&nbsp;<DropDownComponent options={[\"\",...GoogleAssistant.entityTypes]} title=\"Google\" value={props.currentSkill.entities && props.currentSkill.entities[collatedEntity] &&  props.currentSkill.entities[collatedEntity].googleType ? props.currentSkill.entities[collatedEntity].googleType : ''}  selectItem={function(entityType) {\n                                                props.setGoogleAssistantEntityType(collatedEntity,entityType)\n                                            }} />\n                                        </div>\n                                    </ListGroup.Item>\n                            //}\n                                                \n\n                    })}</ListGroup>\n                    </div>\n                    <div style={{marginTop:'0.7em', marginLeft:'0.4em', borderTop: '2px solid black'}} >\n                        <div ><b>Regular Expressions</b></div>\n                      <div style={{clear:'both'}}>\n                             <div style={{marginLeft:'1em'}}>\n                           <ListGroup style={{minWidth:'500px'}}>\n                            <ReactTags\n                            placeholderText=\"Select Regular Expression  \"\n                            minQueryLength={0}\n                            maxSuggestionsLength={50}\n                            autoresize={true}\n                            allowNew={false}\n                            tags={props.currentSkill && props.currentSkill.regexps ? props.currentSkill.regexps.map(function(tag,i) {return {id: i, name: tag.name, intent: tag.intent ? tag.intent : '', entity: tag.entity ? tag.entity : '', synonym: tag.synonym}}):[]}\n                            tagComponent={function(iprops) {return <TagComponent {...iprops}   setRegexpEntity={props.setRegexpEntity} setRegexpIntent={props.setRegexpIntent}  lookups={props.lookups}  />}}\n                            suggestionComponent={SuggestionComponent}\n                            suggestions={props.lookups.regexpsLookups ? props.lookups.regexpsCompleteLookups.map(function(tag,i) {return {id: i, name: tag.value, intent: tag.intent ? tag.intent : '', entity: tag.entity ? tag.entity : '', synonym: tag.synonym}}):[]}\n                           \n                            onDelete={function(index) {props.removeRegexp(index)}}\n                            onAddition={function(tag) {props.addRegexp(tag)}} /></ListGroup>\n                            </div>\n                            \n                        </div>\n                </div>\n  \n                   \n                    <div style={{marginTop:'0.7em', marginLeft:'0.4em', borderTop: '2px solid black'}} >\n                        <div ><b>Utterances</b></div>\n                      <div style={{clear:'both'}}>\n                             <div style={{marginLeft:'1em'}}>\n                            <label>Utterances\n                            <ReactTags\n                            placeholderText=\"Use utterance \"\n                            minQueryLength={0}\n                            maxSuggestionsLength={50}\n                            autoresize={true}\n                            allowNew={true}\n                            tags={utteranceTags}\n                            suggestionComponent={SuggestionComponent}\n                            suggestions={props.lookups.utterancesLookups ? props.lookups.utterancesLookups.map(function(tag,i) {return {id: i, name: tag}}):[]}\n                            onDelete={function(index) {props.removeUtterance(index)}}\n                            onAddition={function(tag) {props.addUtterance(tag)}} /> </label>\n                            </div>\n                            \n                             <div style={{marginLeft:'1em'}}>\n                            <label>Utterance Lists\n                            <ReactTags\n                            placeholderText=\"Use utterances from \"\n                            minQueryLength={0}\n                            maxSuggestionsLength={50}\n                            autoresize={true}\n                            allowNew={false}\n                            tags={utteranceListTags}\n                            suggestionComponent={SuggestionComponent}\n                            suggestions={props.lookups.utteranceTagsLookups ? props.lookups.utteranceTagsLookups.map(function(tag,i) {return {id: i, name: tag}}) : []}\n                            onDelete={function(index) {props.removeUtteranceList(index)}}\n                            onAddition={function(tag) {props.addUtteranceList(tag)}} /> </label>\n                            </div>\n                            \n                            \n                        </div>\n                </div>\n     \n                  <div style={{marginTop:'0.7em', borderTop: '2px solid black'}} >\n                    <div><b>Platform</b></div>\n                    <Tabs defaultActiveKey=\"rasa\" id=\"platform-tabs\">\n                      <Tab eventKey=\"rasa\" title=\"RASA\">\n                            <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                                <Tabs defaultActiveKey=\"slots\" id=\"platform-rasa\">\n                                    <Tab eventKey=\"slots\" title=\"Slots\">\n                                         <div style={{marginLeft:'1.4em', marginTop:'0.7em', borderTop: '2px solid black'}} >\n                                             <form onSubmit={function(e) {e.preventDefault(); props.newSlot(props.newSlotValue,slots)}} ><input value={props.newSlotValue} onChange={function(e) {props.setNewSlotValue(e.target.value)}} /><Button size=\"sm\" onClick={function() {props.newSlot(props.newSlotValue,slots)}}>New Slot</Button>\n                                             </form>\n                                              <ListGroup>{Object.keys(slots).map(function(collatedEntity, i) { \n                                                    return <ListGroup.Item key={collatedEntity} >\n                                                                    <span style={{marginLeft:'1em', float:'left', fontWeight:'bold'}}>&nbsp;{collatedEntity}</span>\n                                                                    <div style={{float:'right'}} >\n                                                                         {props.entitiesForSkill[collatedEntity] &&  <DropDownComponent \n                                                                             options={RASA.autofillOptions} \n                                                                             title=\"Autofill\" \n                                                                             value={props.currentSkill.rasa && props.currentSkill.rasa.slots && props.currentSkill.entities[collatedEntity] && props.currentSkill.rasa.slots[collatedEntity] && props.currentSkill.rasa.slots[collatedEntity].slotAutofill && props.currentSkill.rasa.slots[collatedEntity].slotAutofill.trim().length > 0 ? props.currentSkill.rasa.slots[collatedEntity].slotAutofill : 'Yes'} selectItem={function(entityType) {\n                                                                            props.setRASASlotAutofill(collatedEntity,entityType,slots)\n                                                                        }} />}\n                                                                        &nbsp;&nbsp;\n                                                                        <DropDownComponent options={Object.keys(RASA.slotTypes)} title=\"Slot\" value={props.currentSkill.rasa && props.currentSkill.rasa.slots && props.currentSkill.rasa.slots[collatedEntity] && props.currentSkill.rasa.slots[collatedEntity].slotType ? props.currentSkill.rasa.slots[collatedEntity].slotType : 'unfeaturized'} selectItem={function(entityType) {\n                                                                            props.setRASASlotType(collatedEntity,entityType,slots)\n                                                                        }} />\n                                                                        <Button variant=\"danger\"  size=\"sm\" style={{marginLeft:'0.5em', float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {props.deleteSlot(collatedEntity,slots)}}>X</Button>\n                                                                    </div>\n                                                            </ListGroup.Item>\n                                                        //}\n                                                        \n                                                })}</ListGroup>\n                                        </div>\n                               \n                          \n                                 </Tab>\n                                  <Tab eventKey=\"actions\" title=\"Actions\">\n                                    <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                      <label>\n                                      \n                                        <div style={{fontStyle:'italic'}}>One per line, _action will be appended to each line</div>\n                                        <textarea style={{width:'40em', height:'10em'}}  value={props.currentSkill.rasa && Array.isArray(props.currentSkill.rasa.actions) ? props.currentSkill.rasa.actions.join(\"\\n\") : ''} onChange={function(e) {props.setRASAActions(e.target.value ? e.target.value.split(\"\\n\") : [])}} placeholder={`fred\nfindSname\nis_whatsi\nblah name`} ></textarea>\n                                      </label>\n                                </div>\n                                  </Tab>\n                                   <Tab eventKey=\"config\" title=\"Config\">\n                                    <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                      <label>\n                                    \n                                        <textarea style={{width:'60em', height:'30em'}}  value={props.currentSkill.rasa && props.currentSkill.rasa.config? props.currentSkill.rasa.config : ''} onChange={function(e) {props.setRASAConfig(e.target.value)}} placeholder={RASATemplates.config} ></textarea>\n                                      </label>\n                                </div>\n                                  </Tab>\n                                 <Tab eventKey=\"stories\" title=\"Stories\">\n                                    <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                      <label>\n                                    \n                                        <textarea style={{width:'60em', height:'30em'}}  value={props.currentSkill.rasa && props.currentSkill.rasa.stories? props.currentSkill.rasa.stories : ''} onChange={function(e) {props.setRASAStories(e.target.value)}} placeholder={RASATemplates.stories} ></textarea>\n                                      </label>\n                                </div>\n                                  </Tab> \n                                 <Tab eventKey=\"credentials\" title=\"Credentials\">\n                                    <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                      <label>\n                                    \n                                        <textarea style={{width:'60em', height:'30em'}}  value={props.currentSkill.rasa && props.currentSkill.rasa.credentials ? props.currentSkill.rasa.credentials : RASATemplates.credentials} onChange={function(e) {props.setRASACredentials(e.target.value)}}  ></textarea>\n                                      </label>\n                                </div>\n                                  </Tab> \n                                                        \n                                <Tab eventKey=\"endpoints\" title=\"Endpoints\">\n                                    <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                      <label>\n                                    \n                                        <textarea style={{width:'60em', height:'30em'}}  value={props.currentSkill.rasa && props.currentSkill.rasa.endpoint? props.currentSkill.rasa.endpoint : RASATemplates.endpoint} onChange={function(e) {props.setRASAEndpoint(e.target.value)}}  ></textarea>\n                                      </label>\n                                </div>\n                                  </Tab> \n                              \n                               <Tab eventKey=\"session\" title=\"Session Config\">\n                                    <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                      <label>\n                                    \n                                        <textarea style={{width:'60em', height:'30em'}}  value={props.currentSkill.rasa && props.currentSkill.rasa.session ? props.currentSkill.rasa.session : RASATemplates.session} onChange={function(e) {props.setRASASession(e.target.value)}}  ></textarea>\n                                      </label>\n                                </div>\n                                  </Tab> \n                              \n                            </Tabs>\n                                  \n                          </div>  \n                      </Tab>\n                      \n                      <Tab eventKey=\"mycroft\" title=\"Mycroft\">\n                        <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                           <b>not yet</b>\n                        </div>\n                      </Tab>\n                       <Tab eventKey=\"jovo\" title=\"JOVO\">\n                        <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                            <label style={{fontWeight:'bold', marginLeft:'0.5em'}} > Invocation <input type='text' value={props.invocation} onChange={function(e) {props.setInvocation(e.target.value)}} /></label>\n                        </div>\n                      </Tab>\n                      <Tab eventKey=\"alexa\" title=\"Alexa\">\n                        <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                            <label style={{fontWeight:'bold', marginLeft:'0.5em'}} > Invocation <input type='text' value={props.invocation} onChange={function(e) {props.setInvocation(e.target.value)}} /></label>\n                        </div>\n                      </Tab>\n                      <Tab eventKey=\"google_assistant\" title=\"Google Assistant\">\n                        <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                            <label style={{fontWeight:'bold', marginLeft:'0.5em'}} > Invocation <input type='text' value={props.invocation} onChange={function(e) {props.setInvocation(e.target.value)}} /></label>\n                        </div>\n                      </Tab>\n                    </Tabs>\n                 </div>\n                 \n            </div>\n        } else {\n            return <b></b>\n        }\n        \n    }\n    return []\n}\n","export default function useRestEndpoint(axiosClient,restUrl=process.env.REACT_APP_restBaseUrl) {\n   \n    // to  endpoint root\n    function doPost(modelType,data) {\n        console.log(['POST', modelType, data, restUrl])  \n        return new Promise(function(resolve,reject) {\n            if (modelType && data) {\n                axiosClient.post(restUrl+modelType,\n                  data,\n                  {\n                    headers: {\n                        'Content-Type': 'application/json'\n                      },\n                  }\n                ).then(function(res) {\n                  console.log(res)  \n                  resolve(res)\n                }).catch(function(res) {\n                  console.log(res)  \n                  reject(res)\n                })\n            } else {\n                console.log('Missing post params')\n                reject('Missing post params')\n            }\n        })\n    }\n    \n    // to  endpoint with id\n    function doPut(modelType,data) {\n        console.log('PUT')  \n        return new Promise(function(resolve,reject) {\n            if (modelType && data && data._id) {\n                axiosClient.put(restUrl+modelType+\"/\"+data._id,\n                  data,\n                  {\n                    headers: {\n                        'Content-Type': 'application/json'\n                      },\n                  }\n                ).then(function(res) {\n                  console.log(res)  \n                  resolve(res)\n                }).catch(function(res) {\n                  console.log(res)  \n                  reject(res)\n                })\n            } else {\n                console.log('Missing post params')\n                reject('Missing post params')\n            }\n        })\n    }\n    \n    function doGet(modelType,id) {\n        return new Promise(function(resolve,reject) {\n            if (id) {\n                axiosClient.get(restUrl+modelType+\"/\"+id,\n                  {\n                   \n                  },\n                  {\n                    headers: {\n                        'Content-Type': 'application/json'\n                      },\n                  }\n                ).then(function(res) {\n                  console.log(['GET',res])  \n                  resolve(res)\n                }).catch(function(res) {\n                  console.log(res)  \n                  reject(res)\n                })\n            } else {\n                reject(\"GET request missing id\")\n            }\n        })\n    }\n    \n    function doGetMany(modelType,filter, limit=20, skip=0, sort='', populate=null) {\n        return new Promise(function(resolve,reject) {\n            var queryParts=[\n                'query='+encodeURIComponent(JSON.stringify(filter)),\n                'limit='+limit,\n                'skip='+skip,\n                \n            ]\n            if (populate) queryParts.push('populate='+encodeURIComponent(JSON.stringify(populate)))\n            if (sort) queryParts.push('sort='+encodeURIComponent(JSON.stringify(sort)))\n            axiosClient.get(restUrl+modelType+'?'+queryParts.join(\"&\"),\n              {\n               \n              },\n              {\n                headers: {\n                    'Content-Type': 'application/json'\n                  },\n              }\n            ).then(function(res) {\n              console.log(['GET many',res])  \n              resolve(res)\n            }).catch(function(res) {\n              console.log(res)  \n              reject(res)\n            })\n        })\n    }\n    \n    // to  endpoint with id\n    function doDelete(modelType,id) {\n        return new Promise(function(resolve,reject) {\n            if (id) {\n                return axiosClient.delete(restUrl+modelType+\"/\"+id,\n                  {\n                  },\n                  {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                  }\n                ).then(function(res) {\n                  console.log(['DEL',res])  \n                  resolve(res)\n                }).catch(function(res) {\n                  console.log(res)  \n                  reject(res)\n                })\n            } else {\n                 console.log(['DEL request missing id'])  \n                 reject('DELETE request missing id')\n            }\n        })\n    }\n    // to  endpoint with id\n    function doPatch(modelType, data) {\n        console.log('patch')  \n        return new Promise(function(resolve,reject) {\n            if (modelType && data && data._id) {\n                axiosClient.patch(restUrl+modelType+\"/\"+data._id,\n                  data,\n                  {\n                    headers: {\n                        'Content-Type': 'application/json'\n                      },\n                  }\n                ).then(function(res) {\n                      console.log(['update',res])  \n                      resolve(res)\n                }).catch(function(res) {\n                  console.log(res)  \n                  reject(res)\n                })\n            } else {\n                console.log('Missing post params')\n                reject('Missing post params')\n            }\n        })\n    }\n    \n    // EXPOSED METHODS\n    \n    function saveItem(modelType, data, patch=true) {\n        return new Promise(function(resolve, reject) {\n            if (modelType) {\n                if (data._id && data._id.trim && data._id.trim())  {\n                    if (patch) {\n                        doPatch(modelType,data).then(function(res) {\n                          resolve(res)  \n                        })\n                    } else {\n                        doPut(modelType,data).then(function(res) {\n                          resolve(res)  \n                        })\n                    }\n                } else {\n                    delete data._id \n                    doPost(modelType,data).then(function(res) {\n                      resolve(res)  \n                    })\n                }\n            }\n        })\n    }\n    \n    function deleteItem(modelType, id) {\n        return new Promise(function(resolve, reject) {\n            if (modelType && id) {\n                doDelete(modelType,id).then(function(res) {\n                  resolve(res)  \n                })\n            }\n        })\n    }\n    \n    function getItem(modelType,id) {\n        return new Promise(function(resolve, reject) {\n            if (modelType && id) {\n                doGet(modelType,id).then(function(res) {\n                  resolve(res)  \n                })\n            }\n        })\n    }\n    \n    function searchItems(modelType,query,limit,skip) {\n        return new Promise(function(resolve, reject) {\n            if (modelType) {\n                doGetMany(modelType,query,limit,skip).then(function(res) {\n                  resolve(res)  \n                })\n            }\n        })\n    }\n    \n    \n    return {saveItem, deleteItem, getItem, searchItems}\n    \n}\n","import {useState, useEffect} from 'react';\nimport {useParams, useHistory} from 'react-router-dom'\n\n//import useNluEditor from './useNluEditor'\n//import exportFormats from './export/index'\nimport useDB from './useDB'\nimport {generateObjectId, uniquifyArray} from './utils'\n//import { saveAs } from 'file-saver';\nimport useRestEndpoint from './useRestEndpoint'\nimport localforage from 'localforage'\n\n\nexport default function useSkillsEditor(props) {\n    //console.log(props)\n\n    //const {loadAll, skillFilterValue, setSkillFilterValue, filteredItems} = useNluEditor('nlutool','examples','alldata', props.updateFunctions.updateLookups)\n    const [skillKeys, setSkillKeys] = useState([])\n    const [filteredItems, setFilteredItems] = useState([])\n    const [currentIntent, setCurrentIntent] = useState('')\n    const [entitiesForSkill, setEntitiesForSkill] = useState({})\n    const [listsForEntity, setListsForEntity] = useState({})\n    const [currentSkill, setCurrentSkill] = useState(null)\n    //const skillsManager = useDB('nlutool','skills')\n    const listsManager = useDB('nlutool','lists')\n    //const [showExportDialog, setShowExportDialog] = useState(false)\n    const [collatedItems, setCollatedItems] = useState({})\n    const [collatedTags, setCollatedTags] = useState({})\n    const [collatedCounts, setCollatedCounts] = useState({})\n    const [newSlotValue, setNewSlotValue] = useState('')\n    const [skillMatches, setSkillMatches] = useState([])\n    const [skillUpdatedMatches, setSkillUpdatedMatches] = useState([])\n    var skillsStorage = localforage.createInstance({\n       name: \"nlutool\",\n       storeName   : \"skills\",\n     });\n     var examplesStorage = localforage.createInstance({\n       name: \"nlutool\",\n       storeName   : \"examples\",\n     });\n    const token = props.user && props.user.token && props.user.token.access_token ? props.user.token.access_token : ''\n    console.log(['SETOKE',token])\n    const axiosClient = props.getAxiosClient(token)\n    const {saveItem, deleteItem, searchItems} = useRestEndpoint(axiosClient,process.env.REACT_APP_restBaseUrl)\n\n    const [invocation, setInvocation] = useState('')\n    const [mongoId, setMongoId] = useState('')\n    \n    const params = useParams()\n    const history = useHistory()\n    \n    var skillFilterValue = params.skillId ? params.skillId : '';\n    function setSkillFilterValue(value) {\n        //console.log('SETSKILLVAL')\n        //console.log(history)\n        var root = history.location.pathname.split(\"/\")\n        var parts=['/'+root[1]]\n        skillFilterValue = value;\n        if (skillFilterValue.length > 0) {\n            parts.push('/skill/'+skillFilterValue)\n        }\n        //console.log(['ssv',parts,value])\n        history.push(parts.join(''))\n    }\n    \n    // load skill on init\n    useEffect(() => {\n        loadSkill()\n         //props.updateFunctions.updateLists(listsManager.items[0])\n            //props.updateFunctions.updateRegexps(listsManager.items[0])\n            //props.updateFunctions.updateUtterances(listsManager.items[0])\n            //props.updateFunctions.updateLookups(listsManager.items[0])\n    },[])\n        \n    //// load list lookups\n    useEffect(() => {\n        if (listsManager.items.length > 0) { \n            //console.log(['UPD ITEMS',listsManager.items,listsManager.items[0]])\n            props.updateFunctions.updateLists(listsManager.items[0])\n            //props.updateFunctions.updateRegexps(listsManager.items[0])\n            //props.updateFunctions.updateUtterances(listsManager.items[0])\n            props.updateFunctions.updateLookups(listsManager.items[0])\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[listsManager.items])\n \n    // load mongo id into skill when changed\n    useEffect(() => {\n        if (currentSkill) {\n          //console.log(['SET mongoid HAVE CURRENT SKILL',currentSkill,mongoId])\n          var skill = currentSkill\n          skill._id = mongoId\n          setCurrentSkill(skill)\n       }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[mongoId])\n    \n    // load invocation into skill when changed\n    useEffect(() => {\n        if (currentSkill) {\n          //console.log(['SET INVOC HAVE CURRENT SKILL',currentSkill,invocation])\n          var skill = currentSkill\n          skill.invocation = invocation\n          setCurrentSkill(skill)\n      }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[invocation])    \n    \n    // look for published version of skill \n    useEffect(() => {\n        //console.log(['USER UPDATE',currentSkill,props.user,props.user._id])\n        if (currentSkill && props.user && props.user._id) {\n          //console.log(['USER UPDATE FIND ONLINE'])\n          findOnlineSkill(props.user,currentSkill)\n      }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[props.user,listsForEntity]) \n    \n    // save skill\n    useEffect(() => {\n        //\n        var skill = currentSkill\n        if (skill && skill.title && skill.title.length > 0) {\n            // merge in latest entity values derived from intents\n            if (entitiesForSkill) {\n                Object.keys(entitiesForSkill).map(function(entity) {\n                   if (skill.entities && skill.entities[entity]) {\n                       skill.entities[entity].values = entitiesForSkill[entity].values;\n                   }  \n                   return null\n                })\n            }\n            // merge in intents\n            skill.intents = collatedItems\n            console.log('SAVE NOW - change cs or inv',JSON.parse(JSON.stringify(skill)))\n            skillsStorage.setItem(skillFilterValue, currentSkill, function (err) {\n                if (err)  {\n                    console.log(err)\n                    throw new Error(err)\n                }\n            })\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[mongoId,currentSkill,listsForEntity, invocation])\n    \n  \n  \n  //function setInvocation(val) {\n      //console.log('SET INVOCK')\n      ////if (currentSkill) {\n          ////console.log(['SET INVOCK HAVE CURRENT SKILL',currentSkill,val])\n          ////var skill = currentSkill\n          ////skill.invocation = val \n          ////setCurrentSkill(skill)\n      ////}\n  //}\n\n    function loadSkill() {\n        examplesStorage.getItem('alldata').then(function(allItems) {\n            if (allItems && Array.isArray(allItems)) {\n                var filteredItems = []\n                var skillKeys = {}\n                allItems.map(function(item)   {\n                    // collate unique skill keys\n                    if (item.skills) {\n                        item.skills.map(function(skill) {\n                            skillKeys[skill] = true\n                            return null\n                        })\n                    }\n                    // filter \n                    if (skillFilterValue && item.skills && item.skills.indexOf(skillFilterValue) !== -1) {\n                        filteredItems.push(item)\n                    }\n                    return null\n                })\n                setSkillKeys(Object.keys(skillKeys))\n                setFilteredItems(filteredItems)\n                //console.log('loaded skill items for init',filteredItems, Object.keys(skillKeys),allItems)\n                if (skillFilterValue) {\n                    //console.log(['LOAD SKILL',skillFilterValue])\n                    skillsStorage.getItem(skillFilterValue, function (err, skill) {\n                        if (err) throw new Error(err)\n                        var newSkill = skill && skill.id ? skill : {}\n                        newSkill.id = newSkill.id ? newSkill.id : generateObjectId()\n                        newSkill.title = skillFilterValue\n                        newSkill.invocation = newSkill.invocation ? newSkill.invocation : ''\n                        newSkill.entities = indexEntities(newSkill,filteredItems)\n                        if (newSkill.title) findOnlineSkill(props.user,newSkill) \n                        var [intents, tags] = indexIntentsAndTags(skill,filteredItems)\n                        newSkill.intents = intents\n                       // newSkill.tags = tags    \n                        setCurrentSkill(newSkill)\n                        setInvocation(newSkill.invocation)\n                        setMongoId(newSkill._id)\n                        listsManager.loadAll()\n                        props.updateFunctions.updateUtterances()\n                        props.updateFunctions.updateRegexps()\n                        props.updateFunctions.updateLookups()\n                        //console.log(['LOADED LOCAL SKILL ',JSON.parse(JSON.stringify(newSkill))])\n                        forceReload(newSkill)\n                    })\n                }\n            }\n        })\n    }\n    \n    function findOnlineSkill(user,skill) {\n        // if user is logged in, try load the matching online skill\n        if (user && user._id && skill.title) {\n            var query = {user:user._id, title:skill.title}\n            if (props.lookups.skills) {\n                setSkillMatches( Object.values(props.lookups.skills).filter(function(loadedSkill) {\n                    if (loadedSkill && loadedSkill.title ===  skill.title) {\n                        if (user._id === loadedSkill.user) {\n                            setSkillMatches([loadedSkill])\n                        }\n                    }\n                }))\n            }\n        }    \n            //if (skill._id) query._id = skill._id\n            //console.log(['SEARCH ONLINE ',query])\n            //searchItems('Skill',query).then(function (res) {\n                //console.log(['SKILL RESULTS'])\n                //console.log(res.data)\n                //if (res.data && res.data.length > 0) {\n                    //var found = false\n                    //res.data.map(function(skillItem) {\n                        //console.log(['SKILL RESULTS', skill ? skill._id : '',skillItem ? skillItem._id:''])\n                        //if (skill._id && skill._id === skillItem._id) {\n                            //found = true\n                            //console.log(['SKILL RESULTS DATES',skill.updated_date ,skillItem.updated_date, skill.updated_date - skillItem.updated_date])\n                            //if (skill.updated_date < skillItem.updated_date) {\n                                //setSkillUpdatedMatches([res.data[0]])\n                            //}\n                            //// matching skill OK\n                            ////setSkillMatches([res.data[0]])\n                        //} \n                        //return null\n                    //})\n                    //if (!found) {\n                        //// potential match\n                        //setSkillMatches(res.data)\n                    //}\n                //} else {\n                    //// no match existing so create new OK\n                   //setSkillMatches([])\n                //}\n            //}).catch(function(err) {\n                //console.log(err)  \n            //})\n            \n        //} else {\n            //// no match existing so create new OK\n           //setSkillMatches([])\n        //}\n    }\n    \n    function indexEntities(currentSkill, filteredItems) {\n         //console.log(['INDEX ENETITIES',currentSkill,filteredItems])\n         var entities = {}\n            // collate entities from filteredItems\n            if (Array.isArray(filteredItems)) {\n                filteredItems.map(function (item,itemKey) {\n                  if (Array.isArray(item.entities)) {\n                      item.entities.map(function(entity,entityKey) {\n                         if (entity && entity.type && entity.type.length > 0) {\n                             if (typeof entities[entity.type] !== \"object\") entities[entity.type] = {} //\n                             //currentSkill.entities && currentSkill.entities[entity.type] ?  currentSkill.entities[entity.type] : {}\n                             if (!Array.isArray(entities[entity.type].values )) entities[entity.type].values = []\n                             if (currentSkill && currentSkill.entities && currentSkill.entities[entity.type]&& currentSkill.entities[entity.type].alexaType) entities[entity.type].alexaType = currentSkill.entities[entity.type].alexaType\n                             if (currentSkill && currentSkill.entities && currentSkill.entities[entity.type]&& currentSkill.entities[entity.type].googleType) entities[entity.type].googleType = currentSkill.entities[entity.type].googleType\n                             if (currentSkill && currentSkill.entities && currentSkill.entities[entity.type]&& currentSkill.entities[entity.type].lists) entities[entity.type].lists = currentSkill.entities[entity.type].lists\n                             entities[entity.type].values.push(entity.value)\n                         }\n                         return null\n                      })\n                  }\n                  return null\n                })\n            }\n            // sort and uniquify values\n            //var slots = currentSkill && currentSkill.slots ? currentSkill.slots : {}\n            Object.keys(entities).map(function(entityName,entityKey) {\n               const entity = entities[entityName]\n               entity.values = uniquifyArray(entity.values).sort()\n               \n               //if (slots[entityName]) {\n               //} else {\n                   //slots[entityName] = {values:[]}\n               //}\n               return null\n            })\n            //console.log([\"ENT\",entities])\n            setEntitiesForSkill(entities)\n            return entities;\n    }\n    function indexIntentsAndTags(currentSkill, filteredItems) {\n        //console.log(['INDEX INTENTS',currentSkill])\n        if (currentSkill) {\n            // collate intents and tags from items\n             var newCollatedItems = collatedItems\n             var newCollatedCounts = collatedCounts\n             var newCollatedTags = {}\n             if (filteredItems) {\n                 filteredItems.map(function(item) {\n                    if (item.intent) {\n                        if (!newCollatedItems[item.intent]) newCollatedItems[item.intent]=[]\n                        newCollatedCounts[item.intent] =   (newCollatedCounts[item.intent] > 0) ? newCollatedCounts[item.intent] + 1 : 1;\n                        //if (collatedItems[item.intent].length < 300) {\n                            newCollatedItems[item.intent].push({example: item.example, entities: item.entities})\n                        //}\n                    }\n                    if (Array.isArray(item.tags)) {\n                        item.tags.map(function(tag) {\n                            newCollatedTags[tag] = true\n                            return null\n                        })\n                    } \n                   return null;  \n                 })\n                 setCollatedItems(newCollatedItems)\n                 setCollatedCounts(newCollatedCounts)\n                 setCollatedTags(newCollatedTags)\n                return [collatedItems, Object.keys(newCollatedTags)]\n             } \n        }\n        return [[],[]]\n    }\n       \n\n    \n    \n\n\n    function setSkill(skill) {\n        console.log(['SETSKILL',currentSkill,skill])\n        if (skill && skill.id) {\n            setCurrentSkill(skill)\n            //setInvocation(skill.invocation)\n            setMongoId(skill._id)\n           // forceReload()\n        } else {\n            console.log(['NOSETSKILL',currentSkill,skill])\n        }\n    }\n\n    function addListToSkillEntity(entity,list) {\n      //console.log(['ADSKOI',currentSkill,currentSkill.entities,entity,list])\n      if (entity && list && list.name) {\n            var skill = currentSkill;\n            if (!skill.entities) skill.entities={}\n            if (!skill.entities[entity]) skill.entities[entity] = {lists:[]}\n            if (!Array.isArray(skill.entities[entity].lists)) skill.entities[entity].lists = []\n            //var newListsForEntity = listsForEntity\n            //console.log(['ADSKOI1.5',skill])\n            skill.entities[entity].lists.push(list.name)\n            skill.entities[entity].lists = uniquifyArray(skill.entities[entity].lists).sort()\n           //newListsForEntity[entity] = uniquifyArray(newListsForEntity).sort()\n            setCurrentSkill(skill)  \n            // force render\n            forceReload()  \n            //} else {\n                //console.log(['ADSKOI new'])\n               //newListsForEntity[entity] = [list.name]\n            //}\n             //console.log(['ADSKOI2 final',newListsForEntity])\n            //setListsForEntity(newListsForEntity)\n       } else {\n           console.log([' missing data'])\n       }\n    }\n  \n    function removeListFromSkillEntity(entity, listIndex) {\n      var skill = currentSkill\n      //console.log(['REMOVESKILLFROMLIST',entity,listIndex])\n      if (skill && skill.entities && entity && skill.entities[entity] && skill.entities[entity].lists) {\n          var lists = skill.entities[entity].lists\n          //lists = uniquifyArray([lists.slice(0, listIndex),lists.slice(listIndex + 1)]).sort()\n          lists = lists.slice(0, listIndex).concat(lists.slice(listIndex + 1))\n          \n          skill.entities[entity].lists = lists\n          setCurrentSkill(skill)  \n          forceReload()  \n          //console.log(['REMOVESKILLFROMLIST ddd',lists])\n      } \n       //var newEntitiesForSkill = entitiesForSkill\n       //if (newEntitiesForSkill[entity]) {\n           //var lists = newEntitiesForSkill[entity].lists && Array.isArray(newEntitiesForSkill[entity].lists) ? newEntitiesForSkill[entity].lists : [];\n           //newEntitiesForSkill[entity].lists = uniquifyArray([lists.slice(0, listIndex),lists.slice(listIndex + 1)]).sort()\n           //setEntitiesForSkill(newEntitiesForSkill)\n       //}\n    }\n  \n    function setGoogleAssistantEntityType(entity, type) {\n        if (currentSkill && entity) {\n            var skill = currentSkill;\n            if (!skill.entities) skill.entities={}\n            if (!skill.entities[entity]) skill.entities[entity] = {}\n            skill.entities[entity].googleType = type\n            setCurrentSkill(skill)  \n           forceReload()  \n       } \n    }\n    \n    function setAlexaEntityType(entity, type) {\n        if (currentSkill && entity) {\n            var skill = currentSkill;\n            if (!skill.entities) skill.entities={}\n            if (!skill.entities[entity]) skill.entities[entity] = {}\n            skill.entities[entity].alexaType = type\n            setCurrentSkill(skill)  \n            console.log('ALEXA')\n            console.log(skill)\n            forceReload()  \n       } \n    }\n    \n    function setRASASlotType(entity, type, slots) {\n        if (currentSkill && entity && type) {\n            var skill = currentSkill;\n            var newSlots = slots ? slots : {}\n            newSlots[entity].slotType = type\n            var rasa = skill.rasa ? skill.rasa : {}\n            rasa.slots = newSlots\n            skill.rasa = rasa\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()  \n       } \n    }\n       \n    function setRASASlotAutofill(entity, type, slots) {\n        \n            \n        if (currentSkill && entity && type) {\n            var skill = currentSkill;\n            var newSlots = slots ? slots : {}\n            newSlots[entity].slotAutofill = type\n            var rasa = skill.rasa ? skill.rasa : {}\n            rasa.slots = newSlots\n            skill.rasa = rasa\n            setCurrentSkill(skill)  \n            forceReload()  \n       } \n    }\n    \n    function newSlot(name,slots) {\n        if (name && name.trim().length > 0) {\n            var skill = currentSkill;\n            var newSlots = slots ? slots : {}\n            var rasa = skill.rasa ? skill.rasa : {}\n            newSlots[name] = {}\n            rasa.slots = slots\n            skill.rasa = rasa\n            setCurrentSkill(skill)  \n            setNewSlotValue('')\n            forceReload()  \n        }\n    }\n    \n    function deleteSlot(slot, slots) {\n        if (currentSkill && slot && slots ) {\n            var skill = currentSkill;\n            delete slots[slot]\n            skill.rasa = skill.rasa ? skill.rasa : {}\n            skill.rasa.slots = slots\n            setCurrentSkill(skill)  \n            forceReload()  \n        }\n    }\n\n    function setRASAActions(data) {\n          if (currentSkill && data) {\n            var skill = currentSkill;\n            skill.rasa = skill.rasa ? skill.rasa : {}\n            skill.rasa.actions = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }\n    \n    function setRASAConfig(data) {\n        console.log(['setrasaconfig',data, currentSkill])\n          if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasa = skill.rasa ? skill.rasa : {}\n            skill.rasa.config = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }\n    \n    function setRASAStories(data) {\n          if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasa = skill.rasa ? skill.rasa : {}\n            skill.rasa.stories = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }\n    function setRASAEndpoint(data) {\n          if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasa = skill.rasa ? skill.rasa : {}\n            skill.rasa.endpoint = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }\n    function setRASACredentials(data) {\n          if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasa = skill.rasa ? skill.rasa : {}\n            skill.rasa.credentials = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }  \n    \n    function setRASASession(data) {\n       if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasa = skill.rasa ? skill.rasa : {}\n            skill.rasa.session = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }  \n        \n    function addRegexp(regexp) {\n        console.log(['ADDREGEX',regexp])\n        if (currentSkill && regexp) {\n            var skill = currentSkill;\n            if (!Array.isArray(skill.regexps)) skill.regexps=[]\n            skill.regexps.push({name: regexp.name, synonym: regexp.synonym })\n            //skill.regexps = uniquifyArray(skill.regexps)\n            setCurrentSkill(skill)  \n            //// if this is a new regexp, add it to the main database\n            //if (!props.lookups.regexpListsLookups[regexp.name] && !props.lookups.regexpsLookups[regexps.name]) {\n                //var regexpStorage = localforage.createInstance({\n                   //name: \"nlutool\",\n                   //storeName   : \"regexps\",\n                 //});\n                 //regexpStorage.getItem('alldata', function (err,regexps) {\n                     //if (err) throw new Error(err)\n                     //if (Array.isArray(regexps)) {\n                         //regexps.unshift({id:generateObjectId(), value:regexp.name, synonyms:'', tags:[]})\n                         //regexpStorage.setItem('alldata',utterances)\n                     //}\n                 //})\n            //}\n            forceReload()\n       } \n    }\n    \n    function removeRegexp(index) {\n        console.log(['RE UTTERANCE',index])\n        if (typeof index === \"number\" && currentSkill && currentSkill.regexps && currentSkill.regexps.length > index) {\n            var skill = currentSkill;\n            skill.regexps = [...skill.regexps.slice(0,index),...skill.regexps.slice(index+1)]\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()\n        }\n    }\n    \n    function setRegexpIntent(index, intent) {\n        console.log(['set reg intent',index, intent])\n        if (typeof index === \"number\" && currentSkill && currentSkill.regexps && currentSkill.regexps.length > index) {\n            var skill = currentSkill;\n            skill.regexps = skill.regexps ? skill.regexps : []\n            var key = (!isNaN(parseInt(index)) ? parseInt(index) : 0)\n            var regexp = skill.regexps[key] ? skill.regexps[key] : {}\n            regexp.intent = intent\n            skill.regexps[key] = regexp\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()\n        }\n    }\n    \n    function setRegexpEntity(index,entity) {\n        console.log(['set reg entity',index, entity])\n        if (typeof index === \"number\" && currentSkill && currentSkill.regexps && currentSkill.regexps.length > index) {\n            var skill = currentSkill;\n            skill.regexps = skill.regexps ? skill.regexps : []\n            var key = (parseInt(index) != NaN ? parseInt(index) : 0)\n            var regexp = skill.regexps[key] ? skill.regexps[key] : {}\n            regexp.entity = entity\n            skill.regexps[key] = regexp\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()\n        }\n    }\n    \n    function addUtterance(utterance) {\n       \n        if (currentSkill && utterance) {\n            var skill = currentSkill;\n            if (!Array.isArray(skill.utterances)) skill.utterances=[]\n            skill.utterances.push(utterance.name)\n            skill.utterances = uniquifyArray(skill.utterances)\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            // if this is a new utterance, add it to the main database\n            if (!props.lookups.utteranceListsLookups[utterance.name] && !props.lookups.utterancesLookups[utterance.name]) {\n                var utteranceStorage = localforage.createInstance({\n                   name: \"nlutool\",\n                   storeName   : \"utterances\",\n                 });\n                 utteranceStorage.getItem('alldata', function (err,utterances) {\n                     if (err) throw new Error(err)\n                     if (Array.isArray(utterances)) {\n                         utterances.unshift({id:generateObjectId(), value:utterance.name, synonyms:'', tags:[]})\n                         utteranceStorage.setItem('alldata',utterances)\n                     }\n                 })\n            }\n            forceReload()\n       } \n    }\n    \n    function removeUtterance(index) {\n        console.log(['RE UTTERANCE',index])\n        if (typeof index === \"number\" && currentSkill && currentSkill.utterances && currentSkill.utterances.length > index) {\n            var skill = currentSkill;\n            skill.utterances = [...skill.utterances.slice(0,index),...skill.utterances.slice(index+1)]\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()\n        }\n    }\n    function addUtteranceList(utterance) {\n          console.log(['ADD UTTERANCE LIST',utterance, currentSkill])\n          if (currentSkill && utterance) {\n            var skill = currentSkill;\n            if (!Array.isArray(skill.utterancesLists)) skill.utterancesLists=[]\n            skill.utterancesLists.push(utterance.name)\n            skill.utterancesLists = uniquifyArray(skill.utterancesLists)\n            setCurrentSkill(skill)  \n            console.log('add ut list')\n            console.log(skill.utterancesLists)\n            forceReload()\n       } \n    }\n     \n    function removeUtteranceList(index) {\n        if (typeof index === \"number\" && currentSkill && currentSkill.utterancesLists) {\n            var skill = currentSkill;\n            skill.utterancesLists = [...skill.utterancesLists.slice(0,index),...skill.utterancesLists.slice(index+1)]\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()\n        }\n    }  \n    \n    function addSkillTag(tag) {\n          console.log(['ADD skill tag',tag, currentSkill])\n          if (currentSkill && tag) {\n            var skill = currentSkill;\n            if (!Array.isArray(skill.tags)) skill.tags=[]\n            skill.tags.push(tag.name)\n            skill.utterancesLists = uniquifyArray(skill.utterancesLists).sort()\n            setCurrentSkill(skill)  \n            forceReload()\n       } \n    }\n     \n    function removeSkillTag(index) {\n          console.log(['rm skill tag',index, currentSkill])\n        if (typeof index === \"number\" && currentSkill && currentSkill.tags) {\n            var skill = currentSkill;\n            skill.tags = [...skill.tags.slice(0,index),...skill.tags.slice(index+1)]\n            setCurrentSkill(skill)  \n            forceReload()\n        }\n    }  \n    \n\n   \n    function forceReload(skill) {\n        var thisSkill = skill && skill.id ? skill : (currentSkill && currentSkill.id ? currentSkill : {})\n        setListsForEntity(JSON.stringify([thisSkill._id,thisSkill.entitiesListsData,thisSkill.utterancesListsData,thisSkill.rasa,\n        thisSkill.jovo,thisSkill.mycroft,thisSkill.entities,thisSkill.utterances,thisSkill.utterancesLists, thisSkill.regexps, thisSkill.tags]))  \n    }\n        \n    //addRegexpUtteranceTags,\n    return {setAlexaEntityType,setGoogleAssistantEntityType,  removeListFromSkillEntity, addListToSkillEntity,\n    currentSkill,setCurrentSkill,  skillFilterValue, invocation, setInvocation, entitiesForSkill, collatedItems, collatedCounts, setCurrentIntent, setSkillFilterValue,\n     addRegexp, removeRegexp, setRegexpIntent, setRegexpEntity, setMongoId, saveItem, deleteItem, searchItems,\n     removeUtterance, addUtterance,  addUtteranceList, removeUtteranceList, skillKeys, addSkillTag, removeSkillTag,\n     newSlot, newSlotValue,    setNewSlotValue,  slots: props.slots, setRASASlotAutofill, setRASASlotType, deleteSlot ,\n     setRASAActions, setRASASession , setRASAEndpoint , setRASACredentials  ,setRASAStories ,setRASAConfig, \n     filteredItems, currentIntent, listsForEntity, listsManager, collatedTags, skillMatches, skillUpdatedMatches,setSkillMatches, setSkillUpdatedMatches, setSkill, forceReload\n     }\n    \n}\n","import React from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport exportFormats from './export/index'\nimport PublishPage from './PublishPage'\nimport { saveAs } from 'file-saver';\nimport NluSkillEditorComponent from './components/NluSkillEditorComponent'\n\nimport useSkillsEditor from './useSkillsEditor'\n\nexport default  function NluSkillsEditor(props) {\n\n    const skillsEditor = useSkillsEditor(Object.assign({},props,{user:props.user, lookups: props.lookups}))\n    \n    const {\n    currentSkill, setCurrentSkill, skillFilterValue, setSkillFilterValue,\n      skillKeys,\n     setMongoId, saveItem, deleteItem, \n       listsForEntity, skillMatches, skillUpdatedMatches, setSkillMatches, setSkillUpdatedMatches, setSkill, forceReload\n     } = skillsEditor\n   \n    \n     var skillOptions = skillKeys && skillKeys.sort().map(function(skillKey,i) {\n          return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkillFilterValue(skillKey)}}  >{skillKey}</Dropdown.Item>\n       })\n       skillOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {setSkillFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n   \n        //<Button style={{float:'right',marginLeft:'0.5em'}}  variant=\"success\" onClick={function() {setShowExportDialog(true)}} >Publish</Button>\n        // {JSON.stringify(skillMatches)}\n     const skillsList = skillKeys ? skillKeys.map(function(skill,i) {return <Button key={i}  onClick={function(e) {setSkillFilterValue(skill)}}  style={{marginLeft:'1em'}} >{skill}</Button>} )   : []\n            \n    return <div>\n        {currentSkill && skillMatches && skillMatches.length > 0 && <span style={{color:'red'}} >\n                You have published version of this skill&nbsp;\n                {skillMatches.map(function(match,key) {\n                    return <span key={key} >saved {new Date(match.updated_date).toUTCString()} <Button variant=\"warning\" onClick={function(e) {setSkill(match); setSkillMatches([]); forceReload()}} >Merge</Button></span>\n                })}\n        </span>}\n        \n        {currentSkill && skillUpdatedMatches && skillUpdatedMatches.length > 0 && <span>\n                You have a more recent published version of this skill&nbsp;\n                {skillUpdatedMatches.map(function(match) {\n                    return <span>saved {new Date(match.updated_date).toUTCString()} <Button variant=\"warning\"  onClick={function(e) {setSkill(match); setSkillUpdatedMatches([]); forceReload()}} >Merge</Button></span>\n                })}\n        </span>}         \n         {currentSkill && !props.publish && skillFilterValue && skillFilterValue.length > 0 && <><Dropdown style={{float:'right',marginLeft:'0.5em'}}  as={ButtonGroup}>\n          <Dropdown.Toggle split variant=\"primary\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant=\"primary\">Export</Button>\n          <Dropdown.Menu variant=\"primary\" >\n              {exportFormats.map(function(exportFormat,i) {\n                  var title = skillFilterValue+'_opennludata_'+exportFormat.name+'_'+Date.now()\n                  var variant= exportFormat.name === \"JSON\" ? \"success\" : \"primary\"\n                return <Dropdown.Item variant={variant} key={i} value={exportFormat.name} \n                onClick={function(e) {\n                    //var skill = currentSkill\n                    //skill.intents = \n                    //skill.entities = \n                    exportFormat.exportFunction(currentSkill).then(function(zipBody) {\n                        console.log(['TRIGGER DL',title,zipBody])\n                        if (exportFormat.name==='JSON') {\n                            saveAs(zipBody, title+'.json')\n                        } else {\n                            saveAs(zipBody, title+'.zip')\n                        }\n                })}}  >{exportFormat.name}</Dropdown.Item>\n           })}\n          </Dropdown.Menu>\n        </Dropdown>\n       </>\n         }\n         {(currentSkill && !props.publish && props.user && props.user.token && props.user.token.access_token ) && <Link to={\"/skills/skill/\"+currentSkill.title+\"/publish\"} ><Button variant=\"success\" style={{float:'right'}} >Publish</Button></Link>}\n       \n       {(currentSkill && !props.publish && !(props.user && props.user.token && props.user.token.access_token)) && <Link to={\"/login/login\"} ><Button variant=\"success\" style={{float:'right'}} >Login to Publish</Button></Link>}\n       \n       \n        {currentSkill && !props.publish && <NluSkillEditorComponent user={props.user} lookups={props.lookups} {...skillsEditor  } />}\n        {!currentSkill && <div>\n            <h1>Skills</h1>\n            {skillsList.length > 0 && skillsList}\n            {skillsList.length <= 0 && <div>\n                You dont have any skills yet. Import some <Link to='/sources'><Button>Sources</Button></Link> \n            </div>}\n        </div>}\n         \n         {(currentSkill && props.publish ) && <PublishPage {...props} setCurrentSkill={setCurrentSkill} listsForEntity={listsForEntity} forceReload={forceReload}  user={props.user} setMongoId={setMongoId} currentSkill={currentSkill} saveItem={saveItem} deleteItem={deleteItem} />}\n     \n    </div>\n            \n}\n      \n\n\n       \n         //{!props.publish && renderEditor(props)}\n         \n         //{props.publish && <div>\n             //<Link to={\"/skills/skill/\"+currentSkill.title} ><Button variant=\"success\" style={{float:'right'}} >Back to Skill</Button></Link>\n             //<h1>Publish</h1>\n             //<textarea style={{height: '20em', width:'60em'}}  value={JSON.stringify(currentSkill)}></textarea>\n             \n        //</div>}\n","//, Modal\nimport React, {useState, useEffect, useContext} from 'react';\nimport {ListGroup, Button, Accordion, Card, AccordionContext} from 'react-bootstrap'\nimport { Link  } from 'react-router-dom'\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\n\nimport localforage from 'localforage'\nimport useImportMergeFunctions from './useImportMergeFunctions'\nimport useImportFunctions from './useImportFunctions'\n\n\n\nfunction ContextAwareToggle({ children, eventKey, callback }) {\n  const currentEventKey = useContext(AccordionContext);\n\n  const decoratedOnClick = useAccordionToggle(\n    eventKey,\n    () => callback && callback(eventKey),\n  );\n\n  const isCurrentEventKey = currentEventKey === eventKey;\n\n  return (\n    <>\n    {!isCurrentEventKey && <Button\n      onClick={decoratedOnClick}\n    >+</Button>\n    }\n    \n    {isCurrentEventKey && <Button\n      onClick={decoratedOnClick}\n    >-</Button>\n    }\n    \n    </>\n  );\n}\n\nfunction ImportReviewPage(props) {\n    const {mergeEntities, mergeIntents, mergeUtterances} = useImportMergeFunctions()\n    const [skillTitle, setSkillTitle] = useState('')\n    \n    const [collatedIntents, setCollatedIntents] = useState({})\n    const [collatedEntities, setCollatedEntities] = useState({})\n    const [importData, setImportData] = useState({})\n    var localforageStorageImport = localforage.createInstance({\n        name: 'nlutool',\n        storeName   :'importing',\n    });\n    useEffect(() => {\n        localforageStorageImport.getItem('alldata').then(function(importData) {\n             console.log('importData')  \n             console.log(importData)  \n             setImportData(importData)\n             if (importData.title) setSkillTitle(importData.title)\n             if (importData.intents) {\n                 var collatedIntents = {}\n                 importData.intents.map(function(intent) {\n                     var key = intent.intent ? intent.intent : '_'\n                     collatedIntents[key] = collatedIntents[key] ? collatedIntents[key] : []\n                     collatedIntents[key].push(intent)\n                    return null\n                 })\n                 setCollatedIntents(collatedIntents)\n             }\n             if (importData.entities) {\n                 var collatedEntities = {}\n                 importData.entities.map(function(entity,index) {\n                     if (entity.tags  && entity.tags.length > 0) {\n                         entity.tags.map(function(tag) {\n                             collatedEntities[tag]  = collatedEntities[tag] ? collatedEntities[tag] : []\n                             collatedEntities[tag].push(index)\n                         })\n                     } else {\n                         collatedEntities[\"untagged\"] = collatedEntities[\"untagged\"] ? collatedEntities[\"untagged\"] : []\n                         collatedEntities[\"untagged\"].push(index)\n                     }\n                     return null\n                 })\n                 setCollatedEntities(collatedEntities)\n             }\n        })\n    },[])\n    const blockStyle={borderTop: '2px solid black', minHeight:'5em'}\n    const [visible, setVisible] = useState({})\n    //<pre>{JSON.stringify(importData,null,2)}</pre>\n        \n    return <div style={{marginLeft:'1em'}}>\n        <h3>Import Review</h3>\n        \n          <Accordion >\n\n           {/* INTENTS */}\n              {importData.intents && <Card>\n                <Card.Header>\n                  <ContextAwareToggle as={Button} variant=\"link\" eventKey=\"root-0\"  >\n                  </ContextAwareToggle>\n                  {importData.intents && <span style={{marginLeft:'2em'}}  id='intents' >{Object.keys(collatedIntents).length } intents with {importData.intents ? Object.keys(importData.intents).length : 0} examples <Button \n                    style={{marginLeft:'2em'}} \n                    onClick={function(e) {\n                                    mergeIntents(importData.intents , skillTitle)\n                                    .then(function(counts) {\n                                        props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                                        // TODO remove item from import data\n                                    })\n                                }}>Import All Intents</Button></span>}\n                </Card.Header>\n                \n                {<Accordion.Collapse eventKey=\"root-0\"><Card.Body>{Object.keys(collatedIntents).map(function(intent, key) {\n                    return <Card key={key}>\n                        <Accordion >\n                                 \n                            <Card.Header>\n                               <ContextAwareToggle as={Button} variant=\"link\" eventKey={\"intent-\"+key}  >\n                                    </ContextAwareToggle>&nbsp;&nbsp;\n                                    \n                              <b>{intent}</b> with {collatedIntents[intent].length} examples\n                              <Button \n                                style={{marginLeft:'2em'}} \n                                onClick={function(e) {\n                                    mergeIntents(collatedIntents[intent], skillTitle)\n                                    .then(function(counts) {\n                                        props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                                        // TODO remove item from import data\n                                    })\n                                }}>Import {intent}</Button>\n                            </Card.Header>\n                            {<Accordion.Collapse eventKey={\"intent-\"+key}>\n                            <Card.Body>\n                                   \n                                        <ul>{collatedIntents[intent].map(function(example,iikey) {\n                                            return <li key={iikey}>{example.example}</li> \n                                        })}</ul>\n                                    \n                            </Card.Body>\n                            </Accordion.Collapse>}\n                        </Accordion >\n                    </Card>\n                          \n                    \n                })}\n                </Card.Body></Accordion.Collapse>}\n                \n              </Card>}\n              \n              \n                             \n  \n              \n              {/* ENTITIES */}\n              {importData.entities && <Card>\n                <Card.Header>\n                  <ContextAwareToggle as={Button} variant=\"link\" eventKey=\"root-1\"  >\n                  </ContextAwareToggle>\n                  {importData.entities && <span style={{marginLeft:'2em'}}  id='entities' >{importData.entities ? Object.keys(importData.entities).length : 0} entities <Button \n                    style={{marginLeft:'2em'}} \n                    onClick={function(e) {\n                        mergeEntities(importData.entities, skillTitle)\n                        .then(function(counts) {\n                            props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                        })\n                    }}>Import All Entities</Button></span>}\n                </Card.Header>\n                {<Accordion.Collapse eventKey=\"root-1\"><Card.Body>{Object.keys(collatedEntities).map(function(entityKey, key) {\n                    return <Card key={key}>\n                        <Accordion >\n                            <Card.Header>\n                               <ContextAwareToggle as={Button} variant=\"link\" eventKey={\"entity-\"+key}  >\n                                </ContextAwareToggle>&nbsp;&nbsp;\n                                    \n                              {/*<b>{entity}</b> with {Object.values(importData.entities[entity].values).length} examples*/}\n                              <Button \n                                style={{marginLeft:'2em'}} \n                                onClick={function(e) {\n                                    mergeEntities(collatedEntities[entityKey].map(function(i) {return importData.entities[i]}), skillTitle)\n                                    .then(function(counts) {\n                                        props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                                    })\n                                }}>Import {entityKey}</Button>\n                            </Card.Header>\n                            {<Accordion.Collapse eventKey={\"entity-\"+key}>\n                                <Card.Body>\n                                    <ul>{collatedEntities[entityKey] && collatedEntities[entityKey].map(function(example,ikey) {\n                                        return <li key={ikey}>{importData.entities[example].value}</li> \n                                    })}</ul>\n                                </Card.Body>\n                            </Accordion.Collapse>}\n                        </Accordion >\n                    </Card>\n                          \n                    \n                })}\n                </Card.Body></Accordion.Collapse>}\n                \n              </Card>}\n              \n              \n              \n\n\n           {/* UTTERANCES */}\n              {importData.utterances && <Card>\n                <Card.Header>\n                  <ContextAwareToggle as={Button} variant=\"link\" eventKey=\"root-2\"  >\n                  </ContextAwareToggle>\n                  {importData.utterances && <span style={{marginLeft:'2em'}}  id='utterances' >{importData.utterances ? Object.keys(importData.utterances).length : 0} utterances <Button \n                    style={{marginLeft:'2em'}} \n                    onClick={function(e) {\n                        mergeUtterances(importData.utterances, skillTitle)\n                        .then(function(counts) {\n                            props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                        })\n                    }}>Import All Utterances</Button></span>}\n                </Card.Header>\n                \n                {<Accordion.Collapse eventKey=\"root-2\"><Card.Body>{importData.utterances &&  Object.values(importData.utterances).map(function(utterance, key) {\n                    return <Card key={key}>\n                                 \n                            <Card.Header>\n                              <b>{utterance.value}</b> \n                              <Button \n                                style={{marginLeft:'2em'}} \n                                onClick={function(e) {\n                                    mergeUtterances([utterance], skillTitle)\n                                    .then(function(counts) {\n                                        props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                                    })\n                                }}>Import</Button>\n                            </Card.Header>\n                           \n                    </Card>\n                          \n                    \n                })}\n                </Card.Body></Accordion.Collapse>}\n                \n              </Card>   }           \n        </Accordion>    \n        \n    </div>   \n}\n\nexport default ImportReviewPage\n\n\n\n\n\n                   \n         //<div id='skill' ><label>Title <input type='text' value={skillTitle} onChange={function(e) {setSkillTitle(e.target.value)}} />        &nbsp;&nbsp;<Button \n            //onClick={function(e) {\n                ////mergeIntents([importData.utterances[utterance]], skillTitle)\n                ////.then(function(intentCounts) {\n                    //////props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                ////})\n            //}}>Import All</Button>\n            //</label></div>\n       \n        //<Accordion >\n         \n              \n            //{/* UTTERANCES */}\n              //<Card>\n                //<Card.Header>\n                  //<ContextAwareToggle as={Button} variant=\"link\" eventKey=\"root-2\"  >\n                  //</ContextAwareToggle>\n                  //{importData.utterances && <span style={{marginLeft:'2em'}}  id='intents' >{importData.utterances ? Object.keys(importData.utterances).length : 0} utterances <Button \n                    //style={{marginLeft:'2em'}} \n                    //onClick={function(e) {\n                        //mergeUtterances(importData.utterances, skillTitle)\n                        //.then(function(counts) {\n                            //props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                        //})\n                    //}}>Import All Utterances</Button></span>}\n                //</Card.Header>\n                \n                //{<Accordion.Collapse eventKey=\"root-2\"><Card.Body>{importData.utterances &&  Object.keys(importData.utterances).map(function(utterance, key) {\n                    //return <Card>\n                        //<Accordion >\n                                 \n                            //<Card.Header>\n                               //<ContextAwareToggle as={Button} variant=\"link\" eventKey={\"utterance-\"+key}  >\n                                //</ContextAwareToggle>&nbsp;&nbsp;\n                                    \n                              //<b>{utterance}</b> with {importData.utterances[utterance].length} examples\n                              //<Button \n                                //style={{marginLeft:'2em'}} \n                                //onClick={function(e) {\n                                    //mergeIntents([importData.utterances[utterance]], skillTitle)\n                                    //.then(function(counts) {\n                                        //props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                                    //})\n                                //}}>Import {utterance}</Button>\n                            //</Card.Header>\n                            //{<Accordion.Collapse eventKey={\"utterance-\"+key}>\n                                //<Card.Body>\n                                        //<ul>{Object.keys(importData.utterances[utterance]).map(function(example) {\n                                            //return <li>{example.example}</li> \n                                        //})}</ul>\n                                //</Card.Body>\n                            //</Accordion.Collapse>}\n                        //</Accordion >\n                    //</Card>\n                          \n                    \n                //})}\n                //</Card.Body></Accordion.Collapse>}\n                \n              //</Card>              \n        //</Accordion>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //<Card>\n                //<Card.Header>\n                  //<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                      //<Button>+</Button>\n                  //</Accordion.Toggle>\n                  //{importData.entities && <span style={{marginLeft:'2em'}} id='entities' >{importData.entities ? Object.keys(importData.entities).length : 0} entities<Button \n                        //style={{marginLeft:'2em'}} \n                        //onClick={function(e) {\n                            //mergeEntities(importData.entities, skillTitle)\n                            //.then(function(counts) {\n                                //props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                            //})\n                        //}}>Import</Button></span>}\n                //</Card.Header>\n                //<Accordion.Collapse eventKey=\"1\">\n                  //<Card.Body></Card.Body>\n                //</Accordion.Collapse>\n              //</Card>\n              \n              //<Card>\n                //<Card.Header>\n                  //<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                      //<Button>+</Button>\n                  //</Accordion.Toggle>\n                  //{importData.utterances && <div style={blockStyle} id='utterances' >{importData.utterances ? importData.utterances.length : 0} utterances<Button \n                    //style={{marginLeft:'2em'}} \n                    //onClick={function(e) {\n                        //mergeUtterances(importData.utterances, skillTitle)\n                        //.then(function(counts) {\n                            //props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                        //})\n                    //}}>Import</Button></div>}\n                //</Card.Header>\n                //<Accordion.Collapse eventKey=\"1\">\n                  //<Card.Body>Hello! I'm another body</Card.Body>\n                //</Accordion.Collapse>\n              //</Card>\n              \n\n\n    //var intentAccordionPanels = []\n            \n    //if (importData.intents) {\n        //Object.keys(importData.intents).map(function(intent, key) {\n            ////importData.intents[intent].map(function(example) {\n                 //intentAccordionPanels.push({\n                     //title:intent, \n                     //content:<div>{importData.intents[intent] && importData.intents[intent].map(function(example,ikey) {\n                            //return <div key={ikey}>{example.example}</div> \n                        //})}</div>,\n                      //key:\"intent-\"+key\n                 //}) \n                 //return null\n            ////})\n            //return null\n        //})\n    //}\n    \n    \n    //const AccordionPanels = [\n      //{ \n            //title: (importData.intents ? Object.keys(importData.intents).length : 0)+' intents ', \n            //content:  { content:<div>\n                    //{<>\n                        //<Button \n                            //style={{marginLeft:'2em'}} \n                            //onClick={function(e) {\n                                //mergeIntents(importData.intents, skillTitle)\n                                //.then(function(counts) {\n                                    //props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                                //})\n                            //}}>Import All Intents\n                        //</Button>\n                        //<Accordion.Accordion\n                          //className=\"padding\"\n                          //panels={intentAccordionPanels}\n                        ///>\n                    //</>}\n                    //</div>}, \n            //key: 'sub-accordions'\n      //},\n                    \n      //{ title: (importData.entities ? Object.keys(importData.entities).length : 0)+' entities ', content: { content: <b>ddd<Button \n                        //style={{marginLeft:'2em'}} \n                        //onClick={function(e) {\n                            //mergeEntities(importData.entities, skillTitle)\n                            //.then(function(counts) {\n                                //props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                            //})\n                        //}}>Import</Button></b>, key: 'sub-accordions' } },\n      //{ title: (importData.utterances ? Object.keys(importData.utterances).length : 0)+' utterances ', content: { content: <b>ddd<Button \n                    //style={{marginLeft:'2em'}} \n                    //onClick={function(e) {\n                        //mergeUtterances(importData.utterances, skillTitle)\n                        //.then(function(counts) {\n                            //props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                        //})\n                    //}}>Import</Button></b>, key: 'sub-accordions' } },\n    //]\n\n//<Accordion\n         //className=\"padding\"\n            //defaultActiveIndex={null}\n            //panels={AccordionPanels}\n          ///>\n        \n\n\n//import { Accordion } from 'semantic-ui-react';\n//import 'semantic-ui-css/semantic.min.css\n\n//const AccordionContent = (content) => (\n  //<div className=\"indent\">\n    //{content}\n  //</div>\n//)\n\n//const SubAccordion1Panels = [\n  //{\n    //title: 'Sub Accordion 11',\n    //content: { content: AccordionContent('11 Content'), key: '11-content'} ,\n    //key: 'sub-accordion-11'\n  //}, {\n    //title: 'Sub Accordion 12',\n    //content: { content: AccordionContent('12 Contents'), key: '12-content' },\n    //key: 'sub-accordion-12'\n  //}, {\n    //title: 'Sub Accordion 13',\n    //content: { content: AccordionContent('13 Contents'), key: '13-content' },\n    //key: 'sub-accordion-13'\n  //},\n//]\n\n//const SubAccordion1Content = (\n  //<div className=\"indent\">\n    //<Accordion.Accordion\n      //style={{marginLeft: \"20px\"}}\n      //className=\"no-padding\"\n      //panels={SubAccordion1Panels}\n    ///>\n  //</div>\n//)\n\n//const SubAccordionPanels = [\n  //{\n    //title: 'Sub Accordion 1',\n    //content: { content: SubAccordion1Content, key: 'sa1-content' },\n    //key: 'sub-accordion-1'\n  //}, {\n    //title: 'Sub Accordion 2',\n    //content: { content: AccordionContent('SA2 Content'), key: 'sa2-content' },\n    //key: 'sub-accordion-2'\n  //}, {\n    //title: 'Sub Accordion 3',\n    //content: { content: AccordionContent('SA3 Content'), key: 'sa3-content' },\n    //key: 'sub-accordion-3'\n  //}\n//]\n\n//const SubAccordions = (\n  //<div className=\"indent\">\n    //<Accordion.Accordion\n      //className=\"no-padding\"\n      //panels={SubAccordionPanels}\n    ///>\n  //</div>\n//)\n\n//const AccordionPanels = [\n  //{ title: 'Accordion', content: { content: SubAccordions, key: 'sub-accordions' } },\n//]\n\n    \n","import React, {useState, useEffect} from 'react';\nimport {Button, ListGroup, Form, Row, Col, Container} from 'react-bootstrap'\nimport { Link , useHistory } from 'react-router-dom'\nimport useRestEndpoint from './useRestEndpoint'\nimport Autosuggest from 'react-autosuggest'\nimport useImportFunctions from './useImportFunctions'\nimport useDB from './useDB'\n    \nexport default function SkillSearchPage(props) {\n    const [searchFilter, setSearchFilter] = useState('')\n    const [suggestions, setSuggestions] = useState([])\n    const [searchResults, setSearchResults] = useState([])\n    const token = props.user && props.user.token && props.user.token.access_token ? props.user.token.access_token : ''\n    const axiosClient = props.getAxiosClient(token)\n    const {saveItem, deleteItem, getItem, searchItems} = useRestEndpoint(axiosClient,process.env.REACT_APP_restPublicBaseUrl)\n    var importFunctions = useImportFunctions()\n    var history = useHistory() \n    var [skills, setSkills] = useState({})\n    var [tags, setTags] = useState({})\n    const sourcesDB = useDB('nlutool','sources');\n\n    //useEffect((props) => {\n        //loadSkills()\n        ////doSearch()\n    //},[])\n    \n    useEffect((props) => {\n        doSearch()\n    },[props.lookups.skills])\n    \n    function loadSkill(skill) {\n        console.log(['LOaD SKIL',skill])  \n        return new Promise(function(resolve,reject) {\n            if (skill && skill.file) {\n                console.log(['LOaD SKIL have file',(process.env.REACT_APP_githubSkillsUrl ? process.env.REACT_APP_githubSkillsUrl : '/static/media/skills/')+skill.file])  \n                const axiosClient = props.getAxiosClient()\n                axiosClient.get((process.env.REACT_APP_githubSkillsUrl ? process.env.REACT_APP_githubSkillsUrl : '/static/media/skills/')+skill.file).then(function(res) {\n                  console.log(['LOaDed SKIL',res.data])  \n                  if (res.data) {\n                      //console.log(res.data)\n                      //try {\n                          //var data = JSON.parse(res.data)\n                          resolve({fileType:'opennlu.skill', created_date: new Date().getTime(), title: res.data.title, data: JSON.stringify(res.data)})\n                      //} catch (e) {\n                        //console.log(e)      \n                    //}\n                  } else {\n                      reject('Failed to load skill')  \n                  }\n                }).catch(function(e) {\n                   reject('Failed to load skill')  \n                })\n            } else {\n                reject('Incomplete skill data')\n            }\n        })\n    }\n    \n    //function loadSkills() {\n        //const axiosClient = props.getAxiosClient()\n        //axiosClient.get((process.env.REACT_APP_githubSkillsUrl ? process.env.REACT_APP_githubSkillsUrl : '/static/media/skills/')+'index.js').then(function(res) {\n          //console.log(['LOaD SKILSS',res.data])  \n          //var tags={}\n          //if (res.data) {\n              //Object.values(res.data).map(function(skill) {\n                  //if (skill.tags) skill.tags.map(function(tag) {\n                      //tags[tag] = true\n                     //return null  \n                  //})\n                  //return null\n              //})\n              //setTags(Object.keys(tags).sort())\n              //setSkills(res.data)\n          //}\n        //}).catch(function(err) {\n            //console.log(err)  \n        //})\n    //}\n    \n    function importItem(skill) {\n        console.log(['import item',skill])  \n        loadSkill(skill).then(function(item) {\n            console.log(['imported item',item])  \n            //var item = {id:null, data:JSON.stringify(item), title:item.title+'.skill.json', fileType :\"opennlu.skill    \"}\n            sourcesDB.saveItem(item,0)\n            history.push(\"/sources\")\n        }).catch(function(e) {\n           console.log(e)   \n        })\n    }\n\n    function doSearch(queryIn='') {\n        const text = queryIn && queryIn.trim && queryIn.trim() ? queryIn : (searchFilter && searchFilter.trim() ? searchFilter : '')\n        if (props.lookups.skills) {\n            if (text) {\n                var filtered = []\n                Object.values(props.lookups.skills).map(function(skill) {\n                    if (skill.userAvatar && skill.userAvatar.indexOf(text) !== -1) {\n                        filtered.push(skill)\n                    } else if (skill.title && skill.title.indexOf(text) !== -1) {\n                        filtered.push(skill)\n                    } else if (skill.tags && skill.tags.indexOf(text) !== -1) {\n                        filtered.push(skill)\n                    }\n                    return null\n                })\n                setSearchResults(filtered)\n            } else {\n                setSearchResults(Object.values(props.lookups.skills))\n            }\n        }\n        //var query = {}\n        //var sort = {title: 1}\n        //if (text && text.trim()) {\n            ////query.title=searchFilter\n            //query[\"$text\"]={\"$search\":text.trim()}\n        //} else {\n            //sort = {updated_date : -1}\n        //}\n        //searchItems('Skill',query, 40, 0, sort).then(function(res) {\n              //console.log('doSerach')\n              //console.log(res.data)\n              //setSearchResults(res.data)\n        //})\n    }\n      \n\n    // Use your imagination to render suggestions.\n    const renderSuggestion = suggestion => (\n        <div>\n        {suggestion.tag}\n        </div>\n    );\n    // Autosuggest will call this function every time you need to update suggestions.\n    // You already implemented this logic above, so just use it.\n    function onSuggestionsFetchRequested ({ value }) {\n         setSuggestions(props.lookups.tags.sort().map(function(tag) {\n             return {tag: tag} \n          }))\n        \n        //searchItems('SkillTags',{tag:{\"$regex\":value}},20,0,'',{tag:1}).then(function(res) {\n            //setSuggestions(res.data && res.data.length > 0 ? res.data : [])\n        //})\n    };\n\n    // Autosuggest will call this function every time you need to clear suggestions.\n    function  onSuggestionsClearRequested()  {\n       setSuggestions([]);\n    };\n\n    function setSearchFilterWrap(text) {\n        setSearchFilter(text)\n        //loadSuggestions(text)\n    } \n    \n   \n    return <div style={{marginLeft:'1em'}}>\n         <Form onSubmit={function(e) {e.preventDefault(); doSearch()}} >\n            <Row><Col>\n                <Autosuggest\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={onSuggestionsClearRequested}\n                    getSuggestionValue={function (suggestion)  { return suggestion.tag}}\n                    renderSuggestion={renderSuggestion}\n                    onSuggestionSelected={function(event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) {\n                        setSearchFilter(suggestionValue)\n                        doSearch(suggestionValue)\n                    }}\n                    inputProps={{\n                        style:{width:'100%'},\n                      value: searchFilter,\n                      onChange: function(e) {setSearchFilter(e.target.value)}\n                    }}\n                />\n                </Col><Col>\n                <Button variant=\"success\" onClick={doSearch}>Search</Button>\n                <Button variant=\"danger\" onClick={function() {setSearchFilter(''); doSearch('')}}>Reset</Button>\n            </Col></Row>\n        </Form> \n        \n        {!searchFilter.trim() && <h3>Recent Skills</h3>}\n        {searchFilter.trim() && <h3>Search Results</h3>}\n        <Container fluid ><Row>\n        {searchResults.map(function(result, key) {\n            const bStyle = {marginLeft:'0.5em', marginBottom:'0.2em'}\n             return <Col sm={12} md={6} lg={4} xl={4} key={key} style={{border: '2px solid black', padding: '0.5em', margin: '0.5em'}}>\n                <Button variant=\"success\" style={{float:'right'}} onClick={function(e) {importItem(result)}}>Grab</Button>\n                <h4 style={{marginBottom:'0.3em'}} >{result.title} {result.userAvatar && <span>by {result.userAvatar}</span>} </h4>\n                \n                {result.tags && result.tags.length > 0 && <Button style={bStyle} variant=\"outline-warning\" >{result.tags.join(\", \")}</Button>}\n                <div>\n                    {result.intents && result.intents > 0 && <Button variant=\"outline-primary\"style={bStyle}>{result.intents} intents </Button>}\n                    {result.entities && result.entities > 0 && <Button variant=\"outline-primary\"style={bStyle}>{result.entities} entities</Button>}\n                    {(result.regexps > 0) && <Button variant=\"outline-primary\"style={bStyle}>{result.regexps} regular expressions</Button>}\n                    {(result.utterances > 0 )&& <Button variant=\"outline-primary\"style={bStyle}>{result.utterances} utterances</Button>}\n                    {<Button style={{marginLeft:'0.5em', marginTop:'1em'}} variant=\"outline-secondary\" >Updated: {new Date(result.updated_date).toUTCString()}</Button>}\n                </div>\n             </Col>\n        })}\n        </Row></Container>       \n    </div>\n    \n    \n}\n\n","import React from 'react';\nimport {useState, useEffect} from 'react';\nimport {BrowserRouter as  Router, Route, Link  } from 'react-router-dom'\nimport LocalStorageUploadManager from './LocalStorageUploadManager'\nimport ListsManager from './ListsManager'\nimport UtterancesManager from './UtterancesManager'\nimport RegexpsManager from './RegexpsManager'\nimport NluExampleEditor from './NluExampleEditor'\nimport NavbarComponent from './components/NavbarComponent'\n//import TestComponent from './components/TestComponent'\nimport {HelpText, HelpTextImport, HelpTextExport, HelpTextAbout} from './components/Components'\nimport NluImportEditor from './NluImportEditor'\nimport NluSkillsEditor from './NluSkillsEditor'\n//import SearchPage from './SearchPage'\nimport ImportReviewPage from './ImportReviewPage'\nimport SkillSearchPage from './SkillSearchPage'\nimport {Button} from 'react-bootstrap'\nimport localforage from 'localforage'\nimport {LoginSystem,LoginSystemContext}  from 'react-express-oauth-login-system-components'\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst axios = require('axios');\n\nfunction SiteMenu(props) {\n    var astyle={paddingLeft:'0.3em'}\n    return <div style={{marginLeft:'0.5em'}}>\n        <h1>Menu</h1>\n        <Link style={astyle} to=\"/sources\" ><Button>Sources</Button></Link>\n        <Link style={astyle} to=\"/import\" ><Button>Import</Button></Link>\n        <Link style={astyle} to=\"/examples\" ><Button>Organise</Button></Link>\n        <Link style={astyle} to=\"/skills\" ><Button>Skills </Button></Link>\n        <Link style={astyle} to=\"/search\" ><Button>Search Community </Button></Link>\n    </div>\n}\n\nfunction App() {\n   \n    const [waiting, setWaiting] = useState(false)\n    const [pageMessage, setPageMessageInner] = useState('')  \n    var messageTimeout = null\n    \n    \n    function setPageMessage(message,timeout=0) {\n        setPageMessageInner(message)\n        if (timeout > 0) {\n            if (messageTimeout) clearTimeout(messageTimeout) \n            messageTimeout = setTimeout(function() {setPageMessage('')},timeout)\n        }\n    }\n    \n    //const [importFrom, setImportFrom] = useState(null)\n    // example summaries\n    const [intentLookups, setIntentLookups] = useState([])\n    const [entityLookups, setEntityLookups] = useState([])\n    const [tagLookups, setTagLookups] = useState([])\n    const [skillLookups, setSkillLookups] = useState([])\n    const [listsLookups, setListsLookups]= useState([])\n    const [selectedTally, setSelectedTally] = useState(0)\n    const [utterancesLookups, setUtterancesLookups] = useState([])\n    const [utteranceListsLookups, setUtteranceListsLookups] = useState([])\n    const [utteranceTagsLookups, setUtteranceTagsLookups] = useState([])\n    const [regexpsLookups, setRegexpsLookups] = useState([])\n    const [regexpsCompleteLookups, setRegexpsCompleteLookups] = useState([])\n    const [regexpListsLookups, setRegexpListsLookups] = useState([])\n    const [regexpTagsLookups, setRegexpTagsLookups] = useState([])\n    \n    // list summaries\n    const [listTally, setListTally] = useState(0)\n    const [selectedListTally, setSelectedListTally] = useState(0)\n    const [listTallyByList, setListTallyByList] = useState({})\n    const [selectedListTallyByList, setSelectedListTallyByList] = useState({})\n    \n    const [regexTally, setRegexTally] = useState(0)\n    const [selectedRegexTally, setSelectedRegexTally] = useState(0)\n    const [utteranceTally, setUtteranceTally] = useState(0)\n    const [selectedUtteranceTally, setSelectedUtteranceTally] = useState(0)\n    var [skills, setSkills] = useState({})\n    var [skillTags, setSkillTags] = useState({})\n    \n    \n    // search bar\n   // const [skillFilterValue, setSkillFilterValue] = useState('')\n  \n    \n    \n    function loadSkills() {\n        return axios.get((process.env.REACT_APP_githubSkillsUrl ? process.env.REACT_APP_githubSkillsUrl : '/static/media/skills/')+'index.js').then(function(res) {\n          //console.log(['LOaD SKILSS',res.data])  \n          var tags={}\n          if (res.data) {\n              Object.values(res.data).map(function(skill) {\n                  if (skill.tags) skill.tags.map(function(tag) {\n                      tags[tag] = true\n                     return null  \n                  })\n                  return null\n              })\n              setSkillTags(Object.keys(tags).sort())\n              setSkills(res.data)\n          }\n        }).catch(function(err) {\n            console.log(err)  \n        })\n    }\n       \n    useEffect(() => loadSkills(),[])   \n       \n    function startWaiting() {\n        setWaiting(true)\n    }\n    \n    function stopWaiting() {\n        setTimeout(function() {\n            setWaiting(false)\n        },300)\n    }\n\n    \n    function updateRegexps() {\n        //console.log('UPDATE regexps')\n        var storage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"regexps\",\n         });\n         storage.getItem('alldata', function (err,utterances) {\n                 var tally = 0;\n                 var selectedTally = 0;\n                var utteranceLists={}\n                var utteranceIndex={}\n                var utteranceCompleteIndex={}\n                var utteranceTags={}\n                //console.log(['UPDATE UTTERANCES',err,utterances])\n                if (Array.isArray(utterances)) {\n                    utterances.map(function(utterance,i) {\n                        //console.log(['UPDATE regexp',utterance])\n                         if (utterance.isSelected) {\n                             selectedTally += 1\n                        }\n                        tally += 1;\n                         if (utterance.value) {\n                             utteranceIndex[utterance.value]=true\n                             utteranceCompleteIndex[utterance.value]={value: utterance.value, synonym: utterance.synonym}\n                         }\n                         if (utterance.synonym) {\n                             utterance.synonym.split(\"\\n\").map(function(synonym) {\n                                 utteranceLists[synonym] = true\n                                 return null\n                             })\n                         } \n                         if (utterance.tags && utterance.tags.length > 0) {\n                               utterance.tags.map(function(tag) {\n                                  utteranceTags[tag] = true  \n                                  return null\n                               })\n                         }\n                         return null\n                    })\n                    setRegexTally(tally)\n                    setSelectedRegexTally(selectedTally)\n                    setRegexpsLookups(Object.keys(utteranceIndex))\n                    setRegexpsCompleteLookups(Object.values(utteranceCompleteIndex))\n                    setRegexpTagsLookups(Object.keys(utteranceTags))\n                    setRegexpListsLookups(Object.keys(utteranceLists))\n                }\n                //console.log(['UPDATE UTTERANCES',utteranceIndex,utteranceLists])\n                    \n              });\n            //});\n  \n    }\n    \n    function updateUtterances() {\n        //console.log('UPDATE UTTERANCES')\n        var utteranceStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"utterances\",\n         });\n         var tally = 0;\n         var selectedTally = 0;\n         utteranceStorage.getItem('alldata', function (err,utterances) {\n                var utteranceLists={}\n                var utteranceIndex={}\n                var utteranceTags={}\n                //console.log(['UPDATE UTTERANCES',err,utterances])\n                if (Array.isArray(utterances)) {\n                    utterances.map(function(utterance,i) {\n                        if (utterance.isSelected) {\n                             selectedTally += 1\n                        }\n                        tally += 1;\n                        //console.log(['UPDATE UTTERANCE',utterance])\n                         if (utterance.value) {\n                             utteranceIndex[utterance.value]=true\n                         }\n                         if (utterance.synonym) {\n                             utterance.synonym.split(\"\\n\").map(function(synonym) {\n                                 utteranceLists[synonym] = true\n                                 return null\n                             })\n                         } \n                         if (utterance.tags && utterance.tags.length > 0) {\n                               utterance.tags.map(function(tag) {\n                                  utteranceTags[tag] = true  \n                                  return null\n                               })\n                         }\n                         return null\n                    })\n                    setUtteranceTally(tally)\n                    setSelectedUtteranceTally(selectedTally)\n                    setUtterancesLookups(Object.keys(utteranceIndex))\n                    setUtteranceTagsLookups(Object.keys(utteranceTags))\n                    setUtteranceListsLookups(Object.keys(utteranceLists))\n                }\n                //console.log(['UPDATE UTTERANCES',utteranceIndex,utteranceLists])\n                    \n              });\n            //});\n  \n    }\n\n    function updateLists() {\n        var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         listsStorage.getItem('alldata', function (err,lists) {\n            //console.log(['UPDATELISTS',lists])\n            if (lists) {\n                var newSelectedLists = {}\n                var newLists = {}\n                var tally = 0;\n                var selectedTally = 0;\n                lists.map(function(listItem) {\n                    if (listItem.isSelected) {\n                             selectedTally += 1\n                    }\n                    tally += 1;\n                    if (listItem && listItem.tags && listItem.tags.length > 0) {\n                        \n                        listItem.tags.map(function(tag) {\n                            if (tag && tag.trim().length > 0) {\n                                if (listItem.isSelected) {\n                                     newLists[tag] = (newLists[tag] > 0) ? newLists[tag] + 1 : 1\n                                     newSelectedLists[tag] = (newSelectedLists[tag] > 0) ? newSelectedLists[tag] + 1 : 1\n                                } else {\n                                    newLists[tag] = (newLists[tag] >0) ? newLists[tag] + 1 : 1\n                                }\n                            }\n                            return null\n                        })\n                    }\n                    return null\n                })\n                //console.log(['UPDATELISTS',tally, selectedTally])\n                setListTally(tally)\n                setSelectedListTally(selectedTally)\n                setSelectedListTallyByList(newSelectedLists)\n                setListTallyByList(newLists)\n                setListsLookups(Object.keys(newLists))\n                //console.log('updated lists', newLists)\n            }\n        })\n    }\n\n    function updateLookups() {\n        var examplesStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"examples\",\n         });\n        examplesStorage.getItem('alldata', function (err,items) {\n            //console.log(['UPDATELOOKUPS',items])\n            if (items && items.length > 0) {\n                var tags = {}\n                var intents = {}\n                var entities = {}\n                var skills = {}\n                var selected = 0;\n                items.map(function(item) {\n                    if (item) {\n                        //console.log(['UPDATELOOKUPS single',item])\n                        if (item.isSelected) selected = selected + 1;\n                       intents[item.intent] = true\n                       if (item.tags && item.tags.length > 0) {\n                           item.tags.map(function(tag) {\n                              tags[tag] = true  \n                              return null\n                           })\n                       }\n                       if (item.skills && item.skills.length > 0) {\n                           item.skills.map(function(skill) {\n                              skills[skill] = true  \n                              return null\n                           })\n                       }\n                       if (item.entities && item.entities.length > 0) {\n                           item.entities.map(function(entity) {\n                              if (entity.type) {\n                                  entities[entity.type] = true  \n                              }\n                              return null\n                           })\n                       }\n                    }\n                    return null\n                })\n                const distinct = function(value,index,self) {\n                    return self.indexOf(value) === index;\n                }\n                //console.log(['UPDATELOOKUPS single res',intents,entities])\n                    \n                setIntentLookups([].concat(Object.keys(intents),intentLookups).filter(distinct))\n                setEntityLookups([].concat(Object.keys(entities),entityLookups).filter(distinct))\n                setTagLookups([].concat(Object.keys(tags),tagLookups).filter(distinct))\n                setSkillLookups([].concat(Object.keys(skills),skillLookups).filter(distinct))\n                setSelectedTally(selected)\n                //console.log(entityLookups, intentLookups)\n            }\n        })\n    }\n    const lookups = {regexpTagsLookups:regexpTagsLookups,regexpsLookups:regexpsLookups,regexpListsLookups:regexpListsLookups,  regexpsCompleteLookups,  utteranceTagsLookups:utteranceTagsLookups,utterancesLookups:utterancesLookups,utteranceListsLookups:utteranceListsLookups,intentLookups,entityLookups,tagLookups,skillLookups, selectedTally, listsLookups, listTally, selectedListTally, listTallyByList, selectedListTallyByList, utteranceTally, selectedUtteranceTally,regexTally, selectedRegexTally, skills, skillTags}\n    const updateFunctions = {updateLookups, updateLists, updateUtterances, updateRegexps, loadSkills}\n                \n  return (\n    <div className=\"OpenNluDataApp\">\n         <LoginSystemContext  \n                authServer={process.env.REACT_APP_authServer} \n                authServerHostname={process.env.REACT_APP_authServerHostname} \n            >{(user,setUser,getAxiosClient,getMediaQueryString,getCsrfQueryString, isLoggedIn, loadUser, useRefreshToken, logout, saveUser) => {  \n                \n                return <div  ><Router>\n                      \n                \n                        <Route exact path='*' render={\n                            (props) => {\n                                return <NavbarComponent waiting={waiting} user={user} isLoggedIn={isLoggedIn} history={props.history} message={pageMessage} setPageMessage={setPageMessage}  getAxiosClient={getAxiosClient}  />\n                            }}\n                        />\n                        <div style={{marginLeft:'0.5em'}} >\n                            \n                            \n                            <Route exact path='/menu' component={SiteMenu} />\n                            <Route path='/sources' render={\n                                (props) => <LocalStorageUploadManager {...props} startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions} lookups={lookups}  />\n                            }/>\n                            \n                            \n                            <Route path='/importreview' render={\n                                (props) => <ImportReviewPage {...props} startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions} lookups={lookups}  />\n                            }/>\n                            \n                            \n                            \n                            <Route exact path='/import' render={\n                                (props) => <NluImportEditor {...props}        lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />}\n                                      \n                            />\n                            \n                            <Route exact path='/import/skill/:skillId' render={\n                                (props) => <NluImportEditor {...props}        lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />}\n                                      \n                            />\n                            \n                            <Route exact path='/import/intent/:intentId' render={\n                                (props) => <NluImportEditor {...props}        lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions} setPageMessage={setPageMessage}    />}\n                                      \n                            />\n                            \n                            <Route path='/import/skill/:skillId/intent/:intentId' render={\n                                (props) => <NluImportEditor {...props}        lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions} setPageMessage={setPageMessage}    />}\n                                      \n                            />\n                            \n                            \n                            <Route exact  path='/examples' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                            />\n                            \n                            <Route exact path='/examples/skill/:skillId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                            />\n                            \n                            <Route path='/examples/intent/:intentId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                            />\n                            \n                            <Route exact path='/examples/skill/:skillId/intent/:intentId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                            />\n                            \n                            <Route exact path='/skills/:skillId' render={(props) => <NluSkillsEditor {...props}    user={user}   lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}   getAxiosClient={getAxiosClient}  />} \n                            />\n                            \n                            <Route exact path='/skills/skill/:skillId' render={(props) => <NluSkillsEditor {...props}    user={user}   lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}   getAxiosClient={getAxiosClient}  />} \n                            />\n                            \n                            <Route exact path='/skills/:skillId/publish' render={(props) => <NluSkillsEditor {...props}   user={user}    lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}  publish={true}   getAxiosClient={getAxiosClient} />} \n                            />\n                            \n                            <Route exact path='/skills/skill/:skillId/publish' render={(props) => <NluSkillsEditor {...props}    user={user}   lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}   publish={true}  getAxiosClient={getAxiosClient} />} \n                            />\n\n                             <Route exact path='/skills' render={(props) => <NluSkillsEditor {...props}  user={user}      lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage} getAxiosClient={getAxiosClient}   />} \n                            />\n                            \n                           \n                            <Route exact path='/lists' render={\n                                (props) => <ListsManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />}\n                                      \n                            />\n                            <Route exact path='/lists/:listId' render={\n                                (props) => <ListsManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions}  setPageMessage={setPageMessage}   />}\n                                      \n                            />\n                            \n                            \n                            <Route exact path='/utterances' render={\n                                (props) => <UtterancesManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions}   />}\n                                      \n                            />\n                            <Route exact path='/utterances/:listId' render={\n                                (props) => <UtterancesManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions}  />}\n                                      \n                            />\n                            \n                            \n                            <Route exact path='/regexps' render={\n                                (props) => <RegexpsManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions}   />}\n                                      \n                            />\n                            <Route exact path='/regexps/:listId' render={\n                                (props) => <RegexpsManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions}  />}\n                            />\n                            <Route exact path='/help' component={HelpText}     />\n                            <Route exact path='/helpimport' component={HelpTextImport}     />\n                            <Route exact path='/helpexport' component={HelpTextExport}     />\n                            <Route exact path='/helpabout' component={HelpTextAbout}     />\n                            \n                            <Route exact path='/search' render={(props) => <SkillSearchPage user={user} getAxiosClient={getAxiosClient} lookups={lookups} updateFunctions={updateFunctions}  />} />\n                           \n                            <Route exact path='/' component={HelpText} />\n\n                            <Route path='/login'  render={\n                            (props) => <div style={{width:'90%', marginLeft:'1em', align:'center', marginTop:'1em'}}  ><LoginSystem  \n                               match={props.match}\n                               location={props.location}\n                               history={props.history}\n                               authServer={process.env.REACT_APP_authServer} \n                                // also need external link to auth server (combind authServerHostname + authServer) for google, github, .. login buttons\n                                authServerHostname={process.env.REACT_APP_authServerHostname} \n                                // update for login api location, use package.json proxy config to map other host/port to local link\n                               loginButtons={process.env.REACT_APP_loginButtons?process.env.REACT_APP_loginButtons.split(\",\"):[]}\n                                // optional callbacks\n                                logoutRedirect={'/'}\n                               user={user} setUser={setUser} isLoggedIn={isLoggedIn} logout={logout} saveUser={saveUser} startWaiting={startWaiting} stopWaiting={stopWaiting} \n                             /></div>}\n                             />\n                        </div>\n                </Router>\n              </div>\n                  }}\n\n        </LoginSystemContext>\n   \n                 <br/>\n                <br/>\n                <br/>\n    </div>\n  );\n}\n                \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/thumb-up.f18de183.svg\";","module.exports = __webpack_public_path__ + \"static/media/helpoverview.646ef0b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/singingman.5d08cb4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/waiting.d362cb3f.gif\";","module.exports = __webpack_public_path__ + \"static/media/thumb-down.73b0ce24.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-thick-left.f29ee705.svg\";"],"sourceRoot":""}
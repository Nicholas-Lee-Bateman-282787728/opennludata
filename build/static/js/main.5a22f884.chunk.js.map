{"version":3,"sources":["index.js","www/images/check.svg","www/utils.js","www/useDB.js","www/useImportMergeFunctions.js","www/useImportUtils.js","www/useImportFunctions.js","www/components/TagAllDropDown.js","www/components/IntentAllDropDown.js","www/components/SkillAllDropDown.js","www/components/Components.js","www/components/JSONTextEditor.js","www/LocalStorageUploadManager.js","www/components/ListAllDropDown.js","www/components/SearchInput.js","www/components/ListsManagerSearchBar.js","www/useListItemRow.js","www/components/SuggestionComponent.js","www/ListsManagerRow.js","www/useDBSingleKey.js","www/useListItemEditor.js","www/ListsManager.js","www/components/UtterancesManagerSearchBar.js","www/UtterancesManagerRow.js","www/UtterancesManager.js","www/components/RegexpsManagerSearchBar.js","www/RegexpsManagerRow.js","www/RegexpsManager.js","www/useNluRow.js","www/NluExampleRow.js","www/components/EditorSearchBar.js","www/useNluEditor.js","www/NluExampleEditor.js","www/components/NavbarComponent.js","www/NluImportRow.js","www/NluImportEditor.js","www/export/createZip.js","www/export/exportJOVO.js","www/export/exportJSON.js","www/export/exportMycroft.js","www/export/RASATemplates.js","www/export/exportRASAMD.js","www/export/exportRASAJSON.js","www/export/index.js","www/PublishPage.js","www/components/DropDownComponent.js","www/components/TagComponent.js","www/components/NluSkillEditorComponent.js","www/useRestEndpoint.js","www/useSkillsEditor.js","www/NluSkillsEditor.js","www/ImportReviewPage.js","www/SkillSearchPage.js","www/App.js","www/serviceWorker.js","www/index.js","www/images/thumb-up.svg","www/images/helpoverview.svg","www/images/singingman.svg","www/images/waiting.gif","www/images/thumb-down.svg","www/images/arrow-thick-left.svg","www/images/arrow-thick-right.svg"],"names":["module","exports","require","__webpack_require__","p","RASA","slotTypes","unfeaturized","text","bool","list","float","min_value","max_value","categorical","values","autofillOptions","GoogleAssistant","entityTypes","Alexa","toSnakeCase","str","toLowerCase","replace","snakeToCamelCase","group","toUpperCase","camelToSnakeCase","letter","concat","generateObjectId","Date","getTime","toString","Math","random","parentUrl","url","split","slice","join","uniquifyArray","a","Array","isArray","index","map","value","Object","keys","uniquifyArrayOfObjects","field","emptyIndex","replaceEntities","example","entities","sort","b","start","offset","newExample","entity","type","end","diff","length","replaceEntitiesWithValues","replacement","reducer","state","action","parseInt","item","toConsumableArray","items","Error","useDB","database","databaseTable","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","localforageStorage","localforage","createInstance","name","storeName","getId","id","findKeyBy","k","loadAll","then","ipromises","key","push","Promise","iresolve","ireject","getItem","res","all","updated_date","saveItem","console","log","isNewItem","setItem","found","listItem","listItemIndex","deleteItem","getIdForIndex","removeItem","setItems","clear","findBy","filter","matchFunction","filtered","i","useImportMergeFunctions","localforageStorageIntents","localforageStorageEntities","localforageStorageUtterances","localforageStorageRegexps","localforageStorageSkill","mergeIntents","examples","skill","resolve","reject","allItems","allItemsIndex","JSON","stringify","intent","trim","newItems","replacements","skills","final","updated","created","error","mergeEntities","allLists","allListsIndex","newListItem","tags","existingAlternatives","synonym","newAlternatives","mergeUtterances","utterances","addTag","mergeRegexps","regexps","mergeSkill","title","balanced","detectFileType","json","parse","data","rasa_nlu_data","common_examples","intents","invocation","lists","e","JSZip","loadAsync","zip","forEach","relativePath","zipEntry","indexOf","unzip","content","pathFilters","promises","j","pathFilter","file","async","fileContent","path","catch","filesWithContent","splitSentences","splits","splitText","generateIntentSplits","newSplits","sortExampleSplits","generateEntitySplits","parts","extractSynonym","alternative","generateUtteranceSplits","tag","cleanListItem","sortListSplits","generateIntentSplitsForMycroft","intentLabel","intentExample","intentKey","expandOptions","options","body","innerOptions","ib","sentences","multiplyArrays","pre","post","sentence","line","latestText","limit","extractEntities","results","aval","bval","generateSplitsFromRasaMd","files","allIntents","allRegexps","allSynonyms","entitiesFromLookup","intentData","lines","headerLine","dataLines","startsWith","regexTitle","entityType","remainder","cleanString","undefined","remainderParts","remainderJSONParts","entityTypeParts","generateSplitsFromRasaJson","cleanEntities","el","generateSplitsFromJovoJson","phrases","phrase","inputs","inputKey","input","markerStart","entityi","useImportFunctions","sendPageMessage","_useImportMergeFuncti","_useImportUtils","useImportUtils_unzip","useImportUtils_splitSentences","useImportUtils_generateIntentSplits","useImportUtils_generateEntitySplits","useImportUtils_generateUtteranceSplits","useImportUtils_cleanListItem","useImportUtils_extractSynonym","useImportUtils_sortListSplits","useImportUtils_sortExampleSplits","useImportUtils_detectFileType","useImportUtils_generateSplitsFromJovoJson","useImportUtils_generateSplitsFromRasaJson","useImportUtils_generateSplitsFromRasaMd","useImportUtils_generateIntentSplitsForMycroft","history","useHistory","importTextIntents","arguments","importTextEntities","importIntents","fileType","importJsonIntents","importUtterances","utterance","importTextUtterances","importJsonUtterances","importEntities","importJsonEntities","importAll","entitiesData","utterancesData","importSkillJson","setTimeout","fileParts","fullPath","pathParts","fileName","intentName","nameFromFilename","endsWith","importMycroft","askill1","askill2","askill3","importJovo","importRASA","TagAllDropDown","props","react_default","createElement","Dropdown","as","ButtonGroup","Toggle","size","Button","Menu","style","display","onSubmit","preventDefault","tagAll","target","InputGroup","className","onChange","setTagAllValue","tagAllValue","variant","onClick","lookups","tagLookups","skillKey","Item","untagAll","marginLeft","IntentAllDropDown","intentAll","setIntentAllValue","intentAllValue","intentLookups","SkillAllDropDown","skillSetAll","setSkillAllValue","skillAllValue","skillLookups","unskillAll","MatchesTallies","fontWeight","filteredItems","HelpMenu","react_router_dom","marginRight","to","HelpText","src","helpSVG","width","height","alt","href","HelpTextImport","HelpTextAbout","HelpTextExport","NewFileButtons","match","FileSelector","lib_default","multiple","handleFileSelection","WithSelectedDropDowns","react","selectedTally","components_SkillAllDropDown","components_IntentAllDropDown","components_TagAllDropDown","JSONTextEditor","_useState","useState","_useState2","setTitle","_useState3","_useState4","setText","_useState5","_useState6","isJson","setIsJson","_useState7","_useState8","setJson","_useState9","_useState10","editorMode","setEditorMode","_useState11","_useState12","editorOptions","setEditorOptions","params","itemId","useEffect","jsonParsed","parentLink","linkParts","editorModeOptions","minHeight","es","theme","ace","mode","allowedModes","IndexPage","FilesList","localforageStorageImport","saveSkill","showError","setPageMessage","ListGroup","window","confirm","generateAsync","blob","saveAs","downloadZip","Blob","importFunctions","Fragment","LocalStorageUploadManager","_useDB","ev","result","_result","fileData","created_date","saveItemWrap","react_router","render","assign","exact","iprops","ListAllDropDown","listsLookups","SearchInput","_ref","searchFilter","setSearchFilter","placeholder","ListsManagerSearchBar","topTagOptions","setTopTagOptions","topTagOptionss","listKey","setListFilterValue","unshift","selectedListTally","resetSelection","checkImage","selectAll","components_SearchInput","listFilterValue","createEmptyItem","useListItemRow","splitNumber","selectionState","setSelectionState","setTags","reactTags","React","createRef","onTagDelete","newTags","splice","newItem","newTag","onTagAddition","updateExampleContent","updateExampleSynonym","selectItem","isSelected","deselectItem","SuggestionComponent","query","ListsManagerRow","_useListItemRow","position","textAlign","borderTop","borderRadius","marginTop","ReactTags_umd_default","placeholderText","minQueryLength","maxSuggestionsLength","autoresize","allowNew","ref","suggestionComponent","suggestions","listName","onDelete","onAddition","ret","singleKey","sortFunction","useListItemEditor","databaseKey","updateLists","_useDBSingleKey","useDBSingleKey","setFilteredItems","filteredItemsKeys","setFilteredItemsKeys","listRef","useParams","listId","matchText","matchPicklist","itemKeys","location","pathname","val","tagValue","finalTags","current","resetAfterIndex","getItemSize","baseSize","innerWidth","deleteAll","RenderRow","saveNlu","ListsManager","_useListItemEditor","updateFunctions","components_ListsManagerSearchBar","components_ListAllDropDown","index_esm","itemData","itemKey","itemCount","itemSize","renderEditor","UtterancesManagerSearchBar","utteranceTagsLookups","selectedUtteranceTally","UtterancesManagerRow","UtterancesManager","updateUtterances","components_UtterancesManagerSearchBar","RegexpsManagerSearchBar","selectedRegexTally","regexpTagsLookups","RegexpsManagerRow_UtterancesManagerRow","RegexpsManager","updateRegexps","components_RegexpsManagerSearchBar","useNluRow","newEntity","setNewEntity","intentTitle","setIntentTitle","setSkills","reactSkills","createSelection","createTextRange","selRange","collapse","moveStart","moveEnd","select","setSelectionRange","selectionStart","selectionEnd","focus","entityTypeChanged","entityNumber","newEntities","typeChanged","textSelection","startTextSelection","endTextSelection","isOverlapProblem","bypass","isOverlap","onSkillDelete","newSkills","newSkill","onSkillAddition","diffPos","findFirstDiffPos","insertionLength","entityIndex","deletionLength","entityClicked","entityKey","document","getElementById","intentChanged","entityDelete","setSkill","NluExampleRow","_useNluRow","textInput","setTextInput","intentOptions","entitiesDropdowns","entityOptions","entityLookups","textSelectionFrom","onFocus","onSelect","getSelection","EditorSearchBar","topskillOptions","setSkillFilterValue","setIntentFilterValue","skillFilterValue","intentFilterValue","useNluEditor","updateLookups","skillId","intentId","intentFilter","skillFilter","searchFilterBool","newIntent","intentValue","skillValue","heightPerLine","tagsPerLine","entitiesPerLine","skillsPerLine","tallyExtras","round","saveAll","lsItems","exampleItems","saveLSItem","NluExampleEditor","_useNluEditor","components_EditorSearchBar","NavbarComponent","astyle","paddingLeft","currentPage","pages","/","show","/search","/sources","/regexps","/lists","/utterances","/examples","/skills","/help","setStuff","user","token","access_token","getAxiosClient","get","links","link","page","Navbar","bg","border","message","top","left","background","padding","minWidth","zIndex","fireImage","vAlign","isLoggedIn","waitingImage","right","waiting","NluImportRow","thumbupImage","thumbdownImage","NluImportEditor","paddingRight","arrowthickleftImage","arrowthickrightImage","createZip","zipStructure","recurseZipStructure","base64","folders","folder","exportJOVO","_callee","regenerator_default","wrap","_context","prev","next","abrupt","jovo","entityTypeName","googleType","alexaType","dialogflow","alexa","synonyms","synonymsIndex","entityExtrasList","inputTypes","stop","_callee2","_context2","t0","t1","sent","exportJSON","listsStorage","utterancesStorage","dbEntities","usedLists","filledLists","useList","iitem","utterancesLists","allUtterances","thisUtterance","oresolve","oreject","exportMycroft","modelFiles","combinedEntities","RASATemplates","config","credentials","endpoint","actions","single_action","actionName","domain","stories","session","generateFolderTree","nluContent","fileLookups","actionsContent","configContent","domainContent","credentialsContent","endpointsContent","actionFiles","storyData","folderTree","storyContent","exportFormats","exportFunction","entityLists","entityValue","entityList","synonymsOut","nluOut","intentItem","rasaConfig","rasaCredentials","rasaEndpoint","domainActions","rasaActions","string","snake","substring","domainEntities","domainIntents","domainSlots","slots","domainSlotsMeta","slot","slotType","domainContentParts","rasaSession","utteranceKey","rasaStories","exportRASAMD","regex_features","entity_synonyms","exportRASAJSON","PublishPage","currentSkill","_id","skillToSave","setCurrentSkill","setMongoId","DropDownComponent","filterValue","setFilterValue","optionKey","TagComponent","setRegexpEntity","setRegexpIntent","components_DropDownComponent","NluSkillEditorComponent","utteranceTags","listItemKey","utteranceListTags","rasa","entitiesForSkill","skillTags","marginBottom","removeSkillTag","addSkillTag","collatedItems","collatedIntent","useCurrentIntent","currentIntent","completionVariant","collatedCounts","setCurrentIntent","Badge","collatedEntity","listTags","removeListFromSkillEntity","addListToSkillEntity","setAlexaEntityType","setGoogleAssistantEntityType","tagComponent","regexpsLookups","regexpsCompleteLookups","removeRegexp","addRegexp","utterancesLookups","removeUtterance","addUtterance","removeUtteranceList","addUtteranceList","Tabs","defaultActiveKey","Tab","eventKey","newSlot","newSlotValue","setNewSlotValue","slotAutofill","setRASASlotAutofill","setRASASlotType","deleteSlot","fontStyle","setRASAActions","setRASAConfig","setRASAStories","setRASACredentials","setRASAEndpoint","setRASASession","setInvocation","useRestEndpoint","axiosClient","restUrl","modelType","patch","headers","Content-Type","doPatch","put","doPut","doPost","delete","doDelete","doGet","searchItems","skip","populate","queryParts","encodeURIComponent","doGetMany","useSkillsEditor","skillKeys","setSkillKeys","setEntitiesForSkill","listsForEntity","setListsForEntity","listsManager","_useState13","_useState14","setCollatedItems","_useState15","_useState16","collatedTags","setCollatedTags","_useState17","_useState18","setCollatedCounts","_useState19","_useState20","_useState21","_useState22","skillMatches","setSkillMatches","_useState23","_useState24","skillUpdatedMatches","setSkillUpdatedMatches","skillsStorage","examplesStorage","_useRestEndpoint","_useState25","_useState26","_useState27","_useState28","mongoId","findOnlineSkill","skillItem","err","forceReload","thisSkill","entitiesListsData","utterancesListsData","mycroft","entityName","indexEntities","_indexIntentsAndTags","newCollatedItems","newCollatedCounts","newCollatedTags","indexIntentsAndTags","_indexIntentsAndTags2","listIndex","regexp","isNaN","NaN","utteranceListsLookups","utteranceStorage","newSlots","NluSkillsEditor","skillsEditor","skillsList","color","toUTCString","publish","exportFormat","now","zipBody","ContextAwareToggle","children","callback","currentEventKey","useContext","AccordionContext","decoratedOnClick","useAccordionToggle","isCurrentEventKey","ImportReviewPage","skillTitle","setSkillTitle","collatedIntents","setCollatedIntents","collatedEntities","setCollatedEntities","importData","setImportData","Accordion","Card","Header","counts","Collapse","Body","iikey","ikey","SkillSearchPage","setSuggestions","searchResults","setSearchResults","sourcesDB","loadSkills","doSearch","queryIn","$search","Form","Row","Col","dist_default","onSuggestionsFetchRequested","$regex","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","onSuggestionSelected","event","_ref2","suggestionValue","suggestionIndex","sectionIndex","method","inputProps","Container","fluid","bStyle","sm","md","lg","xl","margin","userAvatar","SiteMenu","App","setWaiting","pageMessage","setPageMessageInner","messageTimeout","timeout","clearTimeout","setIntentLookups","setEntityLookups","setTagLookups","setSkillLookups","setListsLookups","setSelectedTally","setUtterancesLookups","setUtteranceListsLookups","setUtteranceTagsLookups","setRegexpsLookups","setRegexpsCompleteLookups","regexpListsLookups","setRegexpListsLookups","_useState29","_useState30","setRegexpTagsLookups","_useState31","_useState32","listTally","setListTally","_useState33","_useState34","setSelectedListTally","_useState35","_useState36","listTallyByList","setListTallyByList","_useState37","_useState38","selectedListTallyByList","setSelectedListTallyByList","_useState39","_useState40","regexTally","setRegexTally","_useState41","_useState42","setSelectedRegexTally","_useState43","_useState44","utteranceTally","setUtteranceTally","_useState45","_useState46","setSelectedUtteranceTally","startWaiting","stopWaiting","selected","distinct","self","newSelectedLists","newLists","tally","utteranceLists","utteranceIndex","utteranceCompleteIndex","index_modern","authServer","process","authServerHostname","setUser","getMediaQueryString","getCsrfQueryString","loadUser","useRefreshToken","logout","saveUser","component","www_ImportReviewPage","align","loginButtons","logoutRedirect","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","StrictMode","www_App","URL","origin","addEventListener","fetch","Service-Worker","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5a22f884.chunk.js","sourcesContent":["// \"Create React App\" tooling expects to find the WWW root here,\n// so we simply use this file to import the ./www directory.\n//\n// For the backend, we set the container's entrypoint to src/api/index.js\n\nmodule.exports = require('./www')\n","module.exports = __webpack_public_path__ + \"static/media/check.8ab01baf.svg\";","//const yaml = require('js-yaml');\n// FUNCTIONS \n\nconst RASA = {\n    slotTypes : {\n        'unfeaturized': {},\n        'text': {},\n        'bool': {},\n        'list': {},\n        'float': {'min_value':'int', 'max_value':'int'},\n        'categorical': {'values':'list'}\n    },\n    autofillOptions: ['Yes','No']\n}\n\n// https://cloud.google.com/dialogflow/docs/reference/system-entities\nconst GoogleAssistant = {\n    entityTypes: [\"@sys.date-time\",\"@sys.date\",\"@sys.date-period\",\"@sys.time\",\"@sys.time-period\",\"@sys.number\",\"@sys.cardinal\",\"@sys.ordinal\",\"@sys.number-integer\",\"@sys.number-sequence\",\"@sys.flight-number\",\"@sys.unit-area\",\"@sys.unit-currency\",\"@sys.unit-length\",\"@sys.unit-speed\",\"@sys.unit-volume\",\"@sys.unit-weight\",\"@sys.unit-information\",\"@sys.percentage\",\"@sys.temperature\",\"@sys.duration\",\"@sys.age\",\"@sys.currency-name\",\"@sys.unit-area-name\",\"@sys.unit-length-name\",\"@sys.unit-speed-name\",\"@sys.unit-volume-name\",\"@sys.unit-weight-name\",\"@sys.unit-information-name\",\"@sys.address\",\"@sys.zip-code\",\"@sys.geo-capital\",\"@sys.geo-country\",\"@sys.geo-country-code\",\"@sys.geo-city\",\"@sys.geo-state\",\"@sys.place-attraction\",\"@sys.airport\",\"@sys.location\",\"@sys.email\",\"@sys.phone-number\",\"@sys.person\",\"@sys.music-artist\",\"@sys.music-genre\",\"@sys.color\",\"@sys.language\",\"@sys.any\",\"@sys.url\"]\n}\n\n//https://developer.amazon.com/en-US/docs/alexa/custom-skills/slot-type-reference.html\",\nconst Alexa = {\n    entityTypes: [\"AMAZON.DATE\",\"AMAZON.DURATION\",\"AMAZON.FOUR_DIGIT_NUMBER\",\"AMAZON.NUMBER\",\"AMAZON.Ordinal\",\"AMAZON.PhoneNumber\",\"AMAZON.TIME\",\"AMAZON.SearchQuery\",\"AMAZON.Actor\",\"AMAZON.Airline\",\"AMAZON.Airport\",\"AMAZON.Anaphor\",\"AMAZON.Animal\",\"AMAZON.Artist\",\"AMAZON.Author\",\"AMAZON.Book\",\"AMAZON.City\",\"AMAZON.Color\",\"AMAZON.Corporation\",\"AMAZON.Country\",\"AMAZON.CreativeWorkType\",\"AMAZON.DayOfWeek\",\"AMAZON.FictionalCharacter\",\"AMAZON.FirstName\",\"AMAZON.Food\",\"AMAZON.Genre\",\"AMAZON.Language\",\"AMAZON.Month\",\"AMAZON.Movie\",\"AMAZON.MusicAlbum\",\"AMAZON.MusicGroup\",\"AMAZON.Musician\",\"AMAZON.MusicRecording\",\"AMAZON.Person\",\"AMAZON.RadioChannel\",\"AMAZON.Region\",\"AMAZON.RelativePosition\",\"AMAZON.Room\",\"AMAZON.Sport\",\"AMAZON.StreetName\",\"AMAZON.TVSeries\",\"AMAZON.VideoGame\",\"AMAZON.VisualModeTrigger\"]\n}\n\n\nfunction toSnakeCase(str) {\n    return str.toLowerCase().replace(/[^a-z]/g, '_').replace('__','_')\n}\n\nconst snakeToCamelCase = (str) => str.replace(\n    /([-_][a-z])/g,\n    (group) => group.toUpperCase()\n                    .replace('-', '')\n                    .replace('_', '')\n);\n\nconst camelToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\n\n\n\nfunction generateObjectId() {\n    var timestamp = (new Date().getTime() / 1000 | 0).toString(16);\n    return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function() {\n        return (Math.random() * 16 | 0).toString(16);\n    }).toLowerCase();\n}\n   \nfunction parentUrl(url) {\n    return url.split(\"/\").slice(0,-1).join(\"/\") \n}\n\nfunction concatText(text,words) {\n   let parts = text.split(' ')\n   let shorter = parts.slice(0,20).join(' ')\n   return (shorter.length < text.length) ? shorter + '...' : shorter;\n}\n\n\n\n    \n    function findFirstDiffPos(a, b) {\n      if (a === b) return -1;\n      for (var i=0; a[i] === b[i]; i++) {}\n      return i;\n    }\n    \n    function uniquifyArray(a) {\n        //console.log(['UNIQARRAY',a])\n        if (Array.isArray(a)) {\n            var index = {}\n            a.map(function(value) {\n                index[value] = true \n                return null\n            })\n            return Object.keys(index)\n        } else {\n            return []\n        }\n    }\n\n    function uniquifyArrayOfObjects(a,field) {\n         if (Array.isArray(a)) {\n             var index = {}\n            var emptyIndex = null\n            a.map(function(value) {\n                if (value) {\n                    if (value[field]) {\n                        index[value[field]] = value \n                    } else {\n                        emptyIndex = value\n                    }\n                }\n                return null\n            })\n            if (emptyIndex) return [emptyIndex].concat(Object.values(index))\n            else return Object.values(index)\n        } else {\n            return []\n        }\n    }\n    function replaceEntities(example,entities) {\n        // replace entity values with {entityName}\n        // first sort entities by start key\n        entities = entities.sort(function(a,b) {\n          if (a.start < b.start) return -1\n          else return 1  \n        })\n        var offset = 0\n        var newExample = example\n        entities.map(function(entity) {\n            newExample = newExample.slice(0,entity.start + offset)+\"{\"+entity.type+\"}\"+newExample.slice(entity.end + offset)\n            var diff = (entity.end - entity.start) - (entity.type.length + 2)\n            offset -= diff\n            return null\n        })\n        return newExample\n    }\n    \n    function replaceEntitiesWithValues(example,entities) {\n        // replace entity values with {entityName}\n        // first sort entities by start key\n        if (example && Array.isArray(entities)) {\n                entities = entities.sort(function(a,b) {\n              if (a.start < b.start) return -1\n              else return 1  \n            })\n            var offset = 0\n            var newExample = example\n            entities.map(function(entity) {\n                var replacement = \"[\"+entity.value+\"](\"+entity.type+\")\"\n                newExample = newExample.slice(0,entity.start + offset)+replacement+newExample.slice(entity.end + offset)\n                var diff = (entity.end - entity.start) - (replacement.length)\n                offset -= diff\n                return null\n            })\n            return newExample\n        } else {\n            return example\n        }\n    }\n    \n    \nexport {generateObjectId, parentUrl, concatText , findFirstDiffPos,uniquifyArray, uniquifyArrayOfObjects, replaceEntities,replaceEntitiesWithValues,  RASA, GoogleAssistant, Alexa, snakeToCamelCase, camelToSnakeCase, toSnakeCase }\n","import {useReducer} from 'react';\nimport {generateObjectId} from './utils'\nimport localforage from 'localforage'\n\n// handle list updates with minimum disruption to top level items\nfunction reducer(state, action) {\n    const index = parseInt(action.index)\n switch (action.type) {\n    case \"append\":\n      if (action.item) {\n        return [...state, action.item];\n      } else return state\n    case \"prepend\":\n      if (action.item) {\n        return [action.item, ...state];\n      } else return state\n    case \"insert\":\n      if (action.item && typeof index === \"number\" ) {\n          if (state.length > 0) {\n              return [\n                ...state.slice(0, index),\n                action.item,\n                ...state.slice(index)\n              ];\n          } else return state\n        } else return state\n    case \"remove\":\n      if (typeof index === \"number\" ) {\n          return [\n            ...state.slice(0, index),\n            ...state.slice(index + 1)\n          ];\n       } else return state \n    case \"update\":\n       if (action.item && typeof index === \"number\" ) {\n           return  [\n            ...state.slice(0, index),\n            action.item,\n            ...state.slice(index + 1)\n          ];\n        } else return state \n    case \"replaceall\":\n        if (typeof action.items === \"object\") {\n            return action.items\n        } else return state\n    default:\n      throw new Error('Invalid reduction in useDB');\n  }\n}\n   \n\n// state manager with local storage backing\nexport default function useDB(database, databaseTable) {\n     const [items, dispatch] = useReducer(reducer,[]);\n     var localforageStorage = localforage.createInstance({\n       name: database ? database : \"localstoragemanager\",\n       storeName   : databaseTable ? databaseTable : 'data',\n     });\n\n    function getId(item) {\n        if (item && item.id) {\n            return item.id\n        } else {\n            throw new Error(\"Missing ID value in getId\")\n        }\n    }\n    function getIdForIndex(index) {\n        if (items && items[index] && items[index].id) {\n            return items[index].id\n        } else {\n            throw new Error(\"Missing ID value in getIdForIndex\")\n        }\n    }\n    \n\n    function loadAll() {\n        localforageStorage.keys().then(function(keys) {\n            var ipromises = []\n            keys.map(function(key) {\n                ipromises.push(new Promise(function(iresolve,ireject) {\n                   localforageStorage.getItem(key).then(function(res) {\n                       iresolve(res)\n                   })\n                }))\n                return null\n            })\n            Promise.all(ipromises).then(function(res) {\n                res = res.sort(function(a,b) {if (a.updated_date < b.updated_date) return 1; else return -1})\n                dispatch({ type: \"replaceall\", items: res });\n            })\n        })\n    }\n\n    \n    // save or create\n    function saveItem(item,index) {\n        if (item) {\n            console.log(['SAVEDB',item,index])\n            // update sources and save text in seperate localstorage\n            // ensure id\n            var isNewItem = false;\n            if (!item.id) {\n                isNewItem = true;\n                item.id = generateObjectId()\n            }\n            localforageStorage.setItem(item.id,item)\n            if (isNewItem) {\n                dispatch({ type: \"prepend\",item: item });\n            } else {\n                if (items) {\n                    var found = null\n                    items.map(function(listItem,listItemIndex) {\n                        if (listItem.id === item.id) {\n                            found = listItemIndex\n                        } \n                        return null\n                    })\n                    if (found != null) {\n                        dispatch({ type: \"update\",item: item , index: found});\n                    } else {\n                        dispatch({ type: \"prepend\",item: item });\n                    }\n                } \n            }  \n        }\n    }\n    \n    function findBy(field,value) {\n        var key = findKeyBy(field,value)\n        if (key) return items[key];\n        return null\n    }\n    \n    function findKeyBy(field,value) {\n        for (var k in items) {\n            if (items[k] && items[k][field] === value) return k\n        }\n        return null\n    }\n\n\n    function setItemsWrap(items) {\n        localforageStorage.clear().then(function() {\n            dispatch({ type: \"replaceall\", items: items})\n            if (items) {\n                items.map(function(item) { localforageStorage.setItem(getId(item),item); return null})\n            }\n        })\n        \n    }\n    \n    function deleteItem(index) {\n        var id = getIdForIndex(index)\n        if (id) {\n            localforageStorage.removeItem(id).then(function() {\n                dispatch({ type: \"remove\", index: index})\n            })\n        }\n        \n    }\n    \n    function filter(matchFunction) {\n        var filtered = []\n        if (matchFunction) {\n            items.map(function(item,i) {\n              if (matchFunction(item)) {\n                  filtered.push(item)\n              }  \n              return null\n            })\n        }\n        return filtered\n        \n    }\n    \n    return {getId:getId, loadAll:loadAll, saveItem:saveItem, deleteItem:deleteItem , items:items, setItems:setItemsWrap, findKeyBy:findKeyBy, findBy:findBy, filter: filter}\n    \n}\n","import localforage from 'localforage'\nimport {uniquifyArray, generateObjectId} from './utils'\n\nexport default function useImportMergeFunctions() {\n\n     var localforageStorageIntents = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'examples',\n     });\n     var localforageStorageEntities = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'lists',\n     });\n     var localforageStorageUtterances = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'utterances',\n     });\n     var localforageStorageRegexps = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'regexps',\n     });\n     var localforageStorageSkill = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'skills',\n     }); \n    /**\n     *  merge an array of json structured intents into the main intent database \n     * \n     *  every import records is tagged with the skill parameter when present\n     */\n    function mergeIntents(examples,skill) {\n        return new Promise(function(resolve, reject) {\n            console.log(['import examples',examples, typeof examples,skill])\n            if (examples) {\n                localforageStorageIntents.getItem('alldata').then(function(allItems) {\n                    var allItemsIndex = {}\n                    if (!allItems) {\n                        allItems = []\n                    }\n                    // index existing items by example\n                    \n                    allItems.map(function(listItem) {\n                        const key = JSON.stringify({entities:listItem.entities ? listItem.entities : [], intent: listItem.intent ? listItem.intent : '', example: listItem.example ? listItem.example : ''})\n                        if (listItem && listItem.example && listItem.example.trim())  {\n                            allItemsIndex[key] = listItem\n                        }\n                        return null\n                    })\n                    var newItems=[]\n                    var replacements=[]\n                    \n                    examples.map(function(listItem) {\n                        if (listItem && listItem.example && listItem.example.trim())  {\n                            // intent example already exists\n                            const key = JSON.stringify({entities:listItem.entities ? listItem.entities : [], intent: listItem.intent ? listItem.intent : '', example: listItem.example ? listItem.example : ''})\n                            listItem.id = listItem.id ? listItem.id : generateObjectId()\n                            if (allItemsIndex[key]) {\n                                replacements.push(listItem)\n                            } else {\n                                newItems.push(listItem)\n                                if (skill) listItem.skills = listItem.skills ? uniquifyArray( listItem.skills.push(skill)) : [skill]\n                            }\n                            //allItemsIndex[listItem.value] = listItem\n                        } \n                        return null\n                    })\n                    var final = []\n                    if (replacements.length > 0) {\n                        replacements.map(function(listItem) {\n                            const key = JSON.stringify({entities:listItem.entities ? listItem.entities : [], intent: listItem.intent ? listItem.intent : '', example: listItem.example ? listItem.example : ''})\n                            if (skill) listItem.skills = listItem.skills ? uniquifyArray( listItem.skills.push(skill)) : [skill]\n                            allItemsIndex[key] = listItem\n                            return null\n                        }); \n                        final = [].concat(newItems,Object.values(allItemsIndex))\n                    } else {\n                        final = [].concat(newItems,allItems)\n                    }\n                    console.log('IMPORT MERGE',final)\n                    localforageStorageIntents.setItem('alldata',final).then(function() {\n                      resolve({updated:replacements.length, created: newItems.length})  \n                    })\n                    //props.history.push('/import') \n                \n                })\n              } else {\n                reject({error:\"Missing import data\"})\n            }\n        })\n    }\n\n\n    function mergeEntities(entities, list) {\n        console.log(['merge entities',entities, list])\n        return new Promise(function(resolve, reject) {\n            if (entities) {\n                localforageStorageEntities.getItem('alldata').then(function(allLists) {\n                    //console.log(['got list ',allLists])\n                    var allListsIndex = {}\n                    if (!allLists) {\n                        allLists = []\n                    }\n                    // index by value\n                    allLists.map(function(listItem) {\n                        if (listItem && listItem.value && listItem.value.trim().length > 0)  {\n                            allListsIndex[listItem.value] = listItem\n                        }\n                        return null\n                    })\n                    var created = 0\n                    var updated = 0;\n                    entities.map(function(listItem,listItemIndex) {\n                        var newListItem = listItem;\n                        newListItem.id = newListItem.id ? newListItem.id : generateObjectId()\n                        // already there, just update tags\n                        if (allListsIndex[listItem.value]) {\n                            updated += 1\n                            newListItem.tags = newListItem.tags ? newListItem.tags : []\n                            if (list && list.trim().length > 0) newListItem.tags.push(list.trim())\n                            // merge alternatives\n                            var existingAlternatives = allListsIndex[listItem.value].synonym ? allListsIndex[listItem.value].synonym.split(\"\\n\") : []\n                            var newAlternatives = newListItem.synonym ? newListItem.synonym.split(\"\\n\") : []\n                            newListItem.synonym = uniquifyArray([].concat(existingAlternatives, newAlternatives)).sort().join(\"\\n\")\n                          \n                            // uniquify and sort tags\n                            newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                            allListsIndex[newListItem.value] = newListItem\n                        // new list item    \n                        } else {\n                            created += 1\n                            newListItem = {id: generateObjectId() , value: newListItem.value, synonym: newListItem.synonym ? newListItem.synonym : '', tags:newListItem.tags ? newListItem.tags : []}\n                            if (list && list.trim().length > 0) newListItem.tags.push(list.trim())\n                            // uniquify and sort tags\n                            newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                            allListsIndex[newListItem.value] = newListItem\n                        }\n                        return null\n                    })\n                    \n                    //console.log('IMPORT MERGE',res,parsed,[].concat(parsed,res))\n                    localforageStorageEntities.setItem('alldata',Object.values(allListsIndex)).then(function() {\n                        resolve({updated:updated, created: created})  \n                    })\n                    //props.history.push('/lists') \n                    ////props.setPageMessage(<div><b>sdfsdf</b><br/><b>sdfsdf</b><br/><b>sdfsdf</b><br/><b>sdfsdf</b><br/></div>)\n                    //props.setPageMessage('Imported '+Object.keys(allListsIndex).length +' entities into the list '+ title)\n                    //setTimeout(function() {\n                        //props.setPageMessage('')\n                    //},2000)\n                })\n            } else {\n                reject({error:\"Failed import\"})\n            }\n        })\n    }\n    \n    function mergeUtterances(utterances,addTag) {\n        console.log(['merge utterances',utterances, addTag])\n        return new Promise(function(resolve, reject) {\n            if (utterances) {\n                localforageStorageUtterances.getItem('alldata').then(function(allLists) {\n                    //console.log(['got list ',allLists])\n                    var allListsIndex = {}\n                    if (!allLists) {\n                        allLists = []\n                    }\n                    // index by value\n                    allLists.map(function(listItem) {\n                        if (listItem && listItem.value && listItem.value.trim().length > 0)  {\n                            allListsIndex[listItem.value] = listItem\n                        }\n                        return null\n                    })\n                    var created = 0\n                    var updated = 0;\n                    utterances.map(function(listItem,listItemIndex) {\n                        var newListItem = listItem;\n                        newListItem.id = newListItem.id ? newListItem.id : generateObjectId()\n                        // already there, just append tag and alternatives\n                        if (allListsIndex[listItem.value]) {\n                            updated += 1\n                            newListItem.tags = newListItem.tags ? newListItem.tags : []\n                            // merge alternatives\n                            var existingAlternatives = allListsIndex[listItem.value].synonym ? allListsIndex[listItem.value].synonym.split(\"\\n\") : []\n                            var newAlternatives = newListItem.synonym ? newListItem.synonym.split(\"\\n\") : []\n                            newListItem.synonym = uniquifyArray([].concat(existingAlternatives, newAlternatives)).sort().join(\"\\n\")\n                            // add tag ?\n                            if (addTag && addTag.trim().length > 0) newListItem.tags.push(addTag.trim())\n                            // uniquify and sort tags\n                            newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                            allListsIndex[newListItem.value] = newListItem\n                        // new list item    \n                        } else {\n                            created += 1\n                            newListItem = {id: generateObjectId() , value: newListItem.value, synonym: newListItem.synonym ? newListItem.synonym : '', tags:[]}\n                            if (addTag && addTag.trim().length > 0) newListItem.tags.push(addTag.trim())\n                            // uniquify and sort tags\n                            newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                            allListsIndex[newListItem.value] = newListItem\n                        }\n                        return null\n                    })\n                    \n                    //console.log('IMPORT MERGE',res,parsed,[].concat(parsed,res))\n                    localforageStorageUtterances.setItem('alldata',Object.values(allListsIndex)).then(function() {\n                        resolve({updated:updated, created: created})  \n                    })\n                    //props.history.push('/lists') \n                    ////props.setPageMessage(<div><b>sdfsdf</b><br/><b>sdfsdf</b><br/><b>sdfsdf</b><br/><b>sdfsdf</b><br/></div>)\n                    //props.setPageMessage('Imported '+Object.keys(allListsIndex).length +' entities into the list '+ title)\n                    //setTimeout(function() {\n                        //props.setPageMessage('')\n                    //},2000)\n                })\n            } else {\n                reject({error:\"Failed import\"})\n            }\n        })\n    }\n    \n    \n    function mergeRegexps(regexps,addTag) {\n        console.log(['merge regexps',regexps, addTag])\n        return new Promise(function(resolve, reject) {\n            if (regexps) {\n                localforageStorageRegexps.getItem('alldata').then(function(allLists) {\n                    //console.log(['got list ',allLists])\n                    var allListsIndex = {}\n                    if (!allLists) {\n                        allLists = []\n                    }\n                    // index by value\n                    allLists.map(function(listItem) {\n                        if (listItem && listItem.value && listItem.value.trim().length > 0)  {\n                            allListsIndex[listItem.value] = listItem\n                        }\n                        return null\n                    })\n                    var created = 0\n                    var updated = 0;\n                    regexps.map(function(listItem,listItemIndex) {\n                        var newListItem = listItem;\n                        newListItem.id = newListItem.id ? newListItem.id : generateObjectId()\n                        // already there, just append tag and alternatives\n                        if (allListsIndex[listItem.value]) {\n                            updated += 1\n                            newListItem.tags = newListItem.tags ? newListItem.tags : []\n                            // merge alternatives\n                            //var existingAlternatives = allListsIndex[listItem.value].synonym ? allListsIndex[listItem.value].synonym.split(\"\\n\") : []\n                            //var newAlternatives = newListItem.synonym ? newListItem.synonym.split(\"\\n\") : []\n                            //newListItem.synonym = uniquifyArray([].concat(existingAlternatives, newAlternatives)).sort().join(\"\\n\")\n                            // add tag ?\n                            if (addTag && addTag.trim().length > 0) newListItem.tags.push(addTag.trim())\n                            // uniquify and sort tags\n                            newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                            allListsIndex[newListItem.value] = newListItem\n                        // new list item    \n                        } else {\n                            created += 1\n                            newListItem = {id: generateObjectId() , value: newListItem.value, synonym: newListItem.synonym ? newListItem.synonym : '', tags:[]}\n                            if (addTag && addTag.trim().length > 0) newListItem.tags.push(addTag.trim())\n                            // uniquify and sort tags\n                            newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                            allListsIndex[newListItem.value] = newListItem\n                        }\n                        return null\n                    })\n                    \n                    console.log('IMPORT MERGE reg',allListsIndex)\n                    localforageStorageRegexps.setItem('alldata',Object.values(allListsIndex)).then(function() {\n                        resolve({updated:updated, created: created})  \n                    })\n              \n                })\n            } else {\n                reject({error:\"Failed import\"})\n            }\n        })\n    }\n    \n    function mergeSkill(skill) {\n        console.log(['merge skill',skill])\n        return new Promise(function(resolve, reject) {\n            if (skill && skill.title) {\n                localforageStorageSkill.getItem(skill.title).then(function(found) {\n                    // merge ?\n                    if (found) {\n                        console.log(['found skill',skill])\n                        localforageStorageSkill.setItem(skill.title,skill).then(function() {\n                            resolve({})  \n                        })\n                    } else {\n                        console.log(['create skill',skill])\n                        localforageStorageSkill.setItem(skill.title,skill).then(function() {\n                            resolve({})  \n                        })\n\n                    }\n                    \n                })\n            } else {\n                reject({error:\"Failed import\"})\n            }\n        })\n    }\n    \n\n    return  {mergeIntents, mergeEntities, mergeUtterances, mergeRegexps, mergeSkill}\n\n}\n","import JSZip from 'jszip'\nimport parenthesis from 'parenthesis'\nimport {generateObjectId} from './utils'\n\nvar balanced = require('balanced-match');\n\n\n    function detectFileType(item) {\n        return new Promise(function(resolve,reject) {\n            console.log(['DETECT FILE TYPE',item])\n            try {\n                var json = JSON.parse(item.data)\n                // RASA JSON FORMAT\n                if (json && json.rasa_nlu_data && json.rasa_nlu_data.common_examples) {\n                    resolve( {type: 'rasa.json'})\n                // JOVO JSON { \"invocation\": \"my test app\", \"intents\": [{\"name\": \"HelloWorldIntent\",\"phrases\": [\"hello\",\"say hello\"]}] } ,\n                } else if (json && json.title && json.intents && json.entities && json.id) {\n                    resolve({type: 'opennlu.skill'})\n                } else if (json && json.invocation && json.intents) {\n                    resolve({type: 'jovo.json'})\n                } else if (json && json.utterances) {\n                    resolve({type: 'opennlu.utterances'})\n                } else if (json && json.lists) {\n                    resolve({type: 'opennlu.lists'})\n                } else if (json && json.regexps) {\n                    resolve({type: 'opennlu.regexps'})\n                } else {\n                    resolve({type: 'json'})\n                }\n            } catch (e) {\n                // try zip file\n                var zip = new JSZip();\n                 zip.loadAsync(item.data)                                   // 1) read the Blob\n                .then(function(zip) {\n                    var found={}\n                    zip.forEach(function (relativePath, zipEntry) {  // 2) print entries\n                        console.log( zipEntry.name)\n                        // rasa\n                        if (zipEntry.name.indexOf('/domain.yml') !== -1) found['rasa_domain'] = true \n                        if (zipEntry.name.indexOf('/data/nlu.md') !== -1) found['rasa_data'] = true\n                        // jovo\n                        if (zipEntry.name.indexOf('/project.js') !== -1) found['jovo_project'] = true\n                        if (zipEntry.name.indexOf('/models/en-US.js') !== -1) found['jovo_lang'] = true\n                        // mycroft\n                        if (zipEntry.name.indexOf('/__init__.py') !== -1) found['mycroft_index'] = true\n                        if (zipEntry.name.indexOf('/vocab') !== -1) found['mycroft_vocab'] = true\n                        console.log(['FOUND',found])\n                    });\n                    console.log(['FOUND',found])\n                    if (found['rasa_domain'] && found['rasa_data']) {\n                        resolve({type: 'rasa.zip'})\n                    } else if (found['rasa_domain'] && found['rasa_data']) {\n                        resolve({type: 'jovo.zip'})\n                    } else if (found['mycroft_index'] && found['mycroft_vocab']) {\n                        resolve({type: 'mycroft.zip'})\n                    } else if (found['jovo_project'] && found['jovo_lang']) {\n                        resolve({type: 'jovo.zip'})\n                    } else {\n                        resolve()\n                    }\n                }, function (e) {\n                    //console.log('NOT ZIP')\n                    //console.log(e)\n                    \n                    if (item.data && item.data.indexOf('## intent:') !== -1) {\n                        resolve({type: 'rasa.markdown'})\n                    } else {\n                        resolve({type: 'text'})\n                    }\n                });\n                \n            }  \n        })\n               \n    }\n\n\n/**\n *  unzip a file and extract the content for files matching paths found in pathFilters array\n */\nfunction unzip(content,pathFilters) {\n    return new Promise (function( resolve, reject) {\n        var zip = new JSZip();\n        zip.loadAsync(content)\n        .then(function(zip) {\n            var promises=[]\n            zip.forEach(function (relativePath, zipEntry) {\n                //console.log(relativePath,zipEntry)\n                var found = false\n                for (var j in pathFilters) {\n                    var pathFilter = pathFilters[j]\n                    if ( zipEntry.name.indexOf(pathFilter) !== -1) { \n                        found = true\n                    }\n                }\n                if (found) { \n                    promises.push( new Promise(function(iresolve,ireject) {\n                        zip.file(relativePath).async(\"string\").then(function(fileContent) {\n                            \n                             //console.log('got ont')\n                             iresolve({path:zipEntry.name, data: fileContent})\n                        })\n                    }).catch(function(e) {\n                            \n                    }))\n                }\n            })\n            Promise.all(promises).then(function(filesWithContent) {\n                resolve(filesWithContent)\n            })\n        });\n    })\n}\n\n\n/**\n *  create array by splitting on newline and fullstop\n */\nfunction splitSentences(text) {\n      var final = []\n      if (text) {\n          // split by newline and full stop\n         var splits = text.split('\\n').join('::::').split('.').join('::::').split('::::') //.map(function(value) { return value.trim()})\n        // trim all splits\n        for (var splitText in splits) {\n            if(splitText.trim().length > 0) final.push(splits[splitText])\n        }\n     }\n     return final;\n}\n\n/**\n *  create entity objects from split sentences\n */\nfunction generateIntentSplits(text, intent) {\n    const splits = splitSentences(text)\n    var newSplits=[]\n    splits.map(function(text,i) {\n        if (text && text.trim().length > 0) {\n         newSplits.push({'id':generateObjectId(), 'example':text,'intent':intent ? intent : '',\"entities\":[], \"tags\":[]})\n        }\n        return null\n    })\n    return newSplits.sort(sortExampleSplits)\n}\n\n/**\n *  create entity objects from split sentences\n * eg synonym_value value value or value value value\n */\nfunction generateEntitySplits(text, entity) {\n    const splits = splitSentences(text)\n    var newSplits=[]\n    splits.map(function(text,i) {\n        if (text && text.trim().length > 0) {\n            var parts = extractSynonym(text.trim())\n            parts[1].map(function(alternative) {\n                newSplits.push({'id':generateObjectId(), 'value':alternative, synonym:parts[0], \"tags\":entity? [entity] : []})\n                return null\n            })\n        }\n        return null\n    })\n    return newSplits.sort(sortExampleSplits)\n}\n\n\n/**\n *  create entity objects from split sentences\n */\nfunction generateUtteranceSplits(text, tag) {\n        //console.log(['GEN UTT',text,tag])\n    const splits = splitSentences(text)\n    var newSplits=[]\n    splits.map(function(text,i) {\n        if (text && text.trim().length > 0) {\n            newSplits.push({'id':generateObjectId(), 'value':text, synonym:'', \"tags\":tag ? [tag] : []})\n        }\n        return null\n    })\n    return newSplits.sort(sortExampleSplits)\n}\n\n\n    \nfunction cleanListItem(text) {\n    return text ? text.replace(/[^0-9a-z ,]/gi, '') : ''\n}\n\n/**\n *  try to extract a synonym from a line of text by splitting on _\n */\nfunction extractSynonym(text) {\n    if (text) { \n        var parts = text.split('___')\n        if (parts.length > 1) {\n           return [parts[0],parts.slice(1)]   \n        } else {\n            return ['',[text]]\n        }\n    } else {\n        return ['',[]]\n    }\n}\n/**\n *   extract utterances alternatives by splitting on _\n */\nfunction extractAlternatives(text) {\n    if (text) { \n        var parts = text.split('___')\n        if (parts.length > 1) {\n           return [parts[0],parts.slice(1).join(\"\\n\")]   \n        } else {\n            return [text,'']\n        }\n    } else {\n        return ['','']\n    }\n}\n\nfunction sortListSplits(a,b) {\n    if (a.value < b.value) return -1;  else return 1;\n}\n\nfunction sortExampleSplits(a,b) {\n    if (a.example < b.example) return -1 ;else return 1;\n}\n\n\n    function extractLookupFilenamesFromRasaMd(item) {\n        var filenames=[]\n        if (item.data) {\n            item.data.split(\"##\").map(function(intentData,intentKey) {\n                var lines = intentData.split(\"\\n\")  \n                var headerLine = lines[0].trim()\n                var dataLines = (lines.length > 1) ? lines.slice(1) : []\n                if (headerLine.startsWith(\"lookup\")) {\n                     for (var i in dataLines) {\n                         filenames.push(dataLines[i])\n                     }\n                }\n            })\n        }\n    }\n    \n    function generateIntentSplitsForMycroftHandleBody(pre,post, parts, intent) {\n        var intents = []\n        console.log(['GEN handle',parts])\n        if (parts && parts.body) {\n            var innerParts = balanced('(',')',parts.body)\n            var innerPartsPost = balanced('(',')',parts.post)\n            if (innerParts) console.log(['RECURSE',innerParts])\n            if (innerPartsPost) console.log(['RECURSEPOST',innerPartsPost])\n            if (innerPartsPost) {\n                // recurse with parts.post\n                //intents = [].concat(intents, generateIntentSplitsForMycroftHandleBody(pre+parts.pre+innerPartsPost.pre,innerPartsPost.post+parts.post+post,innerPartsPost, intent))\n            } else {\n                var options = parts.post.split(\"|\")\n                console.log(['NP',parts])\n                options.map(function(option) {\n                    if (option && option.length) {\n                        intents.push({intent: intent, example:pre + parts.pre  + option + parts.post + post})\n                    }\n                });\n            }    \n            //if (innerParts) {\n                //// recurse with parts.body\n                //intents = [].concat(intents, generateIntentSplitsForMycroftHandleBody(pre+innerParts.pre,innerParts.post+post,innerParts, intent))\n            //} else {\n                //var options = parts.body.split(\"|\")\n                //console.log(['NP',parts])\n                //options.map(function(option) {\n                    //if (option && option.length) {\n                        //intents.push({intent: intent, example:pre + parts.pre  + option + parts.post + post})\n                    //}\n                //});\n            //}\n            \n\n        }\n        return intents\n    }\n                    \n\n    function generateIntentSplitsForMycroft(item, intentLabel) {\n\n            console.log(['GEN MYC',item])\n            var intents = []\n            if (item) {\n                console.log(['GEN MYC d',item])\n                item.split(\"\\n\").map(function(intentExample,intentKey) {\n                    expandOptions(intentExample).map(function(line) {\n                        var intent = extractEntities(line)\n                        intent.intent = intentLabel;\n                        intents.push(intent)\n                    })\n                })\n            }\n            console.log(['MY IMP COMPL',intents])  \n            return intents\n        \n\n        //var t = \"(i|we) want to (see (tigers|lions)|watch (penguins|monkeys)) AT the zoo\"\n        //return \n        \n        \n        function multiplyArrays(a,b) {\n            var results=[]\n            a.map(function(aval) {\n                  b.map(function(bval) {\n                      results.push(aval + bval)\n                  })\n            })\n            return results\n        }\n\n        function uniquifyArray(a) {\n            if (Array.isArray(a)) {\n                var index = {}\n                a.map(function(value) {\n                    index[value] = true \n                    return null\n                })\n                return Object.keys(index)\n            } else {\n                return []\n            }\n        }\n\n        function expandOptions(text) {\n            var options = []\n            var b = balanced('(',')',text)\n            if (b && b.body) {\n                var innerOptions = null\n                var ib = balanced('(',')',b.body)\n                if (ib) {\n                    innerOptions = expandOptions(b.body)\n                } else {\n                    innerOptions = b.body.split(\"|\")\n                }\n                innerOptions = uniquifyArray(innerOptions)\n                var sentences = uniquifyArray(multiplyArrays(multiplyArrays([b.pre],innerOptions),[b.post]))\n                sentences.map(function(sentence) {\n                   options=[].concat(options,expandOptions(sentence))  \n                })\n            } else {\n                options = text.split(\"|\")\n            }\n            return uniquifyArray(options)\n        }\n\n        function extractEntities(text) {\n            var entities=[]\n            var latestText = text\n            var b = balanced('{','}',latestText)\n            var limit = 20\n            while (b && limit) {\n                var entity = { value:b.body, start: b.start, end: b.end, type:b.body }\n                entities.push(entity)\n                latestText = b.pre + b.body + b.post\n                b = balanced('{','}',latestText)\n                limit --\n            }\n            return {example: latestText, entities: entities}\n        }\n\n    }\n\n\n    function generateSplitsFromRasaMd(item, files) {\n        var allIntents=[]\n        //var allEntities={}\n        var allRegexps={}\n        var allSynonyms={}\n        var entitiesFromLookup={}\n                                           \n        var items = []\n        if (item.data) {\n            item.data.split(\"##\").map(function(intentData,intentKey) {\n                var lines = intentData.split(\"\\n\")  \n                var headerLine = lines[0].trim()\n                var dataLines = (lines.length > 1) ? lines.slice(1) : []\n                \n                if (headerLine.startsWith(\"regex\")) {\n                    var regexTitle = headerLine.slice(6).trim()\n                    for (var i in dataLines) {\n                        var value = dataLines[i].slice(1).trim() // remove leading -\n                        if (regexTitle && value) {\n                            allRegexps[regexTitle] = Array.isArray(allRegexps[regexTitle]) ? allRegexps[regexTitle]  : []\n                            allRegexps[regexTitle].push(value)\n                        }\n                    }\n                } else if (headerLine.startsWith(\"synonym\")) {\n                    var synonym = headerLine.slice(8).trim()\n                    for (var i in dataLines) {\n                        var value = dataLines[i].slice(1).trim() // remove leading -\n                        if (synonym && value) {\n                            allSynonyms[synonym] = Array.isArray(allSynonyms[synonym]) ? allSynonyms[synonym]  : []\n                            allSynonyms[synonym].push(value)\n                        }\n                    }\n                } else if (headerLine.startsWith(\"lookup\")) {\n                    // NOTE lookups can only be loaded if files are also provided (from zip), reading a single MD/JSON nlu data file will skip the lookups\n                    if (files) {\n                        var entityType = headerLine.slice(7).trim()\n                        for (var i in dataLines) {\n                            var path = dataLines[i].trim()\n                            if (path && files[path]) {\n                                var entityLines = files[path].split(\"\\n\")\n                                entityLines.map(function(value) {\n                                    if (value && value.trim()) {\n                                        if (entitiesFromLookup[value]) {\n                                            entitiesFromLookup[value].tags = entitiesFromLookup[value].tags ? entitiesFromLookup[value].tags : []\n                                        } else {\n                                            entitiesFromLookup[value] = {tags:  [entityType]}\n                                        }\n                                    }\n                                })\n                            } \n                        }\n                    }\n                } else if (headerLine.startsWith(\"intent\")) {\n                    \n                    var intent = headerLine.slice(7)\n                    for (var i in dataLines) {\n                        var entities = {}\n                        var example = dataLines[i].slice(1).trim() // remove leading -\n                        var intentData = {intent: intent, example: example}\n                        if (example.length > 0) {\n                            console.log(example)// extract entities\n                            var remainder = example\n                            var cleanString = example\n                            var parts = balanced('[', ']', remainder)\n                            //console.log(['PAREN',parts])\n                            var limit=10\n                            while (limit > 0 && parts && parts !== undefined && typeof parts === \"object\") {\n                                var entity = {}\n                            \n                                limit --\n                                remainder = parts.post\n                                entity.value = parts.body\n                                entity.start = parts.start\n                                entity.end = parts.end\n                                //cleanString = cleanString.slice(0,entity.start) + entity.value + cleanString.slice(entity.end+1)\n                                \n                                var remainderParts = balanced('(',')',parts.post)\n                                var remainderJSONParts = balanced('{','}',parts.post)\n                                //console.log(['PARENEND',entity, cleanString, remainderParts])\n                                if ((remainderParts && remainderParts.body) && (remainderJSONParts && remainderJSONParts.body)) {\n                                    // both in remainder so use earliest start\n                                    if (remainderJSONParts.start < remainderParts.start) {\n                                        try {\n                                            var entityTypeParts = JSON.parse(\"{\"+remainderJSONParts.body+\"}\")\n                                            entity.type = entityTypeParts.entityTypes\n                                            if (entityTypeParts.synonym && entityTypeParts.synonym.length > 0) {\n                                                allSynonyms[entityTypeParts.synonym] = allSynonyms[entityTypeParts.synonym] ? allSynonyms[entityTypeParts.synonym] : []\n                                                allSynonyms[entityTypeParts.synonym].push(entity.value)\n                                                entity.synonym = entityTypeParts.synonym\n                                            }\n                                        } catch (e) {}\n                                        //cleanString = cleanString.slice(0,remainderJSONParts.start) + cleanString.slice(remainderJSONParts.end+1)\n                                    } else {\n                                        var entityTypeParts = remainderParts.body.split(\":\")\n                                        entity.type = entityTypeParts[0]\n                                        if (entityTypeParts.length > 1 && entityTypeParts[1].length > 0) {\n                                            allSynonyms[entityTypeParts[1]] = allSynonyms[entityTypeParts[1]] ? allSynonyms[entityTypeParts[1]] : []\n                                            allSynonyms[entityTypeParts[1]].push(entity.value)\n                                            entity.synonym = entityTypeParts[1]\n                                        }\n                                        //cleanString = cleanString.slice(0,remainderParts.start) + cleanString.slice(remainderParts.end+1)\n                                    } \n                                    \n                                \n                                } else if (remainderJSONParts && remainderJSONParts.body) {\n                                    try {\n                                            var entityTypeParts = JSON.parse(\"{\"+remainderJSONParts.body+\"}\")\n                                            entity.type = entityTypeParts.entityTypes\n                                            if (entityTypeParts.synonym && entityTypeParts.synonym.length > 0) {\n                                                allSynonyms[entityTypeParts.synonym] = allSynonyms[entityTypeParts.synonym] ? allSynonyms[entityTypeParts.synonym] : []\n                                                allSynonyms[entityTypeParts.synonym].push(entity.value)\n                                                entity.synonym = entityTypeParts.synonym\n                                            }\n                                        } catch (e) {}\n                                        //cleanString = cleanString.slice(0,remainderJSONParts.start) + cleanString.slice(remainderJSONParts.end+1)\n                                } else if (remainderParts && remainderParts.body) {\n                                    var entityTypeParts = remainderParts.body.split(\":\")\n                                    entity.type = entityTypeParts[0]\n                                    if (entityTypeParts.length > 1 && entityTypeParts[1].length > 0) {\n                                        allSynonyms[entityTypeParts[1]] = allSynonyms[entityTypeParts[1]] ? allSynonyms[entityTypeParts[1]] : []\n                                        allSynonyms[entityTypeParts[1]].push(entity.value)\n                                        entity.synonym = entityTypeParts[1]\n                                    }\n                                    cleanString = parts.pre + entity.value + parts.post.slice(0,remainderParts.start) + parts.post.slice(remainderParts.end+1)\n                                } else {\n                                    throw new Error('Invalid bracket structure at line '+intentKey)\n                                }\n                                console.log(['ENTITY',entity, cleanString])\n                                //allEntities[entity.type] = entity\n                                intentData.entities = Array.isArray(intentData.entities) ? intentData.entities : []\n                                intentData.entities.push(entity)\n                                parts = balanced('[', ']', remainder)\n                            }\n                            intentData.example = cleanString\n                            allIntents.push(intentData)\n                            console.log(['INTENT',intentData])\n                            \n                            \n                        }\n                    }\n                }\n                \n            })\n            \n           \n            \n        } \n        console.log(['rasa json IMPORT',allIntents, allRegexps, allSynonyms, entitiesFromLookup])\n        return {intents: allIntents}\n    }\n\n    function generateSplitsFromRasaJson(item) {\n        var items = []\n        try {\n            var json = JSON.parse(item.data)\n            if (json && json.rasa_nlu_data && json.rasa_nlu_data.common_examples) {\n                for (var i in json.rasa_nlu_data.common_examples) {\n                    var entity = json.rasa_nlu_data.common_examples[i]\n                    var cleanEntities = entity.entities && entity.entities.map(function(el,j) { return {type:el.entity, value:el.value, start:el.start, end:el.end} })\n                    if (entity.text && entity.text.trim().length > 0) {\n                        items.push({'id':generateObjectId(), 'example':entity.text,'intent':entity.intent,\"entities\":cleanEntities, tags:[]})\n                    }\n                }\n            }\n            console.log(['rasa json IMPORT',items])\n        } catch(e) {}\n        return {intents: items}\n    }\n\n\n    function generateSplitsFromJovoJson(item) {\n        var items = []\n        try {\n            var json = JSON.parse(item.data)\n            console.log(['JOVO IMPORT',json])\n            if (json && json.invocation && json.intents) {\n                json.intents.map(function(intent) {\n                    if (intent && intent.phrases) {\n                        intent.phrases.map(function(phrase) {\n                            console.log(['JOVO IMPORT',phrase])\n                            if (phrase && phrase.trim().length > 0)  {\n                                 var entities = []\n                                if (intent.inputs) {\n                                    for (var inputKey in intent.inputs) {\n                                       var input = intent.inputs[inputKey]\n                                       //console.log([phrase,input.name])\n                                       const markerStart = phrase.indexOf(\"{\"+input.name+\"}\")\n                                       if (markerStart !== -1)  {\n                                           phrase = phrase.replace(\"{\"+input.name+\"}\",input.name)\n                                       }\n                                       var entityi = {type:input.name, value:input.name , start: markerStart , end: markerStart + input.name.length  }\n                                       entities.push(entityi)\n                                       return null\n                                    }\n                                }\n                                console.log(['JOVO IMPORT pushg item',intent.name])\n                                \n                                items.push({'id':generateObjectId(), 'example':phrase.trim(),'intent':intent.name,\"entities\": entities, tags: []})\n                                console.log(['JOVO IMPORT pushed item',JSON.parse(JSON.stringify(items))])\n                                \n                            }\n                            return null\n                        })\n                    }\n                    return null\n                })\n                console.log(['JOVO done IMPORT',items])\n            }\n        } catch(e) {}\n        return {intents: items}\n    }   \n\nexport default function useImportUtils() { return  {unzip, splitSentences, generateIntentSplits, generateEntitySplits, generateUtteranceSplits, cleanListItem, extractSynonym, sortListSplits, sortExampleSplits, detectFileType, generateSplitsFromJovoJson, generateSplitsFromRasaJson, generateSplitsFromRasaMd, generateIntentSplitsForMycroft}}\n","import useImportMergeFunctions from './useImportMergeFunctions'\nimport useImportUtils from './useImportUtils'\nimport {useHistory} from 'react-router-dom'\nexport default function useImportFunctions(sendPageMessage) {\n    \n    const {mergeEntities, mergeIntents, mergeUtterances, mergeRegexps, mergeSkill} = useImportMergeFunctions()\n    const {unzip, splitSentences, generateIntentSplits, generateEntitySplits, generateUtteranceSplits, generateIntentSplitsForMycroft, cleanListItem, extractSynonym, sortListSplits, sortExampleSplits, detectFileType, generateSplitsFromJovoJson, generateSplitsFromRasaJson, generateSplitsFromRasaMd} = useImportUtils()\n    const history = useHistory()\n    /* ONCLICK FUNCTIONS */   \n    \n\n    /**\n     * Import complete skill without review phase\n     */\n    \n    function importSkillJson(item) {\n        return new Promise(function( resolve, reject) {\n            var data = {}\n            try {\n                data = JSON.parse(item.data)\n                console.log(['IMPSKILL',data])\n        \n                // create examples (intents)\n                if (data.title) {\n                    if (data.intents) {\n                        var intents = []\n                        Object.keys(data.intents).map(function(intent) {\n                            if (data.intents[intent]) {\n                                data.intents[intent].map(function(example) {\n                                      example.intent = intent\n                                      \n                                      intents.push(example)\n                                })\n                            }\n                        })\n                        mergeIntents(intents, data.title)\n                    }\n                    // create entities\n                    if (data.entitiesData) {\n                        var entities = []\n                        Object.keys(data.entitiesData).map(function(tag) {\n                            if (data.entitiesData[tag]) {\n                                data.entitiesData[tag].map(function(entity) {\n                                      entity.tags = Array.isArray(entity.tags) ? entity.tags : []\n                                      entity.tags.push(tag)\n                                      entities.push(entity)\n                                })\n                            }\n                        })\n                        mergeEntities(entities)\n                    }\n                    // create utterances\n                    if (data.utterancesData) {\n                        var utterances = []\n                        Object.values(data.utterancesData).map(function(utterance) {\n                            utterances.push(utterance)\n                        })\n                        mergeUtterances(utterances)\n                    }\n                    // create regexps\n                    if (data.regexps) {\n                        var regexps = data.regexps.map(function(utterance) {\n                            if (utterance) {\n                                return {value: utterance.name, synonym: utterance.synonym}\n                            }\n                            return {}\n                        })\n                        mergeRegexps(regexps)\n                    }\n                    mergeSkill(data)\n                }\n                // TODO CREATE OTHER RECORDS - INTENT,ENT,UTT,REG\n            } catch(e) {}\n            resolve(data)\n        })\n    }\n    \n\n    /**\n     * Import intents, entities, and utterances \n     */\n    function importAll(item) {\n        return new Promise(function(resolve, reject) {\n             console.log(['import examples',item])\n             if (item) {\n                  switch(item.fileType) {\n                    case 'opennlu.skill':\n                        importSkillJson(item).then(function(skill) {\n                            //resolve(skill)  \n                            if (skill.title && skill.intents && Object.keys(skill.intents).length > 0) {\n                                setTimeout(function() {\n                                    history.push(\"/skills/skill/\"+skill.title)\n                                },500)\n                            } else {\n                                if (sendPageMessage) sendPageMessage('Failed to load skill. Missing title or intents.',3000)\n                            }\n                            if (sendPageMessage) sendPageMessage('Imported',2000)\n                        })\n                        break;\n                    case 'mycroft.zip':\n                        importMycroft(item).then(function(skill) {\n                            resolve(skill)  \n                        })\n                        break;\n                    case 'rasa.json':\n                        const askill1 = generateSplitsFromRasaJson(item)\n                        resolve(askill1)\n                        break;\n                    case 'rasa.markdown':\n                        const askill2 = generateSplitsFromRasaMd(item)\n                        resolve(askill2)\n                        break;\n                    \n                    case 'jovo.json':\n                        const askill3 = generateSplitsFromJovoJson(item)\n                        resolve(askill3)\n                        break;\n                    case 'jovo.zip':\n                        importJovo(item).then(function(skill) {\n                            resolve(skill)  \n                        })\n                        break;\n                    case 'rasa.zip':\n                        importRASA(item).then(function(skill) {\n                            resolve(skill)  \n                        })\n                        break;\n                    default:\n                        reject({error:'Invalid file type for import'})\n                  }\n             } else {\n                reject({error:'Failed to import'})\n            }\n        })\n    }\n    \n    \n    function importTextIntents(item, intent = '') {\n         console.log(['text',item.data])\n         return generateIntentSplits(item.data, intent)\n       }\n    \n        \n    function importTextEntities(item, entity = '') {\n         console.log(['text',item.data])\n         return generateEntitySplits(item.data, entity)\n    }\n    \n        \n    function importTextUtterances(item, utterance = '') {\n         console.log(['text',item.data])\n         return {utterances: generateUtteranceSplits(item.data, utterance)}\n    }\n    \n    \n    function importJsonIntents(item) {\n        return new Promise(function( resolve, reject) {\n            console.log(['json',item.data])\n            resolve([])\n        })\n    }\n    \n    function importJsonEntities(item) {\n        return new Promise(function( resolve, reject) {\n            console.log(['json',item.data])\n            resolve([])\n        })\n    }\n    \n    function importJsonUtterances(item) {\n        return new Promise(function( resolve, reject) {\n            console.log(['json',item.data])\n            resolve([])\n        })\n    }\n    \n    \n    function importJovo(item) {\n        return new Promise(function( resolve, reject) {\n            unzip(item.data,['/project.js','/models/*.js']).then(function(files) {\n                console.log(['jovo',files])\n                resolve(files)\n            })\n        })\n    }\n    \n    function importRASA(item) {\n        return new Promise(function( resolve, reject) {\n            unzip(item.data,['/domain.yml','nlu.md','nlu.json']).then(function(files) {\n                //console.log(['rasa',files])\n                resolve(files)\n            })\n        })\n    }\n    \n    function importMycroft(item) {\n        return new Promise(function( resolve, reject) {\n            unzip(item.data,['.intent','.dialog','.entity']).then(function(files) {\n                //console.log(['mycroft',files])\n                var skill = {}\n                var utterances=[]\n                var intents=[]\n                var entities = []\n                \n                function nameFromFilename(fullPath) {\n                    if (fullPath && fullPath.split) {\n                        var pathParts = fullPath.split(\"/\")\n                        var fileName = pathParts[pathParts.length -1]\n                        var intentName = fileName.slice(0,fileName.length - 7)\n                        return intentName\n                    }\n                    return '_'\n                }\n                \n                if (files) {\n                    files.map(function(file) {\n                        \n                        // for now no internationalisation\n                       if (file && file.path && file.path.toLowerCase().indexOf('/en-us/') !== -1)  {\n                           var fileParts = file.path.split(\"/\")\n                           var name = nameFromFilename(file.path)\n                           if (file.path.endsWith('.intent') && file.data) {\n                               console.log(file.path, file.data, generateIntentSplits(file.data, name))\n                               var intent = fileParts.length > 1 ? fileParts[fileParts.length -1].replace('.intent','') : ''\n                               intents = [].concat(generateIntentSplitsForMycroft(file.data, intent), intents)\n                           } else if (file.path.endsWith('.dialog')) {\n                               console.log(file.path, file.data, generateUtteranceSplits(file.data, name))   \n                               var utterance = fileParts.length > 1 ? fileParts[fileParts.length -1].replace('.dialog','')  : ''\n                               utterances = [].concat(generateUtteranceSplits(file.data, utterance), utterances)\n                           } else if (file.path.endsWith('.entity')) {\n                               console.log(file.path, file.data, generateEntitySplits(file.data, name)) \n                               var entity = fileParts.length > 1 ? fileParts[fileParts.length -1].replace('.entity','')  : ''\n                               entities = [].concat(generateEntitySplits(file.data, entity), entities)\n                           }\n                       }\n                    })\n                }\n                skill.utterances = utterances\n                skill.intents = intents\n                skill.entities = entities\n                console.log(['MYIMNPO',skill])\n                resolve(skill)\n            })\n        })\n    }\n\n    function importEntities(item) {\n          return new Promise(function(resolve, reject) {\n             console.log(['import entities',item])\n             if (item) {\n                  switch(item.fileType) {\n                      case 'text':\n                        resolve({entities:importTextEntities(item, item.title)})\n                        break;\n                    case 'json':\n                        importJsonEntities(item).then(function(entities) {\n                            resolve({entities:entities})  \n                        })\n                        break;\n                    \n                    default:\n                        throw new Error('Invalid file type for import')\n                  }\n             }\n             reject('Failed to import')\n        })\n    }\n\n    function importUtterances(item) {\n         return new Promise(function(resolve, reject) {\n             console.log(['import utterances',item])\n             if (item) {\n                  switch(item.fileType) {\n                      case 'text':\n                        resolve(importTextUtterances(item, item.title))\n                        break;\n                    case 'json':\n                        importJsonUtterances(item).then(function(utterances) {\n                            resolve({utterances:utterances})  \n                        })\n                        break;\n                    \n                    default:\n                        throw new Error('Invalid file type for import')\n                  }\n             }\n             reject('Failed to import')\n        })\n    }\n    \n\n    function importIntents(item) {\n          return new Promise(function(resolve, reject) {\n             console.log(['import intents',item])\n             if (item) {\n                  switch(item.fileType) {\n                      case 'text':\n                        resolve({intents:importTextIntents(item, item.title)})\n                        break;\n                    case 'json':\n                        importJsonIntents(item).then(function(intents) {\n                            resolve({intents:intents})  \n                        })\n                        break;\n                    \n                    default:\n                        throw new Error('Invalid file type for import')\n                  }\n             }\n             reject('Failed to import')\n        })\n    }\n        \n    \n \n    \n    \n    return {importIntents, importUtterances, importEntities, importAll, detectFileType}\n}\n\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst TagAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Tag'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                value={props.tagAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.tagAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setTagAllValue(skillKey); props.tagAll(skillKey)}} >Add {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.untagAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n      \n              //return <Dropdown  as={ButtonGroup}>\n              //<Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              //<Button   size=\"sm\" >{'Tag'} </Button>\n              //<Dropdown.Menu>\n               //<form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                    //<div className=\"form-group\">\n                      //<input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                    //value={props.tagAllValue} />\n                    //</div>\n                  //</form>\n                  //{props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n                      //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {props.setTagAllValue(tagKey); props.tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n                   //})}\n              //</Dropdown.Menu>\n          //</Dropdown>\n}\nexport default TagAllDropDown\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\n\nconst IntentAllDropDown = function(props) {\n    return  <Dropdown  as={ButtonGroup}>\n              <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button   size=\"sm\" >{'Intent'} </Button>\n              <Dropdown.Menu>\n               <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.intentAll(e.target.value)}} >\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setIntentAllValue(e.target.value)}}\n                    value={props.intentAllValue} />\n                    </div>\n                  </form>\n                  {props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n                      return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {props.setIntentAllValue(intentKey); props.intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n                   })}\n              </Dropdown.Menu>\n          </Dropdown>\n}\nexport default IntentAllDropDown\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst SkillAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Skill'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.skillSetAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setSkillAllValue(e.target.value)}}\n                value={props.skillAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.skillSetAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setSkillAllValue(skillKey); props.skillSetAll(skillKey)}} >Add to {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.unskillAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n      \n      \n    \n    //return <Dropdown  as={ButtonGroup}>\n          //<Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          //<Button   size=\"sm\" >{'Skill'} </Button>\n          //<Dropdown.Menu>\n           //<form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.skillSetAll(e.target.value)}} >\n                //<div className=\"form-group\">\n                  //<input type=\"text\" className=\"form-control\" onChange={function(e) {props.setSkillAllValue(e.target.value)}}\n                //value={props.skillAllValue} />\n                //</div>\n              //</form>\n              //{props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n              //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {props.setSkillAllValue(skillKey); props.skillSetAll(skillKey)}}  >{skillKey}</Dropdown.Item>\n    //})}\n          //</Dropdown.Menu>\n      //</Dropdown>\n}\nexport default SkillAllDropDown\n","/* global window */\nimport {Link} from 'react-router-dom'\nimport {Button, ListGroup } from 'react-bootstrap'\nimport ImportListsDropDown from './ImportListsDropDown'\n\nimport React, {Fragment} from 'react';\nimport FileReaderInput from 'react-file-reader-input';\n\nimport TagAllDropDown from './TagAllDropDown'\nimport IntentAllDropDown from './IntentAllDropDown'\nimport SkillAllDropDown from './SkillAllDropDown'\n\n\nimport helpSVG from '../images/helpoverview.svg'\n\nfunction MatchesTallies(props) {\n    return <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{props.filteredItems.length}/{props.items.length} matches </span>\n}\n\nfunction HelpMenu(props) {\n    return <div>\n        <Link style={{marginRight:'1em'}} to=\"/help\" ><Button>Home</Button></Link>\n        <Link style={{marginRight:'1em'}} to=\"/helpimport\" ><Button>Import</Button></Link>\n        <Link style={{marginRight:'1em'}} to=\"/helpexport\" ><Button>Export</Button></Link>\n        <Link style={{marginRight:'1em'}} to=\"/helpabout\" ><Button>About</Button></Link>\n    </div>\n}\n\nfunction HelpText(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n        <HelpMenu/>\n        <h1>NLU tool</h1>\n        <img src={helpSVG} style={{width: '80%', height:'15em' }} alt=\"Help Overview\"/>\n<br/><br/>        \n        <div>This tool helps voice developers build vocabularies for their applications by providing <b>import and export of various NLU training data formats</b>, and a <b>searchable database of community submitted, open licensed skills.</b>\n        </div>\n\n       <hr/>\n       <p><Link to=\"/search\" ><Button>Search </Button></Link> the community database of NLU example records.</p>\n         <p><Link to=\"/sources\" ><Button>Sources</Button></Link> to edit and import skills, pasted text or uploaded files.</p>\n        <p><Link to=\"/examples\" ><Button>Organise</Button></Link> your examples using tags and cleanup untagged examples.</p>\n        <p><Link to=\"/skills\" ><Button>Skills</Button></Link> to add platform metadata for export in various training formats or publishing to the community database.</p>\n        \n        <hr/>\n        <h3>Features</h3>\n        <ul>\n            <li>Search for open licenced training data submitted by the community</li>\n            <li>Import training data from text files, RASA , JOVO (Alexa, Google), Mycroft and native JSON.</li>\n            <li>Edit training data and tag entities in intent examples</li>\n            <li>Filtering, tagging, multiple selection and bulk operations to quickly collect training data into an exportable skill</li>\n            <li>Virtual rendering with react-window is used to allow fast rendering of lists of intents and entities with many thousands of values</li>\n            <li>Export training data suitable for RASA, JOVO and Mycroft</li>\n            <li>Publish your skill to the community repository under an open source license</li>\n            \n        </ul>\n        <ul>\n            <li>This tool is a Progressive Web Application. Most features work without the Internet.</li>\n            <li>MIT Open Source licensed code at <a target=\"_new\" href=\"https://github.com/syntithenai/opennludata\" >Github</a></li>\n            <li>Cross platform nodejs server</li>\n            <li>Published skills are committed to Github to ensure long term availability of collected data.</li>\n            <li>To ensure ongoing availability, the web pages are hosted with github pages and the search interface relies on static data generated during publishing so a database/backend server is only required when publishing)</li>\n        </ul>\n        \n        \n        \n        <div>When the Internet is available, <b>this site uses Google Analytics to measure engagement and improve future versions.</b></div>\n        \n        \n    </div>\n}\n\nfunction HelpTextImport(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n    <HelpMenu/>\n            <h1>Importing Data</h1>\n            <div>This tool can import files a variety of file formats and allows you to cherry pick intents, entities and utterances.\n            <br/>\n            You can use zip files to to upload and import many files that make up a skill for Mycroft, RASA or JOVO \n            <br/>\n           <ul>\n                <li><h3>Text</h3>\n                    \n                </li>\n                <li><h3>JSON</h3>\n                \n                </li>\n                <li><h3>OpenNlu JSON</h3>\n                \n                </li>\n                <li><h3>RASA</h3>\n                \n                </li>\n                <li><h3>JOVO</h3>\n                \n                </li>\n                <li><h3>Mycroft</h3>\n                \n                </li>\n\n            </ul>\n            \n            </div>\n            <hr/>\n        </div>\n}\n\nfunction HelpTextAbout(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n    <HelpMenu/>\n            <h1>About</h1>\n<br/>\n            <div><h3>Bugs/Feedback</h3>Please share any feedback on the <a target=\"_new\" href=\"https://github.com/syntithenai/opennludata/issues\" >Github Issues Page</a></div>\n            <br/>\n             <div>The <a target=\"_new\" href=\"https://github.com/syntithenai/opennludata\" >source code</a> for this tool is available under an MIT Open Source Licence. </div>\n            <hr/>\n            \n             <div>Icons from  The Noun Project and others.</div>\n             <ul>\n             <li>Man Singing by Gan Khoon Lay from  <a href='https://thenounproject.com/term/man-singing/642288/' target=\"_new\" >The Noun Project</a></li>\n             <li>Head by hunotika from <a href='https://thenounproject.com/term/head/184237/' target=\"_new\" >The Noun Project</a></li>\n             </ul>\n             <hr/>\n              <div>Using many open source libraries including</div>\n                <ul>\n                <li><a target=\"_new\" href=\"https://www.npmjs.com/package/create-node-app\" >create-node-app</a> </li>\n                <li><a target=\"_new\" href=\"https://github.com/syntithenai/react-express-oauth-login-system\" >react-express-oauth-login-system</a> for oauth based login with support for social providers</li>\n                <li><a target=\"_new\" href=\"https://github.com/localForage/localForage\" >localForage</a> for cross platform local persistence.</li>\n                <li><a target=\"_new\" href=\"https://github.com/florianholzapfel/express-restify-mongoose\" >express-restify-mongoose</a> to simplify API development.</li>\n                <li><a target=\"_new\" href=\"https://github.com/bvaughn/react-window\" >react-window</a> for virtual rendering, allowing for lists with many thousands of elements.</li>\n                <li><a target=\"_new\" href=\"https://github.com/josdejong/jsoneditor\" >JSON editor</a> for editing uploaded sources.</li>\n                <li>react, bootstrap, express, mongodb and mongoose</li>\n                </ul>\n            <hr/>\n        </div>\n}\n\nfunction HelpTextExport(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n    <HelpMenu/>\n            <h1>Exporting</h1>\n            <div>This tool can currently export to a number of formats including\n            <ul>\n                <li>Native JSON format</li>\n                <li>Mycroft intents and entities for Padatious NLU</li>\n                <li>RASA training data</li>\n                <li>JOVO model files</li>\n            </ul>\n            </div>\n\n        </div>\n}\n\n\nfunction NewFileButtons(props) {\n    return <span>\n        <Link to={props.match.url + '/text'} style={{float:'right'}} ><Button>Paste Text</Button></Link>\n        <FileSelector {...props}/>   \n    </span>\n}\n\n\nfunction ListsList(props) {\n     const { items} = props  \n     if (items) {\n       const list = Object.values(items).map(function(item,i) {\n            return <ListGroup.Item  key={i}  >\n                   <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"danger\" onClick={function(e) {if(window.confirm('Really delete list '+items[i].title)) props.deleteItem(i)}} >Delete</Button>\n                   <Link to={props.match.url+\"/text/\"+item.id} ><Button style={{float:'right',marginLeft:'0.5em'}}  >Edit</Button></Link>\n                   <span style={{width:'90%'}}  >{item.title}</span>\n               </ListGroup.Item>\n        })\n        return <ListGroup>{list}</ListGroup>\n    } else {\n        return null\n    }\n}\n\nfunction FileSelector(props) {\n    return <form onSubmit={function(e) {e.preventDefault()}} style={{float:'right'}}>\n            <FileReaderInput multiple as=\"binary\" id=\"my-file-input\"\n                             onChange={props.handleFileSelection}>\n              <Button style={{ marginRight:'0.5em'}} >Select files</Button>\n            </FileReaderInput>\n          </form>\n}\n\nfunction WithSelectedDropDowns(props) {\n    return <Fragment>\n        <span>With {props.lookups.selectedTally} selected&nbsp;</span>\n               \n        <SkillAllDropDown skillSetAll={props.skillSetAll} skillAllValue={props.skillAllValue}  setSkillAllValue={props.setSkillAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n        <IntentAllDropDown intentAll={props.intentAll} intentAllValue={props.intentAllValue} setIntentAllValue={props.setIntentAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n        <TagAllDropDown tagAll={props.tagAll} tagAllValue={props.tagAllValue} setTagAllValue={props.setTagAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n    </Fragment>\n\n}\n\nexport { MatchesTallies,  HelpTextImport,HelpTextExport,HelpTextAbout,HelpText, NewFileButtons, ListsList, FileSelector, WithSelectedDropDowns}\n","import {Link} from 'react-router-dom'\nimport {Button,  Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React, {useState, useEffect} from 'react';\n//import FileReaderInput from 'react-file-reader-input';\nimport {generateObjectId, parentUrl} from '../utils'\nimport { JsonEditor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\n//import useDB from './useDB'\n//import useDBSingleKey from './useDBSingleKey'\n//import {parseImportText} from './utils'\n//import localforage from 'localforage'\n//import {NewFileButtons, FileSelector, FilesList} from './Components'\n\nexport default function JSONTextEditor(props) {\n    const [title,setTitle] = useState(props.item && props.item.title ? props.item.title : '')\n    const [text, setText ] = useState(props.item && props.item.data ? props.item.data : '') \n    const [isJson, setIsJson ] = useState(false) \n    const [json, setJson ] = useState([]) \n    const [editorMode, setEditorMode] = useState('json')\n    const [editorOptions, setEditorOptions] = useState(['json','text'])\n    \n    const id = props.match.params.itemId ? props.match.params.itemId  : generateObjectId()\n    const { findKeyBy} = props  \n    const index = findKeyBy('id',id)\n   \n    \n    useEffect(() => {\n        try {\n            if ((text[0] === \"[\" && text[text.length - 1] === \"]\") || (text[0] === \"{\" && text[text.length - 1] === \"}\")) {\n                var jsonParsed = JSON.parse(text)\n                setJson(jsonParsed)\n                setIsJson(true)\n                setEditorOptions(['json','text'])\n                setEditorMode('json')\n            } else {\n                setIsJson(false)\n                setEditorOptions(['text'])\n                setEditorMode('text')\n            }\n        } catch (e) {\n            setIsJson(false)\n            setEditorOptions(['text'])\n            setEditorMode('text')\n        }\n    \n    },[text])\n     \n    var parentLink = parentUrl(props.match.url)\n    var linkParts = props.match.url.split(\"/\")\n    // link up two where id is present\n    if (linkParts[linkParts.length -1] !== \"text\") {\n       parentLink = parentUrl(parentUrl(props.match.url)) \n    }\n    var editorModeOptions = editorOptions.map(function(value,j) {\n      return <Dropdown.Item key={j} value={value} onClick={function(e) {setEditorMode(value); }}  >{value}</Dropdown.Item>\n   })\n    \n    return <div style={{minHeight:'60em'}}>\n          <Dropdown variant='info'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button variant='info'   size=\"sm\"  >\n          <b>{editorMode}</b>\n          </Button>\n          <Dropdown.Menu>\n              {editorModeOptions}\n          </Dropdown.Menu>\n        </Dropdown>\n\n            <span style={{float:'right'}} >\n                \n                {(text && title) && <Link to={parentLink} ><Button onClick={function(e) {props.saveItem({id:id,title:title,data:text},index)}} variant='success' >Save</Button></Link>}\n                {!(text && title) && <Button variant='secondary' >Save</Button>}\n                \n                <Link  to={parentLink} ><Button variant=\"danger\" >Cancel</Button></Link>\n            </span>\n            <label>&nbsp;Title <input size={60}  type='text' onChange={function(e) { setTitle(e.target.value)}}  value={title} /></label>\n            {(!isJson || editorMode === \"text\") && <textarea style={{marginLeft: '0.2em', height:'100%', minHeight:'60em', width:'98%'}}  onChange={function(e) { setText(e.target.value)}}  value={text} ></textarea>}\n            {(isJson && editorMode === \"json\") && <div style={{marginLeft: '0.2em', height:'100%', minHeight:'60em', width:'98%'}} >\n                <JsonEditor\n                value={json}\n                theme={\"ace/theme/github\"}\n                ace={ace}\n                history={true}\n                mode={'code'}\n                allowedModes={['tree','code']}\n                onChange={function(value) { setText(JSON.stringify(value))}}\n            /></div>}\n           \n    </div>\n}\n","import {Route} from 'react-router-dom'\nimport React, {useEffect} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport useDB from './useDB'\nimport useImportFunctions from './useImportFunctions'\nimport { saveAs } from 'file-saver';\nimport JSZip from 'jszip'\nimport {NewFileButtons} from './components/Components'\nimport JSONTextEditor from './components/JSONTextEditor'\n//import {generateObjectId, uniquifyArray } from './utils'\nimport {Link} from 'react-router-dom'\nimport {Button, ListGroup } from 'react-bootstrap'\n//import ImportListsDropDown from './components/ImportListsDropDown'\nimport localforage from 'localforage'\n\n// COMPONENTS\nfunction IndexPage(props) {\n    //console.log(['man index ',props])\n    return <div>\n                 <NewFileButtons {...props} />\n                 <h1>Sources</h1>\n                 <FilesList {...props} />\n            </div>\n}\n\n\n\nfunction FilesList(props) {\n    //console.log(['man fl ',props])\n       \n    var localforageStorageImport = localforage.createInstance({\n        name: 'nlutool',\n        storeName   :'importing',\n    });\n    \n    \n     const { items} = props  \n     var saveSkill=function (skill) {\n        localforageStorageImport.setItem('alldata',skill).then(function() {\n            props.history.push('/importreview')\n        })\n     }\n     var showError = function(e) {\n         if (e.error) props.setPageMessage(e.error,2000)\n         else props.setPageMessage(e.toString(),2000)\n     }\n     \n    function downloadZip(item) {\n        var zip = new JSZip();\n        zip.loadAsync(item.data)\n        .then(function(zip) {\n            zip.generateAsync({type:\"blob\"}).then(function (blob) { // 1) generate the zip file\n                saveAs(blob, item.title);      \n            })\n        });\n     }\n    \n     \n     if (items) {\n       const list = Object.values(items).map(function(item,i) {\n            return <ListGroup.Item  key={i}  >\n\n                   \n                   <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"danger\" onClick={function(e) {if(window.confirm('Really delete source '+item.title+'-'+i)) props.deleteItem(i)}} >Delete</Button>\n                    \n                    {item.fileType.endsWith(\".zip\") && <Button style={{float:\"right\", marginLeft:'0.5em'}} onClick={function() {downloadZip(item)}}>Download</Button>}\n\n                    {!item.fileType.endsWith(\".zip\") && <Button style={{float:\"right\", marginLeft:'0.5em'}} onClick={function() {saveAs(new Blob([item.data], {type: 'application/'+item.fileType}), item.title+'.'+item.fileType)}}>Download</Button>}\n    \n                   {/* Can't edit zip files*/}\n                   {!item.fileType.endsWith('.zip') && <Link to={props.match.url+\"/text/\"+item.id} ><Button style={{float:'right',marginLeft:'0.5em'}}  >Edit</Button></Link>}\n                   \n                   {item.fileType === \"text\" && <div className=\"textimportbuttons\" >\n                       <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"success\" onClick={function(e) { props.importFunctions.importIntents(item).then(saveSkill).catch(showError)  }}    >Import Intents</Button>\n                       <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"success\" onClick={function(e) { props.importFunctions.importEntities(item).then(saveSkill).catch(showError)  }}    >Import Entities</Button>\n                       <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"success\" onClick={function(e) { props.importFunctions.importUtterances(item).then(saveSkill).catch(showError)  }}    >Import Utterances</Button>\n                    </div>}\n                    \n                    {item.fileType !== \"text\" && <>\n                       {/* Import whatever is available */}\n                       {<Button style={{float:'right', marginLeft:'0.5em'}} variant=\"success\" \n                           onClick={function(e) { \n                               props.importFunctions.importAll(item)\n                               // save import results and redirect to import overview\n                               .then(saveSkill).catch(showError) \n                            }}    >Import</Button>}\n                    </>}\n                    \n                   \n                   <span style={{width:'90%'}}  > {item.fileType && <Button>{item.fileType}</Button>}&nbsp;&nbsp;&nbsp;{item.title}</span>\n                  \n               </ListGroup.Item>\n        })\n        return <ListGroup>{list}</ListGroup>\n    } else {\n        return null\n    }\n}\n //{/* Only import utterances */}\n                       //{(item.fileType === \"rasa.zip\" || item.fileType === \"mycroft.zip\"  || item.fileType === \"opennlu.zip\"  || item.fileType !== \"opennlu.lists\") && <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"success\" onClick={function(e) { props.importFunctions.importUtterances(items[i]) }}    >Import Utterances</Button>}\n                       //{/* Only import entities */}\n                       //{<ImportListsDropDown lookups={props.lookups} importListTo={function(listName) {props.importFunctions.importEntities(items[i],listName)}} importTo={items[i].title} /> }\nexport default function LocalStorageUploadManager(props) {\n    //console.log('man')\n    //console.log(props)\n     \n    var importFunctions = useImportFunctions(props.setPageMessage)\n     \n\n     const {loadAll, saveItem, deleteItem ,items, findKeyBy, findBy} = useDB('nlutool','sources');\n    \n    // just on mount \n    useEffect(() => {\n        loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    \n    \n    function handleFileSelection(ev, results) {\n        ev.preventDefault()\n        if (results) {\n            results.forEach(result => {\n              const [e, file] = result;\n              console.log(['upl result',e, file,e.target.result])\n               var item = {id:null, data:e.target.result, title:file.name}\n               importFunctions.detectFileType(item).then(function(fileData) {\n                    if (fileData && fileData.type) {\n                        item.fileType = fileData.type\n                        item.created_date = new Date().getTime()\n                        //if (item.fileType.endsWith('.zip')) {\n                            //item.data = new File([item.data],'application/zip')\n                        //}\n                        console.log(['SET ITEM TYPE', item.fileType])\n                        saveItem(item,0)\n                    } else {\n                        props.setPageMessage('Invalid file type')\n                        setTimeout(function() {\n                            props.setPageMessage('')\n                        },2000)\n                    }\n                })\n            });\n            \n        }\n    }    \n  \n    function saveItemWrap(item,index) {\n        importFunctions.detectFileType(item).then(function(fileData) {\n            item.fileType = fileData.type\n            item.created_date = new Date().getTime()\n            console.log(['SET ITEM TYPE', item.fileType])\n            saveItem(item,index)\n        })\n    }\n    \n    //console.log(['RENDER LOMAN',props])\n    return (\n        <div className=\"LocalStorageUploadManager\" >\n            <Route \n                path={[`${props.match.path}/text/:itemId?`, `${props.match.path}/text`]}  \n                render={(props) => <JSONTextEditor {...props} \n                    item={findBy('id',props.match.params.itemId)} \n                    saveItem={saveItemWrap} deleteItem={deleteItem} findKeyBy={findKeyBy} \n                    \n                />}     \n            />\n            <Route {...props} exact path={props.match.path} \n                render={function(iprops) { return  <IndexPage {...props} \n                    items={items}\n                    deleteItem={deleteItem} saveItem={saveItemWrap} importFunctions={importFunctions} \n                    handleFileSelection={handleFileSelection} \n                />}} \n            />\n\n        </div>\n    );\n}\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst ListAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Set List'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                value={props.tagAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.tagAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.listsLookups && props.lookups.listsLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setTagAllValue(skillKey); props.tagAll(skillKey)}} >Add to {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.untagAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n}\nexport default ListAllDropDown\n","import React from 'react'\nconst SearchInput = function({searchFilter,setSearchFilter}) {\n    return (<input style={{marginLeft:'0.5em'}}  type='text' value={searchFilter} \n            onChange={\n                function(e) {\n                    const filter = e.target.value\n                    setSearchFilter(filter); \n                }\n            } placeholder='Search' />)\n}\n    \nexport default SearchInput\n","import React, {useEffect, useState} from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\nimport checkImage from '../images/check.svg'\n\n\nconst ListsManagerSearchBar = function(props) {\n    const [topTagOptions,setTopTagOptions] = useState([])\n    useEffect(() => {\n        //console.log(['kust nabager ',props.lookups.listsLookups])\n        var topTagOptionss = props.lookups.listsLookups && props.lookups.listsLookups.sort().map(function(listKey,i) {\n              return <Dropdown.Item key={i} value={listKey} onClick={function(e) {props.setListFilterValue(listKey)}}  >{listKey}</Dropdown.Item>\n        })\n        topTagOptionss.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setListFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        topTagOptionss.push(<Dropdown.Item key={'Not In A List'} value={'Not In A List'} onClick={function(e) {props.setListFilterValue('Not In A List')}}  ><b>Not In A List</b></Dropdown.Item>)\n        setTopTagOptions(topTagOptionss)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.lookups])\n    \n    return <div>\n            {<span>\n            \n                {props.lookups.selectedListTally > 0 && <Button size=\"lg\"  onClick={function(e) { props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedListTally <= 0 && <Button size=\"lg\" onClick={function(e) { props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button> }\n                \n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'List'+(props.listFilterValue ? ' - '+ props.listFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topTagOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n              \n              <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.listFilterValue)}} >New Entity</Button>\n              <Button  style={{marginLeft:'1em'}} variant=\"primary\" onClick={function(e) {props.sort(function(a,b) { if (a.value < b.value) return -1; else return 1;})}} >Sort</Button>\n        </div>\n}\nexport default ListsManagerSearchBar\n","import React, {useState, useEffect} from 'react'\nimport {uniquifyArray, uniquifyArrayOfObjects} from './utils'\nfunction useListItemRow(item, saveItem, splitNumber, style) {\n    const [selectionState, setSelectionState] = useState({})\n    //const [newEntity, setNewEntity] = useState('')\n    // for ReactTags format using objects\n    const [tags, setTags] = useState([])\n    //console.log(['USENLUROW',splitNumber])\n    const reactTags = React.createRef()\n     // tags\n    useEffect(() => {\n        if (item.tags) setTags(item.tags.map(function(tag,i) {return {id:i, name:tag}}))\n    },[item])\n\n     function onTagDelete (i) {\n        const newTags = tags.slice(0)\n        newTags.splice(i, 1)\n        setTags(newTags)\n        var newItem = item\n        newItem.tags = newTags.map(function(newTag) { return newTag.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onTagAddition (tag) {\n         if (tag && tag.name.trim().length > 0) {\n            const newTags = [].concat(tags, tag)\n            setTags(uniquifyArrayOfObjects(newTags,'name').sort(function(a,b) {if (a.name > b.name) return 1; else return -1} ))\n            var newItem = item\n            newItem.tags = uniquifyArray(newTags.map(function(newTag) { return newTag.name})).sort()\n            saveItem(newItem,splitNumber)\n        }\n      }\n    \n    function updateExampleContent(content) {\n        //console.log(['UPDTEXT', item, content])\n        if (item && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = item //JSON.parse(JSON.stringify(item));\n            \n            newItem.value = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n     function updateExampleSynonym(content) {\n        //console.log('UPDTEXT')\n        if (item && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = item //JSON.parse(JSON.stringify(item));\n            \n            newItem.synonym = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    \n    function selectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = true;\n        console.log(['SELECT LIST ITEM',newItem,splitNumber])\n        saveItem(newItem,splitNumber)\n    }\n   \n    \n    function deselectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = false;\n        console.log(['DESELECT LIST ITEM',newItem,splitNumber])\n        saveItem(newItem,splitNumber)\n    } \n    \n    return {    \n        selectionState, setSelectionState, tags, setTags, reactTags, onTagDelete, onTagAddition, updateExampleContent, updateExampleSynonym, selectItem, deselectItem\n    }\n    \n}\nexport default useListItemRow\n","import React from 'react';\nexport default function SuggestionComponent({ item, query }) {\n  return (\n    <span  id={item.id} className={item.name === query ? 'match' : 'no-match'}>\n      {item.name}\n    </span>\n  )\n}\n","/* global window */\nimport {Button } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useListItemRow from './useListItemRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\n\nexport default function ListsManagerRow(props) {\n        const  {item, splitNumber , style} = props;\n       const {    \n            tags, reactTags, \n            onTagDelete, onTagAddition, updateExampleContent,updateExampleSynonym,  selectItem, deselectItem\n        } = useListItemRow(props.item, props.saveItem, props.splitNumber, props.style)\n            \n       \n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                   \n                   <div style={{float:'right'}} > \n                        <Button  variant=\"danger\"  size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} >X</Button>\n               \n                    </div>\n                   \n                  <div style={{float:'left'}}>\n                     {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Select\"  /></Button>}\n                      {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\"  /></Button>}\n                </div>\n                \n                <input style={{float:'left'}} size='25'   \n                       type='text'  value={item.value}  onChange={function(e) { updateExampleContent(e.target.value)}} />\n                    \n                     \n                   \n                     <label style={{float:'left', marginLeft:'0.5em'}} >Synonym <input size='15' type='text' value={item.synonym} onChange={function(e) {updateExampleSynonym(e.target.value)}} /></label>\n                     <label style={{float:'left', marginLeft:'0.5em'}} >\n                     <span  style={{float:'left', marginRight:'0.5em'}}>Lists </span>\n                     <span  style={{float:'left'}}>\n                       <ReactTags\n                        placeholderText=\"Add to list\"\n                        minQueryLength={0}\n                        maxSuggestionsLength={50}\n                        autoresize={false}\n                        allowNew={true}\n                        ref={reactTags}\n                        tags={tags}\n                        suggestionComponent={SuggestionComponent}\n                        suggestions={props.lookups.listsLookups.map(function(listName,i) {return {id: i, name: listName}})}\n                        onDelete={onTagDelete}\n                        onAddition={onTagAddition} /> \n                        </span>\n                    </label>\n                  </div> \n               \n                \n                 \n           \n      </div>\n}\n","// USE A SINGLE LOCALSTORAGE KEY FOR PERSISTENCE\n// this is much faster than using set/getItem for each item\n// workable for many thousands of rows\nimport { useEffect, useReducer} from 'react';\n\nimport {generateObjectId} from './utils'\nimport localforage from 'localforage'\n\n// handle list updates with minimum disruption to top level items\nfunction reducer(state, action) {\n    const index = parseInt(action.index)\n    //console.log(['REDUCE',action.type,action.index, action.item,action.items,state])\n    switch (action.type) {\n    case \"append\":\n      if (action.item) {\n        return [...state, action.item];\n      } else return state\n    case \"prepend\":\n      if (action.item) {\n        return [action.item,...state];\n      } else return state\n    case \"insert\":\n      if (action.item && typeof index === \"number\" ) {\n          if (state.length > 0) {\n              return [\n                ...state.slice(0, index),\n                action.item,\n                ...state.slice(index)\n              ];\n          } else return state\n        } else return state\n    case \"remove\":\n      if (typeof index === \"number\" ) {\n          return [\n            ...state.slice(0, index),\n            ...state.slice(index + 1)\n          ];\n       } else return state \n    case \"update\":\n       if (action.item && typeof index === \"number\" ) {\n           return  [\n            ...state.slice(0, index),\n            action.item,\n            ...state.slice(index + 1)\n          ];\n        } else return state \n    case \"replaceall\":\n        if (typeof action.items === \"object\") {\n            return action.items\n        } else return state\n    case \"sort\":\n    //console.log(['DISP SORT',action.sort])\n        if (typeof action.sort === \"function\") {\n            var ret = state.sort(action.sort)\n            //console.log(['DISP SORT ret',ret])\n            return [...ret]\n        } else return state\n    default:\n      throw new Error('Invalid reduction in useDBSingleKey');\n  }\n    \n}\n\n// state manager with local storage backing\nexport default function useDB(database, databaseTable,singleKey) {\n    //console.log(['use db single key', database, databaseTable,singleKey])\n    if (!singleKey) singleKey = 'data'\n     const [items, dispatch] = useReducer(reducer,[]);\n     var localforageStorage = localforage.createInstance({\n       name: database ? database : \"localstoragemanager\",\n       storeName   : databaseTable ? databaseTable : 'single_key_data',\n     });\n\n    \n    useEffect(function() {\n        //console.log(['dbsingle key items loaded',items])\n        //loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    useEffect(function() {\n        //console.log(['dbsingle key items updated',items])\n        localforageStorage.setItem(singleKey,items)  \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items])\n\n    function getId(item) {\n        if (item && item.id) {\n            return item.id\n        } else {\n            throw new Error(\"Missing ID value in getId\")\n        }\n    }\n\n    function loadAll() {\n        return new Promise(function(resolve, reject) {\n            localforageStorage.getItem(singleKey).then(function(res) {\n              //console.log(['loadall',database, databaseTable,singleKey,res])\n              dispatch({ type: \"replaceall\", items: res ? res : []});\n              resolve(res)\n            })\n        })\n    }\n\n    \n    // save or create\n    function saveItem(item,index) {\n        //console.log(['save',item,index])\n        if (item) {\n            // update sources and save text in seperate localstorage\n            // ensure id\n            var isNewItem = false;\n            if (!item.id) {\n                isNewItem = true;\n                item.id = generateObjectId()\n            }\n             \n            if (isNewItem) {\n                dispatch({ type: \"prepend\",item: item });\n            } else {\n                //var intIndex = parseInt(index)\n                //if (intIndex != NaN) {\n                    //if (intIndex > 0) {\n                        //dispatch({ type: \"update\",item: item , index: intIndex});\n                    //} else {\n                        //dispatch({ type: \"prepend\",item: item });\n                    //}\n                //} else \n                if (items) {\n                    var found = null\n                    items.map(function(listItem,listItemIndex) {\n                        if (listItem.id === item.id) {\n                            found = listItemIndex\n                        } \n                        return null\n                    })\n                    if (found != null) {\n                        dispatch({ type: \"update\",item: item , index: found});\n                    } else {\n                        dispatch({ type: \"prepend\",item: item });\n                    }\n              \n                } \n            }  \n            \n        }\n    }\n    \n    function findBy(field,value) {\n        var key = findKeyBy(field,value)\n        return items[key];\n    }\n    \n    function findKeyBy(field,value) {\n        for (var k in items) {\n            if (items[k] && items[k][field] === value) return k\n        }\n    }\n\n    function setItemsWrap(items) {\n        localforageStorage.clear().then(function() {\n            dispatch({ type: \"replaceall\", items: items})\n        })\n    }\n    \n    function sort(sortFunction) {\n        dispatch({ type: \"sort\", sort: sortFunction})\n    }\n    \n    function filter(matchFunction) {\n        var filtered = []\n        if (matchFunction) {\n            items.map(function(item,i) {\n              if (item && matchFunction(item)) {\n                  filtered.push(item)\n              } \n              return null \n            })\n        }\n        return filtered\n        \n    }\n    \n    function deleteItem(index) {\n        dispatch({ type: \"remove\", index: index})\n    }\n    return {getId:getId, loadAll:loadAll, saveItem:saveItem, deleteItem:deleteItem , items:items, setItems:setItemsWrap, findKeyBy:findKeyBy, findBy:findBy, filter: filter, sort: sort}\n    \n}\n","import React, {useState, useEffect} from 'react';\nimport useDBSingleKey from './useDBSingleKey'\nimport {useParams, useHistory} from 'react-router-dom'\n\nfunction useListItemEditor(database, databaseTable, databaseKey, updateLists) {\n    const {loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter, sort} = useDBSingleKey(database, databaseTable, databaseKey)\n    const [filteredItems, setFilteredItems] = useState([])\n    const [filteredItemsKeys, setFilteredItemsKeys] = useState([])\n    const [searchFilter, setSearchFilter] = useState('')\n    const [tagAllValue, setTagAllValue] = useState('')\n    const listRef = React.createRef()\n    //const [listFilterValue, setListFilterValue] = useState('')\n    \n    var params = useParams()\n    var listFilterValue = params.listId ? params.listId : '';\n    var history = useHistory()\n    function setListFilterValue(value) {\n        var root = history.location.pathname.split(\"/\")\n        var parts=['/'+root[1]]\n        parts.push('/'+value)\n        history.push(parts.join(''))\n    }\n   \n      \n    useEffect(() => {\n         var filteredItems = filter(function(item) {\n            //return true;\n            var matchText = true\n            if (searchFilter && searchFilter.trim().length >0) {\n                if (item.value && item.value.toLowerCase().indexOf(searchFilter.toLowerCase()) !== -1 ) {\n                    matchText = true\n                } else {\n                    matchText = false\n                }\n            }\n            var matchPicklist = true\n            if (listFilterValue === \"Not In A List\") {\n                //console.log(['tags',item.tags])\n                if (!item.tags || (item.tags && item.tags.length === 0)) {\n                    matchPicklist =  true\n                } else {\n                    matchPicklist = false\n                }\n            } else if (listFilterValue && listFilterValue.trim().length >0) {\n                if (item.tags && item.tags.indexOf(listFilterValue) !== -1) {\n                    matchPicklist = true\n                } else {\n                    matchPicklist = false\n                }\n            }\n            \n            return matchText && matchPicklist\n            //return (item.value.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)) ? true : false\n        })\n        var itemKeys = {}\n        filteredItems.map(function(item) {if (item.id) itemKeys[item.id] = true; return null})\n        filteredItems.sort(function(a,b) { return (a.value ? a.value.toLowerCase() : '') < (b.value ? b.value.toLowerCase() : '') ? true : false})\n        setFilteredItems(filteredItems)\n        setFilteredItemsKeys(itemKeys)\n        updateLists(filteredItems)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items, searchFilter, listFilterValue])\n    \n    function deleteAll(e)  {\n        if (window.confirm('Really delete all selected')) {\n            if (items) {\n                var newItems = []\n                items.map(function(item,i) {\n                    // dump items without id\n                    if (item && item.id) {\n                        // only delete filtered items\n                        if (filteredItemsKeys[item.id]) {\n                           // only delete selected filtered items\n                           if (!item.isSelected) {\n                               newItems.push(item)\n                           }\n                        // not filtered so push\n                        } else {\n                            newItems.push(item)\n                        }\n                    }\n                    return null\n                })\n                setItems(newItems)\n                listRef.current.resetAfterIndex(0);\n            }\n        }\n    }\n    \n    function tagAll(val) {\n        console.log(['tagall',tagAllValue,val])\n        var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item && item.id) { \n                    if (item.isSelected && filteredItemsKeys[item.id]) {\n                       var newItem = JSON.parse(JSON.stringify(item));\n                       if (!newItem.tags) newItem.tags=[]\n                       if (newItem.tags.indexOf(tagValue) === -1) newItem.tags.push(tagValue)\n                       newItems.push(newItem)\n                    } else {\n                       newItems.push(item)\n                    }\n                }\n               return null\n            })\n            setItems(newItems)\n        }\n    }\n\n    function untagAll(val) {\n        console.log(['untagall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n               if (item && item.id) {\n                   if (item.isSelected && filteredItemsKeys[item.id]) {\n                       var newItem = JSON.parse(JSON.stringify(item));\n                       if (!newItem.tags) newItem.tags=[]\n                       var finalTags = []\n                       newItem.tags.map(function(tag) {\n                           if (tag !== val) {\n                               finalTags.push(tag)\n                           }  \n                           return null\n                       })\n                       newItem.tags = finalTags\n                       newItems.push(newItem)\n                   } else {\n                       newItems.push(item)\n                   }  \n               }\n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    \n    function resetSelection() {\n         //console.log('reset sa')\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item) {\n                    var newItem = item\n                   newItem.isSelected = false\n                   newItems.push(newItem)\n                }\n               return null\n            })\n            setItems(newItems)\n            \n        }\n    }\n    \n     function selectAll() {\n         console.log(['SELECTALL',items])\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item && item.id) {\n                    var newItem = item\n                    if (item.id && filteredItemsKeys[item.id]) {\n                       newItem.isSelected = true\n                       newItems.push(newItem)\n                    } else {\n                        newItem.isSelected = false\n                        newItems.push(newItem)\n                    }\n                }\n                return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    //function sort() {\n         //console.log(['SORT',items])\n         //if (items) {\n            //var newItems = items.sort(function(a,b) { if (a.value < b.value) return -1; else return 1;})\n            //setItems(newItems)\n            //listRef.current.resetAfterIndex(0);\n            //console.log(['SORTed',newItems])\n        //}\n    //}\n    \n    function saveItemWrap(item,index) {\n        console.log(['SAVE ITEM WRAP',item,index])\n        if (item) {\n            saveItem(item,index)\n            listRef.current.resetAfterIndex(index);\n            updateLists(items)\n        }\n    }\n    \n    function getItemSize(index) {\n        //console.log(window.innerWidth,window.innerHeight)\n        // set parameters for full size > 1024\n        var baseSize = 40\n        //// tiny screen mobile \n        if (window.innerWidth < 430) {\n            baseSize = 120\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n            baseSize = 70\n        }\n        return baseSize\n    }\n    \n   function createEmptyItem(list) {\n       var tags=[]\n        if (list && list !== \"Not In A List\" && list.trim().length > 0) tags.push(list)\n        setSearchFilter('')\n        saveItem({id:null, value:'', synonym:'',tags:tags})\n   }\n    \n    return {\n        loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter, filteredItems, setFilteredItems, sort, \n        searchFilter, setSearchFilter, tagAllValue, setTagAllValue,listRef, listFilterValue, setListFilterValue,\n        tagAll,untagAll, resetSelection, selectAll, saveItemWrap, getItemSize, deleteAll, createEmptyItem\n    }\n}\nexport default useListItemEditor\n","import React, { useEffect} from 'react';\nimport './App.css';\n//import {Link, useParams, useHistory} from 'react-router-dom'\nimport {Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport ListAllDropDown from './components/ListAllDropDown'\n\nimport ListsManagerSearchBar from './components/ListsManagerSearchBar'\nimport ListsManagerRow from './ListsManagerRow'\nimport useListItemEditor from './useListItemEditor'\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <ListsManagerRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups} />\n}\n\nexport default  function ListsManager(props) {\n    const {listFilterValue, setListFilterValue, loadAll, deleteItem ,items, findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, listRef, tagAll,untagAll, resetSelection, selectAll, saveItemWrap, getItemSize,  filteredItems, deleteAll, createEmptyItem, sort} = useListItemEditor('nlutool','lists','alldata', props.updateFunctions.updateLists)\n    //const [currentList, setCurrentList] = useState('')\n\n    useEffect(() => {\n        loadAll()\n        props.updateFunctions.updateLists(items)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    useEffect(() => {\n        //props.updateFunctions.updateLists(filteredItems)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[filteredItems])\n    \n    \n  \n    \n    function renderEditor(props) {\n                \n            if (filteredItems && filteredItems.length > 0) {\n                return <div>\n                    <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length} matches </span>\n                    \n                     \n                     {props.lookups.selectedListTally > 0 && <span style={{float:'right'}}> \n                        \n                        <span>With {props.lookups.selectedListTally} selected&nbsp;</span>\n                        <ListAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue} untagAll={untagAll} lookups={props.lookups}/>\n                        <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                    </span>} \n                    \n                      <div style={{clear:'both'}}>\n                        <div style={{clear:'both'}}>\n                            <List\n                                key=\"list\"\n                                ref={listRef}\n                                itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups}}\n                                itemKey={index => index}  \n                                className=\"List\"\n                                height={700}\n                                itemCount={filteredItems.length}\n                                itemSize={getItemSize}\n                                width={'100%'}\n                              >{RenderRow}\n                            </List>\n                        </div>\n                    </div>\n               </div>\n          }\n    }\n    \n   return <div>\n   \n        {<ListsManagerSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} listFilterValue={listFilterValue} setListFilterValue={setListFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} sort={sort} />}\n         \n         {renderEditor(props)}\n    </div>\n            \n}\n      \n","import React, {useEffect, useState} from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\nimport checkImage from '../images/check.svg'\n\n\nconst UtterancesManagerSearchBar = function(props) {\n    const [topTagOptions,setTopTagOptions] = useState([])\n    useEffect(() => {\n        //console.log(['kust nabager ',props.lookups.listsLookups])\n        var topTagOptionss = props.lookups.utteranceTagsLookups && props.lookups.utteranceTagsLookups.sort().map(function(listKey,i) {\n              return <Dropdown.Item key={i} value={listKey} onClick={function(e) {props.setListFilterValue(listKey)}}  >{listKey}</Dropdown.Item>\n        })\n        topTagOptionss.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setListFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        topTagOptionss.push(<Dropdown.Item key={'Not In A List'} value={'Not In A List'} onClick={function(e) {props.setListFilterValue('Not In A List')}}  ><b>Not In A List</b></Dropdown.Item>)\n        setTopTagOptions(topTagOptionss)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.lookups])\n    \n    return <div>\n            {<span>\n            \n                {props.lookups.selectedUtteranceTally > 0 && <Button size=\"lg\"  onClick={function(e) {console.log(['reset sel']); props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedUtteranceTally <= 0 && <Button size=\"lg\" onClick={function(e) {console.log(['sel all']); props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button> }\n                \n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'List'+(props.listFilterValue ? ' - '+ props.listFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topTagOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n              <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.listFilterValue)}} >New Utterance</Button>\n              <Button  style={{marginLeft:'1em'}} variant=\"primary\" onClick={function(e) {props.sort(function(a,b) { if (a.value < b.value) return -1; else return 1;})}} >Sort</Button>\n        </div>\n}\nexport default UtterancesManagerSearchBar\n","/* global window */\nimport {Button } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useListItemRow from './useListItemRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\n\nexport default function UtterancesManagerRow(props) {\n        const  {item, splitNumber , style} = props;\n       const {    \n            tags, reactTags, \n            onTagDelete, onTagAddition, updateExampleContent,updateExampleSynonym,  selectItem, deselectItem\n        } = useListItemRow(props.item, props.saveItem, props.splitNumber, props.style)\n            \n       \n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                   \n                   <div style={{float:'right'}} > \n                        <Button  variant=\"danger\"  size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} >X</Button>\n                    </div>\n                   \n                  <div style={{float:'left'}}>\n                     {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Select\"  /></Button>}\n                      {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\"  /></Button>}\n                </div>\n                \n                <input style={{float:'left'}} size='25'   \n                       type='text'  value={item.value}  onChange={function(e) { updateExampleContent(e.target.value)}} />\n                    \n                     \n                     <label style={{float:'left', marginLeft:'0.5em'}} >\n                     <span  style={{float:'left', marginRight:'0.5em'}}>Lists </span>\n                     <span  style={{float:'left'}}>\n                       <ReactTags\n                        placeholderText=\"Add to list\"\n                        minQueryLength={0}\n                        maxSuggestionsLength={50}\n                        autoresize={false}\n                        allowNew={true}\n                        ref={reactTags}\n                        tags={tags}\n                        suggestionComponent={SuggestionComponent}\n                        suggestions={props.lookups.utteranceTagsLookups.map(function(listName,i) {return {id: i, name: listName}})}\n                        onDelete={onTagDelete}\n                        onAddition={onTagAddition} /> \n                        </span>\n                        </label>\n                        \n                        \n                        \n                    <label style={{float:'left', marginLeft:'0.5em'}} ><span style={{float:'left', marginRight:'0.5em'}}>Alternatives</span> \n                        <textarea style={{width:\"34em\", height:\"5em\"}} type='text' value={item.synonym} onChange={function(e) {updateExampleSynonym(e.target.value)}} />\n                    </label>\n                  </div> \n               \n                \n                 \n           \n      </div>\n}\n","/* global window */\nimport React, { useEffect} from 'react';\nimport './App.css';\n//import {Link, useParams, useHistory} from 'react-router-dom'\nimport {Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport ListAllDropDown from './components/ListAllDropDown'\n\nimport UtterancesManagerSearchBar from './components/UtterancesManagerSearchBar'\nimport UtterancesManagerRow from './UtterancesManagerRow'\nimport useListItemEditor from './useListItemEditor'\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <UtterancesManagerRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups} />\n}\n\nexport default  function UtterancesManager(props) {\n    const {listFilterValue, setListFilterValue, loadAll, deleteItem , findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, listRef, tagAll,untagAll, resetSelection, selectAll, saveItemWrap,  filteredItems, deleteAll, createEmptyItem, sort} = useListItemEditor('nlutool','utterances','alldata', props.updateFunctions.updateUtterances)\n    //const [currentList, setCurrentList] = useState('')\n\n    function getItemSize() {\n        if (window.innerWidth < 430) {\n               return 220\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n               return 160\n        } else {\n            return 130\n        }\n    }\n\n    useEffect(() => {\n        loadAll()\n        //props.updateFunctions.updateLists(items)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n   \n    \n    function renderEditor(props) {\n            if (filteredItems && filteredItems.length > 0) {\n            \n                return <div>\n                    <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length} matches </span>\n                     \n                     {props.lookups.selectedUtteranceTally > 0 && <span style={{float:'right'}}> \n                        \n                        <span>With {props.lookups.selectedUtteranceTally} selected&nbsp;</span>\n                        <ListAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue} untagAll={untagAll} lookups={props.lookups}/>\n                        <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                    </span>} \n                    \n                      <div style={{clear:'both'}}>\n                        <div style={{clear:'both'}}>\n                            <List\n                                key=\"list\"\n                                ref={listRef}\n                                itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups}}\n                                itemKey={index => index}  \n                                className=\"List\"\n                                height={700}\n                                itemCount={filteredItems.length}\n                                itemSize={getItemSize}\n                                width={'100%'}\n                              >{RenderRow}\n                            </List>\n                        </div>\n                    </div>\n               </div>\n\n            }\n              \n    }\n    \n  \n    return <div>\n       \n                   \n        {<UtterancesManagerSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} listFilterValue={listFilterValue} setListFilterValue={setListFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} sort={sort} />}\n         \n         \n         {renderEditor(props)}\n    </div>\n            \n}\n      \n\n //{JSON.stringify(items)}\n    //<hr/>\n    \n    \n    //<hr/>\n    //{JSON.stringify(filteredItems)}\n\n\n","import React, {useEffect, useState} from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\nimport checkImage from '../images/check.svg'\n\n\nconst RegexpsManagerSearchBar = function(props) {\n    const [topTagOptions,setTopTagOptions] = useState([])\n    useEffect(() => {\n        //console.log(['kust nabager ',props.lookups.listsLookups])\n        var topTagOptionss = props.lookups.utteranceTagsLookups && props.lookups.utteranceTagsLookups.sort().map(function(listKey,i) {\n              return <Dropdown.Item key={i} value={listKey} onClick={function(e) {props.setListFilterValue(listKey)}}  >{listKey}</Dropdown.Item>\n        })\n        topTagOptionss.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setListFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        topTagOptionss.push(<Dropdown.Item key={'Not In A List'} value={'Not In A List'} onClick={function(e) {props.setListFilterValue('Not In A List')}}  ><b>Not Tagged</b></Dropdown.Item>)\n        setTopTagOptions(topTagOptionss)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.lookups])\n    \n    return <div>\n            {<span>\n            \n                {props.lookups.selectedRegexTally > 0 && <Button size=\"lg\"  onClick={function(e) { props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedRegexTally <= 0 && <Button size=\"lg\" onClick={function(e) { props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button> }\n                \n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'Tag'+(props.listFilterValue ? ' - '+ props.listFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topTagOptions} \n                  </Dropdown.Menu>\n                </Dropdown>}\n              <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.listFilterValue)}} >New Expression</Button>\n              <Button  style={{marginLeft:'1em'}} variant=\"primary\" onClick={function(e) {props.sort(function(a,b) { if (a.value < b.value) return -1; else return 1;})}} >Sort</Button>\n        </div>\n}\nexport default RegexpsManagerSearchBar\n","/* global window */\nimport {Button } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useListItemRow from './useListItemRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\n\nexport default function UtterancesManagerRow(props) {\n        const  {item, splitNumber , style} = props;\n       const {    \n            tags, reactTags, \n            onTagDelete, onTagAddition, updateExampleContent,updateExampleSynonym,  selectItem, deselectItem\n        } = useListItemRow(props.item, props.saveItem, props.splitNumber, props.style)\n            \n       \n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                   \n                   <div style={{float:'right'}} > \n                        <Button  variant=\"danger\"  size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} >X</Button>\n               \n                    </div>\n                   \n                  <div style={{float:'left'}}>\n                     {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Select\"  /></Button>}\n                      {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\"  /></Button>}\n                </div>\n                  \n                <label><span style={{float:'left', marginLeft:'0.5em', marginRight:'0.5em'}}>Description </span> <input style={{float:'left'}} size='50'   \n                       type='text'  value={item.value}  onChange={function(e) { updateExampleContent(e.target.value)}} /></label>\n                \n                \n                     \n                     <label style={{float:'right', marginRight:'2em'}} >\n                     <span  style={{float:'left', marginRight:'0.5em'}}>Tags </span>\n                     <span  style={{float:'left'}}>\n                       <ReactTags\n                        placeholderText=\"Add tag\"\n                        minQueryLength={0}\n                        maxSuggestionsLength={50}\n                        autoresize={false}\n                        allowNew={true}\n                        ref={reactTags}\n                        tags={tags}\n                        suggestionComponent={SuggestionComponent}\n                        suggestions={props.lookups.regexpTagsLookups.map(function(listName,i) {return {id: i, name: listName}})}\n                        onDelete={onTagDelete}\n                        onAddition={onTagAddition} /> \n                        </span>\n                        </label>\n                        \n                        \n                      \n                    <label style={{float:'left', marginLeft:'0.5em'}} ><span style={{float:'left', marginRight:'0.5em'}}>Regular Expression</span> \n                        <textarea style={{width:'60em',height:'2em'}}  type='text' value={item.synonym} onChange={function(e) {updateExampleSynonym(e.target.value)}} />\n                    </label>\n                    \n                    \n                  </div> \n               \n                \n                 \n           \n      </div>\n}\n","/* global window */\nimport React, { useEffect} from 'react';\nimport './App.css';\n//import {Link, useParams, useHistory} from 'react-router-dom'\nimport {Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport ListAllDropDown from './components/ListAllDropDown'\n\nimport RegexpsManagerSearchBar from './components/RegexpsManagerSearchBar'\nimport RegexpsManagerRow from './RegexpsManagerRow'\nimport useListItemEditor from './useListItemEditor'\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <RegexpsManagerRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups} />\n}\n\nexport default  function RegexpsManager(props) {\n    const {listFilterValue, setListFilterValue, loadAll, deleteItem , findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, listRef, tagAll,untagAll, resetSelection, selectAll, saveItemWrap,  filteredItems, deleteAll, createEmptyItem, sort} = useListItemEditor('nlutool','regexps','alldata', props.updateFunctions.updateRegexps)\n    //const [currentList, setCurrentList] = useState('')\n\n    function getItemSize() {\n        if (window.innerWidth < 430) {\n               return 260\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n               return 185\n        } else {\n            return 150\n        }\n    }\n\n    useEffect(() => {\n        loadAll()\n        //props.updateFunctions.updateLists(items)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n   \n    function renderEditor(props) {\n            if (filteredItems && filteredItems.length > 0) {\n            \n                return <div>\n                    <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length} matches </span>\n                     \n                     {props.lookups.selectedRegexTally > 0 && <span style={{float:'right'}}> \n                        <span>With {props.lookups.selectedRegexTally} selected&nbsp;</span>\n                        <ListAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue} untagAll={untagAll} lookups={props.lookups}/>\n                        <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                    </span>} \n                    \n                      <div style={{clear:'both'}}>\n                        <div style={{clear:'both'}}>\n                            <List\n                                key=\"list\"\n                                ref={listRef}\n                                itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups}}\n                                itemKey={index => index}  \n                                className=\"List\"\n                                height={700}\n                                itemCount={filteredItems.length}\n                                itemSize={getItemSize}\n                                width={'100%'}\n                              >{RenderRow}\n                            </List>\n                        </div>\n                    </div>\n               </div>\n\n            }\n              \n    }\n    \n  \n    return <div>\n        \n                   \n        {<RegexpsManagerSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} listFilterValue={listFilterValue} setListFilterValue={setListFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} sort={sort} />}\n         \n         \n         {renderEditor(props)}\n    </div>\n            \n}\n      \n\n //{JSON.stringify(items)}\n    //<hr/>\n    \n    \n    //<hr/>\n    //{JSON.stringify(filteredItems)}\n\n\n","import React, {useState, useEffect} from 'react'\nimport {findFirstDiffPos, uniquifyArray, uniquifyArrayOfObjects } from './utils'\nfunction useNluRow(item, saveItem, splitNumber, style, setPageMessage) {\n    const [selectionState, setSelectionState] = useState({})\n    const [newEntity, setNewEntity] = useState('')\n    const [intentTitle, setIntentTitle] = useState(item && item.intent ? item.intent : '')\n    // for ReactTags format using objects\n    const [tags, setTags] = useState([])\n    const [skills, setSkills] = useState([])\n    //console.log(['USENLUROW',splitNumber])\n    const reactTags = React.createRef()\n    const reactSkills = React.createRef()\n     // tags\n    useEffect(() => {\n        if (item.tags) setTags(item.tags.map(function(tag,i) {return {id:i, name:tag}}))\n        if (item.skills) setSkills(item.skills.map(function(skill,i) {return {id:i, name:skill}}))\n    },[item])\n\n     function onTagDelete (i) {\n        const newTags = tags.slice(0)\n        newTags.splice(i, 1)\n        setTags(newTags)\n        var newItem = item\n        newItem.tags = newTags.map(function(newTag) { return newTag.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onTagAddition (tag) {\n        if (tag && tag.name.trim().length > 0) {\n            const newTags = [].concat(tags, tag)\n            setTags(uniquifyArrayOfObjects(newTags,'name').sort(function(a,b) {if (a.name > b.name) return 1; else return -1} ))\n            var newItem = item\n            newItem.tags = uniquifyArray(newTags.map(function(newTag) { return newTag.name})).sort()\n            saveItem(newItem,splitNumber)\n        }\n      }\n      \n      function onSkillDelete (i) {\n        const newSkills = skills.slice(0)\n        newSkills.splice(i, 1)\n        setSkills(newSkills)\n        var newItem = item\n        newItem.skills = newSkills.map(function(newSkill) { return newSkill.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onSkillAddition (skill) {\n         if (skill && skill.name.trim().length > 0) {\n            const newSkills = [].concat(skills, skill)\n            setSkills(uniquifyArrayOfObjects(newSkills,'name').sort(function(a,b) {if (a.name > b.name) return 1 ;else return -1} ))\n            var newItem = item\n            newItem.skills = uniquifyArray(newSkills.map(function(newSkill) { return newSkill.name})).sort()\n            saveItem(newItem,splitNumber)\n        }\n     }\n    \n        \n    function createSelection(field, start, end) {\n        if (field) {\n            if( field.createTextRange ) {\n                var selRange = field.createTextRange();\n                selRange.collapse(true);\n                selRange.moveStart('character', start);\n                selRange.moveEnd('character', end-start);\n                selRange.select();\n            } else if( field.setSelectionRange ) {\n                field.setSelectionRange(start, end);\n            } else if( field.selectionStart ) {\n                field.selectionStart = start;\n                field.selectionEnd = end;\n            }\n            field.focus();\n        }\n    }\n    \n    function updateExampleContent(content) {\n        //console.log('UPDTEXT')\n        if (item && typeof item.example === \"string\" && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = JSON.parse(JSON.stringify(item));\n            if (item.entities && item.entities.length > 0) {\n                var entities = item.entities\n                // deal with entity ranges * allow for delete multiple\n                const diffPos = findFirstDiffPos(content,item.example)\n                // insertion\n                if (content.length - item.example.length > 0) {\n                    \n                    //console.log('UPDTEXT insert')\n                    const insertionLength = content.length - item.example.length\n                    // update start and end subtract deletionLength\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos < entity.start) {\n                            entity.start += insertionLength\n                            entity.end += insertionLength;\n                        } else if (diffPos < entity.end) {\n                            // update entity value\n                            entity.end += insertionLength;\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                // replace    \n                } \n                else if (content.length === item.example.length) {\n                    //console.log('UPDTEXT replace')\n                    // check if was inside an entity and update value as required\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos >= entity.start && diffPos < entity.end) {\n                            // update entity value\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                // deletion\n                } else {\n                    //console.log('UPDTEXT delete')\n                    const deletionLength = content.length - item.example.length\n                    // update start and end subtract deletionLength\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos < entity.start) {\n                            entity.start += deletionLength\n                            entity.end += deletionLength;\n                        } else if (diffPos < entity.end) {\n                            // update entity value\n                            entity.end += deletionLength;\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                }\n            }\n            newItem.example = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    function entityClicked(entityKey,entityType) {\n        if (item.entities)  {\n            var entities = item.entities\n            if (! selectionState || !selectionState.textSelection || selectionState.textSelection.length === 0) {\n                // select text in string\n                if (entities[entityKey]) {\n                   createSelection(document.getElementById('example_input_'+splitNumber),entities[entityKey].start,entities[entityKey].end)\n                }\n            } else {\n                entityTypeChanged(entityKey,entityType);\n            }\n        }\n    }\n    \n    function entityTypeChanged(entityNumber,type) {\n        //console.log(['ENTY TYPE CHANGE',entityNumber,type])\n        var newItem = item\n        if (!Array.isArray(item.entities)) {\n            item.entities = []\n        }\n         //console.log(['ENTY TYPE CHANGE ITEM ENT',item.entities])\n        var newEntities = item.entities \n        var entity = newEntities[entityNumber] ? newEntities[entityNumber] : {}\n        const typeChanged = !(type && type.length > 0 && type === entity.type)\n        //console.log(['ENTY TYPE CHANGED',typeChanged,type,entity.type])\n        entity.type = type\n        if (selectionState && selectionState.textSelection) {\n            //console.log(['HAVE SELECTION',selectionState.textSelection])\n            const start = selectionState.startTextSelection\n            const end = selectionState.endTextSelection\n            var isOverlapProblem = false;\n            if (typeof parseInt(start) === \"number\" && typeof parseInt(end) === \"number\") {\n                item.entities.map(function(entity) {\n                    // is OK if updating entity \n                    const bypass = !typeChanged && entity.type === type\n                    const isOverlap = (entity.start > start && entity.start < end) || (entity.end > start && entity.end < end)\n                    //console.log(['CHECK ENTITY',bypass, isOverlap, entity.type,start,end,entity.start,entity.end])\n                    if (!bypass && isOverlap) isOverlapProblem = true\n                    return null\n                })\n            }\n            if (isOverlapProblem) {\n                setPageMessage('Overlap with existing entity !')\n                setTimeout(function() {\n                    setPageMessage('')\n                },2000)\n            } else {\n                entity.value = selectionState.textSelection\n                entity.start = selectionState.startTextSelection\n                entity.end = selectionState.endTextSelection\n                if (!newEntities[entityNumber]) newEntities.push(entity)\n                else newEntities[entityNumber] = entity\n                newItem.entities = newEntities\n                setSelectionState(null)\n                saveItem(newItem,splitNumber)\n            }\n        } else {\n            if (!newEntities[entityNumber]) newEntities.push(entity)\n            else newEntities[entityNumber] = entity\n            newItem.entities = newEntities\n            setSelectionState(null)\n            saveItem(newItem,splitNumber)\n        }\n        \n    }\n    \n    function intentChanged(intent) {\n        var newItem = item \n        newItem.intent = intent\n        saveItem(newItem,splitNumber)\n    }\n \n    \n    function entityDelete(entityNumber) {\n        if (item.entities) {\n            var newItem = item \n            var newEntities = item.entities.slice(0,entityNumber).concat(item.entities.slice(entityNumber + 1))\n            newItem.entities = newEntities\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    function selectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = true;\n        saveItem(newItem,splitNumber)\n    }\n    \n    \n    function setSkill(skill, splitNumber) {\n        //var newItem = item\n        //item.isSelected = true;\n        //props.saveItem(newItem,splitNumber)\n    }\n    \n    function deselectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = false;\n        saveItem(newItem,splitNumber)\n    } \n    \n    return {    \n        intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, setTags, skills, setSkills, reactTags, reactSkills, onTagDelete, onTagAddition, onSkillDelete,onSkillAddition, createSelection, updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem, setSkill, deselectItem\n    }\n    \n}\nexport default useNluRow\n","/* global window */\nimport {Button,   Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React, {useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useNluRow from './useNluRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\n\nexport default function NluExampleRow(props) {\n       const  {item, splitNumber , style} = props;\n       const {    \n            intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, skills, reactTags, reactSkills, \n            onTagDelete, onTagAddition, onSkillDelete,onSkillAddition, updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem,  deselectItem\n        } = useNluRow(props.item, props.saveItem, props.splitNumber, props.style, props.setPageMessage)\n        const [textInput, setTextInput] = useState(props.item && props.item.example ? props.item.example  : '')\n         \n       var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {intentChanged(intentKey)}}  >{intentKey}</Dropdown.Item>\n       })\n       //var skillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n          //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkill(skillKey,props.splitNumber)}}  >{skillKey}</Dropdown.Item>\n       //})\n       // ONE PER ENTITY FOR THIS EXAMPLE\n       var entitiesDropdowns = item && item.entities ? item.entities.map(function(entity,i) {\n           var entityOptions = props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item  key={j} value={entityKey} onClick={function(e) {entityTypeChanged(i,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           return<Dropdown style={{marginLeft:'0.2em'}} variant='info'  key={i}  as={ButtonGroup}>\n              <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button variant='info'   size=\"sm\"  onClick={function(e) {entityClicked(i,entity.type)}} >\n              <b>{entity.type}</b> \n                -\n              {entity.value ? entity.value : 'Select Entity Type'}\n              </Button>\n              <Button variant=\"info\" size=\"sm\" onClick={function(e) {entityDelete(i,'')}} >X</Button>\n              <Dropdown.Menu>\n                  <form  style={{display:'inline'}}>\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {entityTypeChanged(i,e.target.value)}}\n                    value={entity.type} />\n                    </div>\n                  </form>\n                  {entityOptions}\n              </Dropdown.Menu>\n            </Dropdown>\n       }) : [];\n        //PLUS CREATE NEW WHEN TEXT IS SELECTED\n       if (selectionState  && selectionState.textSelection && selectionState.textSelection.length > 0 &&  selectionState.textSelectionFrom === splitNumber) {\n           var entityOptions =  props.lookups.entityLookups && props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item key={j} value={entityKey} onClick={function(e) {entityTypeChanged(-1,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           entitiesDropdowns.push(<Dropdown key=\"new\" variant='success'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='success'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant='success' size=\"sm\" >New Entity</Button>\n\n          <Dropdown.Menu>\n           <form style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); entityTypeChanged(-1,newEntity)}}>\n                <div className=\"form-group\">\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {setNewEntity(e.target.value)}}\n                value={newEntity} />\n                </div>\n              </form>\n              {entityOptions}\n          </Dropdown.Menu>\n        </Dropdown>)\n       }\n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                  \n                   {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img  style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button>}\n                  {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img  style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button>}\n                  \n                <Button  variant=\"danger\" size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} >X</Button>\n                 \n                 \n                  <Dropdown  style={{float:'left'}} as={ButtonGroup}>\n                  <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button   size=\"sm\" >{item.intent ? item.intent.toString() : 'Select Intent'} </Button>\n                  <Dropdown.Menu>\n                   <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); intentChanged(intentTitle)}}>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" value={intentTitle} onChange={function(e) {setIntentTitle(e.target.value)}}\n                         />\n                        </div>\n                      </form>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                  </Dropdown>\n                  <span style={{float:'left'}}>{entitiesDropdowns}</span>\n                 \n                   <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add to skill\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactSkills}\n                    tags={skills}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.skillLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onSkillDelete}\n                    onAddition={onSkillAddition} /> \n                    </div>\n                    \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add new tag\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactTags}\n                    tags={tags}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.tagLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onTagDelete}\n                    onAddition={onTagAddition} /> \n                    </div>\n                  \n                  <input     \n                   onFocus={ function(e) {\n                       setSelectionState(null)\n                    }}\n                   onSelect={ function(e) {\n                     var textSelection = window.getSelection().toString(); \n                     setSelectionState({textSelection:textSelection, textSelectionFrom: splitNumber, startTextSelection: e.target.selectionStart, endTextSelection: e.target.selectionEnd})\n                  }}  \n                   type='text' style={{width:'80%'}} value={textInput} id={\"example_input_\"+splitNumber} onChange={function(e) { setTextInput(e.target.value); updateExampleContent(e.target.value)}} />\n                  \n                  \n                \n                \n            </div>\n      </div>\n}\n","import React from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\nimport checkImage from '../images/check.svg'\n\nconst EditorSearchBar = function(props) {\n    var topskillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n          return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {props.setSkillFilterValue(skillKey)}}  >{skillKey}</Dropdown.Item>\n    })\n    topskillOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setSkillFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        \n    var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {props.setIntentFilterValue(intentKey)}}  >{intentKey}</Dropdown.Item>\n    })\n    intentOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setIntentFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        \n    return <div>\n            {<span>\n            \n                {props.lookups.selectedTally > 0 && <Button size=\"lg\"  onClick={function(e) { props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedTally <= 0 && <Button size=\"lg\" onClick={function(e) { props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button> }\n                \n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'Skill '+(props.skillFilterValue ? ' - '+ props.skillFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topskillOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n                \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'Intent '+(props.intentFilterValue ? ' - '+ props.intentFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n            \n             <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.skillFilterValue, props.intentFilterValue)}} >New Intent</Button>\n             <Button  style={{marginLeft:'1em'}} variant=\"primary\" onClick={function(e) {props.sort(function(a,b) { if (a.value < b.value) return -1; else return 1;})}} >Sort</Button>\n        </div>\n}\nexport default EditorSearchBar\n","import React, {useState, useEffect} from 'react';\nimport localforage from 'localforage'\nimport useDBSingleKey from './useDBSingleKey'\nimport {uniquifyArray, generateObjectId} from './utils'\nimport {useParams, useHistory} from 'react-router-dom'\n\nfunction useNluEditor(database, databaseTable, databaseKey, updateLookups) {\n    //console.log([\"USENLUEDITOR\",database, databaseTable, databaseKey])\n    const {loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter, sort} = useDBSingleKey(database, databaseTable, databaseKey)\n    //console.log([\"USENLUEDITOR items\",items])\n    const [filteredItems, setFilteredItems] = useState([])\n    const [filteredItemsKeys, setFilteredItemsKeys] = useState([])\n    const [searchFilter, setSearchFilter] = useState('')\n    const [tagAllValue, setTagAllValue] = useState('')\n    const [skillAllValue, setSkillAllValue] = useState('')\n    //const [skillFilterValue, setSkillFilterValue] = useState('')\n    //const [intentFilterValue, setIntentFilterValue] = useState('')\n    const [intentAllValue, setIntentAllValue] = useState('')\n    const listRef = React.createRef()\n    \n    const params = useParams()\n    const history = useHistory()\n    var skillFilterValue = params.skillId ? params.skillId : '';\n    function setSkillFilterValue(value) {\n        //console.log('SETSKILLVAL')\n        //console.log(history)\n        var root = history.location.pathname.split(\"/\")\n        var parts=['/'+root[1]]\n        skillFilterValue = value;\n        if (skillFilterValue.length > 0) {\n            parts.push('/skill/'+skillFilterValue)\n        }\n        if (intentFilterValue.length > 0) {\n            parts.push('/intent/'+intentFilterValue)\n        }\n        //console.log(['ssv',parts,value])\n        history.push(parts.join(''))\n    }\n    var intentFilterValue = params.intentId ? params.intentId : '';\n    \n    function setIntentFilterValue(value) {\n        var root = history.location.pathname.split(\"/\")\n        var parts=['/'+root[1]]\n        intentFilterValue = value;\n        if (skillFilterValue.length > 0) {\n            parts.push('/skill/'+skillFilterValue)\n        }\n        if (intentFilterValue.length > 0) {\n            parts.push('/intent/'+intentFilterValue)\n        }\n        history.push(parts.join(''))\n    }\n    \n    //const examplesDB = useDBSingleKey('nlutool','examples','alldata')\n    //var updateLookupsTimeout = null\n    //var updateFilteredTimeout = null\n    //useEffect(() => {\n        ////clearTimeout(updateLookupsTimeout)\n        ////updateLookupsTimeout = setTimeout(function() {\n            \n        ////},2000)\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[items])\n     \n    useEffect(() => {\n        //clearTimeout(updateFilteredTimeout)\n        //console.log('UPDATE FILTERED'+intentFilterValue)\n        //updateFilteredTimeout = setTimeout(function() {\n             //console.log('UPDATE FILTERED NOW')\n             var filteredItems = filter(function(item) {\n                if ((!searchFilter || searchFilter.trim().length <=0 ) && (!skillFilterValue || skillFilterValue.trim().length <=0 ) && (!intentFilterValue || intentFilterValue.trim().length <=0 )) return true;\n                var intentFilter = true\n                if (intentFilterValue && intentFilterValue.length > 0) {\n                    if (item.intent === intentFilterValue) {\n                        intentFilter = true\n                    } else {\n                        intentFilter = false\n                    }\n                }\n                var skillFilter = true\n                if (skillFilterValue && skillFilterValue.length > 0) {\n                    if (item.skills && item.skills.indexOf(skillFilterValue) !== -1) {\n                        skillFilter = true\n                    } else {\n                        skillFilter = false\n                    }\n                }\n                var searchFilterBool = true\n                if (searchFilter && searchFilter.length > 0) {\n                    if (item.example && item.example.toLowerCase().indexOf(searchFilter.toLowerCase()) !== -1 ) {\n                        searchFilterBool = true\n                    } else {\n                        searchFilterBool = false\n                    }\n                }         \n                return searchFilterBool && skillFilter && intentFilter;       \n                //intentFilterValue\n                //return (item.example.indexOf(searchFilter) !== -1 \n                            //&& intentFilter \n                            //&& ((skillFilterValue.length <= 0 || (skillFilterValue.length > 0 && typeof item.skills ===\"object\" && item.skills.indexOf(skillFilterValue) !== -1)) ? true : false\n            })\n            var itemKeys = {}\n            filteredItems.map(function(item) {if (item.id) itemKeys[item.id] = true; return null})\n            filteredItems.sort(function(a,b) { return (a.value ? a.value.toLowerCase() : '') < (b.value ? b.value.toLowerCase() : '') ? true : false})\n            setFilteredItems(filteredItems)\n            setFilteredItemsKeys(itemKeys)\n            updateLookups(filteredItems)\n        //},800)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items, searchFilter, skillFilterValue, intentFilterValue])\n    \n    function deleteAll(e)  {\n        if (window.confirm('Really delete all selected')) {\n            if (items) {\n                var newItems = []\n                items.map(function(item,i) {\n                    // dump items without id\n                    if (item && item.id) {\n                        // only delete filtered items\n                        if (filteredItemsKeys[item.id]) {\n                           // only delete selected filtered items\n                           if (!item.isSelected) {\n                               newItems.push(item)\n                           }\n                        // not filtered so push\n                        } else {\n                            newItems.push(item)\n                        }\n                    }\n                    return null\n                })\n                setItems(newItems)\n                listRef.current.resetAfterIndex(0);\n            }\n        }\n    }\n    \n    function tagAll(val) {\n        console.log(['tagall',tagAllValue,val])\n        var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item && item.id) { \n                    if (item.isSelected && filteredItemsKeys[item.id]) {\n                       var newItem = JSON.parse(JSON.stringify(item));\n                       if (!newItem.tags) newItem.tags=[]\n                       if (newItem.tags.indexOf(tagValue) === -1) newItem.tags.push(tagValue)\n                       newItems.push(newItem)\n                    } else {\n                       newItems.push(item)\n                    }\n                }\n               return null\n            })\n            setItems(newItems)\n        }\n    }\n\n    function untagAll(val) {\n        console.log(['untagall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n               if (item && item.id) {\n                   if (item.isSelected && filteredItemsKeys[item.id]) {\n                       var newItem = JSON.parse(JSON.stringify(item));\n                       if (!newItem.tags) newItem.tags=[]\n                       var finalTags = []\n                       newItem.tags.map(function(tag) {\n                           if (tag !== val) {\n                               finalTags.push(tag)\n                           }  \n                           return null\n                       })\n                       newItem.tags = finalTags\n                       newItems.push(newItem)\n                   } else {\n                       newItems.push(item)\n                   }  \n               }\n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    function intentAll(val) {\n        //console.log(['intentall',intentAllValue,val])\n        var intentValue = val ? val : intentAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item && item.id) {\n                   if (item.isSelected && filteredItemsKeys[item.id]) {\n                       var newItem = item\n                       newItem.intent = intentValue\n                       newItems.push(newItem)\n                   } else {\n                       newItems.push(item)\n                   }  \n                }\n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    function resetSelection() {\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item) {\n                   var newItem = item\n                   newItem.isSelected = false\n                   newItems.push(newItem)\n                } \n               return null\n            })\n            setItems(newItems)\n            \n        }\n    }\n    \n    function selectAll() {\n         console.log(['SELECTALL',items])\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item && item.id) {\n                    var newItem = item\n                    if (item.id && filteredItemsKeys[item.id]) {\n                       newItem.isSelected = true\n                       newItems.push(newItem)\n                    } else {\n                        newItem.isSelected = false\n                        newItems.push(newItem)\n                    }\n                }\n                return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    \n    \n     function skillSetAll(val) {\n         //console.log(['set skill all',tagAllValue,val])\n        var skillValue = val ? val : skillAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n               if (item && item.id) { \n                   if (item.isSelected && filteredItemsKeys[item.id]) {\n                       var newItem = JSON.parse(JSON.stringify(item));\n                       if (!newItem.skills) newItem.skills=[]\n                       if (newItem.skills.indexOf(skillValue) === -1) newItem.skills.push(skillValue)\n                       newItem.skills = uniquifyArray(newItem.skills)\n                       newItems.push(newItem)\n                   } else {\n                       newItems.push(item)\n                   }  \n                }\n               return null\n            })\n            setItems(newItems)\n        }\n    }\n\n       function unskillAll(val) {\n        //console.log(['unskillall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n               if (item && item.id) { \n                   if (item.isSelected && filteredItemsKeys[item.id]) {\n                       var newItem = JSON.parse(JSON.stringify(item));\n                       if (!newItem.skills) newItem.skills=[]\n                       var finalTags = []\n                       newItem.skills.map(function(tag) {\n                           if (tag !== val) {\n                               finalTags.push(tag)\n                           }  \n                           return null\n                       })\n                       newItem.skills = finalTags\n                       newItems.push(newItem)\n                   } else {\n                       newItems.push(item)\n                   }  \n                }\n               return null\n            })\n            setItems(newItems)\n        }\n    }\n        \n       \n    function saveAll(e)  {\n        console.log(['save akk',filteredItems])\n        if (items) {\n            var newItems = []\n            var lsItems = []\n            filteredItems.map(function(item,i) {\n                if (item.intent && item.intent.length > 0 && item.id && filteredItemsKeys[item.id]) {\n                   if (item.isSelected) {\n                       lsItems.push(item)\n                   } else {\n                       newItems.push(item)\n                   }\n                } else {\n                    newItems.push(item)\n               }\n               return null\n            })\n            //saveLSItems(lsItems)\n            setItems(newItems)\n            listRef.current.resetAfterIndex(0);\n        }\n         \n    }\n   \n    function createEmptyItem(skill, intent) {\n        console.log(['CREATE EMPTY EXAMPLE'])\n        setSearchFilter('')\n        var skills=[]\n        if (skill && skill.trim().length > 0) skills.push(skill)\n        var newIntent=''\n        if (intent && intent.trim().length > 0) newIntent = intent\n        saveItemWrap({id:generateObjectId(), example:'', intent:newIntent, skills:skills,tags:[]},0)\n        console.log(['SAVED NEW EXAMPLE',{id:null, example:'', intent:newIntent, skills:skills,tags:[]}])\n    }\n    \n    function saveItemWrap(item,index) {\n        saveItem(item,index)\n        if (listRef && listRef.current) listRef.current.resetAfterIndex(index);\n        updateLookups(items)\n    }\n    \n    function getItemSize(index) {\n        //console.log(window.innerWidth,window.innerHeight)\n        // set parameters for full size > 1024\n        var baseSize = 100\n        var heightPerLine = 70\n        var tagsPerLine = 10\n        var entitiesPerLine = 8\n        var skillsPerLine = 6\n        // tiny screen mobile \n        if (window.innerWidth < 430) {\n            baseSize = 140\n            heightPerLine = 50\n            tagsPerLine = 4\n            entitiesPerLine = 1\n            skillsPerLine = 1\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n            baseSize = 120\n            heightPerLine = 30\n            tagsPerLine = 2\n            entitiesPerLine = 1\n            skillsPerLine = 2\n        }\n        var tallyExtras = 0;\n        var item = items[index]\n        if (item && item.entities) tallyExtras += item.entities.length/entitiesPerLine;\n        if (item && item.tags) tallyExtras += item.tags.length/tagsPerLine;\n        if (item && item.skills) tallyExtras += item.skills.length/skillsPerLine;\n        var size = baseSize + (Math.round(tallyExtras)) * heightPerLine\n        //console.log(['ITEM SIZE',size, baseSize,heightPerLine,tagsPerLine,entitiesPerLine,tallyExtras,item])\n        return size \n    }\n    \n    function saveLSItem(item) {\n        var localforageStorage = localforage.createInstance({\n           name: 'nlutool',\n           storeName   :'examples',\n         });\n         localforageStorage.getItem('alldata').then(function(exampleItems) {\n                exampleItems.push(item)\n                localforageStorage.setItem('alldata',exampleItems)\n         })\n       \n    }\n    \n    function saveLSItems(newItems) {\n        if (newItems) {\n            var localforageStorage = localforage.createInstance({\n               name: 'nlutool',\n               storeName   :'examples',\n             });\n             localforageStorage.getItem('alldata').then(function(exampleItems) {\n                 if (exampleItems) {\n                    newItems.map(function(newItem) { exampleItems.push(newItem ); return null})\n                    localforageStorage.setItem('alldata',exampleItems)\n                 }\n             })\n        }\n    }\n\n     \n    function saveNlu(splitNumber) {\n        if (items && items[splitNumber]) {\n            //props.saveNluItem(items[splitNumber]) \n            saveLSItem(items[splitNumber])\n            deleteItem(splitNumber)\n        }\n    }\n\n    //function sortItems() {\n        \n    //}\n    \n\n    \n    return {\n        loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter, filteredItems, setFilteredItems,createEmptyItem, sort, \n        searchFilter, setSearchFilter, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue, skillFilterValue, setSkillFilterValue,intentFilterValue, setIntentFilterValue,\n         intentAllValue, setIntentAllValue, listRef, \n        tagAll,untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, saveAll, saveNlu\n    }\n}\nexport default useNluEditor\n","import React, { useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport NluExampleRow from './NluExampleRow'\nimport EditorSearchBar from './components/EditorSearchBar'\nimport useNluEditor from './useNluEditor'\nimport {MatchesTallies,WithSelectedDropDowns} from './components/Components'\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <NluExampleRow  \n         item={item} splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} \n         lookups={props.data.lookups} setPageMessage={props.data.setPageMessage} />\n}\n\nexport default function NluExampleEditor(props) {\n    const {loadAll, deleteItem , items, findKeyBy, searchFilter, setSearchFilter, skillFilterValue, setSkillFilterValue, intentFilterValue, setIntentFilterValue, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue,  intentAllValue, setIntentAllValue, listRef, tagAll,untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, filteredItems, createEmptyItem, sort} = useNluEditor('nlutool','examples','alldata', props.updateFunctions.updateLookups)\n    useEffect(() => {\n        loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    //useEffect(() => {\n        //if (importFrom) {\n            //var parsed = parseImportText(importFrom)\n            //setItems(parsed)\n            //props.setImportFrom('')\n        //}\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[props.importFrom])\n    \n\n    function renderEditor(props) {\n        // filter rendered list using callback \n       //var filteredItems = filter(function(item) {\n                //if (!searchFilter || searchFilter.length <=0 ) return true;\n                //const matchSearchFilter = item.example.indexOf(searchFilter) !== -1 \n                        //|| item.intent.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)\n                //return matchSearchFilter && skillFilterValue && item.skills && item.skills.indexOf(skillFilterValue) !== -1\n            //})\n          \n        if (filteredItems && filteredItems.length > 0) {\n            return <div>\n          \n          <MatchesTallies items={items} filteredItems={filteredItems}/>\n             {props.lookups.selectedTally > 0 && <span style={{float:'right'}}> \n                 <WithSelectedDropDowns\n                  skillSetAll={skillSetAll} skillAllValue={skillAllValue}  setSkillAllValue={setSkillAllValue}  untagAll={untagAll} unskillAll={unskillAll} \n                     intentAll={intentAll} intentAllValue={intentAllValue} setIntentAllValue={setIntentAllValue}  \n                     tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue}  lookups={props.lookups}\n                 />\n                 \n                        \n                \n                 <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n               \n            </span> } \n               \n                <List\n                    ref={listRef}\n                    itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups, setPageMessage: props.setPageMessage}}\n                    itemKey={index => index}  \n                    className=\"List\"\n                    height={700}\n                    itemCount={filteredItems.length}\n                    itemSize={getItemSize}\n                    width={'100%'}\n                  >{RenderRow}</List>\n            </div>\n        } else {\n            //{JSON.stringify(filteredItems)}\n            return <div >\n             \n                <div style={{textAlign:'center'}}>\n            <br/><b>No items</b><br/><br/>Upload <Link to=\"/sources\" ><Button>Sources</Button></Link> then <Link to=\"/import\" ><Button>Import</Button></Link>.</div></div>\n        }\n    }\n    \n     return <div>\n        <EditorSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} skillFilterValue={skillFilterValue} setSkillFilterValue={setSkillFilterValue} resetSelection={resetSelection} selectAll={selectAll}  createEmptyItem={createEmptyItem} intentFilterValue={intentFilterValue} setIntentFilterValue={setIntentFilterValue} untagAll={untagAll} unskillAll={unskillAll} sort={sort}  />\n         {renderEditor(props)}\n    </div>\n    \n}\n      \n\n\n\n\n","/* global window */\nimport React , {useState, useEffect} from 'react';\nimport {Button, Navbar } from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport fireImage from '../images/singingman.svg'\nimport waitingImage from '../images/waiting.gif'\nimport ReactGA from 'react-ga';\n\n\n//ReactGA.initialize('UA-3712973-4');\n\nexport default function NavbarComponent(props) {\n    //console.log(props)\n    //ReactGA.pageview(props.history.location.pathname);\n    var astyle={paddingLeft:'0.3em'}\n    const currentPage = props.history && props.history.location && props.history.location.pathname ? props.history.location.pathname : '/'\n    const pages = {\n        '/': {name: 'NLU Tool',show: false},\n        '/search': {name: 'Search',show: true},//link:'https://github.com/syntithenai/opennludata/wiki'\n        '/sources': {name: 'Import',show: true},\n        '/regexps': {name: 'RegExps',show: true},\n        '/lists': {name: 'Entities',show: true},\n        '/utterances': {name: 'Utterances',show: true},\n        '/examples': {name: 'Intents',show: true},\n        '/skills': {name: 'Skills',show: true},\n        '/help': {name: 'Help',show: true},\n        \n    }\n     var [stuff, setStuff] = useState('')\n   \n    useEffect(() => {\n        if (props.user && props.user.token && props.user.token.access_token) { \n             console.log('GETresS' )\n            var axiosClient = props.getAxiosClient(props.user.token.access_token)\n            axiosClient.get('http://localhost:5000/api/v1/skill/count').then(function(res) {\n                setStuff(res)\n                console.log(res)\n            })\n        }\n    },[(props.user && props.user.token && props.user.token.access_token ? props.user.token.access_token: '')])\n    \n    const links = Object.keys(pages).map(function(link,k) {\n        const page = pages[link]\n        if (page.show) {\n            if (page.link) {\n                return <a key={k} style={astyle} href={page.link} ><Button variant='primary' >{page.name}</Button></a>                \n            } else {\n                return <Link key={k} style={astyle} to={link} ><Button variant={currentPage.indexOf(link) !== -1 ? 'success' : 'primary'}>{page.name}</Button></Link>\n            }\n        }\n        return null\n    })\n    \n    //const helpButton = pages[currentPage] && pages[currentPage].helpComponent ? pages[currentPage].helpComponent : <Link to=\"/help\" ><Button>Help</Button></Link>\n    \n//        <Navbar.Text><Button><img src='/menu.svg' alt='menu' /></Button></Navbar.Text>\n\n    return <Navbar  bg=\"dark\" variant=\"dark\"  style={{width:'100%', border:''}} >\n        \n        {props.message && <div style={{position:'fixed',top:100,left:window.innerWidth ? (window.innerWidth /2 - 40) : 100, border: '2px solid red', background: 'pink', padding: '0.5em', minWidth:'400px' ,borderRadius:'5px', zIndex:999}} >\n            <Button variant=\"danger\" size=\"sm\"  style={{float:'right', fontWeight: 'bold',borderRadius:'20px',marginLeft:'1em'}} onClick={function(e) {props.setPageMessage('')}}>X</Button>{props.message} \n        </div>}\n        \n        <img src={fireImage}  style={{height:'5em', marginRight:'0.4em'}} alt=\"logo\"/>\n         <div style={{width: '100%'}}>\n        \n        {links}\n        </div>\n        \n         <div style={{float:'right', vAlign:'top', minWidth:'10em', marginRight:'0em'}}>\n        {props.isLoggedIn() && \n            <div>\n                <a style={{display:'inline'}}  href=\"/login/profile\" ><Button variant=\"primary\" >{'Profile'}</Button></a>\n                <a style={{display:'inline'}}  href=\"/login/logout\" ><Button variant=\"danger\" >Logout</Button></a>\n            </div>\n        }\n        { !props.isLoggedIn() && \n            <a href=\"/login/login\" ><Button variant=\"success\" >Login</Button></a>\n        }\n        \n        </div>\n        \n         <img src={waitingImage} alt='waiting' style={{position:'fixed', top:5, right:5, zIndex:99, display: props.waiting ? 'block' : 'none' }} />\n    </Navbar>\n}\n\n\n        //<Navbar.Text><Link to=\"/organise\" ><Button>Organise</Button></Link></Navbar.Text>\n        //<Navbar.Text><Link to=\"/skills\" ><Button>My Skills</Button></Link></Navbar.Text>\n        //<Navbar.Text><Link to=\"/search\" ><Button>Search Community</Button></Link></Navbar.Text>\n","/* global window */\nimport {Button,   Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useNluRow from './useNluRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\nimport thumbdownImage from './images/thumb-down.svg'\nimport thumbupImage from './images/thumb-up.svg'\n\n\nexport default function NluImportRow(props) {\n     const  {item, splitNumber , style} = props;\n       const {    \n            intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, skills, reactTags, reactSkills, \n            onTagDelete, onTagAddition, onSkillDelete,onSkillAddition,  updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem,  deselectItem\n        } = useNluRow(props.item, props.saveItem, props.splitNumber, props.style, props.setPageMessage)\n                \n       var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {intentChanged(intentKey)}}  >{intentKey}</Dropdown.Item>\n       })\n       // ONE PER ENTITY FOR THIS EXAMPLE\n       var entitiesDropdowns = item && item.entities ? item.entities.map(function(entity,i) {\n           var entityOptions = props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item  key={j} value={entityKey} onClick={function(e) {entityTypeChanged(i,entityKey)}}  >{entityKey}</Dropdown.Item>\n           }) \n           return<Dropdown style={{marginLeft:'0.2em'}} variant='info'  key={i}  as={ButtonGroup}>\n              <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button variant='info'   size=\"sm\"  onClick={function(e) {entityClicked(i,entity.type)}} >\n              <b>{entity.type}</b> \n                -\n              {entity.value ? entity.value : 'Select Entity Type'}\n              </Button>\n              <Button variant=\"info\" size=\"sm\" onClick={function(e) {entityDelete(i,'')}} >X</Button>\n              <Dropdown.Menu>\n                  <form  style={{display:'inline'}}>\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {entityTypeChanged(i,e.target.value)}}\n                    value={entity.type} />\n                    </div>\n                  </form>\n                  {entityOptions}\n              </Dropdown.Menu>\n            </Dropdown>\n       }): [] ;\n        //PLUS CREATE NEW WHEN TEXT IS SELECTED\n       if (selectionState  && selectionState.textSelection && selectionState.textSelection.length > 0 &&  selectionState.textSelectionFrom === splitNumber) {\n           var entityOptions =  props.lookups.entityLookups && props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item key={j} value={entityKey} onClick={function(e) {entityTypeChanged(-1,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           entitiesDropdowns.push(<Dropdown key=\"new\" variant='success'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='success'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant='success' size=\"sm\" >New Entity</Button>\n\n          <Dropdown.Menu>\n           <form style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); entityTypeChanged(-1,newEntity)}}>\n                <div className=\"form-group\">\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {setNewEntity(e.target.value)}}\n                value={newEntity} />\n                </div>\n              </form>\n              {entityOptions}\n          </Dropdown.Menu>\n        </Dropdown>)\n       }\n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                  \n                   {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button>}\n                  {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button>}\n                  \n                  {item.intent && <Button  style={{float:'right', marginLeft:'0.2em'}}  variant=\"success\"  onClick={function() {props.saveNlu(splitNumber)}} ><img src={thumbupImage} alt=\"Save\" /> Save</Button>}\n                  {!item && <Button   style={{float:'right', marginLeft:'0.2em'}} variant=\"secondary\" ><img src={thumbupImage} alt=\"Save\" /> Import</Button>} \n                  <Button  variant=\"danger\" style={{float:'right'}} onClick={function(e) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}} ><img src={thumbdownImage} alt=\"Delete\" /> Delete</Button>\n                  \n                 \n                  <Dropdown  style={{float:'left'}} as={ButtonGroup}>\n                  <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button   size=\"sm\" >{item.intent ? item.intent.toString() : 'Select Intent'} </Button>\n                  <Dropdown.Menu>\n                   <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); intentChanged(intentTitle)}}>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" value={intentTitle} onChange={function(e) {setIntentTitle(e.target.value)}}\n                         />\n                        </div>\n                      </form>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                  </Dropdown>\n                  <span style={{float:'left'}}>{entitiesDropdowns}</span>\n                 \n                  \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add to skill\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactSkills}\n                    tags={skills}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.skillLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onSkillDelete}\n                    onAddition={onSkillAddition} /> \n                    </div>\n                    \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add new tag\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactTags}\n                    tags={tags}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.tagLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onTagDelete}\n                    onAddition={onTagAddition} /> \n                    </div>\n                  \n                  <input  \n                 \n                   onFocus={ function(e) {\n                       setSelectionState(null)\n                    }}\n                   onSelect={ function(e) {\n                     var textSelection = window.getSelection().toString(); \n                     setSelectionState({textSelection:textSelection, textSelectionFrom: splitNumber, startTextSelection: e.target.selectionStart, endTextSelection: e.target.selectionEnd})\n                  }}  \n                   type='text'   style={{clear:'both', width:'80%'}}  value={item.example} id={\"example_input_\"+splitNumber} \n                   onChange={function(e) { updateExampleContent(e.target.value)}} />\n                  \n                  \n                \n                \n            </div>\n      </div>\n}\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport NluImportRow from './NluImportRow'\nimport EditorSearchBar from './components/EditorSearchBar'\nimport useNluEditor from './useNluEditor'\nimport TagAllDropDown from './components/TagAllDropDown'\nimport IntentAllDropDown from './components/IntentAllDropDown'\nimport SkillAllDropDown from './components/SkillAllDropDown'\nimport arrowthickleftImage from './images/arrow-thick-left.svg'\nimport arrowthickrightImage from './images/arrow-thick-right.svg'\n\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    //console.log(['USENLUROW rr',index])\n    return <NluImportRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups}  setPageMessage={props.data.setPageMessage} />\n}\n\n\nexport default function NluImportEditor(props) {\n    \n    //const examplesDB = useDBSingleKey('nlutool','examples','alldata')\n    const {loadAll, deleteItem ,items,  findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue, skillFilterValue, setSkillFilterValue, intentFilterValue, setIntentFilterValue, intentAllValue, setIntentAllValue, listRef, tagAll, untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, saveAll, saveNlu, filteredItems, createEmptyItem, sort} = useNluEditor('nlutool','import','alldata', props.updateFunctions.updateLookups)\n    useEffect(() => {\n        loadAll()\n        //examplesDB.loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    //useEffect(() => {\n        //if (importFrom) {\n            //var parsed = parseImportText(importFrom)\n            //setItems(parsed)\n            //props.setImportFrom('')\n        //}\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[props.importFrom])\n    \n    \n    \n   \n    \n    function renderEditor(props) {\n        // filter rendered list using callback \n       \n         //filteredItems.sort(function(oldItem,item) {console.log( ['SORT',oldItem.example,item.example]); return (item.example && oldItem.example && item.example.trim().toLowerCase <= oldItem.example.trim().toLowerCase) })\n           \n        if (filteredItems && filteredItems.length > 0) {\n            \n           //var skillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n                  //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkillAllValue(skillKey); skillSetAll(skillKey)}}  >{skillKey}</Dropdown.Item>\n            //})\n            \n            //var tagOptions = props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n              //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {setTagAllValue(tagKey); tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n           //})\n           //var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n              //return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {setIntentAllValue(intentKey);intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n           //})\n            return <div>\n             <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length}/{items.length} matches </span>\n             {props.lookups.selectedTally > 0 && <span style={{float:'right'}}> \n                <span>With {props.lookups.selectedTally} selected&nbsp;\n              <SkillAllDropDown skillSetAll={skillSetAll} skillAllValue={skillAllValue}  setSkillAllValue={setSkillAllValue}  lookups={props.lookups}  untagAll={untagAll} unskillAll={unskillAll}/>\n                <IntentAllDropDown intentAll={intentAll} intentAllValue={intentAllValue} setIntentAllValue={setIntentAllValue}  lookups={props.lookups}  untagAll={untagAll} unskillAll={unskillAll}/>\n                <TagAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue}  lookups={props.lookups}  untagAll={untagAll} unskillAll={unskillAll}/>\n                \n                </span>\n                <Button style={{marginLeft:'1em'}} onClick={saveAll} variant=\"success\"  >Save Selected</Button> \n                <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                \n            </span> } \n                \n              \n                \n                <List\n                    ref={listRef}\n                    itemData={{items: filteredItems, saveItem: saveItemWrap, saveNlu, deleteItem, findKeyBy, lookups:props.lookups, setPageMessage: props.setPageMessage}}\n                    itemKey={index => index}  \n                    className=\"List\"\n                    height={700}\n                    itemCount={filteredItems.length}\n                    itemSize={getItemSize}\n                    width={'100%'}\n                  >{RenderRow}</List>\n            </div>\n            \n            \n        } else {\n            //{JSON.stringify(filteredItems)}\n            return <div >\n                <div style={{textAlign:'center'}}>\n            <br/><b>No more items to import</b><br/><br/>Open <Link to=\"/sources\" ><Button><img style={{height:'1em', paddingRight:'1em'}}  src={arrowthickleftImage} alt=\"Sources\" />Sources</Button></Link> to create more or <Link to=\"/examples\" ><Button>Organise<img src={arrowthickrightImage} alt=\"Intents\" style={{height:'1em', paddingLeft:'1em'}}  /></Button></Link> what you have imported into skills.\n            </div></div>\n        }\n    }\n    // {JSON.stringify(items)}\n    return <div>\n         \n        <EditorSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} skillFilterValue={skillFilterValue} setSkillFilterValue={setSkillFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} untagAll={untagAll} unskillAll={unskillAll} intentFilterValue={intentFilterValue} setIntentFilterValue={setIntentFilterValue}  sort={sort} />\n         {renderEditor(props)}\n    </div>\n    \n    \n}\n      \n\n","import JSZip from 'jszip'\n\nfunction createZip(zipStructure) {\n    var zip = new JSZip();\n     console.log(['ZIP',zipStructure])\n    function recurseZipStructure(zipStructure, path) {\n        if (Array.isArray(zipStructure.files)) {\n            zipStructure.files.map(function(file) {\n                console.log(['ZIP file',file])\n                var options = (file.base64 && file.base64.length > 0) ? {base64: true} : {} \n                if (file.name && file.name.length > 0 && file.content) zip.file(path+\"/\"+file.name,file.content, options);\n                return null\n            })\n        }\n        if (Array.isArray(zipStructure.folders)) {\n            zipStructure.folders.map(function(folder) {\n                console.log(['ZIP folder',folder])\n                if (folder.name && folder.name.length > 0) zip.folder(folder.name);\n                if ((folder.files && folder.files.length > 0) || (folder.folders && folder.folders.length > 0)) {\n                    recurseZipStructure(folder, path+\"/\"+folder.name)\n                }\n                return null\n            })\n        }\n         \n    } \n     \n    recurseZipStructure(zipStructure,'')\n     \n    return new Promise(function(resolve,reject) {\n        zip.generateAsync({type:\"blob\"}).then(function(content) {\n            resolve(content)\n        })\n    })\n}\n\nexport {createZip}\n","import {  uniquifyArray, replaceEntities } from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\n\nasync function exportJOVO(skill) {\n     return new Promise(function(resolve,reject) {\n         var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         listsStorage.getItem('alldata').then(function(lists) {\n             var jovo={invocation: skill.invocation}\n             //console.log(['JVO export',skill])\n             var intents = {}\n             var entityTypes={}\n             if (skill.intents) {\n                 Object.keys(skill.intents).map(function(intentKey) {\n                     var examples = skill.intents[intentKey]\n                     if (!intents[intentKey])  intents[intentKey] = {name:intentKey, phrases:[], inputs: []}\n                     var inputs = {}\n                     if (Array.isArray(examples)) {\n                         examples.map(function(example) {\n                            intents[intentKey].phrases.push(replaceEntities(example.example,example.entities))\n                            if (Array.isArray(example.entities)) {\n                                example.entities.map(function(entity) {\n                                   inputs[entity.type] = true  \n                                   if (!Array.isArray(entityTypes[entity.type])) entityTypes[entity.type] = []\n                                   entityTypes[entity.type].push(entity.value)\n                                   return null\n                                })\n                            }\n                            return null\n                         })\n                     }\n                     intents[intentKey].phrases = uniquifyArray(intents[intentKey].phrases).sort()\n                     intents[intentKey].inputs = Object.keys(inputs).map(function(entityType) { \n                         var entityTypeName = entityType+\"Type\"\n                         if (skill.entities && skill.entities[entityType] && (skill.entities[entityType].googleType || skill.entities[entityType].alexaType)) {\n                             entityTypeName ={}\n                             if (skill.entities[entityType].googleType) entityTypeName.dialogflow = skill.entities[entityType].googleType\n                             if (skill.entities[entityType].alexaType) entityTypeName.alexa = skill.entities[entityType].alexaType\n                         } \n                         return {name: entityType, type: entityTypeName} \n                    })\n                    return null\n                 }) \n             }\n             jovo.intents = Object.values(intents)\n             //console.log(['skill lists',entityTypes, skill.lists])\n             //var usedLists = {}\n             //if (skill.entities) {\n                //Object.keys(skill.entities).map(function(entity,i) {\n                    //if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        //skill.entities[entity].lists.map(function(list) {\n                           //usedLists[list] = true  \n                        //})\n                    //}\n                //})\n             //}\n            \n             //lists.map(function(item) {\n                 //console.log(['LIST',item])\n                 //Object.keys(usedLists).map(function(listKey) {\n                    //console.log([listKey,item.tags.indexOf(listKey) !== -1, item.tags])\n                    //if (item && item.tags && item.tags.indexOf(listKey) !== -1) {\n                        //console.log('list item used ')\n                        //entityTypes[listKey].push(item.value)\n                    //}\n                //})\n            //})\n            var synonyms = {}\n            var synonymsIndex = {}\n            lists.map(function(item) {\n                 if (item.value && item.value.trim().length > 0) {\n                    if (item.synonym) {\n                        if (!Array.isArray(synonymsIndex[item.synonym])) synonymsIndex[item.synonym] = [] \n                        synonyms[item.value] = item.synonym\n                        synonymsIndex[item.synonym].push(item.value)\n                    }\n                    Object.keys(entityTypes).map(function(entityType) {\n                        if (skill.entities && skill.entities[entityType]  && skill.entities[entityType].lists)  {\n                            skill.entities[entityType].lists.map(function(entityExtrasList) {\n                                //console.log(['li',entityExtrasList,item.tags,item.tags.indexOf(entityExtrasList)])\n                                if (item && item.tags && item.tags.indexOf(entityExtrasList) !== -1) {\n                                    //console.log(['USE ENTITY',entityType, entityExtrasList,lists[entityExtrasList]])\n                                    entityTypes[entityType].push(item.value)\n                               }\n                               return null\n                            })\n                        }\n                        return null\n                    })\n                }\n                return null\n            })\n             \n            console.log(['synonyms',synonyms, synonymsIndex])\n        \n            jovo.inputTypes = Object.keys(entityTypes).map(function(entityType) {\n            //console.log(['JOVOEX',lists,entityType])\n                const values = []\n                uniquifyArray(entityTypes[entityType]).sort().map(function(value) {\n                    if (!synonyms[value]) {\n                        if (value && value.trim().length > 0) values.push( {value:value})\n                    }\n                    return null\n                })\n                Object.keys(synonymsIndex).map(function(synonym) {\n                    if (synonym && synonym.trim().length > 0) values.push({value:synonym, synonyms:synonymsIndex[synonym] })\n                    return null\n                })\n                return {name: entityType+\"Type\", values:values}  \n            })\n                    \n            \n            \n            console.log(['inputtypes',jovo.inputTypes])\n            //console.log(['JVO final',jovo])\n            const content = JSON.stringify(jovo)\n             const final =  {folders:[{'name':'models', files:[{name:'en-US.json', content: content}] }]   }\n             //console.log(['JVO final',final])\n             resolve(final)\n              \n        })\n    })\n}\n\n\nasync function exportJOVOZip(skill) {\n    return createZip(await exportJOVO(skill))\n}\n\nexport {exportJOVO, exportJOVOZip}\n","import localforage from 'localforage'\n\n\n/* export skill\n * to ensure the completeness of the skill model add\n *   - utterancesData\n *   - entitiesData\n * which are both arrays of objects containing value and synonym(alternatives) eg {value:\"cat\", synonym:\"kitty\\npussy\"}\n */\nfunction exportJSON(skill) {\n    console.log(['EXPPORT JSON',skill])\n    var listsStorage = localforage.createInstance({\n        name: \"nlutool\",\n        storeName   : \"lists\",\n    });\n    var utterancesStorage = localforage.createInstance({\n        name: \"nlutool\",\n        storeName   : \"utterances\",\n    });\n    var promises = []    \n    // entities - just entities in entity lists\n    promises.push(new Promise(function(resolve,reject) {\n        if (skill && skill.entities) {\n             listsStorage.getItem('alldata').then(function(dbEntities) {\n                 var usedLists = {}\n                 var filledLists = {}\n                 console.log(skill.entities)\n                 if (skill && skill.entities) {\n                     Object.values(skill.entities).map(function(entity) {\n                        if (entity.lists) entity.lists.map(function(list) {\n                            usedLists[list] = true  \n                        })  \n                        return null\n                     })\n                     console.log(['USEDLISTS',usedLists])\n                     Object.keys(usedLists).map(function(useList) {\n                         filledLists[useList] = dbEntities.filter(function(item) {if (item.tags && item.tags.indexOf(useList) !== -1) return true; else return false }).map(function(iitem) {\n                             return {value:iitem.value, synonym: iitem.synonym}  \n                         })\n                     })\n                     console.log(['FILLEDLISTS',filledLists])\n                    console.log(['SETSKILL',JSON.parse(JSON.stringify(skill))])\n                 }\n                 resolve(filledLists)\n             })\n        } else {\n            resolve({})\n        }\n    }))\n    promises.push(new Promise(function(resolve,reject) {\n        var utterances = {}\n        console.log(['SHOULD ADD UTTS',skill.utterancesLists, skill.utterances])\n        if (skill.utterancesLists || skill.utterances) { \n            utterancesStorage.getItem('alldata').then(function(allUtterances) {\n                if (Array.isArray(allUtterances)) {\n                    allUtterances.map(function(thisUtterance) {\n                        if (skill.utterances) { \n                            skill.utterances.map(function(listKey) {\n                                if (thisUtterance.value === listKey) utterances[thisUtterance.value] = {value:thisUtterance.value, synonym:thisUtterance.synonym, tags: thisUtterance.tags}\n                                return null\n                            })\n                            \n                        }\n                        if (skill.utterancesLists) { \n                            skill.utterancesLists.map(function(listKey) {\n                                if (thisUtterance.tags && thisUtterance.tags.indexOf(listKey) !== -1) utterances[thisUtterance.value] = {value:thisUtterance.value, synonym:thisUtterance.synonym, tags: thisUtterance.tags}\n                                return null\n                            })\n                            \n                        }\n                        return null \n                    })\n                    console.log(['SET UITTER GLOLBA',utterances])\n                    \n                }\n                resolve(utterances)\n            })\n       } else {\n           resolve({})\n       }\n    }))\n            \n    return new Promise(function(oresolve,oreject) {\n       //skill.entitiesData = filledLists\n        //skill.utterancesData = utterances                   \n        Promise.all(promises).then(function(data) {\n            console.log(['LOIADED LOOKUPS',data])\n            var newSkill = skill\n            newSkill.entitiesData = data[0]\n            newSkill.utterancesData = data[1]\n            console.log(['resolve JSON',newSkill])\n            oresolve(newSkill)\n        })\n        \n    })\n}\n\nfunction exportJSONZip(skill) {\n    return new Promise(function(resolve,reject) {\n        exportJSON(skill).then(function(content) {\n            console.log(['content',skill])\n            const blob = new Blob([JSON.stringify(content, null, 2)], {type : 'application/json'});\n            resolve(blob)\n        })\n    })\n    //return createZip({files:[{name:'skill.json', content: await exportJSON(skill)}]})\n}\n\nexport {exportJSON, exportJSONZip}\n\n\n          \n //listsStorage.getItem('alldata').then(function(lists) {\n             //console.log(['LISTS',lists])\n            //var usedLists = {}\n            //if (skill.entities) {\n                //Object.keys(skill.entities).map(function(entity,i) {\n                    //if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        //skill.entities[entity].lists.map(function(list) {\n                           //usedLists[list] = true  \n                           //return null\n                        //})\n                    //}\n                    //return null\n                //})\n            //}\n            //var skillLists = {}\n            //Object.keys(usedLists).map(function(listKey) {\n              //skillLists[listKey] = []  \n              //return null\n            //})\n            //if (lists) lists.map(function(item) {\n                //Object.keys(usedLists).map(function(listKey) {\n                    ////console.log([listKey,item.tags.indexOf(listKey) !== -1, item.tags])\n                    //if (item && item.tags && item.tags.indexOf(listKey) !== -1) {\n                        ////console.log('list item used ')\n                        //skillLists[listKey].push(item.value)\n                    //}\n                    //return null\n                //})\n                //return null\n            //})\n            //skill.lists = skillLists\n            \n                //// utterances\n                //if (props.currentSkill && props.currentSkill.utterances) {\n                     //utterancesStorage.getItem('alldata').then(function(dbUtterances) {\n                         //var usedLists = {}\n                         //var filledLists = {}\n                         //console.log(props.currentSkill.utterances)\n                         //if (props.currentSkill && props.currentSkill.utterancesLists) {\n                             //Object.values(props.currentSkill.utterancesLists).map(function(utterance) {\n                                //usedLists[utterance] = true  \n                                //return null\n                             //})\n                             //console.log(['USEDLISTS',usedLists])\n                             //Object.keys(usedLists).map(function(useList) {\n                                 //filledLists[useList] = dbUtterances.filter(function(item) {if (item.tags && item.tags.indexOf(useList) !== -1) return true; else return false }).map(function(iitem) {\n                                     //return {value:iitem.value, synonym: iitem.synonym}  \n                                 //})\n                             //})\n                             //console.log(['FILLEDLISTS',filledLists])\n                              //var skill = props.currentSkill\n                              //skill.utterancesData = filledLists\n                              //resolve(skill)\n                         //}\n                     //})\n                    \n                //}\n","import {  uniquifyArray, replaceEntities } from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\n\n\n\n\nasync function exportMycroft(skill) {\n    return new Promise(function(resolve,reject) {\n        var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         var modelFiles=[]\n         listsStorage.getItem('alldata').then(function(lists) {\n            //var usedLists = {}\n            //if (skill.entities) {\n                //Object.keys(skill.entities).map(function(entity,i) {\n                    //if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        //skill.entities[entity].lists.map(function(list) {\n                           //usedLists[list] = true  \n                        //})\n                    //}\n                    //return null\n                //})\n            //}\n           \n            \n            \n           \n             // intents - \n             // collate examples, one file per intent\n             var intents={}\n             if (skill.intents) {\n                 Object.keys(skill.intents).map(function(intentKey) {\n                     var examples = skill.intents[intentKey]\n                     if (!Array.isArray(intents[intentKey]))  intents[intentKey] = []\n                     if (Array.isArray(examples)) {\n                         examples.map(function(example) {\n                            intents[intentKey].push(replaceEntities(example.example,example.entities))\n                            return null\n                         })\n                     }\n                     intents[intentKey] = uniquifyArray(intents[intentKey]).sort()\n                    return null\n                 }) \n             }\n             // one per file\n             // entities - merge values and lists values , one entity per file\n             var entities={}\n             if (skill.entities) { \n                 Object.keys(skill.entities).map(function(entityKey) {\n                     var combinedEntities = []\n                     var entity = skill.entities[entityKey]\n                     if (entity.values) {\n                         combinedEntities = combinedEntities.concat(entity.values)\n                     } \n                     if (entity.lists) {\n                         //var skillLists = {}\n                         //Object.keys(usedLists).map(function(listKey) {\n                          //skillLists[listKey] = []  \n                          //return null\n                        //})\n                       \n                       console.log(['add from lists',entity.lists])\n                        lists.map(function(item) {\n                            entity.lists.map(function(listKey) {\n                                console.log([listKey,item.tags.indexOf(listKey) !== -1, item.tags])\n                                if (item && item.tags && item.tags.indexOf(listKey) !== -1) {\n                                    console.log('list item used ')\n                                    combinedEntities.push(item.value)\n                                }\n                                return null\n                            })\n                            return null\n                        })\n                     }\n                     entities[entityKey] = uniquifyArray(combinedEntities).sort()\n                     return null\n                 }) \n             }\n             \n             Object.keys(intents).map(function(intent) {\n                 modelFiles.push({name:intent+'.intent',content: intents[intent].join(\"\\n\")})\n                 return null\n             })\n             Object.keys(entities).map(function(entity) {\n                 modelFiles.push({name: entity+'.entity',content: entities[entity].join(\"\\n\")})\n                 return null\n             })\n              resolve( modelFiles)\n        })\n    })\n}\n\n\nasync function exportMycroftZip(skill) {\n    const files = await exportMycroft(skill)\n    return createZip({files:files})\n}\n\nexport {exportMycroft, exportMycroftZip}\n\n","const RASATemplates = {\n    config: `\nlanguage: en\npipeline:\n  - name: WhitespaceTokenizer\n  - name: RegexFeaturizer\n  - name: LexicalSyntacticFeaturizer\n  - name: CountVectorsFeaturizer\n  - name: CountVectorsFeaturizer\n    analyzer: \"char_wb\"\n    min_ngram: 1\n    max_ngram: 4\n  - name: ResponseSelector\n    epochs: 100\n  - name: DIETClassifier\n    epochs: 100\n  - name: EntitySynonymMapper\n\npolicies:\n  - name: FormPolicy\n  - name: MemoizationPolicy\n  - name: TEDPolicy\n    max_history: 5\n    epochs: 100\n  - name: MappingPolicy\n  - name: \"FallbackPolicy\"\n    nlu_threshold: 0.5\n    core_threshold: 0.3\n    fallback_action_name: \"action_default_fallback\"\n    `,\n    credentials: `\n# This file contains the credentials for the voice & chat platforms\n# which your bot is using.\n# https://rasa.com/docs/rasa/user-guide/messaging-and-voice-channels/\n\nrest:\n#  # you don't need to provide anything here - this channel doesn't\n#  # require any credentials\n\n\n#facebook:\n#  verify: \"<verify>\"\n#  secret: \"<your secret>\"\n#  page-access-token: \"<your page access token>\"\n\n#slack:\n#  slack_token: \"<your slack token>\"\n#  slack_channel: \"<the slack channel>\"\n\n#socketio:\n#  user_message_evt: <event name for user message>\n#  bot_message_evt: <event name for but messages>\n#  session_persistence: <true/false>\n\n#mattermost:\n#  url: \"https://<mattermost instance>/api/v4\"\n#  token: \"<bot token>\"\n#  webhook_url: \"<callback URL>\"\n\n#rasa:\n  #url: \"http://localhost:5002/api\"\n \n    `,\n    endpoint: `\n#action_endpoint:\n#  url: http://localhost:5055/webhook\n\n    `,\n    actions:  `\n\"\"\" RASA actions \"\"\"\n \n    `,\n    single_action: function(className, actionName) {\n        return `\n\"\"\" RASA action \"\"\"\nimport sys\nimport logging\nfrom typing import Any, Text, Dict, List\nfrom datetime import datetime\nfrom rasa_sdk import Action, Tracker\nfrom rasa_sdk.executor import CollectingDispatcher\nfrom rasa_sdk.events import SlotSet, FollowupAction\n\nclass `+className+`(Action):\n    def name(self) -> Text:\n        return \"`+actionName+`\"\n    def run(self, dispatcher: CollectingDispatcher,\n            tracker: Tracker,\n            domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:\n        var slotsets = []\n        logger = logging.getLogger(__name__)    \n        logger.debug('Action `+actionName+`')\n        return [SlotSet(\"hermod_force_end\", \"true\"),SlotSet(\"hermod_force_continue\", None)] \n        \n        dispatcher.utter_message(text=\"Action `+actionName+`\")\n        return slotsets\n    \n    `\n    }\n    ,\n    domain: `\nsession_config:\n  carry_over_slots_to_new_session: true\n  session_expiration_time: 5    \n\n`,\n    stories:`\n## greet + location/price + cuisine + num people    <!-- name of the story - just for debugging -->\n* greet\n   - action_ask_howcanhelp\n* inform{\"location\": \"rome\", \"price\": \"cheap\"}  <!-- user utterance, in format intent{entities} -->\n   - action_on_it\n   - action_ask_cuisine\n* inform{\"cuisine\": \"spanish\"}\n   - action_ask_numpeople        <!-- action that the bot should execute -->\n* inform{\"people\": \"six\"}\n   - action_ack_dosearch    \n`,\n    session:`\nsession_config:\n  carry_over_slots_to_new_session: true\n  session_expiration_time: 5\n`\n}\nexport default RASATemplates\n","import { replaceEntitiesWithValues, uniquifyArray, snakeToCamelCase, camelToSnakeCase, toSnakeCase} from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\nimport RASATemplates from './RASATemplates'\n\n\n function generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContent, credentialsContent, endpointsContent, actionFiles, storyData) {\n    var folderTree = {\n        files:[\n            {name:'actions.py',content:actionsContent},\n            {name:'config.yml',content:configContent},\n            {name:'domain.yml',content:domainContent},\n            {name:'credentials.yml',content:credentialsContent},\n            {name:'endpoints.yml',content:endpointsContent}\n        ], \n        folders:[\n            {name:'actions', files:actionFiles}, \n            {name:'data', \n                files:[{name:'nlu.md', content: nluContent}, {name:'stories.md', content: storyData ? storyData : ''}], \n                folders:[{name:'lookups', files:fileLookups}]\n            }\n        ]\n    }\n    console.log(['TREE GEN',folderTree])\n    return folderTree\n}\n\n// just the models subfolder\n// one file per intent\n// one file per entity\nfunction exportRASAMD(skill) {\n     //\"rasa_nlu_data\": {\n        //\"common_examples\": [],\n        //\"regex_features\" : [],\n        //\"lookup_tables\"  : [],\n        //\"entity_synonyms\": []\n    //}\n    //{\"rasa_nlu_data\":{\"regex_features\":[],\"entity_synonyms\":[{\"synonyms\":[\"biggest city\",\"capital city\"],\"value\":\"capital\"}],\"common_examples\":[{\"text\":\"sounds good sounds good thank you\",\"intent\":\"affirmative\",\"entities\":[]},\n      //{\"text\":\"what is the use of a actinometer\",\"intent\":\"ask_attribute\",\"entities\":[{\"end\":15,\"entity\":\"attribute\",\"start\":12,\"value\":\"use\"},{\"end\":32,\"entity\":\"thing\",\"start\":21,\"value\":\"actinometer\"}]}\n    console.log(['EXPPORT RASA',skill])\n    return new Promise(function(resolve,reject) {\n         var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         var utterancesStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"utterances\",\n         });\n        \n        //resolve({files:[{name:'nlu.md', content: content}]})\n         \n         // LOAD ENTITY LISTS\n         listsStorage.getItem('alldata').then(function(lists) {\n            \n            console.log(['LISTS',lists])\n            \n            // for each entity, collate entity values and lists values\n            var entityLists = {}\n            if (skill.entities) {\n                Object.keys(skill.entities).map(function(entity,i) {\n                    const entityValue = skill.entities[entity]\n                    // values from examples\n                    if (entityValue && entityValue.values) {\n                        entityLists[entity] = entityValue.values\n                    } \n                    // values from tags\n                    if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        lists.map(function(listItem,listItemIndex) {\n                            skill.entities[entity].lists.map(function(entityList) {\n                               if (listItem.tags && listItem.tags.indexOf(entityList) !== -1) {\n                                   entityLists[entity].push(listItem.value)\n                               }\n                               return null\n                            })\n                            return null\n                        })\n                    }\n                    return null\n                })\n            }\n             console.log(['LISTS2',entityLists])\n             // lookup lists\n             var fileLookups=[]\n             var lookups = []\n             Object.keys(entityLists).map(function(entity) {\n                 var values = entityLists[entity]\n                 fileLookups.push({name:entity+\".txt\",content:values.join(\"\\n\")})\n                 lookups.push('## lookup:'+entity)\n                 lookups.push(\"data/lookups/\"+entity+\".txt\")\n                 return null\n             })\n             \n            \n            // collate synonyms\n            //var synonyms = {}\n            var synonymsIndex = {}\n            lists.map(function(item) {\n                 if (item.value && item.value.trim().length > 0) {\n                    if (item.synonym) {\n                        if (!Array.isArray(synonymsIndex[item.synonym])) synonymsIndex[item.synonym] = [] \n                        //synonyms[item.value] = item.synonym\n                        synonymsIndex[item.synonym].push(item.value)\n                    }\n                }\n                return null\n            })\n            console.log(['synonyms',synonymsIndex])\n            var synonymsOut = []\n            Object.keys(synonymsIndex).map(function(synonym) {\n                synonymsOut.push('## synonym:'+synonym)\n                uniquifyArray(synonymsIndex[synonym]).sort().map(function(item) {\n                    // TODO CONVERT TO RASA MD EXAMPLE WITH ENTITIES\n                    synonymsOut.push('- '+item)\n                    return null\n                }) \n                synonymsOut.push(\"\\n\")\n                return null\n            })\n            console.log(['synonyms OUT',synonymsOut])\n            \n            // COMMON EXAMPLES  \n            var nluOut=[]\n            if (skill.intents) {\n                console.log(['have intents',skill.intents])\n                Object.keys(skill.intents).map(function(intentKey) {\n                    const intentItem = skill.intents[intentKey]\n                    console.log('have intent ',intentKey,intentItem)\n                    nluOut.push('## intent:'+intentKey)\n                    var examples = []\n                    intentItem.map(function(example) {\n                        // TODO CONVERT TO RASA MD EXAMPLE WITH ENTITIES\n                        console.log(['INTY',example])\n                        if (example && example.example && example.example.trim().length > 0) {  \n                            var key = replaceEntitiesWithValues(example.example, example.entities)\n                            examples[key] = '- '+key\n                        }\n                        return null\n                    }) \n                    nluOut=[...nluOut, ...Object.values(examples)]\n                    nluOut.push(\"\\n\")\n                    return null\n                })\n            }\n            var nluContent = nluOut.join(\"\\n\")+\"\\n\"+synonymsOut.join(\"\\n\")+lookups.join(\"\\n\")\n            console.log(nluContent)\n            // CONSTANTS\n             var configContent = skill.rasaConfig ? skill.rasaConfig : RASATemplates.config\n            //var domainContent = ''\n            var credentialsContent = skill.rasaCredentials ? skill.rasaCredentials : RASATemplates.credentials\n            var endpointsContent = skill.rasaEndpoint ? skill.rasaEndpoint : RASATemplates.endpoint\n            \n            // RASA ACTIONS\n            var actionsContent = RASATemplates.actions\n            var domainActions = []\n            \n            var actionFiles = []\n            if (Array.isArray(skill.rasaActions)) {\n                skill.rasaActions.map(function(action) {\n                    if (action && action.trim().length > 0) {\n                        var string = snakeToCamelCase(toSnakeCase(camelToSnakeCase(action)))\n                        var snake = camelToSnakeCase(string)+'_action'\n                        domainActions.push(snake)\n                        var name = string && string.trim().length > 0 ? string[0].toUpperCase() + string.substring(1) : ''\n                        actionFiles.push({name:name+'Action.py', content:RASATemplates.single_action(name+'Action',snake)})\n                        actionsContent+=\"\\n import \"+name+'Action.py'\n                    }\n                    return null\n                })\n            }\n            var domainEntities = skill.entities ? Object.keys(skill.entities) : []\n            var domainIntents = skill.intents ? Object.keys(skill.intents) : []\n            var domainSlots = skill.slots ?  Object.keys(skill.slots) : (skill.entities ? Object.keys(skill.entities) : [])\n            var domainSlotsMeta = {}\n            domainSlots.map(function(slot) {\n               domainSlotsMeta[slot] = {\n                   type: skill.slots && skill.slots[slot] &&  skill.slots[slot].slotType ? skill.slots[slot].slotType : 'unfeaturized'\n                }\n               return null\n            })\n            console.log(['DOMAIN',domainEntities, domainIntents, domainSlots, domainSlotsMeta])\n            \n            var domainContentParts=[]\n            if (domainIntents.length > 0) {\n                domainContentParts.push(\"intents:\")\n                domainIntents.map(function(intent) {\n                    domainContentParts.push(\"- \"+intent)\n                    // TODO\n                    // TODO +\":\" plus intent entities\n                    // domainContentParts.push(\"  use_entities:\\n\")\n                    // domainContentParts.push(\"  - \"+entityForIntent)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            \n            if (domainEntities.length > 0) {\n                domainContentParts.push(\"entities:\")\n                domainEntities.map(function(entity) {\n                    domainContentParts.push(\"- \"+entity)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            if (domainSlots.length > 0) {\n                domainContentParts.push(\"slots:\")\n                domainSlots.map(function(slot,i) {\n                    domainContentParts.push(\"  \"+slot+\":\")\n                    domainContentParts.push(\"    type: \"+domainSlotsMeta[slot].type)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            // append session config\n            if (skill.rasaSession) skill.rasaSession.trim().split(\"\\n\").map(function(line) {\n                domainContentParts.push(line)\n                return null\n            })\n            \n            // UTTERANCES\n            var utterances = {}\n            if (skill.utterancesLists || skill.utterances) { \n                utterancesStorage.getItem('alldata').then(function(allUtterances) {\n                    if (Array.isArray(allUtterances)) {\n                        allUtterances.map(function(thisUtterance) {\n                            if (skill.utterances) { \n                                skill.utterances.map(function(listKey) {\n                                    if (thisUtterance.value === listKey) utterances[thisUtterance.value] = thisUtterance  \n                                    return null\n                                })\n                            }\n                            if (skill.utterancesLists) { \n                                skill.utterancesLists.map(function(listKey) {\n                                    if (thisUtterance.tags && thisUtterance.tags.indexOf(listKey) !== -1) utterances[thisUtterance.value] = thisUtterance  \n                                    return null\n                                })\n                                \n                            }\n                            return null\n                        })\n                        \n                         //fileLookups.push({name:toSnakeCase(utterance.value)+'.txt',content:''})\n                             \n                        \n                         // generate domainContent\n                         if (Object.keys(utterances).length > 0) {\n                             domainContentParts.push('responses:')\n                             Object.keys(utterances).map(function(utteranceKey) {\n                                    var utterance = utterances[utteranceKey]\n                                    domainContentParts.push('utter_'+toSnakeCase(utterance.value))\n                                    domainContentParts.push('- text: '+utterance.value)\n                                    if (utterance.synonyms && utterance.synonyms.length > 0) {\n                                        utterance.synonyms.map(function(synonym) {\n                                            domainContentParts.push('- text: '+synonym)\n                                            return null\n                                        })\n                                    } \n                                    return null\n                             })\n                         }\n                         resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n                    } else {\n                        resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n                    }\n                })\n               \n                \n            } else {\n                resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n            }\n        })\n        \n    })\n}\n\n\nfunction exportRASAMDZip(skill) {\n    return new Promise(function(resolve,reject) {\n        exportRASAMD(skill).then(function(data) {\n            createZip(data).then(function(res) {\n                resolve(res)\n            })\n        })\n    })\n}\n\nexport {exportRASAMD, exportRASAMDZip}\n","import { replaceEntitiesWithValues, snakeToCamelCase, camelToSnakeCase, toSnakeCase} from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\nimport RASATemplates from './RASATemplates'\n\n function generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContent, credentialsContent, endpointsContent, actionFiles, storyContent) {\n    var folderTree = {\n        files:[\n            {name:'actions.py',content:actionsContent},\n            {name:'config.yml',content:configContent},\n            {name:'domain.yml',content:domainContent},\n            {name:'credentials.yml',content:credentialsContent},\n            {name:'endpoints.yml',content:endpointsContent}\n        ], \n        folders:[\n            {name:'actions', files:actionFiles}, \n            {name:'data', \n                files:[{name:'nlu.json', content: nluContent}, {name:'stories.md', content: storyContent ? storyContent : ''}], \n                folders:[{name:'lookups', files:fileLookups}]\n            }\n        ]\n    }\n    console.log(['TREE GEN',folderTree])\n    return folderTree\n}\n\n// just the models subfolder\n// one file per intent\n// one file per entity\nfunction exportRASAJSON(skill) {\n //\"rasa_nlu_data\": {\n        //\"common_examples\": [],\n        //\"regex_features\" : [],\n        //\"lookup_tables\"  : [],\n        //\"entity_synonyms\": []\n    //}\n    //{\"rasa_nlu_data\":{\"regex_features\":[],\"entity_synonyms\":[{\"synonyms\":[\"biggest city\",\"capital city\"],\"value\":\"capital\"}],\"common_examples\":[{\"text\":\"sounds good sounds good thank you\",\"intent\":\"affirmative\",\"entities\":[]},\n      //{\"text\":\"what is the use of a actinometer\",\"intent\":\"ask_attribute\",\"entities\":[{\"end\":15,\"entity\":\"attribute\",\"start\":12,\"value\":\"use\"},{\"end\":32,\"entity\":\"thing\",\"start\":21,\"value\":\"actinometer\"}]}\n    console.log(['EXPPORT RASA',skill])\n    return new Promise(function(resolve,reject) {\n         var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         var utterancesStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"utterances\",\n         });\n        \n        //resolve({files:[{name:'nlu.md', content: content}]})\n         \n         // LOAD ENTITY LISTS\n         listsStorage.getItem('alldata').then(function(lists) {\n            \n            console.log(['LISTS',lists])\n            \n            // for each entity, collate entity values and lists values\n            var entityLists = {}\n            if (skill.entities) {\n                Object.keys(skill.entities).map(function(entity,i) {\n                    const entityValue = skill.entities[entity]\n                    // values from examples\n                    if (entityValue && entityValue.values) {\n                        entityLists[entity] = entityValue.values\n                    } \n                    // values from tags\n                    if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        lists.map(function(listItem,listItemIndex) {\n                            skill.entities[entity].lists.map(function(entityList) {\n                               if (listItem.tags && listItem.tags.indexOf(entityList) !== -1) {\n                                   entityLists[entity].push(listItem.value)\n                               }\n                               return null\n                            })\n                            return null\n                        })\n                    }\n                    return null\n                })\n            }\n             console.log(['LISTS2',entityLists])\n             // lookup lists\n             var fileLookups=[]\n             var lookups = []\n             Object.keys(entityLists).map(function(entity) {\n                 var values = entityLists[entity]\n                 fileLookups.push({name:entity+\".txt\",content:values.join(\"\\n\")})\n                 lookups.push('## lookup:'+entity)\n                 lookups.push(\"data/lookups/\"+entity+\".txt\")\n                 return null\n             })\n             \n            \n            // collate synonyms\n            //var synonyms = {}\n            var synonymsIndex = {}\n            if (lists) lists.map(function(item) {\n                 if (item.value && item.value.trim().length > 0) {\n                    if (item.synonym) {\n                        if (!Array.isArray(synonymsIndex[item.synonym])) synonymsIndex[item.synonym] = [] \n                        //synonyms[item.value] = item.synonym\n                        synonymsIndex[item.synonym].push(item.value)\n                    }\n                }\n                return null\n            })\n            console.log(['synonyms',synonymsIndex])\n            //var synonymsOut = []\n            //Object.keys(synonymsIndex).map(function(synonym) {\n                //synonymsOut.push('## synonym:'+synonym)\n                //uniquifyArray(synonymsIndex[synonym]).sort().map(function(item) {\n                    //// TODO CONVERT TO RASA MD EXAMPLE WITH ENTITIES\n                    //synonymsOut.push('- '+item)\n                    //return null\n                //}) \n                //synonymsOut.push(\"\\n\")\n                //return null\n            //})\n            //console.log(['synonyms OUT',synonymsOut])\n            \n            // COMMON EXAMPLES  \n            var nluOut={}\n            if (skill.intents) {\n                console.log(['have intents',skill.intents])\n                Object.keys(skill.intents).map(function(intentKey) {\n                    const intentItem = skill.intents[intentKey]\n                    console.log('have intent ',intentKey,intentItem)\n                    //nluOut.push('## intent:'+intentKey)\n                    //var examples = []\n                    intentItem.map(function(example) {\n                        // TODO CONVERT TO RASA MD EXAMPLE WITH ENTITIES\n                        if (example && example.example && example.example.trim().length > 0) {\n                            console.log(['INTY',example])\n                            var key = replaceEntitiesWithValues(example.example, example.entities)\n                            nluOut[key] = {\n                                \"text\":key,\n                                \"intent\":intentKey,\n                                \"entities\":example.entities ? example.entities.map(function(entity) {\n                                    return {\"end\":entity.end,\"entity\":entity.type,\"start\":entity.start,\"value\":entity.value}\n                                }) : []\n                            }\n                        }\n                        //'- '+replaceEntitiesWithValues(example.example, example.entities))\n                        return null\n                    }) \n                    //nluOut=[...nluOut, ...uniquifyArray(examples)]\n                    //nluOut.push(\"\\n\")\n                    return null\n                })\n            }\n            var nluContent=JSON.stringify({\n                \"rasa_nlu_data\":{\n                    \"regex_features\":[],\n                    \"entity_synonyms\":Object.keys(synonymsIndex).map(function(synonym) {\n                       //var synValues =synonymsIndex[synonym]  \n                       return {synonyms:synonymsIndex[synonym]  , value:synonym}\n                    }),\n                    \"common_examples\":Object.values(nluOut)\n                }\n            })\n            \n           \n            //var nluContent = nluOut.join(\"\\n\")+\"\\n\"+synonymsOut.join(\"\\n\")+lookups.join(\"\\n\")\n            \n            \n            console.log(nluContent)\n            // CONSTANTS\n            var configContent = skill.rasaConfig ? skill.rasaConfig : RASATemplates.config\n            //var domainContent = ''\n            var credentialsContent = skill.rasaCredentials ? skill.rasaCredentials : RASATemplates.credentials\n            var endpointsContent = skill.rasaEndpoint ? skill.rasaEndpoint : RASATemplates.endpoint\n            \n            // RASA ACTIONS\n            var actionsContent = RASATemplates.actions\n            var domainActions = []\n            \n            var actionFiles = []\n            if (Array.isArray(skill.rasaActions)) {\n                skill.rasaActions.map(function(action) {\n                    if (action && action.trim().length > 0) {\n                        var string = snakeToCamelCase(toSnakeCase(camelToSnakeCase(action)))\n                        var snake = camelToSnakeCase(string)+'_action'\n                        domainActions.push(snake)\n                        var name = string && string.trim().length > 0 ? string[0].toUpperCase() + string.substring(1) : ''\n                        actionFiles.push({name:name+'Action.py', content:RASATemplates.single_action(name+'Action',snake)})\n                        actionsContent+=\"\\n import \"+name+'Action.py'\n                    }\n                    return null\n                })\n            }\n            var domainEntities = skill.entities ? Object.keys(skill.entities) : []\n            var domainIntents = skill.intents ? Object.keys(skill.intents) : []\n            var domainSlots = skill.slots ?  Object.keys(skill.slots) : (skill.entities ? Object.keys(skill.entities) : [])\n            var domainSlotsMeta = {}\n            domainSlots.map(function(slot) {\n               domainSlotsMeta[slot] = {\n                   type: skill.slots && skill.slots[slot] &&  skill.slots[slot].slotType ? skill.slots[slot].slotType : 'unfeaturized'\n                }\n               return null\n            })\n            console.log(['DOMAIN',domainEntities, domainIntents, domainSlots, domainSlotsMeta])\n            \n            var domainContentParts=[]\n            if (domainIntents.length > 0) {\n                domainContentParts.push(\"intents:\")\n                domainIntents.map(function(intent) {\n                    domainContentParts.push(\"- \"+intent)\n                    // TODO\n                    //+\":\" to intent line\n                    // domainContentParts.push(\"  use_entities:\\n\")\n                    // domainContentParts.push(\"  - \"+entityForIntent)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            \n            if (domainEntities.length > 0) {\n                domainContentParts.push(\"entities:\")\n                domainEntities.map(function(entity) {\n                    domainContentParts.push(\"- \"+entity)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            if (domainSlots.length > 0) {\n                domainContentParts.push(\"slots:\")\n                domainSlots.map(function(slot,i) {\n                    domainContentParts.push(\"  \"+slot+\":\")\n                    domainContentParts.push(\"    type: \"+domainSlotsMeta[slot].type)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            // append session config\n            if (skill.rasaSession) skill.rasaSession.trim().split(\"\\n\").map(function(line) {\n                domainContentParts.push(line)\n                return null\n            })\n            \n            // UTTERANCES\n            var utterances = {}\n            if (skill.utterancesLists || skill.utterances) { \n                utterancesStorage.getItem('alldata').then(function(allUtterances) {\n                    if (Array.isArray(allUtterances)) {\n                        allUtterances.map(function(thisUtterance) {\n                            if (skill.utterances) { \n                                skill.utterances.map(function(listKey) {\n                                    if (thisUtterance.value === listKey) utterances[thisUtterance.value] = thisUtterance  \n                                    return null\n                                })\n                            }\n                            if (skill.utterancesLists) { \n                                skill.utterancesLists.map(function(listKey) {\n                                    if (thisUtterance.tags && thisUtterance.tags.indexOf(listKey) !== -1) utterances[thisUtterance.value] = thisUtterance  \n                                    return null\n                                })\n                                \n                            }\n                            return null\n                        })\n                        \n                         //fileLookups.push({name:toSnakeCase(utterance.value)+'.txt',content:''})\n                             \n                        \n                         // generate domainContent\n                         if (Object.keys(utterances).length > 0) {\n                             domainContentParts.push('responses:')\n                             Object.keys(utterances).map(function(utteranceKey) {\n                                    var utterance = utterances[utteranceKey]\n                                    domainContentParts.push('utter_'+toSnakeCase(utterance.value))\n                                    domainContentParts.push('- text: '+utterance.value)\n                                    if (utterance.synonyms && utterance.synonyms.length > 0) {\n                                        utterance.synonyms.map(function(synonym) {\n                                            domainContentParts.push('- text: '+synonym)\n                                            return null\n                                        })\n                                    } \n                                    return null\n                             })\n                         }\n                         resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n                    } else {\n                        resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n                    }\n                })\n               \n                \n            } else {\n                resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n            }\n        })\n        \n    })\n}\n\n\nfunction exportRASAJSONZip(skill) {\n    return new Promise(function(resolve,reject) {\n        exportRASAJSON(skill).then(function(data) {\n            createZip(data).then(function(res) {\n                resolve(res)\n            })\n        })\n    })\n}\n\nexport {exportRASAJSON, exportRASAJSONZip}\n","import {exportJOVOZip} from './exportJOVO'\nimport {exportJSONZip} from './exportJSON'\nimport {exportMycroftZip} from './exportMycroft'\n//import {exportRASAZip} from './exportRASA'\nimport {exportRASAMDZip} from './exportRASAMD'\nimport {exportRASAJSONZip} from './exportRASAJSON'\n\nvar exportFormats = [\n        {name:'JSON',exportFunction:exportJSONZip},\n        {name:'JOVO',exportFunction:exportJOVOZip},\n        {name:'Mycroft',exportFunction:exportMycroftZip},\n        //{name:'RASA',exportFunction:exportRASAZip},\n        {name:'RASA Markdown',exportFunction:exportRASAMDZip},\n        {name:'RASA JSON',exportFunction:exportRASAJSONZip}\n    ]\n\nexport default exportFormats\n\n","//,   Dropdown, ButtonGroup\nimport {Button } from 'react-bootstrap'\nimport React, {useEffect} from 'react';\nimport {Link} from 'react-router-dom'\nimport localforage from 'localforage'\nimport {exportJSON} from './export/exportJSON'\n \nexport default  function PublishPage(props) {\n \n\n\n    return <div>\n             <Link to={\"/skills/skill/\"+props.currentSkill.title} ><Button variant=\"success\" style={{float:'right'}} >Back to Skill</Button></Link>\n             <h1>Publish</h1>\n                <div>Ready to share your skill - <b>{props.currentSkill.title}</b>,  so other people can download and remix your intents, entities and utterances into new skills.</div>\n                <br/>\n                <div ><b>By publishing your extension, you are agreeing to the following</b>\n                <ul>\n                    <li>Your skill will be available for download under an MIT Open Source License, allowing people to download the data and do whatever they want with it.</li>\n                </ul>\n                </div>\n                \n                <div>Submitted skills can be found using the search tools on this website. Community data is also regularly commited to the <a href=\"https://github.com/syntithenai/opennludata_data\" target=\"_new\">Github repository</a> </div>\n                <br/>\n               \n                <div style={{width: '100%',textAlign:'center'}}>\n                   {!props.currentSkill._id && <Button variant=\"success\" style={{display:'inline'}} onClick={function(e) {\n                       exportJSON(props.currentSkill).then(function(skillToSave) {\n                           props.saveItem('Skill',skillToSave)\n                           //{_id:props.currentSkill._id, id:props.currentSkill.id, title:props.currentSkill.title, json: JSON.stringify(props.currentSkill)})\n                           .then(function(res) {\n                               console.log(['SSKIL created',res]) \n                               if (res && res.data && res.data._id) {\n                                   props.setCurrentSkill(res.data)\n                                   props.setMongoId(res.data._id)\n                                   props.setPageMessage('Published',3000)\n                                   props.history.push(\"/skills/skill/\"+props.currentSkill.title)\n                                   //console.log('updtecurrent skill ',currentSkill)\n                               } \n                            })\n                        })\n                    }} >Publish {props.currentSkill.title}</Button>}\n                   \n                   \n                   {props.currentSkill._id && <Button variant=\"success\" style={{display:'inline'}} onClick={function(e) {\n                       exportJSON(props.currentSkill).then(function(skillToSave) {\n                           props.saveItem('Skill',skillToSave)\n                           //{_id:props.currentSkill._id, id:props.currentSkill.id, title:props.currentSkill.title, json: JSON.stringify(props.currentSkill)})\n                           .then(function(res) {\n                               console.log(['SSKIL updated',res]) \n                               if (res && res.data && res.data._id) {\n                                   props.setCurrentSkill(res.data)\n                                   props.setMongoId(res.data._id)\n                                   props.setPageMessage('Published',3000)\n                                   props.history.push(\"/skills/skill/\"+props.currentSkill.title)\n                               } \n                            })  \n                        })  \n                    }} >Publish Again</Button>}\n                    \n                    \n                    {props.currentSkill._id && <Button variant=\"danger\" style={{display:'inline'}} onClick={function(e) {\n                       props.setMongoId('') \n                       props.deleteItem('Skill',props.currentSkill._id).then(function(res) {\n                           props.setMongoId(null)\n                           console.log(['SSKIL deleted',res]) \n                               props.setPageMessage('Unpublished',3000)\n                            props.history.push(\"/skills/skill/\"+props.currentSkill.title)\n                       }) \n                       \n                    }} >Unpublish</Button>}\n                </div>\n       </div>\n}\n","import React, {useState} from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst DropDownComponent = function(props) {\n    \n    var [filterValue, setFilterValue] = useState(props.value ? props.value : '')\n    \n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{props.value ? props.title + \" - \" + props.value : props.title} </Button>\n          <Dropdown.Menu>\n               <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; }} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {setFilterValue(e.target.value)}}\n                value={filterValue} />\n                </InputGroup>\n                \n              </form>\n              {Array.isArray(props.options) && props.options.map(function(optionKey,i) {\n                  //console.log([optionKey, filterValue])\n                   //if (filterValue.trim().length == 0 || optionKey.toLowerCase().indexOf(filterValue.toLowerCase()) !== -1) {\n                       return <Dropdown.Item style={{minHeight:'1.4em'}} key={i} value={optionKey} onClick={function(e) {setFilterValue(optionKey); props.selectItem(optionKey)}}  >\n                            {optionKey ? optionKey : <b>None</b>}\n                        </Dropdown.Item>\n                    //} else return null;\n              })}\n          </Dropdown.Menu>\n      </Dropdown>\n\n}\nexport default DropDownComponent\n","//{ tag, removeButtonText, onDelete }\nimport React from 'react';\nimport {ListGroup, Button} from 'react-bootstrap'\n//import { Link  } from 'react-router-dom'\nimport DropDownComponent from './DropDownComponent'\n\nexport default function TagComponent(props) {\n     let that = this\n     console.log(props.tag)\n    // hack to pass functions through\n    const {lookups, setRegexpEntity, setRegexpIntent}  = props\n  return (\n    <ListGroup.Item type='button'  style={{width:'100%'}} >\n       <Button  variant=\"danger\" size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}}  onClick={function(e) {if (window.confirm('Really delete')) {props.onDelete(e)}}} >X</Button>\n      {props.tag.name}  &nbsp;&nbsp;&nbsp; <b>{props.tag.synonym}</b> &nbsp;&nbsp;&nbsp; \n        <div style={{float:'right'}}> \n          &nbsp;&nbsp;<DropDownComponent title={'Intent'} value={props.tag && props.tag.intent ? props.tag.intent :''} options={lookups && lookups.intentLookups ? lookups.intentLookups : []} selectItem={function(e) {setRegexpIntent(props.tag.id,e)}} />\n          &nbsp;&nbsp;<DropDownComponent title={'Entity'} value={props.tag && props.tag.entity ? props.tag.entity :''} options={lookups && lookups.entityLookups ? lookups.entityLookups : []} selectItem={function(e) {setRegexpEntity(props.tag.id,e)}} />&nbsp;&nbsp;\n        </div>\n    </ListGroup.Item>\n  )\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport {Button, Badge , ListGroup , Tabs, Tab} from 'react-bootstrap'\n//import useNluEditor from './useNluEditor'\n//import exportFormats from './export/index'\n////import {exportJSON} from './export/exportJSON'\n//import useDB from './useDB'\nimport {RASA, GoogleAssistant, Alexa} from '../utils'\nimport ReactTags from 'react-tag-autocomplete'\nimport SuggestionComponent from './SuggestionComponent'\nimport TagComponent from './TagComponent'\nimport DropDownComponent from './DropDownComponent'\nimport RASATemplates from '../export/RASATemplates'\n//import ExportPage from './ExportPage'\n//import PublishPage from './PublishPage'\n//import { saveAs } from 'file-saver';\n//import useRestEndpoint from './useRestEndpoint'\n       \nexport default function NluSkillEditorComponent(props) {\n    //console.log(['skill ',props])\n    if (props.skillFilterValue && props.skillFilterValue.length > 0) {\n        if (props.filteredItems && props.filteredItems.length > 0) {\n           \n            const utteranceTags = props.currentSkill && props.currentSkill.utterances ? props.currentSkill.utterances.map(function(listItem,listItemKey) {return {id:listItemKey, name:listItem} }) : []\n            const utteranceListTags = props.currentSkill && props.currentSkill.utterancesLists ? props.currentSkill.utterancesLists.map(function(listItem,listItemKey) {return {id:listItemKey, name:listItem} }) : []\n            const slots = props.currentSkill && props.currentSkill.rasa && props.currentSkill.rasa.slots ? props.currentSkill.rasa.slots : props.entitiesForSkill;\n            const skillTags = props.currentSkill && props.currentSkill.tags ? props.currentSkill.tags.map(function(tag,i) {return {id: i, name: tag}}):[]\n            return <div>\n                 <div><h3>{props.skillFilterValue} </h3></div>\n                    <div style={{marginTop:'0.7em', marginBottom:'0.7em'}} >\n                        <b style={{marginRight:'1em', marginLeft:'0.5em'}} >Tags</b>\n                         <ReactTags\n                            placeholderText=\"Select Tags  \"\n                            minQueryLength={0}\n                            maxSuggestionsLength={50}\n                            autoresize={true}\n                            allowNew={true}\n                            tags={skillTags}\n                            suggestions={[]}                           \n                            onDelete={function(index) {props.removeSkillTag(index)}}\n                            onAddition={function(tag) {props.addSkillTag(tag)}} />\n                    </div>\n                    <div style={{marginTop:'0.7em', marginBottom:'0.7em', borderTop: '2px solid black'}} >\n                        <b style={{marginRight:'1em', marginLeft:'0.5em'}} >Intents</b>\n                        <span>{Object.keys(props.collatedItems).sort().map(function(collatedIntent, i) {\n                                var useCurrentIntent = props.currentIntent ? props.currentIntent : Object.keys(props.collatedItems)[0]\n                                var completionVariant = 'danger'\n                                if (props.collatedItems[collatedIntent].length > 300) {\n                                    completionVariant = 'success'\n                                } else if (props.collatedItems[collatedIntent].length > 100) {\n                                    completionVariant = 'primary'\n                                } else if (props.collatedItems[collatedIntent].length > 10) {\n                                    completionVariant = 'warning'\n                                } \n                                \n                                \n                                if (props.collatedItems[collatedIntent].length  === props.collatedCounts[collatedIntent]) {\n                                        return <Link key={collatedIntent} to={\"/examples/skill/\"+props.skillFilterValue+\"/intent/\"+collatedIntent} ><Button key={collatedIntent} variant={collatedIntent === useCurrentIntent ? \"primary\" : \"outline-primary\"} onClick={function() {props.setCurrentIntent(collatedIntent)}}>\n                                            <Badge variant={completionVariant} > {props.collatedItems[collatedIntent].length} </Badge>\n                                            &nbsp;{collatedIntent}\n                                        </Button></Link>\n                                } else {\n                                    return <Link key={collatedIntent} to={\"/examples/skill/\"+props.skillFilterValue+\"/intent/\"+collatedIntent} ><Button variant={collatedIntent === useCurrentIntent ? \"primary\" : \"outline-primary\"} onClick={function() {props.setCurrentIntent(collatedIntent)}}>\n                                            <Badge variant=\"danger\" > {props.collatedItems[collatedIntent].length}/{props.collatedCounts[collatedIntent]} </Badge>\n                                            &nbsp;{collatedIntent}\n                                        </Button></Link>\n                                }\n                                \n                        })}</span>\n                    </div>\n                    <div style={{marginTop:'0.7em', borderTop: '2px solid black'}} >\n                  <b style={{marginRight:'1em', marginLeft:'0.5em'}} >Entities</b><ListGroup>{Object.keys(props.entitiesForSkill).map(function(collatedEntity, i) {\n                            \n                           \n                            const listTags = props.currentSkill && props.currentSkill.entities && props.currentSkill.entities[collatedEntity] && props.currentSkill.entities[collatedEntity].lists ? props.currentSkill.entities[collatedEntity].lists.map(function(listItem,listItemKey) {return {id:listItemKey, name:listItem} }) : []\n                            //console.log(listTags)\n                                return <ListGroup.Item key={collatedEntity} >\n                                        \n                                         <span style={{marginLeft:'1em', float:'left', fontWeight:'bold'}}>&nbsp;{collatedEntity}</span>\n                                      \n                                        <span style={{marginLeft:'1em', float:'left'}}>&nbsp;{props.entitiesForSkill[collatedEntity] && props.entitiesForSkill[collatedEntity].values && props.entitiesForSkill[collatedEntity].values.slice(0,5).join(\", \")}{props.entitiesForSkill[collatedEntity] && props.entitiesForSkill[collatedEntity].values && props.entitiesForSkill[collatedEntity].values.length > 5 ? <Badge>... {props.entitiesForSkill[collatedEntity] && props.entitiesForSkill[collatedEntity].values && props.entitiesForSkill[collatedEntity].values.length - 5} more </Badge> : ''}</span>\n                                        <span style={{marginLeft:'1em', float:'left'}}>\n                                       <label><i></i> <ReactTags\n                                        placeholderText=\"Also use values from \"\n                                        minQueryLength={0}\n                                        maxSuggestionsLength={50}\n                                        autoresize={true}\n                                        allowNew={false}\n                                        tags={listTags}\n                                        suggestionComponent={SuggestionComponent}\n                                        suggestions={props.lookups.listsLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                                        onDelete={function(index) {props.removeListFromSkillEntity(collatedEntity, index)}}\n                                        onAddition={function(tag) {props.addListToSkillEntity(collatedEntity, tag)}} /> </label>\n                                        </span>\n                                        <div style={{float:'right'}} >\n                                            <DropDownComponent options={[\"\",...Alexa.entityTypes]} title=\"Alexa\" value={props.currentSkill.entities && props.currentSkill.entities[collatedEntity] && props.currentSkill.entities[collatedEntity].alexaType ? props.currentSkill.entities[collatedEntity].alexaType : ''} selectItem={function(entityType) {\n                                                props.setAlexaEntityType(collatedEntity,entityType)\n                                            }} />\n                                            &nbsp;&nbsp;<DropDownComponent options={[\"\",...GoogleAssistant.entityTypes]} title=\"Google\" value={props.currentSkill.entities && props.currentSkill.entities[collatedEntity] &&  props.currentSkill.entities[collatedEntity].googleType ? props.currentSkill.entities[collatedEntity].googleType : ''}  selectItem={function(entityType) {\n                                                props.setGoogleAssistantEntityType(collatedEntity,entityType)\n                                            }} />\n                                        </div>\n                                    </ListGroup.Item>\n                            //}\n                                                \n\n                    })}</ListGroup>\n                    </div>\n                    <div style={{marginTop:'0.7em', marginLeft:'0.4em', borderTop: '2px solid black'}} >\n                        <div ><b>Regular Expressions</b></div>\n                      <div style={{clear:'both'}}>\n                             <div style={{marginLeft:'1em'}}>\n                           <ListGroup style={{minWidth:'500px'}}>\n                            <ReactTags\n                            placeholderText=\"Select Regular Expression  \"\n                            minQueryLength={0}\n                            maxSuggestionsLength={50}\n                            autoresize={true}\n                            allowNew={false}\n                            tags={props.currentSkill && props.currentSkill.regexps ? props.currentSkill.regexps.map(function(tag,i) {return {id: i, name: tag.name, intent: tag.intent ? tag.intent : '', entity: tag.entity ? tag.entity : '', synonym: tag.synonym}}):[]}\n                            tagComponent={function(iprops) {return <TagComponent {...iprops}   setRegexpEntity={props.setRegexpEntity} setRegexpIntent={props.setRegexpIntent}  lookups={props.lookups}  />}}\n                            suggestionComponent={SuggestionComponent}\n                            suggestions={props.lookups.regexpsLookups ? props.lookups.regexpsCompleteLookups.map(function(tag,i) {return {id: i, name: tag.value, intent: tag.intent ? tag.intent : '', entity: tag.entity ? tag.entity : '', synonym: tag.synonym}}):[]}\n                           \n                            onDelete={function(index) {props.removeRegexp(index)}}\n                            onAddition={function(tag) {props.addRegexp(tag)}} /></ListGroup>\n                            </div>\n                            \n                        </div>\n                </div>\n  \n                   \n                    <div style={{marginTop:'0.7em', marginLeft:'0.4em', borderTop: '2px solid black'}} >\n                        <div ><b>Utterances</b></div>\n                      <div style={{clear:'both'}}>\n                             <div style={{marginLeft:'1em'}}>\n                            <label>Utterances\n                            <ReactTags\n                            placeholderText=\"Use utterance \"\n                            minQueryLength={0}\n                            maxSuggestionsLength={50}\n                            autoresize={true}\n                            allowNew={true}\n                            tags={utteranceTags}\n                            suggestionComponent={SuggestionComponent}\n                            suggestions={props.lookups.utterancesLookups ? props.lookups.utterancesLookups.map(function(tag,i) {return {id: i, name: tag}}):[]}\n                            onDelete={function(index) {props.removeUtterance(index)}}\n                            onAddition={function(tag) {props.addUtterance(tag)}} /> </label>\n                            </div>\n                            \n                             <div style={{marginLeft:'1em'}}>\n                            <label>Utterance Lists\n                            <ReactTags\n                            placeholderText=\"Use utterances from \"\n                            minQueryLength={0}\n                            maxSuggestionsLength={50}\n                            autoresize={true}\n                            allowNew={false}\n                            tags={utteranceListTags}\n                            suggestionComponent={SuggestionComponent}\n                            suggestions={props.lookups.utteranceTagsLookups ? props.lookups.utteranceTagsLookups.map(function(tag,i) {return {id: i, name: tag}}) : []}\n                            onDelete={function(index) {props.removeUtteranceList(index)}}\n                            onAddition={function(tag) {props.addUtteranceList(tag)}} /> </label>\n                            </div>\n                            \n                            \n                        </div>\n                </div>\n     \n                  <div style={{marginTop:'0.7em', borderTop: '2px solid black'}} >\n                    <div><b>Platform</b></div>\n                    <Tabs defaultActiveKey=\"rasa\" id=\"platform-tabs\">\n                      <Tab eventKey=\"rasa\" title=\"RASA\">\n                            <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                                <Tabs defaultActiveKey=\"slots\" id=\"platform-rasa\">\n                                    <Tab eventKey=\"slots\" title=\"Slots\">\n                                         <div style={{marginLeft:'1.4em', marginTop:'0.7em', borderTop: '2px solid black'}} >\n                                             <form onSubmit={function(e) {e.preventDefault(); props.newSlot(props.newSlotValue,slots)}} ><input value={props.newSlotValue} onChange={function(e) {props.setNewSlotValue(e.target.value)}} /><Button size=\"sm\" onClick={function() {props.newSlot(props.newSlotValue,slots)}}>New Slot</Button>\n                                             </form>\n                                              <ListGroup>{Object.keys(slots).map(function(collatedEntity, i) { \n                                                    return <ListGroup.Item key={collatedEntity} >\n                                                                    <span style={{marginLeft:'1em', float:'left', fontWeight:'bold'}}>&nbsp;{collatedEntity}</span>\n                                                                    <div style={{float:'right'}} >\n                                                                         {props.entitiesForSkill[collatedEntity] &&  <DropDownComponent \n                                                                             options={RASA.autofillOptions} \n                                                                             title=\"Autofill\" \n                                                                             value={props.currentSkill.rasa && props.currentSkill.rasa.slots && props.currentSkill.entities[collatedEntity] && props.currentSkill.rasa.slots[collatedEntity] && props.currentSkill.rasa.slots[collatedEntity].slotAutofill && props.currentSkill.rasa.slots[collatedEntity].slotAutofill.trim().length > 0 ? props.currentSkill.rasa.slots[collatedEntity].slotAutofill : 'Yes'} selectItem={function(entityType) {\n                                                                            props.setRASASlotAutofill(collatedEntity,entityType,slots)\n                                                                        }} />}\n                                                                        &nbsp;&nbsp;\n                                                                        <DropDownComponent options={Object.keys(RASA.slotTypes)} title=\"Slot\" value={props.currentSkill.rasa && props.currentSkill.rasa.slots && props.currentSkill.rasa.slots[collatedEntity] && props.currentSkill.rasa.slots[collatedEntity].slotType ? props.currentSkill.rasa.slots[collatedEntity].slotType : 'unfeaturized'} selectItem={function(entityType) {\n                                                                            props.setRASASlotType(collatedEntity,entityType,slots)\n                                                                        }} />\n                                                                        <Button variant=\"danger\"  size=\"sm\" style={{marginLeft:'0.5em', float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {props.deleteSlot(collatedEntity,slots)}}>X</Button>\n                                                                    </div>\n                                                            </ListGroup.Item>\n                                                        //}\n                                                        \n                                                })}</ListGroup>\n                                        </div>\n                               \n                          \n                                 </Tab>\n                                  <Tab eventKey=\"actions\" title=\"Actions\">\n                                    <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                      <label>\n                                      \n                                        <div style={{fontStyle:'italic'}}>One per line, _action will be appended to each line</div>\n                                        <textarea style={{width:'40em', height:'10em'}}  value={props.currentSkill.rasa && Array.isArray(props.currentSkill.rasa.actions) ? props.currentSkill.rasa.actions.join(\"\\n\") : ''} onChange={function(e) {props.setRASAActions(e.target.value ? e.target.value.split(\"\\n\") : [])}} placeholder={`fred\nfindSname\nis_whatsi\nblah name`} ></textarea>\n                                      </label>\n                                </div>\n                                  </Tab>\n                                   <Tab eventKey=\"config\" title=\"Config\">\n                                    <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                      <label>\n                                    \n                                        <textarea style={{width:'60em', height:'30em'}}  value={props.currentSkill.rasa && props.currentSkill.rasa.config? props.currentSkill.rasa.config : ''} onChange={function(e) {props.setRASAConfig(e.target.value)}} placeholder={RASATemplates.config} ></textarea>\n                                      </label>\n                                </div>\n                                  </Tab>\n                                 <Tab eventKey=\"stories\" title=\"Stories\">\n                                    <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                      <label>\n                                    \n                                        <textarea style={{width:'60em', height:'30em'}}  value={props.currentSkill.rasa && props.currentSkill.rasa.stories? props.currentSkill.rasa.stories : ''} onChange={function(e) {props.setRASAStories(e.target.value)}} placeholder={RASATemplates.stories} ></textarea>\n                                      </label>\n                                </div>\n                                  </Tab> \n                                 <Tab eventKey=\"credentials\" title=\"Credentials\">\n                                    <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                      <label>\n                                    \n                                        <textarea style={{width:'60em', height:'30em'}}  value={props.currentSkill.rasa && props.currentSkill.rasa.credentials ? props.currentSkill.rasa.credentials : RASATemplates.credentials} onChange={function(e) {props.setRASACredentials(e.target.value)}}  ></textarea>\n                                      </label>\n                                </div>\n                                  </Tab> \n                                                        \n                                <Tab eventKey=\"endpoints\" title=\"Endpoints\">\n                                    <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                      <label>\n                                    \n                                        <textarea style={{width:'60em', height:'30em'}}  value={props.currentSkill.rasa && props.currentSkill.rasa.endpoint? props.currentSkill.rasa.endpoint : RASATemplates.endpoint} onChange={function(e) {props.setRASAEndpoint(e.target.value)}}  ></textarea>\n                                      </label>\n                                </div>\n                                  </Tab> \n                              \n                               <Tab eventKey=\"session\" title=\"Session Config\">\n                                    <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                      <label>\n                                    \n                                        <textarea style={{width:'60em', height:'30em'}}  value={props.currentSkill.rasa && props.currentSkill.rasa.session ? props.currentSkill.rasa.session : RASATemplates.session} onChange={function(e) {props.setRASASession(e.target.value)}}  ></textarea>\n                                      </label>\n                                </div>\n                                  </Tab> \n                              \n                            </Tabs>\n                                  \n                          </div>  \n                      </Tab>\n                      \n                      <Tab eventKey=\"mycroft\" title=\"Mycroft\">\n                        <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                           <b>not yet</b>\n                        </div>\n                      </Tab>\n                       <Tab eventKey=\"jovo\" title=\"JOVO\">\n                        <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                            <label style={{fontWeight:'bold', marginLeft:'0.5em'}} > Invocation <input type='text' value={props.invocation} onChange={function(e) {props.setInvocation(e.target.value)}} /></label>\n                        </div>\n                      </Tab>\n                      <Tab eventKey=\"alex\" title=\"Alexa\">\n                        <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                            <label style={{fontWeight:'bold', marginLeft:'0.5em'}} > Invocation <input type='text' value={props.invocation} onChange={function(e) {props.setInvocation(e.target.value)}} /></label>\n                        </div>\n                      </Tab>\n                      <Tab eventKey=\"google_assistant\" title=\"Google Assistant\">\n                        <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                            <label style={{fontWeight:'bold', marginLeft:'0.5em'}} > Invocation <input type='text' value={props.invocation} onChange={function(e) {props.setInvocation(e.target.value)}} /></label>\n                        </div>\n                      </Tab>\n                    </Tabs>\n                 </div>\n                 \n            </div>\n        } else {\n            return <b></b>\n        }\n        \n    }\n\n}\n","export default function useRestEndpoint(axiosClient,restUrl=\"http://localhost:5000/api/v1/\") {\n   \n    // to  endpoint root\n    function doPost(modelType,data) {\n        console.log('POST', modelType, data)  \n        return new Promise(function(resolve,reject) {\n            if (modelType && data) {\n                axiosClient.post(restUrl+modelType,\n                  data,\n                  {\n                    headers: {\n                        'Content-Type': 'application/json'\n                      },\n                  }\n                ).then(function(res) {\n                  console.log(res)  \n                  resolve(res)\n                }).catch(function(res) {\n                  console.log(res)  \n                  reject(res)\n                })\n            } else {\n                console.log('Missing post params')\n                reject('Missing post params')\n            }\n        })\n    }\n    \n    // to  endpoint with id\n    function doPut(modelType,data) {\n        console.log('PUT')  \n        return new Promise(function(resolve,reject) {\n            if (modelType && data && data._id) {\n                axiosClient.put(restUrl+modelType+\"/\"+data._id,\n                  data,\n                  {\n                    headers: {\n                        'Content-Type': 'application/json'\n                      },\n                  }\n                ).then(function(res) {\n                  console.log(res)  \n                  resolve(res)\n                }).catch(function(res) {\n                  console.log(res)  \n                  reject(res)\n                })\n            } else {\n                console.log('Missing post params')\n                reject('Missing post params')\n            }\n        })\n    }\n    \n    function doGet(modelType,id) {\n        return new Promise(function(resolve,reject) {\n            if (id) {\n                axiosClient.get(restUrl+modelType+\"/\"+id,\n                  {\n                   \n                  },\n                  {\n                    headers: {\n                        'Content-Type': 'application/json'\n                      },\n                  }\n                ).then(function(res) {\n                  console.log(['GET',res])  \n                  resolve(res)\n                }).catch(function(res) {\n                  console.log(res)  \n                  reject(res)\n                })\n            } else {\n                reject(\"GET request missing id\")\n            }\n        })\n    }\n    \n    function doGetMany(modelType,filter, limit=20, skip=0, sort='', populate=null) {\n        return new Promise(function(resolve,reject) {\n            var queryParts=[\n                'query='+encodeURIComponent(JSON.stringify(filter)),\n                'limit='+limit,\n                'skip='+skip,\n                \n            ]\n            if (populate) queryParts.push('populate='+encodeURIComponent(JSON.stringify(populate)))\n            if (sort) queryParts.push('sort='+encodeURIComponent(JSON.stringify(sort)))\n            axiosClient.get(restUrl+modelType+'?'+queryParts.join(\"&\"),\n              {\n               \n              },\n              {\n                headers: {\n                    'Content-Type': 'application/json'\n                  },\n              }\n            ).then(function(res) {\n              console.log(['GET many',res])  \n              resolve(res)\n            }).catch(function(res) {\n              console.log(res)  \n              reject(res)\n            })\n        })\n    }\n    \n    // to  endpoint with id\n    function doDelete(modelType,id) {\n        return new Promise(function(resolve,reject) {\n            if (id) {\n                return axiosClient.delete(restUrl+modelType+\"/\"+id,\n                  {\n                  },\n                  {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                  }\n                ).then(function(res) {\n                  console.log(['DEL',res])  \n                  resolve(res)\n                }).catch(function(res) {\n                  console.log(res)  \n                  reject(res)\n                })\n            } else {\n                 console.log(['DEL request missing id'])  \n                 reject('DELETE request missing id')\n            }\n        })\n    }\n    // to  endpoint with id\n    function doPatch(modelType, data) {\n        console.log('patch')  \n        return new Promise(function(resolve,reject) {\n            if (modelType && data && data._id) {\n                axiosClient.patch(restUrl+modelType+\"/\"+data._id,\n                  data,\n                  {\n                    headers: {\n                        'Content-Type': 'application/json'\n                      },\n                  }\n                ).then(function(res) {\n                      console.log(['update',res])  \n                      resolve(res)\n                }).catch(function(res) {\n                  console.log(res)  \n                  reject(res)\n                })\n            } else {\n                console.log('Missing post params')\n                reject('Missing post params')\n            }\n        })\n    }\n    \n    // EXPOSED METHODS\n    \n    function saveItem(modelType, data, patch=true) {\n        return new Promise(function(resolve, reject) {\n            if (modelType) {\n                if (data._id && data._id.trim && data._id.trim())  {\n                    if (patch) {\n                        doPatch(modelType,data).then(function(res) {\n                          resolve(res)  \n                        })\n                    } else {\n                        doPut(modelType,data).then(function(res) {\n                          resolve(res)  \n                        })\n                    }\n                } else {\n                    delete data._id \n                    doPost(modelType,data).then(function(res) {\n                      resolve(res)  \n                    })\n                }\n            }\n        })\n    }\n    \n    function deleteItem(modelType, id) {\n        return new Promise(function(resolve, reject) {\n            if (modelType && id) {\n                doDelete(modelType,id).then(function(res) {\n                  resolve(res)  \n                })\n            }\n        })\n    }\n    \n    function getItem(modelType,id) {\n        return new Promise(function(resolve, reject) {\n            if (modelType && id) {\n                doGet(modelType,id).then(function(res) {\n                  resolve(res)  \n                })\n            }\n        })\n    }\n    \n    function searchItems(modelType,query,limit,skip) {\n        return new Promise(function(resolve, reject) {\n            if (modelType) {\n                doGetMany(modelType,query,limit,skip).then(function(res) {\n                  resolve(res)  \n                })\n            }\n        })\n    }\n    \n    \n    return {saveItem, deleteItem, getItem, searchItems}\n    \n}\n","import {useState, useEffect} from 'react';\nimport {useParams, useHistory} from 'react-router-dom'\n\n//import useNluEditor from './useNluEditor'\n//import exportFormats from './export/index'\nimport useDB from './useDB'\nimport {generateObjectId, uniquifyArray} from './utils'\n//import { saveAs } from 'file-saver';\nimport useRestEndpoint from './useRestEndpoint'\nimport localforage from 'localforage'\n\n\nexport default function useSkillsEditor(props) {\n    //console.log(props)\n\n    //const {loadAll, skillFilterValue, setSkillFilterValue, filteredItems} = useNluEditor('nlutool','examples','alldata', props.updateFunctions.updateLookups)\n    const [skillKeys, setSkillKeys] = useState([])\n    const [filteredItems, setFilteredItems] = useState([])\n    const [currentIntent, setCurrentIntent] = useState('')\n    const [entitiesForSkill, setEntitiesForSkill] = useState({})\n    const [listsForEntity, setListsForEntity] = useState({})\n    const [currentSkill, setCurrentSkill] = useState(null)\n    //const skillsManager = useDB('nlutool','skills')\n    const listsManager = useDB('nlutool','lists')\n    //const [showExportDialog, setShowExportDialog] = useState(false)\n    const [collatedItems, setCollatedItems] = useState({})\n    const [collatedTags, setCollatedTags] = useState({})\n    const [collatedCounts, setCollatedCounts] = useState({})\n    const [newSlotValue, setNewSlotValue] = useState('')\n    const [skillMatches, setSkillMatches] = useState([])\n    const [skillUpdatedMatches, setSkillUpdatedMatches] = useState([])\n    var skillsStorage = localforage.createInstance({\n       name: \"nlutool\",\n       storeName   : \"skills\",\n     });\n     var examplesStorage = localforage.createInstance({\n       name: \"nlutool\",\n       storeName   : \"examples\",\n     });\n    const token = props.user && props.user.token && props.user.token.access_token ? props.user.token.access_token : ''\n    const axiosClient = props.getAxiosClient(token)\n    const {saveItem, deleteItem, searchItems} = useRestEndpoint(axiosClient,\"http://localhost:5000/api/v1/\")\n\n    const [invocation, setInvocation] = useState('')\n    const [mongoId, setMongoId] = useState('')\n    \n    const params = useParams()\n    const history = useHistory()\n    \n    var skillFilterValue = params.skillId ? params.skillId : '';\n    function setSkillFilterValue(value) {\n        //console.log('SETSKILLVAL')\n        //console.log(history)\n        var root = history.location.pathname.split(\"/\")\n        var parts=['/'+root[1]]\n        skillFilterValue = value;\n        if (skillFilterValue.length > 0) {\n            parts.push('/skill/'+skillFilterValue)\n        }\n        //console.log(['ssv',parts,value])\n        history.push(parts.join(''))\n    }\n    \n    // load skill on init\n    useEffect(() => {\n        loadSkill()\n         //props.updateFunctions.updateLists(listsManager.items[0])\n            //props.updateFunctions.updateRegexps(listsManager.items[0])\n            //props.updateFunctions.updateUtterances(listsManager.items[0])\n            //props.updateFunctions.updateLookups(listsManager.items[0])\n    },[])\n        \n    //// load list lookups\n    useEffect(() => {\n        if (listsManager.items.length > 0) { \n            //console.log(['UPD ITEMS',listsManager.items,listsManager.items[0]])\n            props.updateFunctions.updateLists(listsManager.items[0])\n            //props.updateFunctions.updateRegexps(listsManager.items[0])\n            //props.updateFunctions.updateUtterances(listsManager.items[0])\n            props.updateFunctions.updateLookups(listsManager.items[0])\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[listsManager.items])\n \n    // load mongo id into skill when changed\n    useEffect(() => {\n        if (currentSkill) {\n          //console.log(['SET mongoid HAVE CURRENT SKILL',currentSkill,mongoId])\n          var skill = currentSkill\n          skill._id = mongoId\n          setCurrentSkill(skill)\n       }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[mongoId])\n    \n    // load invocation into skill when changed\n    useEffect(() => {\n        if (currentSkill) {\n          //console.log(['SET INVOC HAVE CURRENT SKILL',currentSkill,invocation])\n          var skill = currentSkill\n          skill.invocation = invocation\n          setCurrentSkill(skill)\n      }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[invocation])    \n    \n    // look for published version of skill \n    useEffect(() => {\n        //console.log(['USER UPDATE',currentSkill,props.user,props.user._id])\n        if (currentSkill && props.user && props.user._id) {\n          //console.log(['USER UPDATE FIND ONLINE'])\n          findOnlineSkill(props.user,currentSkill)\n      }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[props.user,listsForEntity]) \n    \n    // save skill\n    useEffect(() => {\n        //\n        var skill = currentSkill\n        if (skill && skill.title && skill.title.length > 0) {\n            // merge in latest entity values derived from intents\n            if (entitiesForSkill) {\n                Object.keys(entitiesForSkill).map(function(entity) {\n                   if (skill.entities && skill.entities[entity]) {\n                       skill.entities[entity].values = entitiesForSkill[entity].values;\n                   }  \n                   return null\n                })\n            }\n            // merge in intents\n            skill.intents = collatedItems\n            console.log('SAVE NOW - change cs or inv',JSON.parse(JSON.stringify(skill)))\n            skillsStorage.setItem(skillFilterValue, currentSkill, function (err) {\n                if (err)  {\n                    console.log(err)\n                    throw new Error(err)\n                }\n            })\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[mongoId,currentSkill,listsForEntity, invocation])\n    \n  \n  \n  //function setInvocation(val) {\n      //console.log('SET INVOCK')\n      ////if (currentSkill) {\n          ////console.log(['SET INVOCK HAVE CURRENT SKILL',currentSkill,val])\n          ////var skill = currentSkill\n          ////skill.invocation = val \n          ////setCurrentSkill(skill)\n      ////}\n  //}\n\n    function loadSkill() {\n        examplesStorage.getItem('alldata').then(function(allItems) {\n            if (allItems && Array.isArray(allItems)) {\n                var filteredItems = []\n                var skillKeys = {}\n                allItems.map(function(item)   {\n                    // collate unique skill keys\n                    if (item.skills) {\n                        item.skills.map(function(skill) {\n                            skillKeys[skill] = true\n                            return null\n                        })\n                    }\n                    // filter \n                    if (skillFilterValue && item.skills && item.skills.indexOf(skillFilterValue) !== -1) {\n                        filteredItems.push(item)\n                    }\n                    return null\n                })\n                setSkillKeys(Object.keys(skillKeys))\n                setFilteredItems(filteredItems)\n                //console.log('loaded skill items for init',filteredItems, Object.keys(skillKeys),allItems)\n                if (skillFilterValue) {\n                    //console.log(['LOAD SKILL',skillFilterValue])\n                    skillsStorage.getItem(skillFilterValue, function (err, skill) {\n                        if (err) throw new Error(err)\n                        var newSkill = skill && skill.id ? skill : {}\n                        newSkill.id = newSkill.id ? newSkill.id : generateObjectId()\n                        newSkill.title = skillFilterValue\n                        newSkill.invocation = newSkill.invocation ? newSkill.invocation : ''\n                        newSkill.entities = indexEntities(newSkill,filteredItems)\n                        if (newSkill.title) findOnlineSkill(props.user,newSkill) \n                        var [intents, tags] = indexIntentsAndTags(skill,filteredItems)\n                        newSkill.intents = intents\n                       // newSkill.tags = tags    \n                        setCurrentSkill(newSkill)\n                        setInvocation(newSkill.invocation)\n                        setMongoId(newSkill._id)\n                        listsManager.loadAll()\n                        props.updateFunctions.updateUtterances()\n                        props.updateFunctions.updateRegexps()\n                        props.updateFunctions.updateLookups()\n                        //console.log(['LOADED LOCAL SKILL ',JSON.parse(JSON.stringify(newSkill))])\n                        forceReload(newSkill)\n                    })\n                }\n            }\n        })\n    }\n    \n    function findOnlineSkill(user,skill) {\n        // if user is logged in, try load the matching online skill\n        if (user && user._id && skill.title) {\n            var query = {user:user._id, title:skill.title}\n            //if (skill._id) query._id = skill._id\n            console.log(['SEARCH ONLINE ',query])\n            searchItems('Skill',query).then(function (res) {\n                console.log(['SKILL RESULTS'])\n                console.log(res.data)\n                if (res.data && res.data.length > 0) {\n                    var found = false\n                    res.data.map(function(skillItem) {\n                        console.log(['SKILL RESULTS', skill ? skill._id : '',skillItem ? skillItem._id:''])\n                        if (skill._id && skill._id === skillItem._id) {\n                            found = true\n                            console.log(['SKILL RESULTS DATES',skill.updated_date ,skillItem.updated_date, skill.updated_date - skillItem.updated_date])\n                            if (skill.updated_date < skillItem.updated_date) {\n                                setSkillUpdatedMatches([res.data[0]])\n                            }\n                            // matching skill OK\n                            //setSkillMatches([res.data[0]])\n                        } \n                        return null\n                    })\n                    if (!found) {\n                        // potential match\n                        setSkillMatches(res.data)\n                    }\n                } else {\n                    // no match existing so create new OK\n                   setSkillMatches([])\n                }\n            }).catch(function(err) {\n                console.log(err)  \n            })\n        } else {\n            // no match existing so create new OK\n           setSkillMatches([])\n        }\n    }\n    \n    function indexEntities(currentSkill, filteredItems) {\n         //console.log(['INDEX ENETITIES',currentSkill,filteredItems])\n         var entities = {}\n            // collate entities from filteredItems\n            if (Array.isArray(filteredItems)) {\n                filteredItems.map(function (item,itemKey) {\n                  if (Array.isArray(item.entities)) {\n                      item.entities.map(function(entity,entityKey) {\n                         if (entity && entity.type && entity.type.length > 0) {\n                             if (typeof entities[entity.type] !== \"object\") entities[entity.type] = {} //\n                             //currentSkill.entities && currentSkill.entities[entity.type] ?  currentSkill.entities[entity.type] : {}\n                             if (!Array.isArray(entities[entity.type].values )) entities[entity.type].values = []\n                             if (currentSkill && currentSkill.entities && currentSkill.entities[entity.type]&& currentSkill.entities[entity.type].alexaType) entities[entity.type].alexaType = currentSkill.entities[entity.type].alexaType\n                             if (currentSkill && currentSkill.entities && currentSkill.entities[entity.type]&& currentSkill.entities[entity.type].googleType) entities[entity.type].googleType = currentSkill.entities[entity.type].googleType\n                             if (currentSkill && currentSkill.entities && currentSkill.entities[entity.type]&& currentSkill.entities[entity.type].lists) entities[entity.type].lists = currentSkill.entities[entity.type].lists\n                             entities[entity.type].values.push(entity.value)\n                         }\n                         return null\n                      })\n                  }\n                  return null\n                })\n            }\n            // sort and uniquify values\n            //var slots = currentSkill && currentSkill.slots ? currentSkill.slots : {}\n            Object.keys(entities).map(function(entityName,entityKey) {\n               const entity = entities[entityName]\n               entity.values = uniquifyArray(entity.values).sort()\n               \n               //if (slots[entityName]) {\n               //} else {\n                   //slots[entityName] = {values:[]}\n               //}\n               return null\n            })\n            //console.log([\"ENT\",entities])\n            setEntitiesForSkill(entities)\n            return entities;\n    }\n    function indexIntentsAndTags(currentSkill, filteredItems) {\n        //console.log(['INDEX INTENTS',currentSkill])\n        if (currentSkill) {\n            // collate intents and tags from items\n             var newCollatedItems = collatedItems\n             var newCollatedCounts = collatedCounts\n             var newCollatedTags = {}\n             if (filteredItems) {\n                 filteredItems.map(function(item) {\n                    if (item.intent) {\n                        if (!newCollatedItems[item.intent]) newCollatedItems[item.intent]=[]\n                        newCollatedCounts[item.intent] =   (newCollatedCounts[item.intent] > 0) ? newCollatedCounts[item.intent] + 1 : 1;\n                        //if (collatedItems[item.intent].length < 300) {\n                            newCollatedItems[item.intent].push({example: item.example, entities: item.entities})\n                        //}\n                    }\n                    if (Array.isArray(item.tags)) {\n                        item.tags.map(function(tag) {\n                            newCollatedTags[tag] = true\n                            return null\n                        })\n                    } \n                   return null;  \n                 })\n                 setCollatedItems(newCollatedItems)\n                 setCollatedCounts(newCollatedCounts)\n                 setCollatedTags(newCollatedTags)\n                return [collatedItems, Object.keys(newCollatedTags)]\n             } \n        }\n        return [[],[]]\n    }\n       \n\n    \n    \n\n\n    function setSkill(skill) {\n        console.log(['SETSKILL',currentSkill,skill])\n        if (skill && skill.id) {\n            setCurrentSkill(skill)\n            //setInvocation(skill.invocation)\n            setMongoId(skill._id)\n           // forceReload()\n        } else {\n            console.log(['NOSETSKILL',currentSkill,skill])\n        }\n    }\n\n    function addListToSkillEntity(entity,list) {\n      //console.log(['ADSKOI',currentSkill,currentSkill.entities,entity,list])\n      if (entity && list && list.name) {\n            var skill = currentSkill;\n            if (!skill.entities) skill.entities={}\n            if (!skill.entities[entity]) skill.entities[entity] = {lists:[]}\n            if (!Array.isArray(skill.entities[entity].lists)) skill.entities[entity].lists = []\n            //var newListsForEntity = listsForEntity\n            //console.log(['ADSKOI1.5',skill])\n            skill.entities[entity].lists.push(list.name)\n            skill.entities[entity].lists = uniquifyArray(skill.entities[entity].lists).sort()\n           //newListsForEntity[entity] = uniquifyArray(newListsForEntity).sort()\n            setCurrentSkill(skill)  \n            // force render\n            forceReload()  \n            //} else {\n                //console.log(['ADSKOI new'])\n               //newListsForEntity[entity] = [list.name]\n            //}\n             //console.log(['ADSKOI2 final',newListsForEntity])\n            //setListsForEntity(newListsForEntity)\n       } else {\n           console.log([' missing data'])\n       }\n    }\n  \n    function removeListFromSkillEntity(entity, listIndex) {\n      var skill = currentSkill\n      //console.log(['REMOVESKILLFROMLIST',entity,listIndex])\n      if (skill && skill.entities && entity && skill.entities[entity] && skill.entities[entity].lists) {\n          var lists = skill.entities[entity].lists\n          //lists = uniquifyArray([lists.slice(0, listIndex),lists.slice(listIndex + 1)]).sort()\n          lists = lists.slice(0, listIndex).concat(lists.slice(listIndex + 1))\n          \n          skill.entities[entity].lists = lists\n          setCurrentSkill(skill)  \n          forceReload()  \n          //console.log(['REMOVESKILLFROMLIST ddd',lists])\n      } \n       //var newEntitiesForSkill = entitiesForSkill\n       //if (newEntitiesForSkill[entity]) {\n           //var lists = newEntitiesForSkill[entity].lists && Array.isArray(newEntitiesForSkill[entity].lists) ? newEntitiesForSkill[entity].lists : [];\n           //newEntitiesForSkill[entity].lists = uniquifyArray([lists.slice(0, listIndex),lists.slice(listIndex + 1)]).sort()\n           //setEntitiesForSkill(newEntitiesForSkill)\n       //}\n    }\n  \n    function setGoogleAssistantEntityType(entity, type) {\n        if (currentSkill && entity) {\n            var skill = currentSkill;\n            if (!skill.entities) skill.entities={}\n            if (!skill.entities[entity]) skill.entities[entity] = {}\n            skill.entities[entity].googleType = type\n            setCurrentSkill(skill)  \n           forceReload()  \n       } \n    }\n    \n    function setAlexaEntityType(entity, type) {\n        if (currentSkill && entity) {\n            var skill = currentSkill;\n            if (!skill.entities) skill.entities={}\n            if (!skill.entities[entity]) skill.entities[entity] = {}\n            skill.entities[entity].alexaType = type\n            setCurrentSkill(skill)  \n            console.log('ALEXA')\n            console.log(skill)\n            forceReload()  \n       } \n    }\n    \n    function setRASASlotType(entity, type, slots) {\n        if (currentSkill && entity && type) {\n            var skill = currentSkill;\n            var newSlots = slots ? slots : {}\n            newSlots[entity].slotType = type\n            var rasa = skill.rasa ? skill.rasa : {}\n            rasa.slots = newSlots\n            skill.rasa = rasa\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()  \n       } \n    }\n       \n    function setRASASlotAutofill(entity, type, slots) {\n        \n            \n        if (currentSkill && entity && type) {\n            var skill = currentSkill;\n            var newSlots = slots ? slots : {}\n            newSlots[entity].slotAutofill = type\n            var rasa = skill.rasa ? skill.rasa : {}\n            rasa.slots = newSlots\n            skill.rasa = rasa\n            setCurrentSkill(skill)  \n            forceReload()  \n       } \n    }\n    \n    function newSlot(name,slots) {\n        if (name && name.trim().length > 0) {\n            var skill = currentSkill;\n            var newSlots = slots ? slots : {}\n            var rasa = skill.rasa ? skill.rasa : {}\n            newSlots[name] = {}\n            rasa.slots = slots\n            skill.rasa = rasa\n            setCurrentSkill(skill)  \n            setNewSlotValue('')\n            forceReload()  \n        }\n    }\n    \n    function deleteSlot(slot, slots) {\n        if (currentSkill && slot && slots ) {\n            var skill = currentSkill;\n            delete slots[slot]\n            skill.rasa = skill.rasa ? skill.rasa : {}\n            skill.rasa.slots = slots\n            setCurrentSkill(skill)  \n            forceReload()  \n        }\n    }\n\n    function setRASAActions(data) {\n          if (currentSkill && data) {\n            var skill = currentSkill;\n            skill.rasa = skill.rasa ? skill.rasa : {}\n            skill.rasa.actions = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }\n    \n    function setRASAConfig(data) {\n        console.log(['setrasaconfig',data, currentSkill])\n          if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasa = skill.rasa ? skill.rasa : {}\n            skill.rasa.config = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }\n    \n    function setRASAStories(data) {\n          if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasa = skill.rasa ? skill.rasa : {}\n            skill.rasa.stories = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }\n    function setRASAEndpoint(data) {\n          if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasa = skill.rasa ? skill.rasa : {}\n            skill.rasa.endpoint = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }\n    function setRASACredentials(data) {\n          if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasa = skill.rasa ? skill.rasa : {}\n            skill.rasa.credentials = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }  \n    \n    function setRASASession(data) {\n       if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasa = skill.rasa ? skill.rasa : {}\n            skill.rasa.session = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }  \n        \n    function addRegexp(regexp) {\n        console.log(['ADDREGEX',regexp])\n        if (currentSkill && regexp) {\n            var skill = currentSkill;\n            if (!Array.isArray(skill.regexps)) skill.regexps=[]\n            skill.regexps.push({name: regexp.name, synonym: regexp.synonym })\n            //skill.regexps = uniquifyArray(skill.regexps)\n            setCurrentSkill(skill)  \n            //// if this is a new regexp, add it to the main database\n            //if (!props.lookups.regexpListsLookups[regexp.name] && !props.lookups.regexpsLookups[regexps.name]) {\n                //var regexpStorage = localforage.createInstance({\n                   //name: \"nlutool\",\n                   //storeName   : \"regexps\",\n                 //});\n                 //regexpStorage.getItem('alldata', function (err,regexps) {\n                     //if (err) throw new Error(err)\n                     //if (Array.isArray(regexps)) {\n                         //regexps.unshift({id:generateObjectId(), value:regexp.name, synonyms:'', tags:[]})\n                         //regexpStorage.setItem('alldata',utterances)\n                     //}\n                 //})\n            //}\n            forceReload()\n       } \n    }\n    \n    function removeRegexp(index) {\n        console.log(['RE UTTERANCE',index])\n        if (typeof index === \"number\" && currentSkill && currentSkill.regexps && currentSkill.regexps.length > index) {\n            var skill = currentSkill;\n            skill.regexps = [...skill.regexps.slice(0,index),...skill.regexps.slice(index+1)]\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()\n        }\n    }\n    \n    function setRegexpIntent(index, intent) {\n        console.log(['set reg intent',index, intent])\n        if (typeof index === \"number\" && currentSkill && currentSkill.regexps && currentSkill.regexps.length > index) {\n            var skill = currentSkill;\n            skill.regexps = skill.regexps ? skill.regexps : []\n            var key = (!isNaN(parseInt(index)) ? parseInt(index) : 0)\n            var regexp = skill.regexps[key] ? skill.regexps[key] : {}\n            regexp.intent = intent\n            skill.regexps[key] = regexp\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()\n        }\n    }\n    \n    function setRegexpEntity(index,entity) {\n        console.log(['set reg entity',index, entity])\n        if (typeof index === \"number\" && currentSkill && currentSkill.regexps && currentSkill.regexps.length > index) {\n            var skill = currentSkill;\n            skill.regexps = skill.regexps ? skill.regexps : []\n            var key = (parseInt(index) != NaN ? parseInt(index) : 0)\n            var regexp = skill.regexps[key] ? skill.regexps[key] : {}\n            regexp.entity = entity\n            skill.regexps[key] = regexp\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()\n        }\n    }\n    \n    function addUtterance(utterance) {\n       \n        if (currentSkill && utterance) {\n            var skill = currentSkill;\n            if (!Array.isArray(skill.utterances)) skill.utterances=[]\n            skill.utterances.push(utterance.name)\n            skill.utterances = uniquifyArray(skill.utterances)\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            // if this is a new utterance, add it to the main database\n            if (!props.lookups.utteranceListsLookups[utterance.name] && !props.lookups.utterancesLookups[utterance.name]) {\n                var utteranceStorage = localforage.createInstance({\n                   name: \"nlutool\",\n                   storeName   : \"utterances\",\n                 });\n                 utteranceStorage.getItem('alldata', function (err,utterances) {\n                     if (err) throw new Error(err)\n                     if (Array.isArray(utterances)) {\n                         utterances.unshift({id:generateObjectId(), value:utterance.name, synonyms:'', tags:[]})\n                         utteranceStorage.setItem('alldata',utterances)\n                     }\n                 })\n            }\n            forceReload()\n       } \n    }\n    \n    function removeUtterance(index) {\n        console.log(['RE UTTERANCE',index])\n        if (typeof index === \"number\" && currentSkill && currentSkill.utterances && currentSkill.utterances.length > index) {\n            var skill = currentSkill;\n            skill.utterances = [...skill.utterances.slice(0,index),...skill.utterances.slice(index+1)]\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()\n        }\n    }\n    function addUtteranceList(utterance) {\n          console.log(['ADD UTTERANCE LIST',utterance, currentSkill])\n          if (currentSkill && utterance) {\n            var skill = currentSkill;\n            if (!Array.isArray(skill.utterancesLists)) skill.utterancesLists=[]\n            skill.utterancesLists.push(utterance.name)\n            skill.utterancesLists = uniquifyArray(skill.utterancesLists)\n            setCurrentSkill(skill)  \n            console.log('add ut list')\n            console.log(skill.utterancesLists)\n            forceReload()\n       } \n    }\n     \n    function removeUtteranceList(index) {\n        if (typeof index === \"number\" && currentSkill && currentSkill.utterancesLists) {\n            var skill = currentSkill;\n            skill.utterancesLists = [...skill.utterancesLists.slice(0,index),...skill.utterancesLists.slice(index+1)]\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()\n        }\n    }  \n    \n    function addSkillTag(tag) {\n          console.log(['ADD skill tag',tag, currentSkill])\n          if (currentSkill && tag) {\n            var skill = currentSkill;\n            if (!Array.isArray(skill.tags)) skill.tags=[]\n            skill.tags.push(tag.name)\n            skill.utterancesLists = uniquifyArray(skill.utterancesLists).sort()\n            setCurrentSkill(skill)  \n            forceReload()\n       } \n    }\n     \n    function removeSkillTag(index) {\n          console.log(['rm skill tag',index, currentSkill])\n        if (typeof index === \"number\" && currentSkill && currentSkill.tags) {\n            var skill = currentSkill;\n            skill.tags = [...skill.tags.slice(0,index),...skill.tags.slice(index+1)]\n            setCurrentSkill(skill)  \n            forceReload()\n        }\n    }  \n    \n\n   \n    function forceReload(skill) {\n        var thisSkill = skill && skill.id ? skill : (currentSkill && currentSkill.id ? currentSkill : {})\n        setListsForEntity(JSON.stringify([thisSkill._id,thisSkill.entitiesListsData,thisSkill.utterancesListsData,thisSkill.rasa,\n        thisSkill.jovo,thisSkill.mycroft,thisSkill.entities,thisSkill.utterances,thisSkill.utterancesLists, thisSkill.regexps, thisSkill.tags]))  \n    }\n        \n    //addRegexpUtteranceTags,\n    return {setAlexaEntityType,setGoogleAssistantEntityType,  removeListFromSkillEntity, addListToSkillEntity,\n    currentSkill,setCurrentSkill,  skillFilterValue, invocation, setInvocation, entitiesForSkill, collatedItems, collatedCounts, setCurrentIntent, setSkillFilterValue,\n     addRegexp, removeRegexp, setRegexpIntent, setRegexpEntity, setMongoId, saveItem, deleteItem, searchItems,\n     removeUtterance, addUtterance,  addUtteranceList, removeUtteranceList, skillKeys, addSkillTag, removeSkillTag,\n     newSlot, newSlotValue,    setNewSlotValue,  slots: props.slots, setRASASlotAutofill, setRASASlotType, deleteSlot ,\n     setRASAActions, setRASASession , setRASAEndpoint , setRASACredentials  ,setRASAStories ,setRASAConfig, \n     filteredItems, currentIntent, listsForEntity, listsManager, collatedTags, skillMatches, skillUpdatedMatches,setSkillMatches, setSkillUpdatedMatches, setSkill, forceReload\n     }\n    \n}\n","import React from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport exportFormats from './export/index'\nimport PublishPage from './PublishPage'\nimport { saveAs } from 'file-saver';\nimport NluSkillEditorComponent from './components/NluSkillEditorComponent'\n\nimport useSkillsEditor from './useSkillsEditor'\n\n\nexport default  function NluSkillsEditor(props) {\n\n    const skillsEditor = useSkillsEditor(Object.assign({},props,{user:props.user, lookups: props.lookups}))\n    \n    const {\n    currentSkill, setCurrentSkill, skillFilterValue, setSkillFilterValue,\n      skillKeys,\n     setMongoId, saveItem, deleteItem, \n       listsForEntity, skillMatches, skillUpdatedMatches, setSkillMatches, setSkillUpdatedMatches, setSkill, forceReload\n     } = skillsEditor\n   \n    \n     var skillOptions = skillKeys && skillKeys.sort().map(function(skillKey,i) {\n          return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkillFilterValue(skillKey)}}  >{skillKey}</Dropdown.Item>\n       })\n       skillOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {setSkillFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n   \n        //<Button style={{float:'right',marginLeft:'0.5em'}}  variant=\"success\" onClick={function() {setShowExportDialog(true)}} >Publish</Button>\n        // {JSON.stringify(skillMatches)}\n     const skillsList = skillKeys ? skillKeys.map(function(skill,i) {return <Button key={i}  onClick={function(e) {setSkillFilterValue(skill)}}  style={{marginLeft:'1em'}} >{skill}</Button>} )   : []\n            \n    return <div>\n        {currentSkill && skillMatches && skillMatches.length > 0 && <span style={{color:'red'}} >\n                You have published version of this skill&nbsp;\n                {skillMatches.map(function(match,key) {\n                    return <span key={key} >saved {new Date(match.updated_date).toUTCString()} <Button variant=\"warning\" onClick={function(e) {setSkill(match); setSkillMatches([]); forceReload()}} >Merge</Button></span>\n                })}\n        </span>}\n        \n        {currentSkill && skillUpdatedMatches && skillUpdatedMatches.length > 0 && <span>\n                You have a more recent published version of this skill&nbsp;\n                {skillUpdatedMatches.map(function(match) {\n                    return <span>saved {new Date(match.updated_date).toUTCString()} <Button variant=\"warning\"  onClick={function(e) {setSkill(match); setSkillUpdatedMatches([]); forceReload()}} >Merge</Button></span>\n                })}\n        </span>}         \n         {currentSkill && !props.publish && skillFilterValue && skillFilterValue.length > 0 && <><Dropdown style={{float:'right',marginLeft:'0.5em'}}  as={ButtonGroup}>\n          <Dropdown.Toggle split variant=\"primary\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant=\"primary\">Export</Button>\n          <Dropdown.Menu variant=\"primary\" >\n              {exportFormats.map(function(exportFormat,i) {\n                  var title = skillFilterValue+'_opennludata_'+exportFormat.name+'_'+Date.now()\n                  var variant= exportFormat.name === \"JSON\" ? \"success\" : \"primary\"\n                return <Dropdown.Item variant={variant} key={i} value={exportFormat.name} \n                onClick={function(e) {\n                    //var skill = currentSkill\n                    //skill.intents = \n                    //skill.entities = \n                    exportFormat.exportFunction(currentSkill).then(function(zipBody) {\n                        console.log(['TRIGGER DL',title,zipBody])\n                        if (exportFormat.name==='JSON') {\n                            saveAs(zipBody, title+'.json')\n                        } else {\n                            saveAs(zipBody, title+'.zip')\n                        }\n                })}}  >{exportFormat.name}</Dropdown.Item>\n           })}\n          </Dropdown.Menu>\n        </Dropdown>\n       </>\n         }\n         {(currentSkill && !props.publish && props.user && props.user.token && props.user.token.access_token ) && <Link to={\"/skills/skill/\"+currentSkill.title+\"/publish\"} ><Button variant=\"success\" style={{float:'right'}} >Publish</Button></Link>}\n       \n       {(currentSkill && !props.publish && !(props.user && props.user.token && props.user.token.access_token)) && <Link to={\"/login/login\"} ><Button variant=\"success\" style={{float:'right'}} >Login to Publish</Button></Link>}\n       \n       \n        {currentSkill && !props.publish && <NluSkillEditorComponent user={props.user} lookups={props.lookups} {...skillsEditor  } />}\n        {!currentSkill && <div>\n            <h1>Skills</h1>\n            {skillsList.length > 0 && skillsList}\n            {skillsList.length <= 0 && <div>\n                You dont have any skills yet. Import some <Link to='/sources'><Button>Sources</Button></Link> \n            </div>}\n        </div>}\n         \n         {(currentSkill && props.publish ) && <PublishPage {...props} setCurrentSkill={setCurrentSkill} listsForEntity={listsForEntity} forceReload={forceReload}  user={props.user} setMongoId={setMongoId} currentSkill={currentSkill} saveItem={saveItem} deleteItem={deleteItem} />}\n     \n    </div>\n            \n}\n      \n\n\n       \n         //{!props.publish && renderEditor(props)}\n         \n         //{props.publish && <div>\n             //<Link to={\"/skills/skill/\"+currentSkill.title} ><Button variant=\"success\" style={{float:'right'}} >Back to Skill</Button></Link>\n             //<h1>Publish</h1>\n             //<textarea style={{height: '20em', width:'60em'}}  value={JSON.stringify(currentSkill)}></textarea>\n             \n        //</div>}\n","//, Modal\nimport React, {useState, useEffect, useContext} from 'react';\nimport {ListGroup, Button, Accordion, Card, AccordionContext} from 'react-bootstrap'\nimport { Link  } from 'react-router-dom'\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\n\nimport localforage from 'localforage'\nimport useImportMergeFunctions from './useImportMergeFunctions'\nimport useImportFunctions from './useImportFunctions'\n\n\n\nfunction ContextAwareToggle({ children, eventKey, callback }) {\n  const currentEventKey = useContext(AccordionContext);\n\n  const decoratedOnClick = useAccordionToggle(\n    eventKey,\n    () => callback && callback(eventKey),\n  );\n\n  const isCurrentEventKey = currentEventKey === eventKey;\n\n  return (\n    <>\n    {!isCurrentEventKey && <Button\n      onClick={decoratedOnClick}\n    >+</Button>\n    }\n    \n    {isCurrentEventKey && <Button\n      onClick={decoratedOnClick}\n    >-</Button>\n    }\n    \n    </>\n  );\n}\n\nfunction ImportReviewPage(props) {\n    const {mergeEntities, mergeIntents, mergeUtterances} = useImportMergeFunctions()\n    const [skillTitle, setSkillTitle] = useState('')\n    \n    const [collatedIntents, setCollatedIntents] = useState({})\n    const [collatedEntities, setCollatedEntities] = useState({})\n    const [importData, setImportData] = useState({})\n    var localforageStorageImport = localforage.createInstance({\n        name: 'nlutool',\n        storeName   :'importing',\n    });\n    useEffect(() => {\n        localforageStorageImport.getItem('alldata').then(function(importData) {\n             console.log('importData')  \n             console.log(importData)  \n             setImportData(importData)\n             if (importData.title) setSkillTitle(importData.title)\n             if (importData.intents) {\n                 var collatedIntents = {}\n                 importData.intents.map(function(intent) {\n                     var key = intent.intent ? intent.intent : '_'\n                     collatedIntents[key] = collatedIntents[key] ? collatedIntents[key] : []\n                     collatedIntents[key].push(intent)\n                    return null\n                 })\n                 setCollatedIntents(collatedIntents)\n             }\n             if (importData.entities) {\n                 var collatedEntities = {}\n                 importData.entities.map(function(entity,index) {\n                     if (entity.tags  && entity.tags.length > 0) {\n                         entity.tags.map(function(tag) {\n                             collatedEntities[tag]  = collatedEntities[tag] ? collatedEntities[tag] : []\n                             collatedEntities[tag].push(index)\n                         })\n                     } else {\n                         collatedEntities[\"untagged\"] = collatedEntities[\"untagged\"] ? collatedEntities[\"untagged\"] : []\n                         collatedEntities[\"untagged\"].push(index)\n                     }\n                     return null\n                 })\n                 setCollatedEntities(collatedEntities)\n             }\n        })\n    },[])\n    const blockStyle={borderTop: '2px solid black', minHeight:'5em'}\n    const [visible, setVisible] = useState({})\n    //<pre>{JSON.stringify(importData,null,2)}</pre>\n        \n    return <div style={{marginLeft:'1em'}}>\n        <h3>Import Review</h3>\n        \n          <Accordion >\n\n           {/* INTENTS */}\n              {importData.intents && <Card>\n                <Card.Header>\n                  <ContextAwareToggle as={Button} variant=\"link\" eventKey=\"root-0\"  >\n                  </ContextAwareToggle>\n                  {importData.intents && <span style={{marginLeft:'2em'}}  id='intents' >{Object.keys(collatedIntents).length } intents with {importData.intents ? Object.keys(importData.intents).length : 0} examples <Button \n                    style={{marginLeft:'2em'}} \n                    onClick={function(e) {\n                                    mergeIntents(importData.intents , skillTitle)\n                                    .then(function(counts) {\n                                        props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                                        // TODO remove item from import data\n                                    })\n                                }}>Import All Intents</Button></span>}\n                </Card.Header>\n                \n                {<Accordion.Collapse eventKey=\"root-0\"><Card.Body>{Object.keys(collatedIntents).map(function(intent, key) {\n                    return <Card key={key}>\n                        <Accordion >\n                                 \n                            <Card.Header>\n                               <ContextAwareToggle as={Button} variant=\"link\" eventKey={\"intent-\"+key}  >\n                                    </ContextAwareToggle>&nbsp;&nbsp;\n                                    \n                              <b>{intent}</b> with {collatedIntents[intent].length} examples\n                              <Button \n                                style={{marginLeft:'2em'}} \n                                onClick={function(e) {\n                                    mergeIntents(collatedIntents[intent], skillTitle)\n                                    .then(function(counts) {\n                                        props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                                        // TODO remove item from import data\n                                    })\n                                }}>Import {intent}</Button>\n                            </Card.Header>\n                            {<Accordion.Collapse eventKey={\"intent-\"+key}>\n                            <Card.Body>\n                                   \n                                        <ul>{collatedIntents[intent].map(function(example,iikey) {\n                                            return <li key={iikey}>{example.example}</li> \n                                        })}</ul>\n                                    \n                            </Card.Body>\n                            </Accordion.Collapse>}\n                        </Accordion >\n                    </Card>\n                          \n                    \n                })}\n                </Card.Body></Accordion.Collapse>}\n                \n              </Card>}\n              \n              \n                             \n  \n              \n              {/* ENTITIES */}\n              {importData.entities && <Card>\n                <Card.Header>\n                  <ContextAwareToggle as={Button} variant=\"link\" eventKey=\"root-1\"  >\n                  </ContextAwareToggle>\n                  {importData.entities && <span style={{marginLeft:'2em'}}  id='entities' >{importData.entities ? Object.keys(importData.entities).length : 0} entities <Button \n                    style={{marginLeft:'2em'}} \n                    onClick={function(e) {\n                        mergeEntities(importData.entities, skillTitle)\n                        .then(function(counts) {\n                            props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                        })\n                    }}>Import All Entities</Button></span>}\n                </Card.Header>\n                {<Accordion.Collapse eventKey=\"root-1\"><Card.Body>{Object.keys(collatedEntities).map(function(entityKey, key) {\n                    return <Card key={key}>\n                        <Accordion >\n                            <Card.Header>\n                               <ContextAwareToggle as={Button} variant=\"link\" eventKey={\"entity-\"+key}  >\n                                </ContextAwareToggle>&nbsp;&nbsp;\n                                    \n                              {/*<b>{entity}</b> with {Object.values(importData.entities[entity].values).length} examples*/}\n                              <Button \n                                style={{marginLeft:'2em'}} \n                                onClick={function(e) {\n                                    mergeEntities(collatedEntities[entityKey].map(function(i) {return importData.entities[i]}), skillTitle)\n                                    .then(function(counts) {\n                                        props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                                    })\n                                }}>Import {entityKey}</Button>\n                            </Card.Header>\n                            {<Accordion.Collapse eventKey={\"entity-\"+key}>\n                                <Card.Body>\n                                    <ul>{collatedEntities[entityKey] && collatedEntities[entityKey].map(function(example,ikey) {\n                                        return <li key={ikey}>{importData.entities[example].value}</li> \n                                    })}</ul>\n                                </Card.Body>\n                            </Accordion.Collapse>}\n                        </Accordion >\n                    </Card>\n                          \n                    \n                })}\n                </Card.Body></Accordion.Collapse>}\n                \n              </Card>}\n              \n              \n              \n\n\n           {/* UTTERANCES */}\n              {importData.utterances && <Card>\n                <Card.Header>\n                  <ContextAwareToggle as={Button} variant=\"link\" eventKey=\"root-2\"  >\n                  </ContextAwareToggle>\n                  {importData.utterances && <span style={{marginLeft:'2em'}}  id='utterances' >{importData.utterances ? Object.keys(importData.utterances).length : 0} utterances <Button \n                    style={{marginLeft:'2em'}} \n                    onClick={function(e) {\n                        mergeUtterances(importData.utterances, skillTitle)\n                        .then(function(counts) {\n                            props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                        })\n                    }}>Import All Utterances</Button></span>}\n                </Card.Header>\n                \n                {<Accordion.Collapse eventKey=\"root-2\"><Card.Body>{importData.utterances &&  Object.values(importData.utterances).map(function(utterance, key) {\n                    return <Card key={key}>\n                                 \n                            <Card.Header>\n                              <b>{utterance.value}</b> \n                              <Button \n                                style={{marginLeft:'2em'}} \n                                onClick={function(e) {\n                                    mergeUtterances([utterance], skillTitle)\n                                    .then(function(counts) {\n                                        props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                                    })\n                                }}>Import</Button>\n                            </Card.Header>\n                           \n                    </Card>\n                          \n                    \n                })}\n                </Card.Body></Accordion.Collapse>}\n                \n              </Card>   }           \n        </Accordion>    \n        \n    </div>   \n}\n\nexport default ImportReviewPage\n\n\n\n\n\n                   \n         //<div id='skill' ><label>Title <input type='text' value={skillTitle} onChange={function(e) {setSkillTitle(e.target.value)}} />        &nbsp;&nbsp;<Button \n            //onClick={function(e) {\n                ////mergeIntents([importData.utterances[utterance]], skillTitle)\n                ////.then(function(intentCounts) {\n                    //////props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                ////})\n            //}}>Import All</Button>\n            //</label></div>\n       \n        //<Accordion >\n         \n              \n            //{/* UTTERANCES */}\n              //<Card>\n                //<Card.Header>\n                  //<ContextAwareToggle as={Button} variant=\"link\" eventKey=\"root-2\"  >\n                  //</ContextAwareToggle>\n                  //{importData.utterances && <span style={{marginLeft:'2em'}}  id='intents' >{importData.utterances ? Object.keys(importData.utterances).length : 0} utterances <Button \n                    //style={{marginLeft:'2em'}} \n                    //onClick={function(e) {\n                        //mergeUtterances(importData.utterances, skillTitle)\n                        //.then(function(counts) {\n                            //props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                        //})\n                    //}}>Import All Utterances</Button></span>}\n                //</Card.Header>\n                \n                //{<Accordion.Collapse eventKey=\"root-2\"><Card.Body>{importData.utterances &&  Object.keys(importData.utterances).map(function(utterance, key) {\n                    //return <Card>\n                        //<Accordion >\n                                 \n                            //<Card.Header>\n                               //<ContextAwareToggle as={Button} variant=\"link\" eventKey={\"utterance-\"+key}  >\n                                //</ContextAwareToggle>&nbsp;&nbsp;\n                                    \n                              //<b>{utterance}</b> with {importData.utterances[utterance].length} examples\n                              //<Button \n                                //style={{marginLeft:'2em'}} \n                                //onClick={function(e) {\n                                    //mergeIntents([importData.utterances[utterance]], skillTitle)\n                                    //.then(function(counts) {\n                                        //props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                                    //})\n                                //}}>Import {utterance}</Button>\n                            //</Card.Header>\n                            //{<Accordion.Collapse eventKey={\"utterance-\"+key}>\n                                //<Card.Body>\n                                        //<ul>{Object.keys(importData.utterances[utterance]).map(function(example) {\n                                            //return <li>{example.example}</li> \n                                        //})}</ul>\n                                //</Card.Body>\n                            //</Accordion.Collapse>}\n                        //</Accordion >\n                    //</Card>\n                          \n                    \n                //})}\n                //</Card.Body></Accordion.Collapse>}\n                \n              //</Card>              \n        //</Accordion>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //<Card>\n                //<Card.Header>\n                  //<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                      //<Button>+</Button>\n                  //</Accordion.Toggle>\n                  //{importData.entities && <span style={{marginLeft:'2em'}} id='entities' >{importData.entities ? Object.keys(importData.entities).length : 0} entities<Button \n                        //style={{marginLeft:'2em'}} \n                        //onClick={function(e) {\n                            //mergeEntities(importData.entities, skillTitle)\n                            //.then(function(counts) {\n                                //props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                            //})\n                        //}}>Import</Button></span>}\n                //</Card.Header>\n                //<Accordion.Collapse eventKey=\"1\">\n                  //<Card.Body></Card.Body>\n                //</Accordion.Collapse>\n              //</Card>\n              \n              //<Card>\n                //<Card.Header>\n                  //<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                      //<Button>+</Button>\n                  //</Accordion.Toggle>\n                  //{importData.utterances && <div style={blockStyle} id='utterances' >{importData.utterances ? importData.utterances.length : 0} utterances<Button \n                    //style={{marginLeft:'2em'}} \n                    //onClick={function(e) {\n                        //mergeUtterances(importData.utterances, skillTitle)\n                        //.then(function(counts) {\n                            //props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                        //})\n                    //}}>Import</Button></div>}\n                //</Card.Header>\n                //<Accordion.Collapse eventKey=\"1\">\n                  //<Card.Body>Hello! I'm another body</Card.Body>\n                //</Accordion.Collapse>\n              //</Card>\n              \n\n\n    //var intentAccordionPanels = []\n            \n    //if (importData.intents) {\n        //Object.keys(importData.intents).map(function(intent, key) {\n            ////importData.intents[intent].map(function(example) {\n                 //intentAccordionPanels.push({\n                     //title:intent, \n                     //content:<div>{importData.intents[intent] && importData.intents[intent].map(function(example,ikey) {\n                            //return <div key={ikey}>{example.example}</div> \n                        //})}</div>,\n                      //key:\"intent-\"+key\n                 //}) \n                 //return null\n            ////})\n            //return null\n        //})\n    //}\n    \n    \n    //const AccordionPanels = [\n      //{ \n            //title: (importData.intents ? Object.keys(importData.intents).length : 0)+' intents ', \n            //content:  { content:<div>\n                    //{<>\n                        //<Button \n                            //style={{marginLeft:'2em'}} \n                            //onClick={function(e) {\n                                //mergeIntents(importData.intents, skillTitle)\n                                //.then(function(counts) {\n                                    //props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                                //})\n                            //}}>Import All Intents\n                        //</Button>\n                        //<Accordion.Accordion\n                          //className=\"padding\"\n                          //panels={intentAccordionPanels}\n                        ///>\n                    //</>}\n                    //</div>}, \n            //key: 'sub-accordions'\n      //},\n                    \n      //{ title: (importData.entities ? Object.keys(importData.entities).length : 0)+' entities ', content: { content: <b>ddd<Button \n                        //style={{marginLeft:'2em'}} \n                        //onClick={function(e) {\n                            //mergeEntities(importData.entities, skillTitle)\n                            //.then(function(counts) {\n                                //props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                            //})\n                        //}}>Import</Button></b>, key: 'sub-accordions' } },\n      //{ title: (importData.utterances ? Object.keys(importData.utterances).length : 0)+' utterances ', content: { content: <b>ddd<Button \n                    //style={{marginLeft:'2em'}} \n                    //onClick={function(e) {\n                        //mergeUtterances(importData.utterances, skillTitle)\n                        //.then(function(counts) {\n                            //props.setPageMessage('Updated '+(counts.updated ? counts.updated : 0) +' and created '+(counts.created ? counts.created : 0),4000)\n                        //})\n                    //}}>Import</Button></b>, key: 'sub-accordions' } },\n    //]\n\n//<Accordion\n         //className=\"padding\"\n            //defaultActiveIndex={null}\n            //panels={AccordionPanels}\n          ///>\n        \n\n\n//import { Accordion } from 'semantic-ui-react';\n//import 'semantic-ui-css/semantic.min.css\n\n//const AccordionContent = (content) => (\n  //<div className=\"indent\">\n    //{content}\n  //</div>\n//)\n\n//const SubAccordion1Panels = [\n  //{\n    //title: 'Sub Accordion 11',\n    //content: { content: AccordionContent('11 Content'), key: '11-content'} ,\n    //key: 'sub-accordion-11'\n  //}, {\n    //title: 'Sub Accordion 12',\n    //content: { content: AccordionContent('12 Contents'), key: '12-content' },\n    //key: 'sub-accordion-12'\n  //}, {\n    //title: 'Sub Accordion 13',\n    //content: { content: AccordionContent('13 Contents'), key: '13-content' },\n    //key: 'sub-accordion-13'\n  //},\n//]\n\n//const SubAccordion1Content = (\n  //<div className=\"indent\">\n    //<Accordion.Accordion\n      //style={{marginLeft: \"20px\"}}\n      //className=\"no-padding\"\n      //panels={SubAccordion1Panels}\n    ///>\n  //</div>\n//)\n\n//const SubAccordionPanels = [\n  //{\n    //title: 'Sub Accordion 1',\n    //content: { content: SubAccordion1Content, key: 'sa1-content' },\n    //key: 'sub-accordion-1'\n  //}, {\n    //title: 'Sub Accordion 2',\n    //content: { content: AccordionContent('SA2 Content'), key: 'sa2-content' },\n    //key: 'sub-accordion-2'\n  //}, {\n    //title: 'Sub Accordion 3',\n    //content: { content: AccordionContent('SA3 Content'), key: 'sa3-content' },\n    //key: 'sub-accordion-3'\n  //}\n//]\n\n//const SubAccordions = (\n  //<div className=\"indent\">\n    //<Accordion.Accordion\n      //className=\"no-padding\"\n      //panels={SubAccordionPanels}\n    ///>\n  //</div>\n//)\n\n//const AccordionPanels = [\n  //{ title: 'Accordion', content: { content: SubAccordions, key: 'sub-accordions' } },\n//]\n\n    \n","import React, {useState, useEffect} from 'react';\nimport {Button, ListGroup, Form, Row, Col, Container} from 'react-bootstrap'\nimport { Link , useHistory } from 'react-router-dom'\nimport useRestEndpoint from './useRestEndpoint'\nimport Autosuggest from 'react-autosuggest'\nimport useImportFunctions from './useImportFunctions'\nimport useDB from './useDB'\n    \nexport default function SkillSearchPage(props) {\n    const [searchFilter, setSearchFilter] = useState('')\n    const [suggestions, setSuggestions] = useState([])\n    const [searchResults, setSearchResults] = useState([])\n    const token = props.user && props.user.token && props.user.token.access_token ? props.user.token.access_token : ''\n    const axiosClient = props.getAxiosClient(token)\n    const {saveItem, deleteItem, getItem, searchItems} = useRestEndpoint(axiosClient,\"http://localhost:5000/public/api/v1/\")\n    var importFunctions = useImportFunctions()\n    var history = useHistory() \n\n    const sourcesDB = useDB('nlutool','sources');\n\n    useEffect((props) => {\n        loadSkills()\n        //doSearch()\n    },[])\n    \n    function loadSkills() {\n        const axiosClient = props.getAxiosClient()\n        axiosClient.get('https://raw.githubusercontent.com/syntithenai/opennludata_data/master/public/skills/index.js').then(function(res) {\n          console.log(res)  \n        }).catch(function(err) {\n            console.log(err)  \n        })\n        //https://raw.githubusercontent.com/syntithenai/opennludata_data/master/public/skills/index.js\n    }\n    \n    function importItem(item) {\n        var item = {id:null, data:JSON.stringify(item), title:item.title+'.skill.json', fileType :\"opennlu.skill    \"}\n        sourcesDB.saveItem(item,0)\n        history.push(\"/sources\")\n    }\n\n    function doSearch(queryIn='') {\n        const text = queryIn && queryIn.trim && queryIn.trim() ? queryIn : (searchFilter && searchFilter.trim() ? searchFilter : '')\n        var query = {}\n        var sort = {title: 1}\n        if (text && text.trim()) {\n            //query.title=searchFilter\n            query[\"$text\"]={\"$search\":text.trim()}\n        } else {\n            sort = {updated_date : -1}\n        }\n        searchItems('Skill',query, 40, 0, sort).then(function(res) {\n              console.log('doSerach')\n              console.log(res.data)\n              setSearchResults(res.data)\n        })\n    }\n      \n\n    // Use your imagination to render suggestions.\n    const renderSuggestion = suggestion => (\n        <div>\n        {suggestion.tag}\n        </div>\n    );\n    // Autosuggest will call this function every time you need to update suggestions.\n    // You already implemented this logic above, so just use it.\n    function onSuggestionsFetchRequested ({ value }) {\n        searchItems('SkillTags',{tag:{\"$regex\":value}},20,0,'',{tag:1}).then(function(res) {\n            setSuggestions(res.data && res.data.length > 0 ? res.data : [])\n        })\n    };\n\n    // Autosuggest will call this function every time you need to clear suggestions.\n    function  onSuggestionsClearRequested()  {\n       setSuggestions([]);\n    };\n\n    function setSearchFilterWrap(text) {\n        setSearchFilter(text)\n        //loadSuggestions(text)\n    } \n    \n   \n    return <div style={{marginLeft:'1em'}}>\n         <Form onSubmit={function(e) {e.preventDefault(); doSearch()}} >\n            <Row><Col>\n                <Autosuggest\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={onSuggestionsClearRequested}\n                    getSuggestionValue={function (suggestion)  { return suggestion.tag}}\n                    renderSuggestion={renderSuggestion}\n                    onSuggestionSelected={function(event, { suggestion, suggestionValue, suggestionIndex, sectionIndex, method }) {\n                        setSearchFilter(suggestionValue)\n                        doSearch(suggestionValue)\n                    }}\n                    inputProps={{\n                        style:{width:'100%'},\n                      value: searchFilter,\n                      onChange: function(e) {setSearchFilter(e.target.value)}\n                    }}\n                />\n                </Col><Col>\n                <Button variant=\"success\" onClick={doSearch}>Search</Button>\n            \n            </Col></Row>\n        </Form> \n        \n        {!searchFilter.trim() && <h3>Recent Skills</h3>}\n        {searchFilter.trim() && <h3>Search Results</h3>}\n        <Container fluid ><Row>\n        {searchResults.map(function(result, key) {\n            const bStyle = {marginLeft:'0.5em'}\n             return <Col sm={12} md={6} lg={4} xl={4} key={key} style={{border: '2px solid black', padding: '0.5em', margin: '0.5em'}}>\n                <Button variant=\"success\" style={{float:'right'}} onClick={function(e) {importItem(result)}}>Grab</Button>\n                <h4 style={{marginBottom:'0.3em'}} >{result.title} {result.userAvatar && <span>by {result.userAvatar}</span>} </h4>\n                \n                {result.tags && result.tags.length > 0 && <Button style={bStyle} variant=\"outline-warning\" >{result.tags.join(\", \")}</Button>}\n                <div>\n                    {result.intents && Object.keys(result.intents).length > 0 && <Button variant=\"outline-primary\"style={bStyle}>{Object.keys(result.intents).length} intents </Button>}\n                    {result.entities && Object.keys(result.entities).length > 0 && <Button variant=\"outline-primary\"style={bStyle}>{Object.keys(result.entities).length} entities</Button>}\n                    {result.regexps && result.regexps.length > 0 && <Button variant=\"outline-primary\"style={bStyle}>{result.regexps.length} regular expressions</Button>}\n                    {result.utterances && result.utterances.length > 0 && <Button variant=\"outline-primary\"style={bStyle}>{result.utterances.length} utterances</Button>}\n                    {<Button style={{marginLeft:'0.5em', marginTop:'1em'}} variant=\"outline-secondary\" >Updated: {new Date(result.updated_date).toUTCString()}</Button>}\n                </div>\n             </Col>\n        })}\n        </Row></Container>       \n    </div>\n    \n    \n}\n\n","import React from 'react';\nimport {useState} from 'react';\nimport {BrowserRouter as  Router, Route, Link  } from 'react-router-dom'\nimport LocalStorageUploadManager from './LocalStorageUploadManager'\nimport ListsManager from './ListsManager'\nimport UtterancesManager from './UtterancesManager'\nimport RegexpsManager from './RegexpsManager'\nimport NluExampleEditor from './NluExampleEditor'\nimport NavbarComponent from './components/NavbarComponent'\n//import TestComponent from './components/TestComponent'\nimport {HelpText, HelpTextImport, HelpTextExport, HelpTextAbout} from './components/Components'\nimport NluImportEditor from './NluImportEditor'\nimport NluSkillsEditor from './NluSkillsEditor'\n//import SearchPage from './SearchPage'\nimport ImportReviewPage from './ImportReviewPage'\nimport SkillSearchPage from './SkillSearchPage'\nimport {Button} from 'react-bootstrap'\nimport localforage from 'localforage'\nimport {LoginSystem,LoginSystemContext}  from 'react-express-oauth-login-system-components'\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction SiteMenu(props) {\n    var astyle={paddingLeft:'0.3em'}\n    return <div style={{marginLeft:'0.5em'}}>\n        <h1>Menu</h1>\n        <Link style={astyle} to=\"/sources\" ><Button>Sources</Button></Link>\n        <Link style={astyle} to=\"/import\" ><Button>Import</Button></Link>\n        <Link style={astyle} to=\"/examples\" ><Button>Organise</Button></Link>\n        <Link style={astyle} to=\"/skills\" ><Button>Skills </Button></Link>\n        <Link style={astyle} to=\"/search\" ><Button>Search Community </Button></Link>\n    </div>\n}\n\nfunction App() {\n   \n    const [waiting, setWaiting] = useState(false)\n    const [pageMessage, setPageMessageInner] = useState('')  \n    var messageTimeout = null\n    \n    \n    function setPageMessage(message,timeout=0) {\n        setPageMessageInner(message)\n        if (timeout > 0) {\n            if (messageTimeout) clearTimeout(messageTimeout) \n            messageTimeout = setTimeout(function() {setPageMessage('')},timeout)\n        }\n    }\n    \n    //const [importFrom, setImportFrom] = useState(null)\n    // example summaries\n    const [intentLookups, setIntentLookups] = useState([])\n    const [entityLookups, setEntityLookups] = useState([])\n    const [tagLookups, setTagLookups] = useState([])\n    const [skillLookups, setSkillLookups] = useState([])\n    const [listsLookups, setListsLookups]= useState([])\n    const [selectedTally, setSelectedTally] = useState(0)\n    const [utterancesLookups, setUtterancesLookups] = useState([])\n    const [utteranceListsLookups, setUtteranceListsLookups] = useState([])\n    const [utteranceTagsLookups, setUtteranceTagsLookups] = useState([])\n    const [regexpsLookups, setRegexpsLookups] = useState([])\n    const [regexpsCompleteLookups, setRegexpsCompleteLookups] = useState([])\n    const [regexpListsLookups, setRegexpListsLookups] = useState([])\n    const [regexpTagsLookups, setRegexpTagsLookups] = useState([])\n    \n    // list summaries\n    const [listTally, setListTally] = useState(0)\n    const [selectedListTally, setSelectedListTally] = useState(0)\n    const [listTallyByList, setListTallyByList] = useState({})\n    const [selectedListTallyByList, setSelectedListTallyByList] = useState({})\n    \n    const [regexTally, setRegexTally] = useState(0)\n    const [selectedRegexTally, setSelectedRegexTally] = useState(0)\n    const [utteranceTally, setUtteranceTally] = useState(0)\n    const [selectedUtteranceTally, setSelectedUtteranceTally] = useState(0)\n    \n    \n    // search bar\n   // const [skillFilterValue, setSkillFilterValue] = useState('')\n  \n       \n    function startWaiting() {\n        setWaiting(true)\n    }\n    \n    function stopWaiting() {\n        setTimeout(function() {\n            setWaiting(false)\n        },300)\n    }\n\n    \n    function updateRegexps() {\n        //console.log('UPDATE regexps')\n        var utteranceStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"regexps\",\n         });\n         utteranceStorage.getItem('alldata', function (err,utterances) {\n                 var tally = 0;\n                 var selectedTally = 0;\n                var utteranceLists={}\n                var utteranceIndex={}\n                var utteranceCompleteIndex={}\n                var utteranceTags={}\n                //console.log(['UPDATE UTTERANCES',err,utterances])\n                if (Array.isArray(utterances)) {\n                    utterances.map(function(utterance,i) {\n                        //console.log(['UPDATE regexp',utterance])\n                         if (utterance.isSelected) {\n                             selectedTally += 1\n                        }\n                        tally += 1;\n                         if (utterance.value) {\n                             utteranceIndex[utterance.value]=true\n                             utteranceCompleteIndex[utterance.value]={value: utterance.value, synonym: utterance.synonym}\n                         }\n                         if (utterance.synonym) {\n                             utterance.synonym.split(\"\\n\").map(function(synonym) {\n                                 utteranceLists[synonym] = true\n                                 return null\n                             })\n                         } \n                         if (utterance.tags && utterance.tags.length > 0) {\n                               utterance.tags.map(function(tag) {\n                                  utteranceTags[tag] = true  \n                                  return null\n                               })\n                         }\n                         return null\n                    })\n                    setRegexTally(tally)\n                    setSelectedRegexTally(selectedTally)\n                    setRegexpsLookups(Object.keys(utteranceIndex))\n                    setRegexpsCompleteLookups(Object.values(utteranceCompleteIndex))\n                    setRegexpTagsLookups(Object.keys(utteranceTags))\n                    setRegexpListsLookups(Object.keys(utteranceLists))\n                }\n                //console.log(['UPDATE UTTERANCES',utteranceIndex,utteranceLists])\n                    \n              });\n            //});\n  \n    }\n    \n    function updateUtterances() {\n        console.log('UPDATE UTTERANCES')\n        var utteranceStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"utterances\",\n         });\n         var tally = 0;\n         var selectedTally = 0;\n         utteranceStorage.getItem('alldata', function (err,utterances) {\n                var utteranceLists={}\n                var utteranceIndex={}\n                var utteranceTags={}\n                //console.log(['UPDATE UTTERANCES',err,utterances])\n                if (Array.isArray(utterances)) {\n                    utterances.map(function(utterance,i) {\n                        if (utterance.isSelected) {\n                             selectedTally += 1\n                        }\n                        tally += 1;\n                        //console.log(['UPDATE UTTERANCE',utterance])\n                         if (utterance.value) {\n                             utteranceIndex[utterance.value]=true\n                         }\n                         if (utterance.synonym) {\n                             utterance.synonym.split(\"\\n\").map(function(synonym) {\n                                 utteranceLists[synonym] = true\n                                 return null\n                             })\n                         } \n                         if (utterance.tags && utterance.tags.length > 0) {\n                               utterance.tags.map(function(tag) {\n                                  utteranceTags[tag] = true  \n                                  return null\n                               })\n                         }\n                         return null\n                    })\n                    setUtteranceTally(tally)\n                    setSelectedUtteranceTally(selectedTally)\n                    setUtterancesLookups(Object.keys(utteranceIndex))\n                    setUtteranceTagsLookups(Object.keys(utteranceTags))\n                    setUtteranceListsLookups(Object.keys(utteranceLists))\n                }\n                //console.log(['UPDATE UTTERANCES',utteranceIndex,utteranceLists])\n                    \n              });\n            //});\n  \n    }\n\n    function updateLists() {\n        var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         listsStorage.getItem('alldata', function (err,lists) {\n            console.log(['UPDATELISTS',lists])\n            if (lists) {\n                var newSelectedLists = {}\n                var newLists = {}\n                var tally = 0;\n                var selectedTally = 0;\n                lists.map(function(listItem) {\n                    if (listItem.isSelected) {\n                             selectedTally += 1\n                    }\n                    tally += 1;\n                    if (listItem && listItem.tags && listItem.tags.length > 0) {\n                        \n                        listItem.tags.map(function(tag) {\n                            if (tag && tag.trim().length > 0) {\n                                if (listItem.isSelected) {\n                                     newLists[tag] = (newLists[tag] > 0) ? newLists[tag] + 1 : 1\n                                     newSelectedLists[tag] = (newSelectedLists[tag] > 0) ? newSelectedLists[tag] + 1 : 1\n                                } else {\n                                    newLists[tag] = (newLists[tag] >0) ? newLists[tag] + 1 : 1\n                                }\n                            }\n                            return null\n                        })\n                    }\n                    return null\n                })\n                console.log(['UPDATELISTS',tally, selectedTally])\n                setListTally(tally)\n                setSelectedListTally(selectedTally)\n                setSelectedListTallyByList(newSelectedLists)\n                setListTallyByList(newLists)\n                setListsLookups(Object.keys(newLists))\n                //console.log('updated lists', newLists)\n            }\n        })\n    }\n\n    function updateLookups() {\n        var examplesStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"examples\",\n         });\n        examplesStorage.getItem('alldata', function (err,items) {\n            console.log(['UPDATELOOKUPS',items])\n            if (items && items.length > 0) {\n                var tags = {}\n                var intents = {}\n                var entities = {}\n                var skills = {}\n                var selected = 0;\n                items.map(function(item) {\n                    if (item) {\n                        //console.log(['UPDATELOOKUPS single',item])\n                        if (item.isSelected) selected = selected + 1;\n                       intents[item.intent] = true\n                       if (item.tags && item.tags.length > 0) {\n                           item.tags.map(function(tag) {\n                              tags[tag] = true  \n                              return null\n                           })\n                       }\n                       if (item.skills && item.skills.length > 0) {\n                           item.skills.map(function(skill) {\n                              skills[skill] = true  \n                              return null\n                           })\n                       }\n                       if (item.entities && item.entities.length > 0) {\n                           item.entities.map(function(entity) {\n                              if (entity.type) {\n                                  entities[entity.type] = true  \n                              }\n                              return null\n                           })\n                       }\n                    }\n                    return null\n                })\n                const distinct = function(value,index,self) {\n                    return self.indexOf(value) === index;\n                }\n                console.log(['UPDATELOOKUPS single res',intents,entities])\n                    \n                setIntentLookups([].concat(Object.keys(intents),intentLookups).filter(distinct))\n                setEntityLookups([].concat(Object.keys(entities),entityLookups).filter(distinct))\n                setTagLookups([].concat(Object.keys(tags),tagLookups).filter(distinct))\n                setSkillLookups([].concat(Object.keys(skills),skillLookups).filter(distinct))\n                setSelectedTally(selected)\n                console.log(entityLookups, intentLookups)\n            }\n        })\n    }\n    const lookups = {regexpTagsLookups:regexpTagsLookups,regexpsLookups:regexpsLookups,regexpListsLookups:regexpListsLookups,  regexpsCompleteLookups,  utteranceTagsLookups:utteranceTagsLookups,utterancesLookups:utterancesLookups,utteranceListsLookups:utteranceListsLookups,intentLookups,entityLookups,tagLookups,skillLookups, selectedTally, listsLookups, listTally, selectedListTally, listTallyByList, selectedListTallyByList, utteranceTally, selectedUtteranceTally,regexTally, selectedRegexTally}\n    const updateFunctions = {updateLookups, updateLists, updateUtterances, updateRegexps}\n                \n  return (\n    <div className=\"OpenNluDataApp\">\n         <LoginSystemContext  \n                authServer={process.env.REACT_APP_authServer} \n                authServerHostname={process.env.REACT_APP_authServerHostname} \n            >{(user,setUser,getAxiosClient,getMediaQueryString,getCsrfQueryString, isLoggedIn, loadUser, useRefreshToken, logout, saveUser) => {  \n                \n                return <div  ><Router>\n                      \n                \n                        <Route exact path='*' render={\n                            (props) => {\n                                return <NavbarComponent waiting={waiting} user={user} isLoggedIn={isLoggedIn} history={props.history} message={pageMessage} setPageMessage={setPageMessage}  getAxiosClient={getAxiosClient}  />\n                            }}\n                        />\n                        <div style={{marginLeft:'0.5em'}} >\n                            \n                            \n                            <Route exact path='/menu' component={SiteMenu} />\n                            <Route path='/sources' render={\n                                (props) => <LocalStorageUploadManager {...props} startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions} lookups={lookups}  />\n                            }/>\n                            \n                            \n                            <Route path='/importreview' render={\n                                (props) => <ImportReviewPage {...props} startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions} lookups={lookups}  />\n                            }/>\n                            \n                            \n                            \n                            <Route exact path='/import' render={\n                                (props) => <NluImportEditor {...props}        lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />}\n                                      \n                            />\n                            \n                            <Route exact path='/import/skill/:skillId' render={\n                                (props) => <NluImportEditor {...props}        lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />}\n                                      \n                            />\n                            \n                            <Route exact path='/import/intent/:intentId' render={\n                                (props) => <NluImportEditor {...props}        lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions} setPageMessage={setPageMessage}    />}\n                                      \n                            />\n                            \n                            <Route path='/import/skill/:skillId/intent/:intentId' render={\n                                (props) => <NluImportEditor {...props}        lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions} setPageMessage={setPageMessage}    />}\n                                      \n                            />\n                            \n                            \n                            <Route exact  path='/examples' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                            />\n                            \n                            <Route exact path='/examples/skill/:skillId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                            />\n                            \n                            <Route path='/examples/intent/:intentId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                            />\n                            \n                            <Route exact path='/examples/skill/:skillId/intent/:intentId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                            />\n                            \n                            <Route exact path='/skills/:skillId' render={(props) => <NluSkillsEditor {...props}    user={user}   lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}   getAxiosClient={getAxiosClient}  />} \n                            />\n                            \n                            <Route exact path='/skills/skill/:skillId' render={(props) => <NluSkillsEditor {...props}    user={user}   lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}   getAxiosClient={getAxiosClient}  />} \n                            />\n                            \n                            <Route exact path='/skills/:skillId/publish' render={(props) => <NluSkillsEditor {...props}   user={user}    lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}  publish={true}   getAxiosClient={getAxiosClient} />} \n                            />\n                            \n                            <Route exact path='/skills/skill/:skillId/publish' render={(props) => <NluSkillsEditor {...props}    user={user}   lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}   publish={true}  getAxiosClient={getAxiosClient} />} \n                            />\n\n                             <Route exact path='/skills' render={(props) => <NluSkillsEditor {...props}  user={user}      lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage} getAxiosClient={getAxiosClient}   />} \n                            />\n                            \n                           \n                            <Route exact path='/lists' render={\n                                (props) => <ListsManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />}\n                                      \n                            />\n                            <Route exact path='/lists/:listId' render={\n                                (props) => <ListsManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions}  setPageMessage={setPageMessage}   />}\n                                      \n                            />\n                            \n                            \n                            <Route exact path='/utterances' render={\n                                (props) => <UtterancesManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions}   />}\n                                      \n                            />\n                            <Route exact path='/utterances/:listId' render={\n                                (props) => <UtterancesManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions}  />}\n                                      \n                            />\n                            \n                            \n                            <Route exact path='/regexps' render={\n                                (props) => <RegexpsManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions}   />}\n                                      \n                            />\n                            <Route exact path='/regexps/:listId' render={\n                                (props) => <RegexpsManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions}  />}\n                            />\n                            <Route exact path='/help' component={HelpText}     />\n                            <Route exact path='/helpimport' component={HelpTextImport}     />\n                            <Route exact path='/helpexport' component={HelpTextExport}     />\n                            <Route exact path='/helpabout' component={HelpTextAbout}     />\n                            \n                            <Route exact path='/search' render={(props) => <SkillSearchPage user={user} getAxiosClient={getAxiosClient}   />} />\n                           \n                            <Route exact path='/' component={HelpText} />\n\n                            <Route path='/login'  render={\n                            (props) => <div style={{width:'90%', marginLeft:'1em', align:'center', marginTop:'1em'}}  ><LoginSystem  \n                               match={props.match}\n                               location={props.location}\n                               history={props.history}\n                               authServer={process.env.REACT_APP_authServer} \n                                // also need external link to auth server (combind authServerHostname + authServer) for google, github, .. login buttons\n                                authServerHostname={process.env.REACT_APP_authServerHostname} \n                                // update for login api location, use package.json proxy config to map other host/port to local link\n                               loginButtons={process.env.REACT_APP_loginButtons?process.env.REACT_APP_loginButtons.split(\",\"):[]}\n                                // optional callbacks\n                                logoutRedirect={'/'}\n                               user={user} setUser={setUser} isLoggedIn={isLoggedIn} logout={logout} saveUser={saveUser} startWaiting={startWaiting} stopWaiting={stopWaiting} \n                             /></div>}\n                             />\n                        </div>\n                </Router>\n              </div>\n                  }}\n\n        </LoginSystemContext>\n   \n                 <br/>\n                <br/>\n                <br/>\n    </div>\n  );\n}\n                \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/thumb-up.f18de183.svg\";","module.exports = __webpack_public_path__ + \"static/media/helpoverview.646ef0b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/singingman.5d08cb4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/waiting.d362cb3f.gif\";","module.exports = __webpack_public_path__ + \"static/media/thumb-down.73b0ce24.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-thick-left.f29ee705.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-thick-right.9ba7683e.svg\";"],"sourceRoot":""}
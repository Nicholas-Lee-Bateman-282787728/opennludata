{"version":3,"sources":["utils.js","useDB.js","parsers.js","components/TagAllDropDown.js","components/IntentAllDropDown.js","components/SkillAllDropDown.js","components/ImportListsDropDown.js","components/Components.js","components/JSONTextEditor.js","LocalStorageUploadManager.js","components/ListAllDropDown.js","components/SearchInput.js","components/ListsManagerSearchBar.js","useListItemRow.js","components/SuggestionComponent.js","ListsManagerRow.js","useDBSingleKey.js","useListItemEditor.js","ListsManager.js","components/UtterancesManagerSearchBar.js","UtterancesManagerRow.js","UtterancesManager.js","useNluRow.js","NluExampleRow.js","components/EditorSearchBar.js","useNluEditor.js","NluExampleEditor.js","components/NavbarComponent.js","NluImportRow.js","NluImportEditor.js","export/createZip.js","export/exportJOVO.js","export/exportMycroft.js","export/RASATemplates.js","export/exportRASAMD.js","export/exportRASAJSON.js","export/index.js","export/exportJSON.js","components/DropDownComponent.js","NluSkillsEditor.js","SearchPage.js","App.js","serviceWorker.js","index.js","images/check.svg","images/thumb-down.svg","images/thumb-up.svg","images/helpoverview.svg","images/singingman.svg","images/waiting.gif","images/arrow-thick-left.svg","images/arrow-thick-right.svg"],"names":["RASA","slotTypes","autofillOptions","GoogleAssistant","Alexa","toSnakeCase","str","toLowerCase","replace","snakeToCamelCase","group","toUpperCase","camelToSnakeCase","letter","generateObjectId","Date","getTime","toString","Math","random","parentUrl","url","split","slice","join","splitSentences","text","final","splits","splitText","trim","length","push","uniquifyArray","a","Array","isArray","index","map","value","Object","keys","uniquifyArrayOfObjects","field","emptyIndex","concat","values","replaceEntities","example","entities","sort","b","start","offset","newExample","entity","type","end","diff","replaceEntitiesWithValues","replacement","reducer","state","action","parseInt","item","items","Error","useDB","database","databaseTable","useReducer","dispatch","localforageStorage","localforage","createInstance","name","storeName","getId","id","findKeyBy","k","loadAll","then","ipromises","key","Promise","iresolve","ireject","getItem","res","all","saveItem","console","log","isNewItem","setItem","undefined","deleteItem","getIdForIndex","removeItem","setItems","clear","findBy","filter","matchFunction","filtered","i","cleanListItem","extractSynonym","parts","sortListSplits","sortExampleSplits","TagAllDropDown","props","Dropdown","as","ButtonGroup","Toggle","size","Button","Menu","style","display","onSubmit","e","preventDefault","tagAll","target","InputGroup","className","onChange","setTagAllValue","tagAllValue","variant","onClick","lookups","tagLookups","skillKey","Item","untagAll","marginLeft","IntentAllDropDown","intentAll","setIntentAllValue","intentAllValue","intentLookups","intentKey","SkillAllDropDown","skillSetAll","setSkillAllValue","skillAllValue","skillLookups","unskillAll","ImportListsDropDown","useState","importTo","importToValue","setImportToValue","float","importListTo","listsLookups","MatchesTallies","fontWeight","filteredItems","HelpMenu","marginRight","to","HelpText","src","helpSVG","width","height","alt","href","HelpTextImport","HelpTextAbout","HelpTextExport","NewFileButtons","match","FileSelector","FilesList","list","ListGroup","window","confirm","title","importExamples","listName","importLists","multiple","handleFileSelection","WithSelectedDropDowns","selectedTally","JSONTextEditor","setTitle","data","setText","isJson","setIsJson","json","setJson","editorMode","setEditorMode","editorOptions","setEditorOptions","params","itemId","useEffect","jsonParsed","JSON","parse","parentLink","linkParts","editorModeOptions","j","minHeight","theme","ace","history","mode","allowedModes","stringify","IndexPage","LocalStorageUploadManager","localforageStorageImport","localforageStorageLists","ev","results","forEach","result","file","parsed","generateSplits","newSplits","rasa_nlu_data","common_examples","cleanEntities","el","intent","tags","invocation","intents","l","phrases","phrase","inputs","inputKey","input","markerStart","indexOf","entityi","parseImportText","newTextSplits","textInner","synonym","lists","listKey","uniqueKeys","listItem","q","parseLists","allLists","allListsIndex","listItemIndex","newListItem","setPageMessage","setTimeout","path","render","exact","iprops","ListAllDropDown","SearchInput","searchFilter","setSearchFilter","placeholder","ListsManagerSearchBar","topTagOptions","setTopTagOptions","topTagOptionss","setListFilterValue","unshift","selectedListTally","resetSelection","checkImage","selectAll","listFilterValue","createEmptyItem","useListItemRow","splitNumber","selectionState","setSelectionState","setTags","reactTags","React","createRef","tag","onTagDelete","newTags","splice","newItem","newTag","onTagAddition","updateExampleContent","content","updateExampleSynonym","selectItem","isSelected","deselectItem","SuggestionComponent","query","ListsManagerRow","position","textAlign","borderTop","borderRadius","marginTop","placeholderText","minQueryLength","maxSuggestionsLength","autoresize","allowNew","ref","suggestionComponent","suggestions","onDelete","onAddition","singleKey","useListItemEditor","databaseKey","updateLists","useDBSingleKey","setFilteredItems","filteredItemsKeys","setFilteredItemsKeys","listRef","useParams","listId","useHistory","matchText","matchPicklist","itemKeys","location","pathname","val","tagValue","newItems","finalTags","saveItemWrap","current","resetAfterIndex","getItemSize","baseSize","innerWidth","deleteAll","RenderRow","saveNlu","ListsManager","updateFunctions","itemData","itemKey","itemCount","itemSize","renderEditor","UtterancesManagerSearchBar","utteranceTagsLookups","UtterancesManagerRow","UtterancesManager","updateUtterances","useNluRow","newEntity","setNewEntity","intentTitle","setIntentTitle","skills","setSkills","reactSkills","createSelection","createTextRange","selRange","collapse","moveStart","moveEnd","select","setSelectionRange","selectionStart","selectionEnd","focus","entityTypeChanged","entityNumber","newEntities","textSelection","startTextSelection","endTextSelection","skill","onSkillDelete","newSkills","newSkill","onSkillAddition","diffPos","findFirstDiffPos","insertionLength","entityIndex","deletionLength","entityClicked","entityKey","entityType","document","getElementById","intentChanged","entityDelete","setSkill","NluExampleRow","textInput","setTextInput","intentOptions","entitiesDropdowns","entityOptions","entityLookups","textSelectionFrom","onFocus","onSelect","getSelection","EditorSearchBar","topskillOptions","setSkillFilterValue","setIntentFilterValue","intentFilterValue","skillFilterValue","useNluEditor","updateLookups","skillId","intentId","intentFilter","skillFilter","searchFilterBool","newIntent","intentValue","skillValue","heightPerLine","tagsPerLine","entitiesPerLine","skillsPerLine","tallyExtras","round","saveAll","lsItems","exampleItems","saveLSItems","saveLSItem","NluExampleEditor","NavbarComponent","ReactGA","pageview","astyle","paddingLeft","currentPage","pages","show","links","link","page","helpButton","helpComponent","Navbar","bg","message","top","left","border","background","padding","minWidth","fireImage","Text","right","waitingImage","zIndex","waiting","initialize","NluImportRow","thumbupImage","thumbdownImage","NluImportEditor","paddingRight","arrowthickleftImage","arrowthickrightImage","createZip","zipStructure","zip","JSZip","recurseZipStructure","files","options","base64","folders","folder","resolve","reject","generateAsync","exportJOVO","jovo","entityTypes","examples","entityTypeName","googleType","alexaType","dialogflow","alexa","synonyms","synonymsIndex","entityExtrasList","inputTypes","exportMycroft","listsStorage","modelFiles","combinedEntities","RASATemplates","config","credentials","endpoint","actions","single_action","actionName","domain","stories","session","generateFolderTree","nluContent","fileLookups","actionsContent","configContent","domainContent","credentialsContent","endpointsContent","actionFiles","storyData","folderTree","storyContent","exportFormats","exportFunction","utterancesStorage","usedLists","skillLists","utterances","utterancesLists","allUtterances","thisUtterance","utteranceLookups","exportJSON","blob","Blob","entityLists","entityValue","entityList","synonymsOut","nluOut","intentItem","rasaConfig","rasaCredentials","rasaEndpoint","domainActions","rasaActions","string","snake","substring","domainEntities","domainIntents","domainSlots","slots","domainSlotsMeta","slot","slotType","domainContentParts","rasaSession","line","utteranceKey","utterance","rasaStories","exportRASAMD","exportRASAJSON","DropDownComponent","filterValue","setFilterValue","optionKey","NluSkillsEditor","currentIntent","setCurrentIntent","setInvocation","entitiesForSkill","setEntitiesForSkill","listsForEntity","setListsForEntity","currentSkill","setCurrentSkill","listsManager","collatedItems","setCollatedItems","collatedTags","setCollatedTags","collatedCounts","setCollatedCounts","newSlotValue","setNewSlotValue","skillsStorage","loadSkill","err","forceReload","rasaExtraSlots","newSlot","addUtterance","utteranceListsLookups","utterancesLookups","utteranceStorage","entityName","updatedSkill","newCollatedItems","newCollatedCounts","newCollatedTags","exportFormat","now","zipBody","saveAs","skillsList","utteranceTags","listItemKey","utteranceListTags","marginBottom","collatedIntent","useCurrentIntent","completionVariant","Badge","collatedEntity","listTags","listIndex","removeListFromSkillEntity","addListToSkillEntity","setAlexaEntityType","setGoogleAssistantEntityType","removeUtterance","removeUtteranceList","addUtteranceList","Tabs","defaultActiveKey","Tab","eventKey","slotAutofill","setRASASlotAutofill","setRASASlotType","deleteSlot","fontStyle","setRASAActions","setRASAConfig","setRASAStories","setRASACredentials","setRASAEndpoint","setRASASession","SearchPage","SiteMenu","App","setWaiting","pageMessage","setIntentLookups","setEntityLookups","setTagLookups","setSkillLookups","setListsLookups","setSelectedTally","setUtterancesLookups","setUtteranceListsLookups","setUtteranceTagsLookups","listTally","setListTally","setSelectedListTally","listTallyByList","setListTallyByList","selectedListTallyByList","setSelectedListTallyByList","startWaiting","stopWaiting","selected","distinct","self","newSelectedLists","newLists","tally","utteranceLists","utteranceIndex","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"2MAGMA,EAAO,CACTC,UAAY,CACR,aAAgB,GAChB,KAAQ,GACR,KAAQ,GACR,KAAQ,GACR,MAAS,CAAC,UAAY,MAAO,UAAY,OACzC,YAAe,CAAC,OAAS,SAE7BC,gBAAiB,CAAC,MAAM,OAItBC,EACW,CAAC,iBAAiB,YAAY,mBAAmB,YAAY,mBAAmB,cAAc,gBAAgB,eAAe,sBAAsB,uBAAuB,qBAAqB,iBAAiB,qBAAqB,mBAAmB,kBAAkB,mBAAmB,mBAAmB,wBAAwB,kBAAkB,mBAAmB,gBAAgB,WAAW,qBAAqB,sBAAsB,wBAAwB,uBAAuB,wBAAwB,wBAAwB,6BAA6B,eAAe,gBAAgB,mBAAmB,mBAAmB,wBAAwB,gBAAgB,iBAAiB,wBAAwB,eAAe,gBAAgB,aAAa,oBAAoB,cAAc,oBAAoB,mBAAmB,aAAa,gBAAgB,WAAW,YAI72BC,EACW,CAAC,cAAc,kBAAkB,2BAA2B,gBAAgB,iBAAiB,qBAAqB,cAAc,qBAAqB,eAAe,iBAAiB,iBAAiB,iBAAiB,gBAAgB,gBAAgB,gBAAgB,cAAc,cAAc,eAAe,qBAAqB,iBAAiB,0BAA0B,mBAAmB,4BAA4B,mBAAmB,cAAc,eAAe,kBAAkB,eAAe,eAAe,oBAAoB,oBAAoB,kBAAkB,wBAAwB,gBAAgB,sBAAsB,gBAAgB,0BAA0B,cAAc,eAAe,oBAAoB,kBAAkB,mBAAmB,4BAI1wB,SAASC,EAAYC,GACjB,OAAOA,EAAIC,cAAcC,QAAQ,UAAW,KAAKA,QAAQ,KAAK,KAGlE,IAAMC,EAAmB,SAACH,GAAD,OAASA,EAAIE,QAClC,gBACA,SAACE,GAAD,OAAWA,EAAMC,cACAH,QAAQ,IAAK,IACbA,QAAQ,IAAK,QAG5BI,EAAmB,SAAAN,GAAG,OAAIA,EAAIE,QAAQ,UAAU,SAAAK,GAAM,iBAAQA,EAAON,mBAI3E,SAASO,IAEL,QADiB,IAAIC,MAAOC,UAAY,IAAO,GAAGC,SAAS,IACxC,mBAAmBT,QAAQ,QAAQ,WAClD,OAAwB,GAAhBU,KAAKC,SAAgB,GAAGF,SAAS,OAC1CV,cAGP,SAASa,EAAUC,GACf,OAAOA,EAAIC,MAAM,KAAKC,MAAM,GAAG,GAAGC,KAAK,KAS3C,SAASC,EAAeC,GAClB,IAAIC,EAAQ,GACZ,GAAID,EAAM,CAEP,IAAIE,EAASF,EAAKJ,MAAM,MAAME,KAAK,QAAQF,MAAM,KAAKE,KAAK,QAAQF,MAAM,QAE1E,IAAK,IAAIO,KAAaD,EACfC,EAAUC,OAAOC,OAAS,GAAGJ,EAAMK,KAAKJ,EAAOC,IAGzD,OAAOF,EAWR,SAASM,EAAcC,GAEnB,GAAIC,MAAMC,QAAQF,GAAI,CAClB,IAAIG,EAAQ,GAKZ,OAJAH,EAAEI,KAAI,SAASC,GAEX,OADAF,EAAME,IAAS,EACR,QAEJC,OAAOC,KAAKJ,GAEnB,MAAO,GAIf,SAASK,EAAuBR,EAAES,GAC7B,GAAIR,MAAMC,QAAQF,GAAI,CAClB,IAAIG,EAAQ,GACTO,EAAa,KAWjB,OAVAV,EAAEI,KAAI,SAASC,GAQX,OAPIA,IACIA,EAAMI,GACNN,EAAME,EAAMI,IAAUJ,EAEtBK,EAAaL,GAGd,QAEPK,EAAmB,CAACA,GAAYC,OAAOL,OAAOM,OAAOT,IAC7CG,OAAOM,OAAOT,GAE1B,MAAO,GAGf,SAASU,EAAgBC,EAAQC,GAG7BA,EAAWA,EAASC,MAAK,SAAShB,EAAEiB,GAClC,OAAIjB,EAAEkB,MAAQD,EAAEC,OAAe,EACnB,KAEd,IAAIC,EAAS,EACTC,EAAaN,EAOjB,OANAC,EAASX,KAAI,SAASiB,GAClBD,EAAaA,EAAW/B,MAAM,EAAEgC,EAAOH,MAAQC,GAAQ,IAAIE,EAAOC,KAAK,IAAIF,EAAW/B,MAAMgC,EAAOE,IAAMJ,GACzG,IAAIK,EAAQH,EAAOE,IAAMF,EAAOH,OAAUG,EAAOC,KAAKzB,OAAS,GAE/D,OADAsB,GAAUK,EACH,QAEJJ,EAGX,SAASK,EAA0BX,EAAQC,GAGvC,GAAID,GAAWb,MAAMC,QAAQa,GAAW,CAChCA,EAAWA,EAASC,MAAK,SAAShB,EAAEiB,GACtC,OAAIjB,EAAEkB,MAAQD,EAAEC,OAAe,EACnB,KAEd,IAAIC,EAAS,EACTC,EAAaN,EAQjB,OAPAC,EAASX,KAAI,SAASiB,GAClB,IAAIK,EAAc,IAAIL,EAAOhB,MAAM,KAAKgB,EAAOC,KAAK,IACpDF,EAAaA,EAAW/B,MAAM,EAAEgC,EAAOH,MAAQC,GAAQO,EAAYN,EAAW/B,MAAMgC,EAAOE,IAAMJ,GACjG,IAAIK,EAAQH,EAAOE,IAAMF,EAAOH,MAAUQ,EAAY7B,OAEtD,OADAsB,GAAUK,EACH,QAEJJ,EAEP,OAAON,E,oBCjJnB,SAASa,EAAQC,EAAOC,GACpB,IAAM1B,EAAQ2B,SAASD,EAAO1B,OACjC,OAAQ0B,EAAOP,MACZ,IAAK,SACH,OAAIO,EAAOE,KACH,GAAN,mBAAWH,GAAX,CAAkBC,EAAOE,OACbH,EAChB,IAAK,SACH,OAAIC,EAAOE,MAAyB,kBAAV5B,GAClByB,EAAM/B,OAAS,EACT,GAAN,mBACK+B,EAAMvC,MAAM,EAAGc,IADpB,CAEE0B,EAAOE,MAFT,YAGKH,EAAMvC,MAAMc,KAGTyB,EAClB,IAAK,SACH,MAAqB,kBAAVzB,EACD,GAAN,mBACKyB,EAAMvC,MAAM,EAAGc,IADpB,YAEKyB,EAAMvC,MAAMc,EAAQ,KAEdyB,EACjB,IAAK,SACF,OAAIC,EAAOE,MAAyB,kBAAV5B,EAChB,GAAN,mBACIyB,EAAMvC,MAAM,EAAGc,IADnB,CAEC0B,EAAOE,MAFR,YAGIH,EAAMvC,MAAMc,EAAQ,KAEbyB,EAClB,IAAK,aACD,MAA4B,kBAAjBC,EAAOG,MACPH,EAAOG,MACJJ,EAClB,QACE,MAAM,IAAIK,MAAM,+BAMP,SAASC,EAAMC,EAAUC,GAAgB,IAAD,EACxBC,qBAAWV,EAAQ,IADK,mBAC3CK,EAD2C,KACpCM,EADoC,KAE9CC,EAAqBC,IAAYC,eAAe,CAClDC,KAAMP,GAAsB,sBAC5BQ,UAAcP,GAAgC,SAGjD,SAASQ,EAAMb,GACX,GAAIA,GAAQA,EAAKc,GACb,OAAOd,EAAKc,GAEZ,MAAM,IAAIZ,MAAM,6BAkExB,SAASa,EAAUrC,EAAMJ,GACrB,IAAK,IAAI0C,KAAKf,EACV,GAAIA,EAAMe,IAAMf,EAAMe,GAAGtC,KAAWJ,EAAO,OAAO0C,EAEtD,OAAO,KAsCX,MAAO,CAACH,MAAMA,EAAOI,QAhGrB,WACIT,EAAmBhC,OAAO0C,MAAK,SAAS1C,GACpC,IAAI2C,EAAY,GAChB3C,EAAKH,KAAI,SAAS+C,GAMd,OALAD,EAAUpD,KAAK,IAAIsD,SAAQ,SAASC,EAASC,GAC1Cf,EAAmBgB,QAAQJ,GAAKF,MAAK,SAASO,GAC1CH,EAASG,UAGT,QAEXJ,QAAQK,IAAIP,GAAWD,MAAK,SAASO,GACjClB,EAAS,CAAEhB,KAAM,aAAcU,MAAOwB,WAoFZE,SA5EtC,SAAkB3B,EAAK5B,GACnB,GAAI4B,EAAM,CACN4B,QAAQC,IAAI,CAAC,SAAS7B,EAAK5B,IAG3B,IAAI0D,GAAY,EACX9B,EAAKc,KACNgB,GAAY,EACZ9B,EAAKc,GAAKjE,KAEd2D,EAAmBuB,QAAQ/B,EAAKc,GAAGd,GACd,IAAjBC,EAAMnC,QACN8D,QAAQC,IAAI,CAAC,cAAc7B,EAAK5B,IAChCmC,EAAS,CAAEhB,KAAM,SAASS,KAAMA,KAEjB,OAAV5B,QAA4B4D,IAAV5D,GAAyB0D,GAC5CF,QAAQC,IAAI,CAAC,gBAAgB7B,EAAK5B,IAClCmC,EAAS,CAAEhB,KAAM,SAASS,KAAMA,MAEhC4B,QAAQC,IAAI,CAAC,gBAAgB7B,EAAK5B,IAClCmC,EAAS,CAAEhB,KAAM,SAASS,KAAMA,EAAM5B,MAAOA,OAwDJ6D,WAxBzD,SAAoB7D,GAChB,IAAI0C,EAlFR,SAAuB1C,GACnB,GAAI6B,GAASA,EAAM7B,IAAU6B,EAAM7B,GAAO0C,GACtC,OAAOb,EAAM7B,GAAO0C,GAEpB,MAAM,IAAIZ,MAAM,qCA8EXgC,CAAc9D,GACnB0C,GACAN,EAAmB2B,WAAWrB,GAAII,MAAK,WACnCX,EAAS,CAAEhB,KAAM,SAAUnB,MAAOA,QAoBmC6B,MAAMA,EAAOmC,SAlC9F,SAAsBnC,GAClBO,EAAmB6B,QAAQnB,MAAK,WAC5BX,EAAS,CAAEhB,KAAM,aAAcU,MAAOA,IAClCA,GACAA,EAAM5B,KAAI,SAAS2B,GAAsD,OAA9CQ,EAAmBuB,QAAQlB,EAAMb,GAAMA,GAAc,YA8ByBe,UAAUA,EAAWuB,OAhD1I,SAAgB5D,EAAMJ,GAClB,IAAI8C,EAAML,EAAUrC,EAAMJ,GAC1B,OAAI8C,EAAYnB,EAAMmB,GACf,MA6C8ImB,OAdzJ,SAAgBC,GACZ,IAAIC,EAAW,GASf,OARID,GACAvC,EAAM5B,KAAI,SAAS2B,EAAK0C,GAItB,OAHIF,EAAcxC,IACdyC,EAAS1E,KAAKiC,GAEX,QAGNyC,ICjKf,SAASE,EAAclF,GACnB,OAAOA,EAAOA,EAAKlB,QAAQ,gBAAiB,IAAM,GAGtD,SAASqG,EAAenF,GACpB,GAAIA,EAAM,CACN,IAAIoF,EAAQpF,EAAKJ,MAAM,KACvB,OAAIwF,EAAM/E,OAAS,EACT,CAAC+E,EAAM,GAAGA,EAAMvF,MAAM,GAAGC,KAAK,MAE7B,CAAC,GAAGE,GAGf,MAAO,CAAC,GAAG,IAInB,SAASqF,EAAe7E,EAAEiB,GACtB,OAAIjB,EAAEK,MAAQY,EAAEZ,OAAe,EAAgB,EAGnD,SAASyE,EAAkB9E,EAAEiB,GACzB,OAAIjB,EAAEc,QAAUG,EAAEH,SAAiB,EAAe,E,iECgBvCiE,EArCQ,SAASC,GAC5B,OAAO,kBAACC,EAAA,EAAD,CAAWC,GAAIC,KAChB,kBAACF,EAAA,EAASG,OAAV,CAAiBhG,OAAK,EAAEiG,KAAK,KAAMxC,GAAG,yBACtC,kBAACyC,EAAA,EAAD,CAAUD,KAAK,MAAO,MAAtB,KACA,kBAACJ,EAAA,EAASM,KAAV,KACC,0BAAOC,MAAO,CAACC,QAAQ,UAAWC,SAAU,SAASC,GAAIA,EAAEC,iBAAmBZ,EAAMa,OAAOF,EAAEG,OAAOzF,SAC/F,kBAAC0F,EAAA,EAAD,KACE,2BAAOzE,KAAK,OAAO0E,UAAU,eAAeC,SAAU,SAASN,GAAIX,EAAMkB,eAAeP,EAAEG,OAAOzF,QACnGA,MAAO2E,EAAMmB,cACb,kBAACb,EAAA,EAAD,CAAQc,QAAQ,UAAUC,QAAS,SAASV,GAAIX,EAAMa,OAAOb,EAAMmB,eAAnE,SAIDnB,EAAMsB,QAAQC,YAAcvB,EAAMsB,QAAQC,WAAWvF,OAAOZ,KAAI,SAASoG,EAAS/B,GACnF,OAAO,kBAACQ,EAAA,EAASwB,KAAV,CAAetD,IAAKsB,EAAGpE,MAAOmG,GACnC,kBAAClB,EAAA,EAAD,CAAQc,QAAQ,UAAUC,QAAS,SAASV,GAAIX,EAAMkB,eAAeM,GAAWxB,EAAMa,OAAOW,KAA7F,OAA+GA,GAC/G,kBAAClB,EAAA,EAAD,CAAQc,QAAQ,SAASC,QAAS,SAASV,GAAKX,EAAM0B,SAASF,IAAYhB,MAAO,CAACmB,WAAY,UAA/F,iBCCDC,EAjBW,SAAS5B,GAC/B,OAAQ,kBAACC,EAAA,EAAD,CAAWC,GAAIC,KACb,kBAACF,EAAA,EAASG,OAAV,CAAiBhG,OAAK,EAAEiG,KAAK,KAAMxC,GAAG,yBACtC,kBAACyC,EAAA,EAAD,CAAUD,KAAK,MAAO,SAAtB,KACA,kBAACJ,EAAA,EAASM,KAAV,KACC,0BAAOC,MAAO,CAACC,QAAQ,UAAWC,SAAU,SAASC,GAAIA,EAAEC,iBAAmBZ,EAAM6B,UAAUlB,EAAEG,OAAOzF,SAClG,yBAAK2F,UAAU,cACb,2BAAO1E,KAAK,OAAO0E,UAAU,eAAeC,SAAU,SAASN,GAAIX,EAAM8B,kBAAkBnB,EAAEG,OAAOzF,QACtGA,MAAO2E,EAAM+B,mBAGd/B,EAAMsB,QAAQU,eAAiBhC,EAAMsB,QAAQU,cAAchG,OAAOZ,KAAI,SAAS6G,EAAUxC,GACtF,OAAO,kBAACQ,EAAA,EAASwB,KAAV,CAAetD,IAAKsB,EAAGpE,MAAO4G,EAAWZ,QAAS,SAASV,GAAIX,EAAM8B,kBAAkBG,GAAYjC,EAAM6B,UAAUI,KAAgBA,SC2BjJC,EAvCU,SAASlC,GAC9B,OAAO,kBAACC,EAAA,EAAD,CAAWC,GAAIC,KAChB,kBAACF,EAAA,EAASG,OAAV,CAAiBhG,OAAK,EAAEiG,KAAK,KAAMxC,GAAG,yBACtC,kBAACyC,EAAA,EAAD,CAAUD,KAAK,MAAO,QAAtB,KACA,kBAACJ,EAAA,EAASM,KAAV,KACC,0BAAOC,MAAO,CAACC,QAAQ,UAAWC,SAAU,SAASC,GAAIA,EAAEC,iBAAmBZ,EAAMmC,YAAYxB,EAAEG,OAAOzF,SACpG,kBAAC0F,EAAA,EAAD,KACE,2BAAOzE,KAAK,OAAO0E,UAAU,eAAeC,SAAU,SAASN,GAAIX,EAAMoC,iBAAiBzB,EAAEG,OAAOzF,QACrGA,MAAO2E,EAAMqC,gBACb,kBAAC/B,EAAA,EAAD,CAAQc,QAAQ,UAAUC,QAAS,SAASV,GAAIX,EAAMmC,YAAYnC,EAAMmB,eAAxE,SAIDnB,EAAMsB,QAAQgB,cAAgBtC,EAAMsB,QAAQgB,aAAatG,OAAOZ,KAAI,SAASoG,EAAS/B,GACvF,OAAO,kBAACQ,EAAA,EAASwB,KAAV,CAAetD,IAAKsB,EAAGpE,MAAOmG,GACnC,kBAAClB,EAAA,EAAD,CAAQc,QAAQ,UAAUC,QAAS,SAASV,GAAIX,EAAMoC,iBAAiBZ,GAAWxB,EAAMmC,YAAYX,KAApG,UAAyHA,GACzH,kBAAClB,EAAA,EAAD,CAAQc,QAAQ,SAASC,QAAS,SAASV,GAAKX,EAAMuC,WAAWf,IAAYhB,MAAO,CAACmB,WAAY,UAAjG,iBCMDa,EAtBa,SAASxC,GAAO,MAECyC,mBAASzC,EAAM0C,SAAW1C,EAAM0C,SAAW,IAF5C,mBAEjCC,EAFiC,KAEnBC,EAFmB,KAGxC,OAAO,kBAAC3C,EAAA,EAAD,CAAUO,MAAO,CAACqC,MAAM,QAASlB,WAAW,SAAUP,QAAQ,UAAWlB,GAAIC,KAC9E,kBAACF,EAAA,EAASG,OAAV,CAAiBhG,OAAK,EAAEiG,KAAK,KAAKe,QAAQ,UAAWvD,GAAG,yBACxD,kBAACyC,EAAA,EAAD,CAAQc,QAAQ,UAAWf,KAAK,MAAO,qBAAvC,KACA,kBAACJ,EAAA,EAASM,KAAV,KACC,0BAAOC,MAAO,CAACC,QAAQ,UAAWC,SAAU,SAASC,GAAIA,EAAEC,iBAAmBZ,EAAM8C,aAAaH,KAC5F,yBAAK3B,UAAU,cACf,kBAACD,EAAA,EAAD,KACI,2BAAOzE,KAAK,OAAO0E,UAAU,eAAeC,SAAU,SAASN,GAAIiC,EAAiBjC,EAAEG,OAAOzF,QACjGA,MAAOsH,IACH,kBAACrC,EAAA,EAAD,CAAQD,KAAK,KAAMgB,QAAS,SAASV,GAAIX,EAAM8C,aAAaH,KAA5D,aAIL3C,GAASA,EAAMsB,SAAWtB,EAAMsB,QAAQyB,cAAgB/C,EAAMsB,QAAQyB,aAAa/G,OAAOZ,KAAI,SAASoG,EAAS/B,GACjH,OAAO,kBAACQ,EAAA,EAASwB,KAAV,CAAetD,IAAKsB,EAAGpE,MAAOmG,EAAUH,QAAS,SAASV,GAAIiC,EAAiBpB,GAAWxB,EAAM8C,aAAatB,KAAeA,S,iBCPjJ,SAASwB,EAAehD,GACpB,OAAO,0BAAMQ,MAAO,CAACqC,MAAM,OAAQI,WAAW,SAAvC,OAAwDjD,EAAMkD,cAAcrI,OAA5E,IAAqFmF,EAAMhD,MAAMnC,OAAjG,aAGX,SAASsI,EAASnD,GACd,OAAO,6BACH,kBAAC,IAAD,CAAMQ,MAAO,CAAC4C,YAAY,OAAQC,GAAG,SAAS,kBAAC/C,EAAA,EAAD,cAC9C,kBAAC,IAAD,CAAME,MAAO,CAAC4C,YAAY,OAAQC,GAAG,eAAe,kBAAC/C,EAAA,EAAD,gBACpD,kBAAC,IAAD,CAAME,MAAO,CAAC4C,YAAY,OAAQC,GAAG,eAAe,kBAAC/C,EAAA,EAAD,gBACpD,kBAAC,IAAD,CAAME,MAAO,CAAC4C,YAAY,OAAQC,GAAG,cAAc,kBAAC/C,EAAA,EAAD,gBAI3D,SAASgD,EAAStD,GACd,OAAO,yBAAKQ,MAAO,CAACmB,WAAW,UAC3B,kBAACwB,EAAD,MACA,wCACA,yBAAKI,IAAKC,IAAShD,MAAO,CAACiD,MAAO,MAAOC,OAAO,QAAUC,IAAI,kBAC9D,uKACA,4NACA,6BACA,0KAA+I,uBAAG7C,OAAO,OAAO8C,KAAK,8CAAtB,WAC/I,gEAAqC,kHACtC,6BAEC,qCAAU,kBAAC,IAAD,CAAMP,GAAG,YAAY,kBAAC/C,EAAA,EAAD,iBAA/B,wCACA,sCAAW,kBAAC,IAAD,CAAM+C,GAAG,WAAW,kBAAC/C,EAAA,EAAD,gBAA/B,sEACA,2BAAG,kBAAC,IAAD,CAAM+C,GAAG,aAAa,kBAAC/C,EAAA,EAAD,kBAAzB,4DACA,2BAAG,kBAAC,IAAD,CAAM+C,GAAG,WAAW,kBAAC/C,EAAA,EAAD,iBAAvB,mDACA,2BAAG,kBAAC,IAAD,CAAM+C,GAAG,WAAW,kBAAC/C,EAAA,EAAD,kBAAvB,mEAIR,SAASuD,EAAe7D,GACpB,OAAO,yBAAKQ,MAAO,CAACmB,WAAW,UAC/B,kBAACwB,EAAD,MACQ,8CACA,mGACA,4BACI,4BAAI,8CAGJ,4BAAI,kDAMR,8BAIZ,SAASW,EAAc9D,GACnB,OAAO,yBAAKQ,MAAO,CAACmB,WAAW,UAC/B,kBAACwB,EAAD,MACQ,qCACZ,6BACY,6BAAK,6CAAL,oCAA4D,uBAAGrC,OAAO,OAAO8C,KAAK,qDAAtB,uBAC5D,6BACC,wMACD,6BACA,gHAEC,yEACA,4BACA,kEAAuC,uBAAGA,KAAK,sDAAsD9C,OAAO,QAArE,qBACvC,qDAA0B,uBAAG8C,KAAK,+CAA+C9C,OAAO,QAA9D,sBAE3B,8BAIZ,SAASiD,EAAe/D,GACpB,OAAO,yBAAKQ,MAAO,CAACmB,WAAW,UAC/B,kBAACwB,EAAD,MACQ,yCACA,+FACA,4BACI,kDACA,8EACA,kDACA,mDAQhB,SAASa,EAAehE,GACpB,OAAO,8BACH,kBAAC,IAAD,CAAMqD,GAAIrD,EAAMiE,MAAM9J,IAAM,QAASqG,MAAO,CAACqC,MAAM,UAAW,kBAACvC,EAAA,EAAD,oBAC9D,kBAAC4D,EAAiBlE,IAI1B,SAASmE,EAAUnE,GAAO,IAEbhD,EAASgD,EAAThD,MACR,GAAIA,EAAO,CACT,IAAMoH,EAAO9I,OAAOM,OAAOoB,GAAO5B,KAAI,SAAS2B,EAAK0C,GAC/C,OAAO,kBAAC4E,EAAA,EAAU5C,KAAX,CAAiBtD,IAAKsB,GACtB,kBAACa,EAAA,EAAD,CAAQE,MAAO,CAACqC,MAAM,QAASlB,WAAW,SAAUP,QAAQ,SAASC,QAAS,SAASV,GAAO2D,OAAOC,QAAQ,wBAAwBvH,EAAMyC,GAAG+E,QAAQxE,EAAMhB,WAAWS,KAAvK,UACA,kBAAC,IAAD,CAAM4D,GAAIrD,EAAMiE,MAAM9J,IAAI,SAAS4C,EAAKc,IAAK,kBAACyC,EAAA,EAAD,CAAQE,MAAO,CAACqC,MAAM,QAAQlB,WAAW,UAAzC,SAC7C,kBAACrB,EAAA,EAAD,CAAQE,MAAO,CAACqC,MAAM,QAASlB,WAAW,SAAUP,QAAQ,UAAUC,QAAS,SAASV,GAAKX,EAAMyE,eAAezH,EAAMyC,MAAxH,kBACA,kBAAC,EAAD,CAAqB6B,QAAStB,EAAMsB,QAASwB,aAAc,SAAS4B,GAAW1E,EAAM2E,YAAY3H,EAAMyC,GAAGiF,IAAYhC,SAAU1F,EAAMyC,GAAG+E,QACzI,0BAAMhE,MAAO,CAACiD,MAAM,QAAW1G,EAAKyH,WAG/C,OAAO,kBAACH,EAAA,EAAD,KAAYD,GAEnB,OAAO,KAoBf,SAASF,EAAalE,GAClB,OAAO,0BAAMU,SAAU,SAASC,GAAIA,EAAEC,kBAAmBJ,MAAO,CAACqC,MAAM,UAC/D,kBAAC,IAAD,CAAiB+B,UAAQ,EAAC1E,GAAG,SAASrC,GAAG,gBACxBoD,SAAUjB,EAAM6E,qBAC/B,kBAACvE,EAAA,EAAD,CAAQE,MAAO,CAAE4C,YAAY,UAA7B,kBAKd,SAAS0B,GAAsB9E,GAC3B,OAAO,kBAAC,WAAD,KACH,sCAAYA,EAAMsB,QAAQyD,cAA1B,iBAEA,kBAAC,EAAD,CAAkB5C,YAAanC,EAAMmC,YAAaE,cAAerC,EAAMqC,cAAgBD,iBAAkBpC,EAAMoC,iBAAmBd,QAAStB,EAAMsB,QAASI,SAAU1B,EAAM0B,SAAUa,WAAYvC,EAAMuC,aACtM,kBAAC,EAAD,CAAmBV,UAAW7B,EAAM6B,UAAWE,eAAgB/B,EAAM+B,eAAgBD,kBAAmB9B,EAAM8B,kBAAoBR,QAAStB,EAAMsB,QAASI,SAAU1B,EAAM0B,SAAUa,WAAYvC,EAAMuC,aACtM,kBAAC,EAAD,CAAgB1B,OAAQb,EAAMa,OAAQM,YAAanB,EAAMmB,YAAaD,eAAgBlB,EAAMkB,eAAiBI,QAAStB,EAAMsB,QAASI,SAAU1B,EAAM0B,SAAUa,WAAYvC,EAAMuC,c,qDC/I1K,SAASyC,GAAehF,GAAQ,IAAD,EACjByC,mBAASzC,EAAMjD,MAAQiD,EAAMjD,KAAKyH,MAAQxE,EAAMjD,KAAKyH,MAAQ,IAD5C,mBACnCA,EADmC,KAC7BS,EAD6B,OAEjBxC,mBAASzC,EAAMjD,MAAQiD,EAAMjD,KAAKmI,KAAOlF,EAAMjD,KAAKmI,KAAO,IAF1C,mBAEnC1K,EAFmC,KAE7B2K,EAF6B,OAGb1C,oBAAS,GAHI,mBAGnC2C,EAHmC,KAG3BC,EAH2B,OAIjB5C,mBAAS,IAJQ,mBAInC6C,EAJmC,KAI7BC,EAJ6B,OAKN9C,mBAAS,QALH,mBAKnC+C,EALmC,KAKvBC,EALuB,OAMAhD,mBAAS,CAAC,OAAO,SANjB,mBAMnCiD,EANmC,KAMpBC,EANoB,KAQpC9H,EAAKmC,EAAMiE,MAAM2B,OAAOC,OAAS7F,EAAMiE,MAAM2B,OAAOC,OAAUjM,IAE9DuB,GAAQ2C,EADOkC,EAAblC,WACgB,KAAKD,GAG7BiI,qBAAU,WACN,IACI,GAAiB,MAAZtL,EAAK,IAAwC,MAA1BA,EAAKA,EAAKK,OAAS,IAA4B,MAAZL,EAAK,IAAwC,MAA1BA,EAAKA,EAAKK,OAAS,GAAa,CAC1G,IAAIkL,EAAaC,KAAKC,MAAMzL,GAC5B+K,EAAQQ,GACRV,GAAU,GACVM,EAAiB,CAAC,OAAO,SACzBF,EAAc,aAEdJ,GAAU,GACVM,EAAiB,CAAC,SAClBF,EAAc,QAEpB,MAAO9E,GACL0E,GAAU,GACVM,EAAiB,CAAC,SAClBF,EAAc,WAGpB,CAACjL,IAEH,IAAI0L,EAAahM,EAAU8F,EAAMiE,MAAM9J,KACnCgM,EAAYnG,EAAMiE,MAAM9J,IAAIC,MAAM,KAEC,SAAnC+L,EAAUA,EAAUtL,OAAQ,KAC7BqL,EAAahM,EAAUA,EAAU8F,EAAMiE,MAAM9J,OAEhD,IAAIiM,EAAoBV,EAActK,KAAI,SAASC,EAAMgL,GACvD,OAAO,kBAACpG,EAAA,EAASwB,KAAV,CAAetD,IAAKkI,EAAGhL,MAAOA,EAAOgG,QAAS,SAASV,GAAI8E,EAAcpK,KAAcA,MAGhG,OAAO,yBAAKmF,MAAO,CAAC8F,UAAU,SACxB,kBAACrG,EAAA,EAAD,CAAUmB,QAAQ,OAAQlB,GAAIC,KAE9B,kBAACF,EAAA,EAASG,OAAV,CAAiBgB,QAAQ,OAAQhH,OAAK,EAAEiG,KAAK,KAAMxC,GAAG,yBACtD,kBAACyC,EAAA,EAAD,CAAQc,QAAQ,OAASf,KAAK,MAC9B,2BAAImF,IAEJ,kBAACvF,EAAA,EAASM,KAAV,KACK6F,IAIH,0BAAM5F,MAAO,CAACqC,MAAM,UAEdrI,GAAQgK,GAAU,kBAAC,IAAD,CAAMnB,GAAI6C,GAAa,kBAAC5F,EAAA,EAAD,CAAQe,QAAS,SAASV,GAAIX,EAAMtB,SAAS,CAACb,GAAGA,EAAG2G,MAAMA,EAAMU,KAAK1K,GAAMW,IAASiG,QAAQ,WAA5F,WACxC5G,GAAQgK,IAAU,kBAAClE,EAAA,EAAD,CAAQc,QAAQ,aAAhB,QAErB,kBAAC,IAAD,CAAOiC,GAAI6C,GAAa,kBAAC5F,EAAA,EAAD,CAAQc,QAAQ,UAAhB,YAE5B,4CAAmB,2BAAOf,KAAM,GAAK/D,KAAK,OAAO2E,SAAU,SAASN,GAAKsE,EAAStE,EAAEG,OAAOzF,QAAUA,MAAOmJ,OACzGY,GAAyB,SAAfI,IAA0B,8BAAUhF,MAAO,CAACmB,WAAY,QAAS+B,OAAO,OAAQ4C,UAAU,OAAQ7C,MAAM,OAASxC,SAAU,SAASN,GAAKwE,EAAQxE,EAAEG,OAAOzF,QAAUA,MAAOb,IACtL4K,GAAyB,SAAfI,GAA0B,yBAAKhF,MAAO,CAACmB,WAAY,QAAS+B,OAAO,OAAQ4C,UAAU,OAAQ7C,MAAM,QAC3G,kBAAC,KAAD,CACApI,MAAOiK,EACPiB,MAAO,mBACPC,IAAKA,KACLC,SAAS,EACTC,KAAM,OACNC,aAAc,CAAC,OAAO,QACtB1F,SAAU,SAAS5F,GAAS8J,EAAQa,KAAKY,UAAUvL,SC7EnE,SAASwL,GAAU7G,GAEf,OAAO,6BACM,kBAACgE,EAAmBhE,GACpB,uCACA,kBAACmE,EAAcnE,IAIjB,SAAS8G,GAA0B9G,GAG7C,IAAI+G,EAA2BvJ,IAAYC,eAAe,CACxDC,KAAM,UACNC,UAAa,WAEXqJ,EAA0BxJ,IAAYC,eAAe,CACvDC,KAAM,UACNC,UAAa,UATqC,EAacT,EAAM,UAAU,WAA3Ec,EAb6C,EAa7CA,QAASU,EAboC,EAapCA,SAAUM,EAb0B,EAa1BA,WAAYhC,EAbc,EAadA,MAAOc,EAbO,EAaPA,UAAWuB,EAbJ,EAaIA,OAUzD,SAASwF,EAAoBoC,EAAIC,GAC7BD,EAAGrG,iBACCsG,GACAA,EAAQC,SAAQ,SAAAC,GAAW,IAAD,cACNA,EADM,GACjBzG,EADiB,KACd0G,EADc,KAEnBtK,EAAO,CAACc,GAAG,KAAMqH,KAAKvE,EAAEG,OAAOsG,OAAQ5C,MAAM6C,EAAK3J,MACrDgB,EAAS3B,MAMrB,SAAS0H,EAAe1H,GAEpB,KAAIA,GAAQA,EAAKc,IAAMd,EAAKmI,MAQxB,MAAM,IAAIjI,MAAM,uBAPhB,IAAIqK,EPsDhB,SAAyB9M,GACjB,IAAIwC,EAAQ,GACZ,SAASuK,IACL,IAAM7M,EAASH,EAAeC,GAC1BgN,EAAU,GAOd,OANA9M,EAAOU,KAAI,SAASZ,EAAKiF,GAIrB,OAHIjF,GAAQA,EAAKI,OAAOC,OAAS,GAChC2M,EAAU1M,KAAK,CAAC,GAAKlB,IAAoB,QAAUY,EAAK,OAAS,GAAG,SAAW,GAAI,KAAO,KAEpF,QAEJgN,EAAUxL,KAAK8D,GAE1B,IACI,IAAIwF,EAAOU,KAAKC,MAAMzL,GAEtB,GAAI8K,GAAQA,EAAKmC,eAAiBnC,EAAKmC,cAAcC,gBAAiB,CAClE,IAAK,IAAIjI,KAAK6F,EAAKmC,cAAcC,gBAAiB,CAC9C,IAAIrL,EAASiJ,EAAKmC,cAAcC,gBAAgBjI,GAC5CkI,EAAgBtL,EAAON,UAAYM,EAAON,SAASX,KAAI,SAASwM,EAAGvB,GAAK,MAAO,CAAC/J,KAAKsL,EAAGvL,OAAQhB,MAAMuM,EAAGvM,MAAOa,MAAM0L,EAAG1L,MAAOK,IAAIqL,EAAGrL,QACvIF,EAAO7B,MAAQ6B,EAAO7B,KAAKI,OAAOC,OAAS,GAC3CmC,EAAMlC,KAAK,CAAC,GAAKlB,IAAoB,QAAUyC,EAAO7B,KAAK,OAAS6B,EAAOwL,OAAO,SAAWF,EAAeG,KAAK,KAGzH,OAAO9K,EAAMhB,KAAK8D,GAEf,GAAIwF,GAAQA,EAAKyC,YAAczC,EAAK0C,QAAS,CAChD,IAAK,IAAIC,KAAK3C,EAAK0C,QACf,GAAI1C,EAAK0C,QAAQC,IAAM3C,EAAK0C,QAAQC,GAAGC,QACnC,IAAK,IAAInK,KAAKuH,EAAK0C,QAAQC,GAAGC,QAC1B,GAAI5C,EAAK0C,QAAQC,GAAGC,QAAQnK,IAAMuH,EAAK0C,QAAQC,GAAGC,QAAQnK,GAAGnD,OAAOC,OAAS,EAAI,CAC5E,IAAIsN,EAAS7C,EAAK0C,QAAQC,GAAGC,QAAQnK,GACjChC,EAAW,GAChB,GAAIuJ,EAAK0C,QAAQC,GAAGG,OAChB,IAAK,IAAIC,KAAY/C,EAAK0C,QAAQC,GAAGG,OAAQ,CAC1C,IAAIE,EAAQhD,EAAK0C,QAAQC,GAAGG,OAAOC,GAE7BE,EAAcJ,EAAOK,QAAQ,IAAIF,EAAM5K,KAAK,MAC7B,IAAjB6K,IACAJ,EAASA,EAAO7O,QAAQ,IAAIgP,EAAM5K,KAAK,IAAI4K,EAAM5K,OAErD,IAAI+K,EAAU,CAACnM,KAAKgM,EAAM5K,KAAMrC,MAAMiN,EAAM5K,KAAOxB,MAAOqM,EAAchM,IAAKgM,EAAcD,EAAM5K,KAAK7C,QAEtG,OADAkB,EAASjB,KAAK2N,GACP,KAGdzL,EAAMlC,KAAK,CAAC,GAAKlB,IAAoB,QAAUuO,EAAOvN,OAAO,OAAS0K,EAAK0C,QAAQC,GAAGvK,KAAK,SAAY3B,EAAU+L,KAAM,KASvI,OAAO9K,EAAMhB,KAAK8D,GAEf,GAAIwF,GAAQA,EAAKzK,OAAS,GAAKyK,EAAK,GAAGxJ,SAAWwJ,EAAK,GAAGxJ,QAAQlB,OAAOC,OAAS,EAAG,CACxF,IAAK,IAAIwL,KAAKf,EAAM,CAChB,IAAIvI,EAAOuI,EAAKe,GACZtJ,GACIA,EAAKjB,SAAWiB,EAAKjB,QAAQlB,OAAOC,OAAS,GAAGmC,EAAMlC,KAAK,CAAC,GAAKlB,IAAoB,QAAUmD,EAAKjB,QAAQ,OAASiB,EAAK8K,OAAO,SAAW9K,EAAKhB,UAAYgB,EAAKhB,SAASlB,OAAS,GAAKkC,EAAKhB,SAAS,GAAGV,MAAQ0B,EAAKhB,SAAW,GAAI+L,KAAK/K,EAAK+K,KAAO/K,EAAK+K,KAAO,KAG/Q,OAAO9K,EAAMhB,KAAK8D,GAGlB,OAAOyH,IAEb,MAAO5G,GAQL,OAPAhC,QAAQC,IAAI+B,GAOL4G,KOnIMmB,CAAgB3L,EAAKmI,MAClC6B,EAAyBxI,QAAQ,WAAWN,MAAK,SAASO,GAEtDuI,EAAyBjI,QAAQ,UAAU,GAAGnD,OAAO2L,EAAO9I,IAC5DwB,EAAMyG,QAAQ3L,KAAK,cAO/B,SAAS6J,EAAY5H,EAAKyH,GAEtB,KAAIzH,GAAQA,EAAKc,IAAMd,EAAKmI,MAyExB,MAAM,IAAIjI,MAAM,uBAxEhB,IAAIqK,EP9ChB,SAAoB9M,EAAKkK,GACjB,IAAIvG,EAAMuG,GAAsB,MAEhC,SAAS6C,IACL,IAAIoB,EAAc,GAUlB,OATepO,EAAeC,GACvBY,KAAI,SAASwN,EAAUnJ,GAAI,IAAD,EACNE,EAAeiJ,GADT,mBACxBC,EADwB,KACfxN,EADe,KAM7B,OAJAA,EAAQA,EAAMT,OAAOtB,QAAQ,eAAgB,MAChC+B,EAAMR,OAAS,GACxB8N,EAAc7N,KAAK,CAAC,GAAKlB,IAAoB,MAAQyB,EAAM,QAAUwN,IAElE,QAEJF,EAAc3M,KAAK6D,GAE9B,IACI,IAAIyF,EAAOU,KAAKC,MAAMzL,GAEtB,GAAIS,MAAMC,QAAQoK,GAAO,CAErB,IAAIwD,EAAQ,GAEZ,GAAIxD,EAAKzK,OAAS,GAAKyK,EAAK,GAAGjK,OAASiK,EAAK,GAAGjK,MAAMT,OAAOC,OAAS,EAAG,CACrE,IAAK,IAAI4E,KAAK6F,EAAM,CAChB,IAAIjJ,EAASiJ,EAAK7F,GAClB,GAAIpD,EAAOhB,OAASgB,EAAOhB,MAAMT,OAAOC,OAAS,EAAG,CAChD,IAAIkO,EAAU1M,EAAO+H,KAAO/H,EAAO+H,KAAOjG,EAErC2K,EAAMC,KACPD,EAAMC,GAAW,IAErBD,EAAMC,GAASjO,KAAK,CAAC,GAAKlB,IAAoB,MAAQ8F,EAAcrD,EAAOhB,OAAO,QAAUgB,EAAOwM,WAK3GvN,OAAOC,KAAKuN,GAAO1N,KAAI,SAAS2N,GAC5B,IAAI3E,EAAO0E,EAAMC,GACbC,EAAa,GAMjB,OALA5E,EAAKhJ,KAAI,SAAS6N,GAEf,OADAD,EAAWC,EAAS5N,MAAM,IAAI4N,EAASJ,SAAWI,EAC3C,QAEVH,EAAMC,GAAWzN,OAAOM,OAAOoN,GAAYhN,KAAK6D,GACzC,YAIR,CACH,IAAI2H,EAAU,GACd,IAAK,IAAI0B,KAAK5D,EAAM,CAChB,IAAIsD,EAAYtD,EAAK4D,GAAGtO,OAAOtB,QAAQ,cAAe,IACtD,GAAIsP,GAAaA,EAAU/N,OAAS,EAAG,CAAC,IAAD,EACV8E,EAAeiJ,GADL,mBAC5BC,EAD4B,KACnBxN,EADmB,KAEnCmM,EAAU1M,KAAK,CAAC,GAAKlB,IAAoB,MAAQyB,EAAM,QAAUwN,EAAS,KAAOnE,KAGzFoE,EAAM3K,GAAOqJ,EAAUxL,KAAK6D,GAGhC,OAAOiJ,EAMP,OAFAA,EAAQ,IACF3K,GAAOoJ,IACNuB,EAEb,MAAOnI,GAUD,OATJhC,QAAQC,IAAI+B,IAORmI,EAAQ,IACF3K,GAAOoJ,IACNuB,GOjCEK,CAAWpM,EAAKmI,MAE7B,IAAIoC,EAmEA,MAAM,IAAIrK,MAAM,iBAlEhB+J,EAAwBzI,QAAQ,WAAWN,MAAK,SAASmL,GAErD,IAAIC,EAAgB,GACfD,IACDA,EAAW,IAGfA,EAAShO,KAAI,SAAS6N,GAIlB,OAHIA,GAAYA,EAAS5N,OAAS4N,EAAS5N,MAAMT,OAAOC,OAAS,IAC7DwO,EAAcJ,EAAS5N,OAAS4N,GAE7B,QAGX3N,OAAOC,KAAK+L,GAAQlM,KAAI,SAASsJ,EAASjF,GACtC,IAAI2E,EAAOkD,EAAO5C,GAuClB,OAtCIN,GACAA,EAAKhJ,KAAI,SAAS6N,EAASK,GACvB,IAAIC,EAAcN,EAiClB,OA/BII,EAAcJ,EAAS5N,QACN,QAAbqJ,EACIuE,EAASnB,KAAMyB,EAAYzB,KAAKhN,KAAK4J,GACpC6E,EAAYzB,KAAO,CAACpD,GAEzB6E,EAAYzB,KAAO,GAEnBtD,GAASA,EAAM5J,OAAOC,OAAS,GAAG0O,EAAYzB,KAAKhN,KAAK0J,EAAM5J,QAElE2O,EAAYzB,KAAO/M,EAAcwO,EAAYzB,MAAM9L,OAOnDqN,EAAcE,EAAYlO,OAASkO,IAGnCA,EAAc,CAAC1L,GAAIjE,IAAqByB,MAAOkO,EAAYlO,MAAOwN,QAASU,EAAYV,QAAUU,EAAYV,QAAU,GAAIf,KAAK,IAE/G,QAAbpD,IACIuE,EAASnB,KAAMyB,EAAYzB,KAAKhN,KAAK4J,GACpC6E,EAAYzB,KAAO,CAACpD,IAEzBF,GAASA,EAAM5J,OAAOC,OAAS,GAAG0O,EAAYzB,KAAKhN,KAAK0J,EAAM5J,QAElE2O,EAAYzB,KAAO/M,EAAcwO,EAAYzB,MAAM9L,OAEnDqN,EAAcE,EAAYlO,OAASkO,GAEhC,QAGR,QAGXvC,EAAwBlI,QAAQ,UAAUxD,OAAOM,OAAOyN,IACxDrJ,EAAMyG,QAAQ3L,KAAK,UAEnBkF,EAAMwJ,eAAe,YAAYlO,OAAOC,KAAK8N,GAAexO,OAAQ,2BAA4B2J,GAChGiF,YAAW,WACPzJ,EAAMwJ,eAAe,MACvB,QAWlB,OAjHA1D,qBAAU,WACN9H,MAEF,IA+GE,yBAAKgD,UAAU,6BACX,kBAAC,IAAD,CACI0I,KAAM,CAAC,GAAD,OAAI1J,EAAMiE,MAAMyF,KAAhB,4BAAyC1J,EAAMiE,MAAMyF,KAArD,UACNC,OAAQ,SAAC3J,GAAD,OAAW,kBAACgF,GAAD,iBAAoBhF,EAApB,CACfjD,KAAMsC,EAAO,KAAKW,EAAMiE,MAAM2B,OAAOC,QACrCnH,SAAUA,EAAUM,WAAYA,EAAYlB,UAAWA,QAI/D,kBAAC,IAAD,iBAAWkC,EAAX,CAAkB4J,OAAK,EAACF,KAAM1J,EAAMiE,MAAMyF,KACtCC,OAAQ,SAASE,GAAU,OAAQ,kBAAChD,GAAD,iBAAe7G,EAAf,CAC/BhD,MAAOA,EACPgC,WAAYA,EAAYN,SAAUA,EAAU+F,eAAgBA,EAAgBE,YAAaA,EACzFE,oBAAqBA,U,aC5I1BiF,GArBS,SAAS9J,GAC7B,OAAO,kBAACC,EAAA,EAAD,CAAWC,GAAIC,KAChB,kBAACF,EAAA,EAASG,OAAV,CAAiBhG,OAAK,EAAEiG,KAAK,KAAMxC,GAAG,yBACtC,kBAACyC,EAAA,EAAD,CAAUD,KAAK,MAAO,WAAtB,KACA,kBAACJ,EAAA,EAASM,KAAV,KACC,0BAAOC,MAAO,CAACC,QAAQ,UAAWC,SAAU,SAASC,GAAIA,EAAEC,iBAAmBZ,EAAMa,OAAOF,EAAEG,OAAOzF,SAC/F,kBAAC0F,EAAA,EAAD,KACE,2BAAOzE,KAAK,OAAO0E,UAAU,eAAeC,SAAU,SAASN,GAAIX,EAAMkB,eAAeP,EAAEG,OAAOzF,QACnGA,MAAO2E,EAAMmB,cACb,kBAACb,EAAA,EAAD,CAAQc,QAAQ,UAAUC,QAAS,SAASV,GAAIX,EAAMa,OAAOb,EAAMmB,eAAnE,SAIDnB,EAAMsB,QAAQyB,cAAgB/C,EAAMsB,QAAQyB,aAAa/G,OAAOZ,KAAI,SAASoG,EAAS/B,GACvF,OAAO,kBAACQ,EAAA,EAASwB,KAAV,CAAetD,IAAKsB,EAAGpE,MAAOmG,GACnC,kBAAClB,EAAA,EAAD,CAAQc,QAAQ,UAAUC,QAAS,SAASV,GAAIX,EAAMkB,eAAeM,GAAWxB,EAAMa,OAAOW,KAA7F,UAAkHA,GAClH,kBAAClB,EAAA,EAAD,CAAQc,QAAQ,SAASC,QAAS,SAASV,GAAKX,EAAM0B,SAASF,IAAYhB,MAAO,CAACmB,WAAY,UAA/F,iBCRDoI,GAVK,YAA0C,IAAhCC,EAA+B,EAA/BA,aAAaC,EAAkB,EAAlBA,gBACvC,OAAQ,2BAAOzJ,MAAO,CAACmB,WAAW,SAAWrF,KAAK,OAAOjB,MAAO2O,EACxD/I,SACI,SAASN,GACL,IAAMrB,EAASqB,EAAEG,OAAOzF,MACxB4O,EAAgB3K,IAEtB4K,YAAY,Y,oBC+BXC,GAhCe,SAASnK,GAAQ,IAAD,EACDyC,mBAAS,IADR,mBACnC2H,EADmC,KACrBC,EADqB,KAa1C,OAXAvE,qBAAU,WAEN,IAAIwE,EAAiBtK,EAAMsB,QAAQyB,cAAgB/C,EAAMsB,QAAQyB,aAAa/G,OAAOZ,KAAI,SAAS2N,EAAQtJ,GACpG,OAAO,kBAACQ,EAAA,EAASwB,KAAV,CAAetD,IAAKsB,EAAGpE,MAAO0N,EAAS1H,QAAS,SAASV,GAAIX,EAAMuK,mBAAmBxB,KAAcA,MAEjHuB,EAAeE,QAAQ,kBAACvK,EAAA,EAASwB,KAAV,CAAetD,IAAK,wBAAyB9C,MAAO,GAAIgG,QAAS,SAASV,GAAIX,EAAMuK,mBAAmB,MAAvG,SACvBD,EAAexP,KAAK,kBAACmF,EAAA,EAASwB,KAAV,CAAetD,IAAK,gBAAiB9C,MAAO,gBAAiBgG,QAAS,SAASV,GAAIX,EAAMuK,mBAAmB,mBAAqB,8CACrJF,EAAiBC,KAElB,CAACtK,EAAMsB,UAEH,6BACE,8BAEItB,EAAMsB,QAAQmJ,kBAAoB,GAAK,kBAACnK,EAAA,EAAD,CAAQD,KAAK,KAAMgB,QAAS,SAASV,GAAKX,EAAM0K,eAAe/J,IAAMS,QAAQ,WAAY,yBAAKZ,MAAO,CAACkD,OAAO,OAAQH,IAAKoH,KAAYhH,IAAI,cACjL3D,EAAMsB,QAAQmJ,mBAAqB,GAAK,kBAACnK,EAAA,EAAD,CAAQD,KAAK,KAAKgB,QAAS,SAASV,GAAKX,EAAM4K,UAAUjK,IAAMS,QAAQ,aAAc,yBAAKZ,MAAO,CAACkD,OAAO,OAAQH,IAAKoH,KAAYhH,IAAI,aAIlL,0BAAMnD,MAAO,CAACmB,WAAW,UAAU,kBAAC,GAAD,CAAaqI,aAAchK,EAAMgK,aAAcC,gBAAiBjK,EAAMiK,mBACzG,kBAAChK,EAAA,EAAD,CAAUO,MAAO,CAACmB,WAAW,SAAWzB,GAAIC,KACvC,kBAACF,EAAA,EAASG,OAAV,CAAiBhG,OAAK,EAAGyD,GAAG,yBAC5B,kBAACyC,EAAA,EAAD,KAAW,QAAQN,EAAM6K,gBAAkB,MAAO7K,EAAM6K,gBAAkB,IAA1E,KACA,kBAAC5K,EAAA,EAASM,KAAV,KACK6J,IAGT,kBAAC9J,EAAA,EAAD,CAASE,MAAO,CAACmB,WAAW,OAAQP,QAAQ,UAAUC,QAAS,SAASV,GAAIX,EAAM8K,gBAAgB9K,EAAM6K,mBAAxG,gB,oBCsCCE,OAxEf,SAAwBhO,EAAM2B,EAAUsM,EAAaxK,GAAQ,IAAD,EACZiC,mBAAS,IADG,mBACjDwI,EADiD,KACjCC,EADiC,OAIhCzI,mBAAS,IAJuB,mBAIjDqF,EAJiD,KAI3CqD,EAJ2C,KAMlDC,EAAYC,IAAMC,YA6DxB,OA3DAxF,qBAAU,WACF/I,EAAK+K,MAAMqD,EAAQpO,EAAK+K,KAAK1M,KAAI,SAASmQ,EAAI9L,GAAI,MAAO,CAAC5B,GAAG4B,EAAG/B,KAAK6N,SAC3E,CAACxO,IAyDI,CACHkO,iBAAgBC,oBAAmBpD,OAAMqD,UAASC,YAAWI,YAxDhE,SAAsB/L,GACnB,IAAMgM,EAAU3D,EAAKzN,MAAM,GAC3BoR,EAAQC,OAAOjM,EAAG,GAClB0L,EAAQM,GACR,IAAIE,EAAU5O,EACd4O,EAAQ7D,KAAO2D,EAAQrQ,KAAI,SAASwQ,GAAU,OAAOA,EAAOlO,QAC5DgB,EAASiN,EAAQX,IAkDyDa,cA/C7E,SAAwBN,GACpB,GAAIA,GAAOA,EAAI7N,KAAK9C,OAAOC,OAAS,EAAG,CACpC,IAAM4Q,EAAU,GAAG9P,OAAOmM,EAAMyD,GAChCJ,EAAQ3P,EAAuBiQ,EAAQ,QAAQzP,MAAK,SAAShB,EAAEiB,GAAI,OAAIjB,EAAE0C,KAAOzB,EAAEyB,KAAa,GAAgB,MAC/G,IAAIiO,EAAU5O,EACd4O,EAAQ7D,KAAO/M,EAAc0Q,EAAQrQ,KAAI,SAASwQ,GAAU,OAAOA,EAAOlO,SAAQ1B,OAClF0C,EAASiN,EAAQX,KAyCoEc,qBArC7F,SAA8BC,GAE1B,GAAIhP,GAA2B,kBAAZgP,EAAsB,CAErC,IAAMJ,EAAU5O,EAEhB4O,EAAQtQ,MAAQ0Q,EAChBrN,EAASiN,EAAQX,KA8B0FgB,qBA1BlH,SAA8BD,GAE3B,GAAIhP,GAA2B,kBAAZgP,EAAsB,CAErC,IAAMJ,EAAU5O,EAEhB4O,EAAQ9C,QAAUkD,EAClBrN,EAASiN,EAAQX,KAmBgHiB,WAdzI,SAAoBjB,GAChB,IAAIW,EAAU5O,EACdA,EAAKmP,YAAa,EAClBxN,EAASiN,EAAQX,IAWgImB,aAPrJ,SAAsBnB,GAClB,IAAIW,EAAU5O,EACdA,EAAKmP,YAAa,EAClBxN,EAASiN,EAAQX,MCjEV,SAASoB,GAAT,GAA+C,IAAhBrP,EAAe,EAAfA,KAAMsP,EAAS,EAATA,MAClD,OACE,0BAAOxO,GAAId,EAAKc,GAAImD,UAAWjE,EAAKW,OAAS2O,EAAQ,QAAU,YAC5DtP,EAAKW,MCMG,SAAS4O,GAAgBtM,GAAQ,IAChCjD,EAA6BiD,EAA7BjD,KAAMiO,EAAuBhL,EAAvBgL,YAAcxK,EAASR,EAATQ,MADW,EAKnCuK,GAAe/K,EAAMjD,KAAMiD,EAAMtB,SAAUsB,EAAMgL,YAAahL,EAAMQ,OAFpEsH,EAHmC,EAGnCA,KAAMsD,EAH6B,EAG7BA,UACNI,EAJmC,EAInCA,YAAaK,EAJsB,EAItBA,cAAeC,EAJO,EAIPA,qBAAqBE,EAJd,EAIcA,qBAAuBC,EAJrC,EAIqCA,WAAYE,EAJjD,EAIiDA,aAKzF,OAAOpP,GAAQ,yBAAKyD,MAAOA,EAAOQ,UAAWgK,EAAc,EAAI,cAAgB,gBACvE,yBAAKxK,MAAO,CAAC+L,SAAS,WAAY9I,MAAO,OAAQ+I,UAAU,OAASC,UAAW,oBAE3E,yBAAKjM,MAAO,CAACqC,MAAM,UACd,kBAACvC,EAAA,EAAD,CAASc,QAAQ,SAAUf,KAAK,KAAKG,MAAO,CAACqC,MAAM,QAASI,WAAW,OAAQyJ,aAAa,OAAQC,UAAU,SAAUtL,QAAS,SAASV,GAAQ2D,OAAOC,QAAQ,kBAAmBvE,EAAMhB,WAAWgM,EAAajO,EAAKc,GAAKd,EAAKc,GAAK,MAAtO,MAIN,yBAAK2C,MAAO,CAACqC,MAAM,UACd9F,EAAKmP,YAAc,kBAAC5L,EAAA,EAAD,CAAQE,MAAO,CAACqC,MAAO,QAASxC,KAAK,KAAKe,QAAQ,YAAYC,QAAS,WAAY4K,EAAWjB,KAAgB,yBAAKxK,MAAO,CAACkD,OAAO,OAAQH,IAAKoH,KAAYhH,IAAI,YAClL5G,EAAKmP,YAAc,kBAAC5L,EAAA,EAAD,CAAQE,MAAO,CAACqC,MAAO,QAASxC,KAAK,KAAKe,QAAQ,UAAUC,QAAS,WAAY8K,EAAanB,KAAgB,yBAAKxK,MAAO,CAACkD,OAAO,OAAQH,IAAKoH,KAAYhH,IAAI,eAGzL,2BAAOnD,MAAO,CAACqC,MAAM,QAASxC,KAAK,KAC5B/D,KAAK,OAAQjB,MAAO0B,EAAK1B,MAAQ4F,SAAU,SAASN,GAAKmL,EAAqBnL,EAAEG,OAAOzF,UAIzF,2BAAOmF,MAAO,CAACqC,MAAM,OAAQlB,WAAW,UAAxC,WAA2D,2BAAOtB,KAAK,KAAK/D,KAAK,OAAOjB,MAAO0B,EAAK8L,QAAS5H,SAAU,SAASN,GAAIqL,EAAqBrL,EAAEG,OAAOzF,WAClK,2BAAOmF,MAAO,CAACqC,MAAM,OAAQlB,WAAW,UACxC,0BAAOnB,MAAO,CAACqC,MAAM,OAAQO,YAAY,UAAzC,UACA,0BAAO5C,MAAO,CAACqC,MAAM,SACnB,kBAAC,KAAD,CACC+J,gBAAgB,cAChBC,eAAgB,EAChBC,qBAAsB,GACtBC,YAAY,EACZC,UAAU,EACVC,IAAK7B,EACLtD,KAAMA,EACNoF,oBAAqBd,GACrBe,YAAanN,EAAMsB,QAAQyB,aAAa3H,KAAI,SAASsJ,EAASjF,GAAI,MAAO,CAAC5B,GAAI4B,EAAG/B,KAAMgH,MACvF0I,SAAU5B,EACV6B,WAAYxB,QC3CpC,SAASlP,GAAQC,EAAOC,GACpB,IAAM1B,EAAQ2B,SAASD,EAAO1B,OAE9B,OAAQ0B,EAAOP,MACf,IAAK,SACH,OAAIO,EAAOE,KACH,GAAN,mBAAWH,GAAX,CAAkBC,EAAOE,OACbH,EAChB,IAAK,UACH,OAAIC,EAAOE,KACH,CAAEF,EAAOE,MAAf,mBAAuBH,IACXA,EAChB,IAAK,SACH,OAAIC,EAAOE,MAAyB,kBAAV5B,GAClByB,EAAM/B,OAAS,EACT,GAAN,mBACK+B,EAAMvC,MAAM,EAAGc,IADpB,CAEE0B,EAAOE,MAFT,YAGKH,EAAMvC,MAAMc,KAGTyB,EAClB,IAAK,SACH,MAAqB,kBAAVzB,EACD,GAAN,mBACKyB,EAAMvC,MAAM,EAAGc,IADpB,YAEKyB,EAAMvC,MAAMc,EAAQ,KAEdyB,EACjB,IAAK,SACF,OAAIC,EAAOE,MAAyB,kBAAV5B,EAChB,GAAN,mBACIyB,EAAMvC,MAAM,EAAGc,IADnB,CAEC0B,EAAOE,MAFR,YAGIH,EAAMvC,MAAMc,EAAQ,KAEbyB,EAClB,IAAK,aACD,MAA4B,kBAAjBC,EAAOG,MACPH,EAAOG,MACJJ,EAClB,QACE,MAAM,IAAIK,MAAM,wCAMP,SAASC,GAAMC,EAAUC,EAAckQ,GAC7CA,IAAWA,EAAY,QADiC,MAElCjQ,qBAAWV,GAAQ,IAFe,mBAErDK,EAFqD,KAE9CM,EAF8C,KAGxDC,EAAqBC,IAAYC,eAAe,CAClDC,KAAMP,GAAsB,sBAC5BQ,UAAcP,GAAgC,oBAyDjD,SAASU,EAAUrC,EAAMJ,GACrB,IAAK,IAAI0C,KAAKf,EACV,GAAIA,EAAMe,IAAMf,EAAMe,GAAGtC,KAAWJ,EAAO,OAAO0C,EA2B1D,OAnFA+H,qBAAU,WACNvI,EAAmBuB,QAAQwO,EAAUtQ,KAEvC,CAACA,IAgFI,CAACY,MA9ER,SAAeb,GACX,GAAIA,GAAQA,EAAKc,GACb,OAAOd,EAAKc,GAEZ,MAAM,IAAIZ,MAAM,8BA0EHe,QAtErB,WACIT,EAAmBgB,QAAQ+O,GAAWrP,MAAK,SAASO,GAElDlB,EAAS,CAAEhB,KAAM,aAAcU,MAAOwB,GAAY,SAmElBE,SA7DtC,SAAkB3B,EAAK5B,GAEnB,GAAI4B,EAAM,CAGN,IAAI8B,GAAY,EACX9B,EAAKc,KACNgB,GAAY,EACZ9B,EAAKc,GAAKjE,KAEO,IAAjBoD,EAAMnC,OAGNyC,EAAS,CAAEhB,KAAM,SAASS,KAAMA,IAI5BO,EAFW,OAAVnC,QAA4B4D,IAAV5D,GAAyB0D,EAEnC,CAAEvC,KAAM,UAAUS,KAAMA,GAGxB,CAAET,KAAM,SAASS,KAAMA,EAAM5B,MAAOA,MAyCJ6D,WAHzD,SAAoB7D,GAChBmC,EAAS,CAAEhB,KAAM,SAAUnB,MAAOA,KAE2C6B,MAAMA,EAAOmC,SAvB9F,SAAsBnC,GAClBO,EAAmB6B,QAAQnB,MAAK,WAC5BX,EAAS,CAAEhB,KAAM,aAAcU,MAAOA,QAqBuEc,UAAUA,EAAWuB,OAlC1I,SAAgB5D,EAAMJ,GAClB,IAAI8C,EAAML,EAAUrC,EAAMJ,GAC1B,OAAO2B,EAAMmB,IAgCwImB,OAjBzJ,SAAgBC,GACZ,IAAIC,EAAW,GASf,OARID,GACAvC,EAAM5B,KAAI,SAAS2B,EAAK0C,GAItB,OAHI1C,GAAQwC,EAAcxC,IACtByC,EAAS1E,KAAKiC,GAEX,QAGNyC,IC8DA+N,OAvMf,SAA2BpQ,EAAUC,EAAeoQ,EAAaC,GAAc,IAAD,EACGC,GAAevQ,EAAUC,EAAeoQ,GAA9GxP,EADmE,EACnEA,QAASU,EAD0D,EAC1DA,SAAUM,EADgD,EAChDA,WAAahC,EADmC,EACnCA,MAAOmC,EAD4B,EAC5BA,SAAUrB,EADkB,EAClBA,UAAWwB,EADO,EACPA,OADO,EAEhCmD,mBAAS,IAFuB,mBAEnES,EAFmE,KAEpDyK,EAFoD,OAGxBlL,mBAAS,IAHe,mBAGnEmL,EAHmE,KAGhDC,EAHgD,OAIlCpL,mBAAS,IAJyB,mBAInEuH,EAJmE,KAIrDC,EAJqD,OAKpCxH,mBAAS,IAL2B,mBAKnEtB,EALmE,KAKtDD,EALsD,KAMpE4M,EAAUzC,IAAMC,YAGlB1F,EAASmI,cACTlD,EAAkBjF,EAAOoI,OAASpI,EAAOoI,OAAS,GAClDvH,EAAUwH,cAsLd,OA7KAnI,qBAAU,WACL,IAAI5C,EAAgB5D,GAAO,SAASvC,GAEjC,IAAImR,GAAY,EACZlE,GAAgBA,EAAapP,OAAOC,OAAQ,IAExCqT,GADsC,IAAtCnR,EAAK1B,MAAMmN,QAAQwB,IAM3B,IAAImE,GAAgB,EAgBpB,MAfwB,kBAApBtD,EAGIsD,IADCpR,EAAK+K,QAAS/K,EAAK+K,MAA6B,IAArB/K,EAAK+K,KAAKjN,SAKnCgQ,GAAmBA,EAAgBjQ,OAAOC,OAAQ,IAErDsT,KADApR,EAAK+K,OAAgD,IAAxC/K,EAAK+K,KAAKU,QAAQqC,KAOhCqD,GAAaC,KAIpBC,EAAW,GACflL,EAAc9H,KAAI,SAAS2B,GAA8C,OAAnCA,EAAKc,KAAIuQ,EAASrR,EAAKc,KAAM,GAAa,QAChFqF,EAAclH,MAAK,SAAShB,EAAEiB,GAAK,OAAOjB,EAAEK,MAAQY,EAAEZ,SACtDsS,EAAiBzK,GACjB2K,EAAqBO,GACrBX,EAAYzQ,KAEd,CAACA,EAAOgN,EAAca,IAuIjB,CACH7M,UAASU,WAAUM,aAAahC,QAAOmC,WAAUrB,YAAWwB,SAAQ4D,gBAAeyK,mBACnF3D,eAAcC,kBAAiB9I,cAAaD,iBAAe4M,UAASjD,kBAAiBN,mBAvLzF,SAA4BlP,GACxB,IACIuE,EAAM,CAAC,IADA6G,EAAQ4H,SAASC,SAASlU,MAAM,KACvB,IACpBwF,EAAM9E,KAAK,IAAIO,GACfoL,EAAQ3L,KAAK8E,EAAMtF,KAAK,MAoLxBuG,OAnHJ,SAAgB0N,GACZ5P,QAAQC,IAAI,CAAC,SAASuC,EAAYoN,IAClC,IAAIC,EAAWD,GAAYpN,EAC3B,GAAInE,EAAO,CACP,IAAIyR,EAAW,GACfzR,EAAM5B,KAAI,SAAS2B,EAAK0C,GAErB,GAAI1C,EAAKmP,YAAcnP,EAAKc,IAAM+P,EAAkB7Q,EAAKc,IAAK,CAC1D,IAAI8N,EAAU3F,KAAKC,MAAMD,KAAKY,UAAU7J,IACnC4O,EAAQ7D,OAAM6D,EAAQ7D,KAAK,KACQ,IAApC6D,EAAQ7D,KAAKU,QAAQgG,IAAkB7C,EAAQ7D,KAAKhN,KAAK0T,GAC7DC,EAAS3T,KAAK6Q,QAEd8C,EAAS3T,KAAKiC,GAElB,OAAO,QAEVoC,EAASsP,KAkGN/M,SA9FX,SAAkB6M,GAGd,GAFA5P,QAAQC,IAAI,CAAC,WAAWuC,EAAYoN,IAEhCvR,EAAO,CACP,IAAIyR,EAAW,GACfzR,EAAM5B,KAAI,SAAS2B,EAAK0C,GAErB,GAAI1C,EAAKmP,YAAcnP,EAAKc,IAAM+P,EAAkB7Q,EAAKc,IAAK,CAC1D,IAAI8N,EAAU3F,KAAKC,MAAMD,KAAKY,UAAU7J,IACnC4O,EAAQ7D,OAAM6D,EAAQ7D,KAAK,IAChC,IAAI4G,EAAY,GAChB/C,EAAQ7D,KAAK1M,KAAI,SAASmQ,GAItB,OAHIA,IAAQgD,GACRG,EAAU5T,KAAKyQ,GAEZ,QAEXI,EAAQ7D,KAAO4G,EACfD,EAAS3T,KAAK6Q,QAEd8C,EAAS3T,KAAKiC,GAElB,OAAO,QAEVoC,EAASsP,KAsEI/D,eAjErB,WAEK,GAAI1N,EAAO,CACR,IAAIyR,EAAW,GACfzR,EAAM5B,KAAI,SAAS2B,EAAK0C,GACrB,IAAIkM,EAAU5O,EAGd,OAFA4O,EAAQO,YAAa,EACrBuC,EAAS3T,KAAK6Q,GACP,QAEVxM,EAASsP,KAuDoB7D,UAlDpC,WACI,GAAI5N,EAAO,CACR,IAAIyR,EAAW,GACfzR,EAAM5B,KAAI,SAAS2B,EAAK0C,GACpB,GAAI1C,EACA,GAAIA,EAAKc,IAAM+P,EAAkB7Q,EAAKc,IAAK,CACxC,IAAI8N,EAAU5O,EACd4O,EAAQO,YAAa,EACrBuC,EAAS3T,KAAK6Q,QAEbA,EAAQO,YAAa,EACrBuC,EAAS3T,KAAK6Q,GAGtB,OAAO,QAEXxM,EAASsP,KAkC+BE,aA9BhD,SAAsB5R,EAAK5B,GACvBuD,EAAS3B,EAAK5B,GACd2S,EAAQc,QAAQC,gBAAgB1T,GAChCsS,EAAYzQ,IA2B8C8R,YAxB9D,SAAqB3T,GAGjB,IAAI4T,EAAW,GAQf,OANIzK,OAAO0K,WAAa,IACpBD,EAAW,IAEJzK,OAAO0K,YAAc,MAC5BD,EAAW,IAERA,GAagEE,UAxI3E,SAAmBtO,GACf,GAAI2D,OAAOC,QAAQ,+BACPvH,EAAO,CACX,IAAIyR,EAAW,GACfzR,EAAM5B,KAAI,SAAS2B,EAAK0C,GAQpB,OAPI1C,EAAKc,IAAM+P,EAAkB7Q,EAAKc,KAC9Bd,EAAKmP,YAITuC,EAAS3T,KAAKiC,GAEX,QAEXoC,EAASsP,GACTX,EAAQc,QAAQC,gBAAgB,KAyH0C/D,gBAVvF,SAAyB1G,GACrB,IAAI0D,EAAK,GACJ1D,GAAiB,kBAATA,GAA4BA,EAAKxJ,OAAOC,OAAS,GAAGiN,EAAKhN,KAAKsJ,GAC1E6F,EAAgB,IAChBvL,EAAS,CAACb,GAAG,KAAMxC,MAAM,GAAIwN,QAAQ,GAAGf,KAAKA,OCtL/CoH,GAAY,SAASlP,GACvB,IAAM7E,EAAQ6E,EAAM7E,MACdqF,EAAQR,EAAMQ,MACdzD,EAAOiD,EAAMkF,KAAKlI,MAAM7B,GAC9B,OAAO,kBAACmR,GAAD,CACFvP,KAAMA,EAAOiO,YAAa7P,EAAOqF,MAAOA,EACxC9B,SAAUsB,EAAMkF,KAAKxG,SAAUM,WAAYgB,EAAMkF,KAAKlG,WAAYmQ,QAASnP,EAAMkF,KAAKiK,QACtF7N,QAAStB,EAAMkF,KAAK5D,WAGb,SAAS8N,GAAapP,GAAQ,IAAD,EACoOuN,GAAkB,UAAU,QAAQ,UAAWvN,EAAMqP,gBAAgB5B,aAA3U5C,EADkC,EAClCA,gBAAiBN,EADiB,EACjBA,mBAAoBvM,EADH,EACGA,QAASgB,EADZ,EACYA,WAAYhC,EADxB,EACwBA,MAAOc,EAD/B,EAC+BA,UAAWkM,EAD1C,EAC0CA,aAAcC,EADxD,EACwDA,gBAAiB9I,EADzE,EACyEA,YAAaD,EADtF,EACsFA,eAAgB4M,EADtG,EACsGA,QAASjN,EAD/G,EAC+GA,OAAOa,EADtH,EACsHA,SAAUgJ,EADhI,EACgIA,eAAgBE,EADhJ,EACgJA,UAAW+D,EAD3J,EAC2JA,aAAcG,EADzK,EACyKA,YAAc5L,EADvL,EACuLA,cAAe+L,EADtM,EACsMA,UAAWnE,EADjN,EACiNA,gBA2I1P,OAxIAhF,qBAAU,WACN9H,IACAgC,EAAMqP,gBAAgB5B,YAAYzQ,KAEpC,IAoIK,6BAGF,kBAAC,GAAD,iBAA2BgD,EAA3B,CAAkCgK,aAAcA,EAAcC,gBAAiBA,EAAiBY,gBAAiBA,EAAiBN,mBAAoBA,EAAoBG,eAAgBA,EAAgBE,UAAWA,EAAWE,gBAAiBA,KAzHtP,SAAsB9K,GA8Bd,GAAIkD,GAAiBA,EAAcrI,OAAS,EAQxC,OAAO,6BACH,0BAAM2F,MAAO,CAACqC,MAAM,OAAQI,WAAW,SAAvC,OAAwDC,EAAcrI,OAAtE,aAGEmF,EAAMsB,QAAQmJ,kBAAoB,GAAK,0BAAMjK,MAAO,CAACqC,MAAM,UAEzD,sCAAY7C,EAAMsB,QAAQmJ,kBAA1B,iBACA,kBAAC,GAAD,CAAiB5J,OAAQA,EAAQM,YAAaA,EAAaD,eAAgBA,EAAgBQ,SAAUA,EAAUJ,QAAStB,EAAMsB,UAC9H,kBAAChB,EAAA,EAAD,CAAQE,MAAO,CAACmB,WAAW,OAAQN,QAAS4N,EAAW7N,QAAQ,UAA/D,oBAGF,yBAAKZ,MAAO,CAACpB,MAAM,SACjB,yBAAKoB,MAAO,CAACpB,MAAM,SACf,kBAAC,KAAD,CACIjB,IAAI,OACJ8O,IAAKa,EACLwB,SAAU,CAACtS,MAAOkG,EAAexE,SAAUiQ,EAAc3P,aAAYlB,YAAWwD,QAAStB,EAAMsB,SAC/FiO,QAAS,SAAApU,GAAK,OAAIA,GAClB6F,UAAU,OACV0C,OAAQ,IACR8L,UAAWtM,EAAcrI,OACzB4U,SAAUX,EACVrL,MAAO,QACPyL,OA+DtBQ,CAAa1P,ICjKvB,IAgCe2P,GAhCoB,SAAS3P,GAAQ,IAAD,EACNyC,mBAAS,IADH,mBACxC2H,EADwC,KAC1BC,EAD0B,KAa/C,OAXAvE,qBAAU,WAEN,IAAIwE,EAAiBtK,EAAMsB,QAAQsO,sBAAwB5P,EAAMsB,QAAQsO,qBAAqB5T,OAAOZ,KAAI,SAAS2N,EAAQtJ,GACpH,OAAO,kBAACQ,EAAA,EAASwB,KAAV,CAAetD,IAAKsB,EAAGpE,MAAO0N,EAAS1H,QAAS,SAASV,GAAIX,EAAMuK,mBAAmBxB,KAAcA,MAEjHuB,EAAeE,QAAQ,kBAACvK,EAAA,EAASwB,KAAV,CAAetD,IAAK,wBAAyB9C,MAAO,GAAIgG,QAAS,SAASV,GAAIX,EAAMuK,mBAAmB,MAAvG,SACvBD,EAAexP,KAAK,kBAACmF,EAAA,EAASwB,KAAV,CAAetD,IAAK,gBAAiB9C,MAAO,gBAAiBgG,QAAS,SAASV,GAAIX,EAAMuK,mBAAmB,mBAAqB,8CACrJF,EAAiBC,KAElB,CAACtK,EAAMsB,UAEH,6BACE,8BAEItB,EAAMsB,QAAQmJ,kBAAoB,GAAK,kBAACnK,EAAA,EAAD,CAAQD,KAAK,KAAMgB,QAAS,SAASV,GAAKX,EAAM0K,eAAe/J,IAAMS,QAAQ,WAAY,yBAAKZ,MAAO,CAACkD,OAAO,OAAQH,IAAKoH,KAAYhH,IAAI,cACjL3D,EAAMsB,QAAQmJ,mBAAqB,GAAK,kBAACnK,EAAA,EAAD,CAAQD,KAAK,KAAKgB,QAAS,SAASV,GAAKX,EAAM4K,UAAUjK,IAAMS,QAAQ,aAAc,yBAAKZ,MAAO,CAACkD,OAAO,OAAQH,IAAKoH,KAAYhH,IAAI,aAIlL,0BAAMnD,MAAO,CAACmB,WAAW,UAAU,kBAAC,GAAD,CAAaqI,aAAchK,EAAMgK,aAAcC,gBAAiBjK,EAAMiK,mBACzG,kBAAChK,EAAA,EAAD,CAAUO,MAAO,CAACmB,WAAW,SAAWzB,GAAIC,KACvC,kBAACF,EAAA,EAASG,OAAV,CAAiBhG,OAAK,EAAGyD,GAAG,yBAC5B,kBAACyC,EAAA,EAAD,KAAW,QAAQN,EAAM6K,gBAAkB,MAAO7K,EAAM6K,gBAAkB,IAA1E,KACA,kBAAC5K,EAAA,EAASM,KAAV,KACK6J,IAGT,kBAAC9J,EAAA,EAAD,CAASE,MAAO,CAACmB,WAAW,OAAQP,QAAQ,UAAUC,QAAS,SAASV,GAAIX,EAAM8K,gBAAgB9K,EAAM6K,mBAAxG,mBC1BC,SAASgF,GAAqB7P,GAAQ,IACrCjD,EAA6BiD,EAA7BjD,KAAMiO,EAAuBhL,EAAvBgL,YAAcxK,EAASR,EAATQ,MADgB,EAKxCuK,GAAe/K,EAAMjD,KAAMiD,EAAMtB,SAAUsB,EAAMgL,YAAahL,EAAMQ,OAFpEsH,EAHwC,EAGxCA,KAAMsD,EAHkC,EAGlCA,UACNI,EAJwC,EAIxCA,YAAaK,EAJ2B,EAI3BA,cAAeC,EAJY,EAIZA,qBAAqBE,EAJT,EAISA,qBAAuBC,EAJhC,EAIgCA,WAAYE,EAJ5C,EAI4CA,aAKzF,OAAOpP,GAAQ,yBAAKyD,MAAOA,EAAOQ,UAAWgK,EAAc,EAAI,cAAgB,gBACvE,yBAAKxK,MAAO,CAAC+L,SAAS,WAAY9I,MAAO,OAAQ+I,UAAU,OAASC,UAAW,oBAE3E,yBAAKjM,MAAO,CAACqC,MAAM,UACd,kBAACvC,EAAA,EAAD,CAASc,QAAQ,SAAUf,KAAK,KAAKG,MAAO,CAACqC,MAAM,QAASI,WAAW,OAAQyJ,aAAa,OAAQC,UAAU,SAAUtL,QAAS,SAASV,GAAQ2D,OAAOC,QAAQ,kBAAmBvE,EAAMhB,WAAWgM,EAAajO,EAAKc,GAAKd,EAAKc,GAAK,MAAtO,MAIN,yBAAK2C,MAAO,CAACqC,MAAM,UACd9F,EAAKmP,YAAc,kBAAC5L,EAAA,EAAD,CAAQE,MAAO,CAACqC,MAAO,QAASxC,KAAK,KAAKe,QAAQ,YAAYC,QAAS,WAAY4K,EAAWjB,KAAgB,yBAAKxK,MAAO,CAACkD,OAAO,OAAQH,IAAKoH,KAAYhH,IAAI,YAClL5G,EAAKmP,YAAc,kBAAC5L,EAAA,EAAD,CAAQE,MAAO,CAACqC,MAAO,QAASxC,KAAK,KAAKe,QAAQ,UAAUC,QAAS,WAAY8K,EAAanB,KAAgB,yBAAKxK,MAAO,CAACkD,OAAO,OAAQH,IAAKoH,KAAYhH,IAAI,eAGzL,2BAAOnD,MAAO,CAACqC,MAAM,QAASxC,KAAK,KAC5B/D,KAAK,OAAQjB,MAAO0B,EAAK1B,MAAQ4F,SAAU,SAASN,GAAKmL,EAAqBnL,EAAEG,OAAOzF,UAGzF,2BAAOmF,MAAO,CAACqC,MAAM,OAAQlB,WAAW,UACxC,0BAAOnB,MAAO,CAACqC,MAAM,OAAQO,YAAY,UAAzC,UACA,0BAAO5C,MAAO,CAACqC,MAAM,SACnB,kBAAC,KAAD,CACC+J,gBAAgB,cAChBC,eAAgB,EAChBC,qBAAsB,GACtBC,YAAY,EACZC,UAAU,EACVC,IAAK7B,EACLtD,KAAMA,EACNoF,oBAAqBd,GACrBe,YAAanN,EAAMsB,QAAQsO,qBAAqBxU,KAAI,SAASsJ,EAASjF,GAAI,MAAO,CAAC5B,GAAI4B,EAAG/B,KAAMgH,MAC/F0I,SAAU5B,EACV6B,WAAYxB,MAMhB,2BAAOrL,MAAO,CAACqC,MAAM,OAAQlB,WAAW,UAAW,0BAAMnB,MAAO,CAACqC,MAAM,OAAQO,YAAY,UAAxC,gBAC/C,8BAAU5C,MAAO,CAACiD,MAAM,OAAQC,OAAO,OAAQpH,KAAK,OAAOjB,MAAO0B,EAAK8L,QAAS5H,SAAU,SAASN,GAAIqL,EAAqBrL,EAAEG,OAAOzF,aC5C7J,IAAM6T,GAAY,SAASlP,GACvB,IAAM7E,EAAQ6E,EAAM7E,MACdqF,EAAQR,EAAMQ,MACdzD,EAAOiD,EAAMkF,KAAKlI,MAAM7B,GAC9B,OAAO,kBAAC0U,GAAD,CACF9S,KAAMA,EAAOiO,YAAa7P,EAAOqF,MAAOA,EACxC9B,SAAUsB,EAAMkF,KAAKxG,SAAUM,WAAYgB,EAAMkF,KAAKlG,WAAYmQ,QAASnP,EAAMkF,KAAKiK,QACtF7N,QAAStB,EAAMkF,KAAK5D,WAGb,SAASwO,GAAkB9P,GAAQ,IAAD,EAC4MuN,GAAkB,UAAU,aAAa,UAAWvN,EAAMqP,gBAAgBU,kBAA7TlF,EADuC,EACvCA,gBAAiBN,EADsB,EACtBA,mBAAoBvM,EADE,EACFA,QAASgB,EADP,EACOA,WAAalB,EADpB,EACoBA,UAAWkM,EAD/B,EAC+BA,aAAcC,EAD7C,EAC6CA,gBAAiB9I,EAD9D,EAC8DA,YAAaD,EAD3E,EAC2EA,eAAgB4M,EAD3F,EAC2FA,QAASjN,EADpG,EACoGA,OAAOa,EAD3G,EAC2GA,SAAUgJ,EADrH,EACqHA,eAAgBE,EADrI,EACqIA,UAAW+D,EADhJ,EACgJA,aAAezL,EAD/J,EAC+JA,cAAe+L,EAD9K,EAC8KA,UAAWnE,EADzL,EACyLA,gBAGvO,SAASgE,IACL,OAAIxK,OAAO0K,WAAa,IACV,IAEH1K,OAAO0K,YAAc,IAClB,IAEH,IA+Cf,OA3CAlJ,qBAAU,WACN9H,MAGF,IAuCK,6BAGF,kBAAC,GAAD,iBAAgCgC,EAAhC,CAAuCgK,aAAcA,EAAcC,gBAAiBA,EAAiBY,gBAAiBA,EAAiBN,mBAAoBA,EAAoBG,eAAgBA,EAAgBE,UAAWA,EAAWE,gBAAiBA,KAvC3P,SAAsB9K,GACd,GAAIkD,GAAiBA,EAAcrI,OAAS,EAExC,OAAO,6BACH,0BAAM2F,MAAO,CAACqC,MAAM,OAAQI,WAAW,SAAvC,OAAwDC,EAAcrI,OAAtE,aAEEmF,EAAMsB,QAAQmJ,kBAAoB,GAAK,0BAAMjK,MAAO,CAACqC,MAAM,UAEzD,sCAAY7C,EAAMsB,QAAQmJ,kBAA1B,iBACA,kBAAC,GAAD,CAAiB5J,OAAQA,EAAQM,YAAaA,EAAaD,eAAgBA,EAAgBQ,SAAUA,EAAUJ,QAAStB,EAAMsB,UAC9H,kBAAChB,EAAA,EAAD,CAAQE,MAAO,CAACmB,WAAW,OAAQN,QAAS4N,EAAW7N,QAAQ,UAA/D,oBAGF,yBAAKZ,MAAO,CAACpB,MAAM,SACjB,yBAAKoB,MAAO,CAACpB,MAAM,SACf,kBAAC,KAAD,CACIjB,IAAI,OACJ8O,IAAKa,EACLwB,SAAU,CAACtS,MAAOkG,EAAexE,SAAUiQ,EAAc3P,aAAYlB,YAAWwD,QAAStB,EAAMsB,SAC/FiO,QAAS,SAAApU,GAAK,OAAIA,GAClB6F,UAAU,OACV0C,OAAQ,IACR8L,UAAWtM,EAAcrI,OACzB4U,SAAUX,EACVrL,MAAO,QACPyL,OAiBtBQ,CAAa1P,I,aC0JRgQ,OA/Of,SAAmBjT,EAAM2B,EAAUsM,EAAaxK,EAAOgJ,GAAiB,IAAD,EACvB/G,mBAAS,IADc,mBAC5DwI,EAD4D,KAC5CC,EAD4C,OAEjCzI,mBAAS,IAFwB,mBAE5DwN,EAF4D,KAEjDC,EAFiD,OAG7BzN,mBAAS1F,GAAQA,EAAK8K,OAAS9K,EAAK8K,OAAS,IAHhB,mBAG5DsI,EAH4D,KAG/CC,EAH+C,OAK3C3N,mBAAS,IALkC,mBAK5DqF,EAL4D,KAKtDqD,EALsD,OAMvC1I,mBAAS,IAN8B,mBAM5D4N,EAN4D,KAMpDC,EANoD,KAQ7DlF,EAAYC,IAAMC,YAClBiF,EAAclF,IAAMC,YA8C1B,SAASkF,EAAgB/U,EAAOS,EAAOK,GACnC,GAAId,EAAO,CACP,GAAIA,EAAMgV,gBAAkB,CACxB,IAAIC,EAAWjV,EAAMgV,kBACrBC,EAASC,UAAS,GAClBD,EAASE,UAAU,YAAa1U,GAChCwU,EAASG,QAAQ,YAAatU,EAAIL,GAClCwU,EAASI,cACFrV,EAAMsV,kBACbtV,EAAMsV,kBAAkB7U,EAAOK,GACxBd,EAAMuV,iBACbvV,EAAMuV,eAAiB9U,EACvBT,EAAMwV,aAAe1U,GAEzBd,EAAMyV,SA+Ed,SAASC,EAAkBC,EAAa9U,GACpCqC,QAAQC,IAAI,CAAC,mBAAmBwS,EAAa9U,IAC7C,IAAIqP,EAAU5O,EACT9B,MAAMC,QAAQ6B,EAAKhB,YACpBgB,EAAKhB,SAAW,IAEnB4C,QAAQC,IAAI,CAAC,4BAA4B7B,EAAKhB,WAC/C,IAAIsV,EAActU,EAAKhB,SACnBM,EAASgV,EAAYD,GAAgBC,EAAYD,GAAgB,GAIrE,GADA/U,EAAOC,KAAOA,EACV2O,GAAkBA,EAAeqG,cAAe,CAChD3S,QAAQC,IAAI,CAAC,WAAWqM,EAAeqG,gBAmBnCjV,EAAOhB,MAAQ4P,EAAeqG,cAC9BjV,EAAOH,MAAQ+O,EAAesG,mBAC9BlV,EAAOE,IAAM0O,EAAeuG,iBACvBH,EAAYD,GACZC,EAAYD,GAAgB/U,EADDgV,EAAYvW,KAAKuB,GAEjDsP,EAAQ5P,SAAWsV,EACnBnG,EAAkB,MAClBxM,EAASiN,EAAQX,QAGhBqG,EAAYD,GACZC,EAAYD,GAAgB/U,EADDgV,EAAYvW,KAAKuB,GAEjDsP,EAAQ5P,SAAWsV,EACnBnG,EAAkB,MAClBxM,EAASiN,EAAQX,GAwCzB,OA/NAlF,qBAAU,WACF/I,EAAK+K,MAAMqD,EAAQpO,EAAK+K,KAAK1M,KAAI,SAASmQ,EAAI9L,GAAI,MAAO,CAAC5B,GAAG4B,EAAG/B,KAAK6N,OACrExO,EAAKsT,QAAQC,EAAUvT,EAAKsT,OAAOjV,KAAI,SAASqW,EAAMhS,GAAI,MAAO,CAAC5B,GAAG4B,EAAG/B,KAAK+T,SACnF,CAAC1U,IA4NI,CACHoT,cAAaC,iBAAgBnF,iBAAgBC,oBAAmB+E,YAAWC,eAAcpI,OAAMqD,UAASkF,SAAQC,YAAWlF,YAAWmF,cAAa/E,YA3NtJ,SAAsB/L,GACnB,IAAMgM,EAAU3D,EAAKzN,MAAM,GAC3BoR,EAAQC,OAAOjM,EAAG,GAClB0L,EAAQM,GACR,IAAIE,EAAU5O,EACd4O,EAAQ7D,KAAO2D,EAAQrQ,KAAI,SAASwQ,GAAU,OAAOA,EAAOlO,QAC5DgB,EAASiN,EAAQX,IAqN+Ia,cAlNnK,SAAwBN,GACrB,GAAIA,GAAOA,EAAI7N,KAAK9C,OAAOC,OAAS,EAAG,CACnC,IAAM4Q,EAAU,GAAG9P,OAAOmM,EAAMyD,GAChCJ,EAAQ3P,EAAuBiQ,EAAQ,QAAQzP,MAAK,SAAShB,EAAEiB,GAAI,OAAIjB,EAAE0C,KAAOzB,EAAEyB,KAAa,GAAgB,MAC/G,IAAIiO,EAAU5O,EACd4O,EAAQ7D,KAAO/M,EAAc0Q,EAAQrQ,KAAI,SAASwQ,GAAU,OAAOA,EAAOlO,SAAQ1B,OAClF0C,EAASiN,EAAQX,KA4M0J0G,cAxMjL,SAAwBjS,GACtB,IAAMkS,EAAYtB,EAAOhW,MAAM,GAC/BsX,EAAUjG,OAAOjM,EAAG,GACpB6Q,EAAUqB,GACV,IAAIhG,EAAU5O,EACd4O,EAAQ0E,OAASsB,EAAUvW,KAAI,SAASwW,GAAY,OAAOA,EAASlU,QACpEgB,EAASiN,EAAQX,IAkM4K6G,gBA/LhM,SAA0BJ,GACtB,GAAIA,GAASA,EAAM/T,KAAK9C,OAAOC,OAAS,EAAG,CACxC,IAAM8W,EAAY,GAAGhW,OAAO0U,EAAQoB,GACpCnB,EAAU9U,EAAuBmW,EAAU,QAAQ3V,MAAK,SAAShB,EAAEiB,GAAI,OAAIjB,EAAE0C,KAAOzB,EAAEyB,KAAa,GAAgB,MACnH,IAAIiO,EAAU5O,EACd4O,EAAQ0E,OAAStV,EAAc4W,EAAUvW,KAAI,SAASwW,GAAY,OAAOA,EAASlU,SAAQ1B,OAC1F0C,EAASiN,EAAQX,KAyLyLwF,kBAAiB1E,qBAlKnO,SAA8BC,GAE1B,GAAIhP,GAAgC,kBAAjBA,EAAKjB,SAA2C,kBAAZiQ,EAAsB,CAEzE,IAAMJ,EAAU3F,KAAKC,MAAMD,KAAKY,UAAU7J,IAC1C,GAAIA,EAAKhB,UAAYgB,EAAKhB,SAASlB,OAAS,EAAG,CAC3C,IAAIkB,EAAWgB,EAAKhB,SAEd+V,EtBVlB,SAA0B9W,EAAGiB,GAC3B,GAAIjB,IAAMiB,EAAG,OAAQ,EACrB,IAAK,IAAIwD,EAAE,EAAGzE,EAAEyE,KAAOxD,EAAEwD,GAAIA,KAC7B,OAAOA,EsBOmBsS,CAAiBhG,EAAQhP,EAAKjB,SAE9C,GAAIiQ,EAAQlR,OAASkC,EAAKjB,QAAQjB,OAAS,EAAG,CAG1C,IAAMmX,EAAkBjG,EAAQlR,OAASkC,EAAKjB,QAAQjB,OAEtD8Q,EAAQ5P,SAAWA,EAASX,KAAI,SAASiB,EAAO4V,GAS5C,OARIH,EAAUzV,EAAOH,OACjBG,EAAOH,OAAS8V,EAChB3V,EAAOE,KAAOyV,GACPF,EAAUzV,EAAOE,MAExBF,EAAOE,KAAOyV,EACd3V,EAAOhB,MAAQ0Q,EAAQ1R,MAAMgC,EAAOH,MAAMG,EAAOE,MAE9CF,UAIV,GAAI0P,EAAQlR,SAAWkC,EAAKjB,QAAQjB,OAGrC8Q,EAAQ5P,SAAWA,EAASX,KAAI,SAASiB,EAAO4V,GAK5C,OAJIH,GAAWzV,EAAOH,OAAS4V,EAAUzV,EAAOE,MAE5CF,EAAOhB,MAAQ0Q,EAAQ1R,MAAMgC,EAAOH,MAAMG,EAAOE,MAE9CF,SAGR,CAEH,IAAM6V,EAAiBnG,EAAQlR,OAASkC,EAAKjB,QAAQjB,OAErD8Q,EAAQ5P,SAAWA,EAASX,KAAI,SAASiB,EAAO4V,GAS5C,OARIH,EAAUzV,EAAOH,OACjBG,EAAOH,OAASgW,EAChB7V,EAAOE,KAAO2V,GACPJ,EAAUzV,EAAOE,MAExBF,EAAOE,KAAO2V,EACd7V,EAAOhB,MAAQ0Q,EAAQ1R,MAAMgC,EAAOH,MAAMG,EAAOE,MAE9CF,MAInBsP,EAAQ7P,QAAUiQ,EAClBrN,EAASiN,EAAQX,KAyGgOmH,cArGzP,SAAuBC,EAAUC,GAC7B,GAAItV,EAAKhB,SAAW,CAChB,IAAIA,EAAWgB,EAAKhB,SACdkP,GAAmBA,EAAeqG,eAAyD,IAAxCrG,EAAeqG,cAAczW,OAMlFsW,EAAkBiB,EAAUC,GAJxBtW,EAASqW,IACV5B,EAAgB8B,SAASC,eAAe,iBAAiBvH,GAAajP,EAASqW,GAAWlW,MAAMH,EAASqW,GAAW7V,OA+FqI4U,oBAAmBqB,cApC3R,SAAuB3K,GACnB,IAAI8D,EAAU5O,EACd4O,EAAQ9D,OAASA,EACjBnJ,EAASiN,EAAQX,IAiCqRyH,aA7B1S,SAAsBrB,GAClB,GAAIrU,EAAKhB,SAAU,CACf,IAAI4P,EAAU5O,EACVsU,EAActU,EAAKhB,SAAS1B,MAAM,EAAE+W,GAAczV,OAAOoB,EAAKhB,SAAS1B,MAAM+W,EAAe,IAChGzF,EAAQ5P,SAAWsV,EACnB3S,EAASiN,EAAQX,KAwB+RiB,WApBxT,SAAoBjB,GAChB,IAAIW,EAAU5O,EACdA,EAAKmP,YAAa,EAClBxN,EAASiN,EAAQX,IAiB+S0H,SAbpU,SAAkBjB,EAAOzG,KAaqTmB,aAP9U,SAAsBnB,GAClB,IAAIW,EAAU5O,EACdA,EAAKmP,YAAa,EAClBxN,EAASiN,EAAQX,M,oBC9NV,SAAS2H,GAAc3S,GAAQ,IAAD,EAC9BjD,EAA6BiD,EAA7BjD,KAAMiO,EAAuBhL,EAAvBgL,YAAcxK,EAASR,EAATQ,MADU,EAKjCwP,GAAUhQ,EAAMjD,KAAMiD,EAAMtB,SAAUsB,EAAMgL,YAAahL,EAAMQ,OAF/D2P,EAHiC,EAGjCA,YAAaC,EAHoB,EAGpBA,eAAgBnF,EAHI,EAGJA,eAAgBC,EAHZ,EAGYA,kBAAmB+E,EAH/B,EAG+BA,UAAWC,EAH1C,EAG0CA,aAAcpI,EAHxD,EAGwDA,KAAMuI,EAH9D,EAG8DA,OAAQjF,EAHtE,EAGsEA,UAAWmF,EAHjF,EAGiFA,YAClH/E,EAJiC,EAIjCA,YAAaK,EAJoB,EAIpBA,cAAe6F,EAJK,EAILA,cAAcG,EAJT,EAISA,gBAAiB/F,EAJ1B,EAI0BA,qBAAsBqG,EAJhD,EAIgDA,cAAehB,EAJ/D,EAI+DA,kBAAmBqB,EAJlF,EAIkFA,cAAeC,EAJjG,EAIiGA,aAAcxG,EAJ/G,EAI+GA,WAAaE,EAJ5H,EAI4HA,aAJ5H,EAMH1J,mBAASzC,EAAMjD,MAAQiD,EAAMjD,KAAKjB,QAAUkE,EAAMjD,KAAKjB,QAAW,IAN/D,mBAM9B8W,EAN8B,KAMnBC,EANmB,KAQlCC,EAAgB9S,EAAMsB,QAAQU,eAAiBhC,EAAMsB,QAAQU,cAAchG,OAAOZ,KAAI,SAAS6G,EAAUxC,GAC1G,OAAO,kBAACQ,EAAA,EAASwB,KAAV,CAAetD,IAAKsB,EAAGpE,MAAO4G,EAAWZ,QAAS,SAASV,GAAI6R,EAAcvQ,KAAgBA,MAMnG8Q,EAAoBhW,GAAQA,EAAKhB,SAAWgB,EAAKhB,SAASX,KAAI,SAASiB,EAAOoD,GAC9E,IAAIuT,EAAgBhT,EAAMsB,QAAQ2R,cAAcjX,OAAOZ,KAAI,SAASgX,EAAU/L,GAC3E,OAAO,kBAACpG,EAAA,EAASwB,KAAV,CAAgBtD,IAAKkI,EAAGhL,MAAO+W,EAAW/Q,QAAS,SAASV,GAAIwQ,EAAkB1R,EAAE2S,KAAgBA,MAE9G,OAAM,kBAACnS,EAAA,EAAD,CAAUO,MAAO,CAACmB,WAAW,SAAUP,QAAQ,OAAQjD,IAAKsB,EAAIS,GAAIC,KACvE,kBAACF,EAAA,EAASG,OAAV,CAAiBgB,QAAQ,OAAQhH,OAAK,EAAEiG,KAAK,KAAMxC,GAAG,yBACtD,kBAACyC,EAAA,EAAD,CAAQc,QAAQ,OAASf,KAAK,KAAMgB,QAAS,SAASV,GAAIwR,EAAc1S,EAAEpD,EAAOC,QACjF,2BAAID,EAAOC,MADX,IAGCD,EAAOhB,MAAQgB,EAAOhB,MAAQ,sBAE/B,kBAACiF,EAAA,EAAD,CAAQc,QAAQ,OAAOf,KAAK,KAAKgB,QAAS,SAASV,GAAI8R,EAAahT,EAAE,MAAtE,KACA,kBAACQ,EAAA,EAASM,KAAV,KACI,0BAAOC,MAAO,CAACC,QAAQ,WACrB,yBAAKO,UAAU,cACb,2BAAO1E,KAAK,OAAO0E,UAAU,eAAeC,SAAU,SAASN,GAAIwQ,EAAkB1R,EAAEkB,EAAEG,OAAOzF,QAClGA,MAAOgB,EAAOC,SAGf0W,OAGP,GAEL,GAAI/H,GAAmBA,EAAeqG,eAAiBrG,EAAeqG,cAAczW,OAAS,GAAMoQ,EAAeiI,oBAAsBlI,EAAa,CACjJ,IAAIgI,EAAiBhT,EAAMsB,QAAQ2R,eAAiBjT,EAAMsB,QAAQ2R,cAAcjX,OAAOZ,KAAI,SAASgX,EAAU/L,GAC3G,OAAO,kBAACpG,EAAA,EAASwB,KAAV,CAAetD,IAAKkI,EAAGhL,MAAO+W,EAAW/Q,QAAS,SAASV,GAAIwQ,GAAmB,EAAEiB,KAAgBA,MAE9GW,EAAkBjY,KAAK,kBAACmF,EAAA,EAAD,CAAU9B,IAAI,MAAMiD,QAAQ,UAAWlB,GAAIC,KAEnE,kBAACF,EAAA,EAASG,OAAV,CAAiBgB,QAAQ,UAAWhH,OAAK,EAAEiG,KAAK,KAAMxC,GAAG,yBACzD,kBAACyC,EAAA,EAAD,CAASc,QAAQ,UAAUf,KAAK,MAAhC,cAEA,kBAACJ,EAAA,EAASM,KAAV,KACC,0BAAMC,MAAO,CAACC,QAAQ,UAAWC,SAAU,SAASC,GAAIA,EAAEC,iBAAkBuQ,GAAmB,EAAElB,KAC5F,yBAAKjP,UAAU,cACb,2BAAO1E,KAAK,OAAO0E,UAAU,eAAeC,SAAU,SAASN,GAAIuP,EAAavP,EAAEG,OAAOzF,QAC3FA,MAAO4U,MAGR+C,KAKR,OAAOjW,GAAQ,yBAAKyD,MAAOA,EAAOQ,UAAWgK,EAAc,EAAI,cAAgB,gBACvE,yBAAKxK,MAAO,CAAC+L,SAAS,WAAY9I,MAAO,OAAQ+I,UAAU,OAASC,UAAW,qBAEzE1P,EAAKmP,YAAc,kBAAC5L,EAAA,EAAD,CAAQE,MAAO,CAACqC,MAAO,QAASxC,KAAK,KAAKe,QAAQ,YAAYC,QAAS,WAAY4K,EAAWjB,KAAgB,yBAAMxK,MAAO,CAACkD,OAAO,OAAQH,IAAKoH,KAAYhH,IAAI,YACrL5G,EAAKmP,YAAc,kBAAC5L,EAAA,EAAD,CAAQE,MAAO,CAACqC,MAAO,QAASxC,KAAK,KAAKe,QAAQ,UAAUC,QAAS,WAAY8K,EAAanB,KAAgB,yBAAMxK,MAAO,CAACkD,OAAO,OAAQH,IAAKoH,KAAYhH,IAAI,cAEtL,kBAACrD,EAAA,GAAD,GAASc,QAAQ,SAASZ,MAAO,CAACqC,MAAM,SAAUxC,KAAK,MAAvD,uBAAmE,CAACwC,MAAM,QAASI,WAAW,OAAQyJ,aAAa,OAAQC,UAAU,UAArI,0BAAuJ,SAAShM,GAAQ2D,OAAOC,QAAQ,kBAAmBvE,EAAMhB,WAAWgM,EAAajO,EAAKc,GAAKd,EAAKc,GAAK,OAA5P,QAGE,kBAACoC,EAAA,EAAD,CAAWO,MAAO,CAACqC,MAAM,QAAS3C,GAAIC,KACtC,kBAACF,EAAA,EAASG,OAAV,CAAiBhG,OAAK,EAAEiG,KAAK,KAAMxC,GAAG,yBACtC,kBAACyC,EAAA,EAAD,CAAUD,KAAK,MAAOtD,EAAK8K,OAAS9K,EAAK8K,OAAO9N,WAAa,gBAA7D,KACA,kBAACkG,EAAA,EAASM,KAAV,KACC,0BAAOC,MAAO,CAACC,QAAQ,UAAWC,SAAU,SAASC,GAAIA,EAAEC,iBAAkB4R,EAAcrC,KACtF,yBAAKnP,UAAU,cACb,2BAAO1E,KAAK,OAAO0E,UAAU,eAAe3F,MAAO8U,EAAalP,SAAU,SAASN,GAAIyP,EAAezP,EAAEG,OAAOzF,YAIlHyX,IAGL,0BAAMtS,MAAO,CAACqC,MAAM,SAAUkQ,GAE7B,yBAAKvS,MAAO,CAACqC,MAAM,SACnB,kBAAC,KAAD,CACC+J,gBAAgB,eAChBC,eAAgB,EAChBC,qBAAsB,GACtBC,YAAY,EACZC,UAAU,EACVC,IAAKsD,EACLzI,KAAMuI,EACNnD,oBAAqBd,GACrBe,YAAanN,EAAMsB,QAAQgB,aAAalH,KAAI,SAASmQ,EAAI9L,GAAI,MAAO,CAAC5B,GAAI4B,EAAG/B,KAAM6N,MAClF6B,SAAUsE,EACVrE,WAAYwE,KAGd,yBAAKrR,MAAO,CAACqC,MAAM,SAClB,kBAAC,KAAD,CACC+J,gBAAgB,cAChBC,eAAgB,EAChBC,qBAAsB,GACtBC,YAAY,EACZC,UAAU,EACVC,IAAK7B,EACLtD,KAAMA,EACNoF,oBAAqBd,GACrBe,YAAanN,EAAMsB,QAAQC,WAAWnG,KAAI,SAASmQ,EAAI9L,GAAI,MAAO,CAAC5B,GAAI4B,EAAG/B,KAAM6N,MAChF6B,SAAU5B,EACV6B,WAAYxB,KAGd,2BACCsH,QAAU,SAASxS,GACfuK,EAAkB,OAEtBkI,SAAW,SAASzS,GAClB,IAAI2Q,EAAgBhN,OAAO+O,eAAetZ,WAC1CmR,EAAkB,CAACoG,cAAcA,EAAe4B,kBAAmBlI,EAAauG,mBAAoB5Q,EAAEG,OAAOkQ,eAAgBQ,iBAAkB7Q,EAAEG,OAAOmQ,gBAE1J3U,KAAK,OAAOkE,MAAO,CAACiD,MAAM,OAAQpI,MAAOuX,EAAW/U,GAAI,iBAAiBmN,EAAa/J,SAAU,SAASN,GAAKkS,EAAalS,EAAEG,OAAOzF,OAAQyQ,EAAqBnL,EAAEG,OAAOzF,YC/H7L,IAuCeiY,GAvCS,SAAStT,GAC7B,IAAIuT,EAAkBvT,EAAMsB,QAAQgB,cAAgBtC,EAAMsB,QAAQgB,aAAatG,OAAOZ,KAAI,SAASoG,EAAS/B,GACtG,OAAO,kBAACQ,EAAA,EAASwB,KAAV,CAAetD,IAAKsB,EAAGpE,MAAOmG,EAAUH,QAAS,SAASV,GAAIX,EAAMwT,oBAAoBhS,KAAeA,MAEpH+R,EAAgB/I,QAAQ,kBAACvK,EAAA,EAASwB,KAAV,CAAetD,IAAK,wBAAyB9C,MAAO,GAAIgG,QAAS,SAASV,GAAIX,EAAMwT,oBAAoB,MAAxG,SAExB,IAAIV,EAAgB9S,EAAMsB,QAAQU,eAAiBhC,EAAMsB,QAAQU,cAAchG,OAAOZ,KAAI,SAAS6G,EAAUxC,GACvG,OAAO,kBAACQ,EAAA,EAASwB,KAAV,CAAetD,IAAKsB,EAAGpE,MAAO4G,EAAWZ,QAAS,SAASV,GAAIX,EAAMyT,qBAAqBxR,KAAgBA,MAIvH,OAFA6Q,EAActI,QAAQ,kBAACvK,EAAA,EAASwB,KAAV,CAAetD,IAAK,wBAAyB9C,MAAO,GAAIgG,QAAS,SAASV,GAAIX,EAAMyT,qBAAqB,MAAzG,SAEf,6BACE,8BAEIzT,EAAMsB,QAAQyD,cAAgB,GAAK,kBAACzE,EAAA,EAAD,CAAQD,KAAK,KAAMgB,QAAS,SAASV,GAAKX,EAAM0K,eAAe/J,IAAMS,QAAQ,WAAY,yBAAKZ,MAAO,CAACkD,OAAO,OAAQH,IAAKoH,KAAYhH,IAAI,cAC7K3D,EAAMsB,QAAQyD,eAAiB,GAAK,kBAACzE,EAAA,EAAD,CAAQD,KAAK,KAAKgB,QAAS,SAASV,GAAKX,EAAM4K,UAAUjK,IAAMS,QAAQ,aAAc,yBAAKZ,MAAO,CAACkD,OAAO,OAAQH,IAAKoH,KAAYhH,IAAI,aAI9K,0BAAMnD,MAAO,CAACmB,WAAW,UAAU,kBAAC,GAAD,CAAaqI,aAAchK,EAAMgK,aAAcC,gBAAiBjK,EAAMiK,mBAEzG,kBAAChK,EAAA,EAAD,CAAUO,MAAO,CAACmB,WAAW,SAAWzB,GAAIC,KACvC,kBAACF,EAAA,EAASG,OAAV,CAAiBhG,OAAK,EAAGyD,GAAG,yBAC5B,kBAACyC,EAAA,EAAD,KAAW,WAAWN,EAAM0T,kBAAoB,MAAO1T,EAAM0T,kBAAoB,IAAjF,KACA,kBAACzT,EAAA,EAASM,KAAV,KACKuS,IAIV,kBAAC7S,EAAA,EAAD,CAAUO,MAAO,CAACmB,WAAW,SAAWzB,GAAIC,KACvC,kBAACF,EAAA,EAASG,OAAV,CAAiBhG,OAAK,EAAGyD,GAAG,yBAC5B,kBAACyC,EAAA,EAAD,KAAW,UAAUN,EAAM2T,iBAAmB,MAAO3T,EAAM2T,iBAAmB,IAA9E,KACA,kBAAC1T,EAAA,EAASM,KAAV,KACKgT,IAGV,kBAACjT,EAAA,EAAD,CAASE,MAAO,CAACmB,WAAW,OAAQP,QAAQ,UAAUC,QAAS,SAASV,GAAIX,EAAM8K,gBAAgB9K,EAAM2T,iBAAkB3T,EAAM0T,qBAAhI,gBC4WEE,OAhZf,SAAsBzW,EAAUC,EAAeoQ,EAAaqG,GAAgB,IAAD,EACMnG,GAAevQ,EAAUC,EAAeoQ,GAA9GxP,EADgE,EAChEA,QAASU,EADuD,EACvDA,SAAUM,EAD6C,EAC7CA,WAAahC,EADgC,EAChCA,MAAOmC,EADyB,EACzBA,SAAUrB,EADe,EACfA,UAAWwB,EADI,EACJA,OADI,EAE7BmD,mBAAS,IAFoB,mBAEhES,EAFgE,KAEjDyK,EAFiD,OAGrBlL,mBAAS,IAHY,mBAGhEmL,EAHgE,KAG7CC,EAH6C,OAI/BpL,mBAAS,IAJsB,mBAIhEuH,EAJgE,KAIlDC,EAJkD,OAKjCxH,mBAAS,IALwB,mBAKhEtB,EALgE,KAKnDD,EALmD,OAM7BuB,mBAAS,IANoB,mBAMhEJ,EANgE,KAMjDD,EANiD,OAS3BK,mBAAS,IATkB,mBAShEV,EATgE,KAShDD,EATgD,KAUjEgM,EAAUzC,IAAMC,YAEhB1F,EAASmI,cACTtH,EAAUwH,cACZ0F,EAAmB/N,EAAOkO,QAAUlO,EAAOkO,QAAU,GAgBrDJ,EAAoB9N,EAAOmO,SAAWnO,EAAOmO,SAAW,GA2W5D,OAjVAjO,qBAAU,WAKD,IAAI5C,EAAgB5D,GAAO,SAASvC,GACjC,KAAMiN,GAAgBA,EAAapP,OAAOC,QAAS,MAAS8Y,GAAoBA,EAAiB/Y,OAAOC,QAAS,MAAS6Y,GAAqBA,EAAkB9Y,OAAOC,QAAS,GAAK,OAAO,EAC7L,IAAImZ,GAAe,EACfN,GAAqBA,EAAkB7Y,OAAS,IAE5CmZ,EADAjX,EAAK8K,SAAW6L,GAMxB,IAAIO,GAAc,EACdN,GAAoBA,EAAiB9Y,OAAS,IAE1CoZ,KADAlX,EAAKsT,SAAqD,IAA3CtT,EAAKsT,OAAO7H,QAAQmL,KAM3C,IAAIO,GAAmB,EAQvB,OAPIlK,GAAgBA,EAAanP,OAAS,IAElCqZ,KADAnX,EAAKjB,UAAmD,IAAxCiB,EAAKjB,QAAQ0M,QAAQwB,KAMtCkK,GAAoBD,GAAeD,KAM1C5F,EAAW,GACflL,EAAc9H,KAAI,SAAS2B,GAA8C,OAAnCA,EAAKc,KAAIuQ,EAASrR,EAAKc,KAAM,GAAa,QAChFqF,EAAclH,MAAK,SAAShB,EAAEiB,GAAK,OAAOjB,EAAEc,QAAUG,EAAEH,WACxD6R,EAAiBzK,GACjB2K,EAAqBO,GACrByF,EAAc3Q,KAGpB,CAAClG,EAAOgN,EAAc2J,EAAkBD,IAoSnC,CACH1V,UAASU,WAAUM,aAAahC,QAAOmC,WAAUrB,YAAWwB,SAAQ4D,gBAAeyK,mBAAiB7C,gBAnJxG,SAAyB2G,EAAO5J,GAC5BoC,EAAgB,IAChB,IAAIoG,EAAO,GACPoB,GAASA,EAAM7W,OAAOC,OAAS,GAAGwV,EAAOvV,KAAK2W,GAClD,IAAI0C,EAAU,GACVtM,GAAUA,EAAOjN,OAAOC,OAAS,IAAGsZ,EAAYtM,GACpDnJ,EAAS,CAACb,GAAG,KAAM/B,QAAQ,GAAI+L,OAAOsM,EAAW9D,OAAOA,EAAOvI,KAAK,MA8IpEkC,eAAcC,kBAAiB9I,cAAaD,iBAAgBmB,gBAAeD,mBAAkBuR,mBAAkBH,oBA5XnH,SAA6BnY,GAGzB,IACIuE,EAAM,CAAC,IADA6G,EAAQ4H,SAASC,SAASlU,MAAM,KACvB,KACpBuZ,EAAmBtY,GACER,OAAS,GAC1B+E,EAAM9E,KAAK,UAAU6Y,GAErBD,EAAkB7Y,OAAS,GAC3B+E,EAAM9E,KAAK,WAAW4Y,GAG1BjN,EAAQ3L,KAAK8E,EAAMtF,KAAK,MA+W2GoZ,oBAAmBD,qBA3W1J,SAA8BpY,GAC1B,IACIuE,EAAM,CAAC,IADA6G,EAAQ4H,SAASC,SAASlU,MAAM,KACvB,IACpBsZ,EAAoBrY,EAChBsY,EAAiB9Y,OAAS,GAC1B+E,EAAM9E,KAAK,UAAU6Y,GAErBD,EAAkB7Y,OAAS,GAC3B+E,EAAM9E,KAAK,WAAW4Y,GAE1BjN,EAAQ3L,KAAK8E,EAAMtF,KAAK,MAkWvByH,iBAAgBD,oBAAmBgM,UACpCjN,OAjRJ,SAAgB0N,GAEZ,IAAIC,EAAWD,GAAYpN,EAC3B,GAAInE,EAAO,CACP,IAAIyR,EAAW,GACfzR,EAAM5B,KAAI,SAAS2B,EAAK0C,GAErB,GAAI1C,EAAKmP,YAAcnP,EAAKc,IAAM+P,EAAkB7Q,EAAKc,IAAK,CAC1D,IAAI8N,EAAU3F,KAAKC,MAAMD,KAAKY,UAAU7J,IACnC4O,EAAQ7D,OAAM6D,EAAQ7D,KAAK,KACQ,IAApC6D,EAAQ7D,KAAKU,QAAQgG,IAAkB7C,EAAQ7D,KAAKhN,KAAK0T,GAC7D7C,EAAQ7D,KAAO/M,EAAc4Q,EAAQ7D,MACrC2G,EAAS3T,KAAK6Q,QAEd8C,EAAS3T,KAAKiC,GAElB,OAAO,QAEVoC,EAASsP,KA+PN/M,SAlET,SAAkB6M,GAGhB,GAAIvR,EAAO,CACP,IAAIyR,EAAW,GACfzR,EAAM5B,KAAI,SAAS2B,EAAK0C,GAErB,GAAI1C,EAAKmP,YAAcnP,EAAKc,IAAM+P,EAAkB7Q,EAAKc,IAAK,CAC1D,IAAI8N,EAAU3F,KAAKC,MAAMD,KAAKY,UAAU7J,IACnC4O,EAAQ7D,OAAM6D,EAAQ7D,KAAK,IAChC,IAAI4G,EAAY,GAChB/C,EAAQ7D,KAAK1M,KAAI,SAASmQ,GAItB,OAHIA,IAAQgD,GACRG,EAAU5T,KAAKyQ,GAEZ,QAEXI,EAAQ7D,KAAO4G,EACfD,EAAS3T,KAAK6Q,QAEd8C,EAAS3T,KAAKiC,GAElB,OAAO,QAEVoC,EAASsP,KA0CIlM,WAtClB,SAAoBgM,GAGnB,GAAIvR,EAAO,CACP,IAAIyR,EAAW,GACfzR,EAAM5B,KAAI,SAAS2B,EAAK0C,GAErB,GAAI1C,EAAKmP,YAAcnP,EAAKc,IAAM+P,EAAkB7Q,EAAKc,IAAK,CAC1D,IAAI8N,EAAU3F,KAAKC,MAAMD,KAAKY,UAAU7J,IACnC4O,EAAQ0E,SAAQ1E,EAAQ0E,OAAO,IACpC,IAAI3B,EAAY,GAChB/C,EAAQ0E,OAAOjV,KAAI,SAASmQ,GAIxB,OAHIA,IAAQgD,GACRG,EAAU5T,KAAKyQ,GAEZ,QAEXI,EAAQ0E,OAAS3B,EACjBD,EAAS3T,KAAK6Q,QAEd8C,EAAS3T,KAAKiC,GAElB,OAAO,QAEVoC,EAASsP,KAcgB5M,UA3PjC,SAAmB0M,GAEf,IAAI6F,EAAc7F,GAAYxM,EAC9B,GAAI/E,EAAO,CACP,IAAIyR,EAAW,GACfzR,EAAM5B,KAAI,SAAS2B,EAAK0C,GAErB,GAAI1C,EAAKmP,YAAcnP,EAAKc,IAAM+P,EAAkB7Q,EAAKc,IAAK,CAC1D,IAAI8N,EAAU5O,EACd4O,EAAQ9D,OAASuM,EACjB3F,EAAS3T,KAAK6Q,QAEd8C,EAAS3T,KAAKiC,GAElB,OAAO,QAEVoC,EAASsP,KA2O2B/D,eAxO5C,WACK,GAAI1N,EAAO,CACR,IAAIyR,EAAW,GACfzR,EAAM5B,KAAI,SAAS2B,EAAK0C,GACrB,IAAIkM,EAAU5O,EAGd,OAFA4O,EAAQO,YAAa,EACrBuC,EAAS3T,KAAK6Q,GACP,QAEVxM,EAASsP,KA+N2C7D,UA1N3D,WACI,GAAI5N,EAAO,CACR,IAAIyR,EAAW,GACfzR,EAAM5B,KAAI,SAAS2B,EAAK0C,GACpB,GAAI1C,EAAM,CACN,IAAI4O,EAAU5O,EAEVA,EAAKc,IAAM+P,EAAkB7Q,EAAKc,KACnC8N,EAAQO,YAAa,EACrBuC,EAAS3T,KAAK6Q,KAEbA,EAAQO,YAAa,EACrBuC,EAAS3T,KAAK6Q,IAGtB,OAAO,QAEXxM,EAASsP,KAyMuDtM,YArMvE,SAAqBoM,GAElB,IAAI8F,EAAa9F,GAAYlM,EAC7B,GAAIrF,EAAO,CACP,IAAIyR,EAAW,GACfzR,EAAM5B,KAAI,SAAS2B,EAAK0C,GAErB,GAAI1C,EAAKmP,YAAcnP,EAAKc,IAAM+P,EAAkB7Q,EAAKc,IAAK,CAC1D,IAAI8N,EAAU3F,KAAKC,MAAMD,KAAKY,UAAU7J,IACnC4O,EAAQ0E,SAAQ1E,EAAQ0E,OAAO,KACQ,IAAxC1E,EAAQ0E,OAAO7H,QAAQ6L,IAAoB1I,EAAQ0E,OAAOvV,KAAKuZ,GACnE1I,EAAQ0E,OAAStV,EAAc4Q,EAAQ0E,QACvC5B,EAAS3T,KAAK6Q,QAEd8C,EAAS3T,KAAKiC,GAElB,OAAO,QAEVoC,EAASsP,KAmLoEE,aA7IrF,SAAsB5R,EAAK5B,GACvBuD,EAAS3B,EAAK5B,GACd2S,EAAQc,QAAQC,gBAAgB1T,GAChC0Y,EAAc7W,IA0IiF8R,YAvInG,SAAqB3T,GAGjB,IAAI4T,EAAW,IACXuF,EAAgB,GAChBC,EAAc,GACdC,EAAkB,EAClBC,EAAgB,EAEhBnQ,OAAO0K,WAAa,KACpBD,EAAW,IACXuF,EAAgB,GAChBC,EAAc,EACdC,EAAkB,EAClBC,EAAgB,GAETnQ,OAAO0K,YAAc,MAC5BD,EAAW,IACXuF,EAAgB,GAChBC,EAAc,EACdC,EAAkB,EAClBC,EAAgB,GAEpB,IAAIC,EAAc,EACd3X,EAAOC,EAAM7B,GAMjB,OALI4B,GAAQA,EAAKhB,WAAU2Y,GAAe3X,EAAKhB,SAASlB,OAAO2Z,GAC3DzX,GAAQA,EAAK+K,OAAM4M,GAAe3X,EAAK+K,KAAKjN,OAAO0Z,GACnDxX,GAAQA,EAAKsT,SAAQqE,GAAe3X,EAAKsT,OAAOxV,OAAO4Z,GAChD1F,EAAY/U,KAAK2a,MAAMD,GAAgBJ,GA2G0DrF,UAtShH,SAAmBtO,GACf,GAAI2D,OAAOC,QAAQ,wCACPvH,EAAO,CACX,IAAIyR,EAAW,GACfzR,EAAM5B,KAAI,SAAS2B,EAAK0C,GAQpB,OAPI1C,EAAKc,IAAM+P,EAAkB7Q,EAAKc,KAC9Bd,EAAKmP,YAITuC,EAAS3T,KAAKiC,GAEX,QAEXoC,EAASsP,GACTX,EAAQc,QAAQC,gBAAgB,KAuR+E+F,QA9K3H,SAAiBjU,GAEb,GAAI3D,EAAO,CACP,IAAIyR,EAAW,GACXoG,EAAU,GACd3R,EAAc9H,KAAI,SAAS2B,EAAK0C,GAU7B,OATK1C,EAAK8K,QAAU9K,EAAK8K,OAAOhN,OAAS,GAAKkC,EAAKc,IAAM+P,EAAkB7Q,EAAKc,KACxEd,EAAKmP,WACL2I,EAAQ/Z,KAAKiC,GAKhB0R,EAAS3T,KAAKiC,GAEZ,QAqElB,SAAqB0R,GACjB,GAAIA,EAAU,CACV,IAAIlR,EAAqBC,IAAYC,eAAe,CACjDC,KAAM,UACNC,UAAa,aAEfJ,EAAmBgB,QAAQ,WAAWN,MAAK,SAAS6W,GAC5CA,IACDrG,EAASrT,KAAI,SAASuQ,GAAwC,OAA7BmJ,EAAaha,KAAK6Q,GAAkB,QACrEpO,EAAmBuB,QAAQ,UAAUgW,QA5E7CC,CAAYF,GACZ1V,EAASsP,GACTX,EAAQc,QAAQC,gBAAgB,KA2J4FM,QA1EpI,SAAiBnE,GACThO,GAASA,EAAMgO,MA7BvB,SAAoBjO,GAChB,IAAIQ,EAAqBC,IAAYC,eAAe,CACjDC,KAAM,UACNC,UAAa,aAEfJ,EAAmBgB,QAAQ,WAAWN,MAAK,SAAS6W,GAC7CA,EAAaha,KAAKiC,GAClBQ,EAAmBuB,QAAQ,UAAUgW,MAwBzCE,CAAWhY,EAAMgO,IACjBhM,EAAWgM,OCnUjBkE,GAAY,SAASlP,GACvB,IAAM7E,EAAQ6E,EAAM7E,MACdqF,EAAQR,EAAMQ,MACdzD,EAAOiD,EAAMkF,KAAKlI,MAAM7B,GAC9B,OAAO,kBAACwX,GAAD,CACF5V,KAAMA,EAAMiO,YAAa7P,EAAOqF,MAAOA,EACvC9B,SAAUsB,EAAMkF,KAAKxG,SAAUM,WAAYgB,EAAMkF,KAAKlG,WACtDsC,QAAStB,EAAMkF,KAAK5D,QAASkI,eAAgBxJ,EAAMkF,KAAKsE,kBAGlD,SAASyL,GAAiBjV,GAAQ,IAAD,EACsX4T,GAAa,UAAU,WAAW,UAAW5T,EAAMqP,gBAAgBwE,eAA9d7V,EADqC,EACrCA,QAASgB,EAD4B,EAC5BA,WAAahC,EADe,EACfA,MAAOc,EADQ,EACRA,UAAWkM,EADH,EACGA,aAAcC,EADjB,EACiBA,gBAAiB0J,EADlC,EACkCA,iBAAkBH,EADpD,EACoDA,oBAAqBE,EADzE,EACyEA,kBAAmBD,EAD5F,EAC4FA,qBAAsBtS,EADlH,EACkHA,YAAaD,EAD/H,EAC+HA,eAAgBmB,EAD/I,EAC+IA,cAAeD,EAD9J,EAC8JA,iBAAmBL,EADjL,EACiLA,eAAgBD,EADjM,EACiMA,kBAAmBgM,EADpN,EACoNA,QAASjN,EAD7N,EAC6NA,OAAOa,EADpO,EACoOA,SAAUa,EAD9O,EAC8OA,WAAYV,EAD1P,EAC0PA,UAAW6I,EADrQ,EACqQA,eAAgBE,EADrR,EACqRA,UAAYzI,EADjS,EACiSA,YAAawM,EAD9S,EAC8SA,aAAcG,EAD5T,EAC4TA,YAAaG,EADzU,EACyUA,UAAW/L,EADpV,EACoVA,cAAe4H,EADnW,EACmWA,gBA8D9Y,OA7DDhF,qBAAU,WACN9H,MAEF,IA0DM,6BACJ,kBAAC,GAAD,iBAAqBgC,EAArB,CAA4BgK,aAAcA,EAAcC,gBAAiBA,EAAiB0J,iBAAkBA,EAAkBH,oBAAqBA,EAAqB9I,eAAgBA,EAAgBE,UAAWA,EAAYE,gBAAiBA,EAAiB4I,kBAAmBA,EAAmBD,qBAAsBA,EAAsB/R,SAAUA,EAAUa,WAAYA,KA/CvX,SAAsBvC,GAUlB,OAAIkD,GAAiBA,EAAcrI,OAAS,EACjC,6BACP,kBAACmI,EAAD,CAAgBhG,MAAOA,EAAOkG,cAAeA,IAC3ClD,EAAMsB,QAAQyD,cAAgB,GAAK,0BAAMvE,MAAO,CAACqC,MAAM,UACpD,kBAACiC,GAAD,CACC3C,YAAaA,EAAaE,cAAeA,EAAgBD,iBAAkBA,EAAmBV,SAAUA,EAAUa,WAAYA,EAC3HV,UAAWA,EAAWE,eAAgBA,EAAgBD,kBAAmBA,EACzEjB,OAAQA,EAAQM,YAAaA,EAAaD,eAAgBA,EAAiBI,QAAStB,EAAMsB,UAK9F,kBAAChB,EAAA,EAAD,CAAQE,MAAO,CAACmB,WAAW,OAAQN,QAAS4N,EAAW7N,QAAQ,UAA/D,oBAID,kBAAC,KAAD,CACI6L,IAAKa,EACLwB,SAAU,CAACtS,MAAOkG,EAAexE,SAAUiQ,EAAc3P,aAAYlB,YAAWwD,QAAStB,EAAMsB,QAASkI,eAAgBxJ,EAAMwJ,gBAC9H+F,QAAS,SAAApU,GAAK,OAAIA,GAClB6F,UAAU,OACV0C,OAAQ,IACR8L,UAAWtM,EAAcrI,OACzB4U,SAAUX,EACVrL,MAAO,QACPyL,KAID,6BAEH,yBAAK1O,MAAO,CAACgM,UAAU,WAC3B,6BAAK,uCAAe,6BAAK,6BADrB,UACiC,kBAAC,IAAD,CAAMnJ,GAAG,YAAY,kBAAC/C,EAAA,EAAD,iBADtD,SAC2F,kBAAC,IAAD,CAAM+C,GAAG,WAAW,kBAAC/C,EAAA,EAAD,gBAD/G,MAONoP,CAAa1P,I,+DC1ER,SAASkV,GAAgBlV,GAEpCmV,KAAQC,SAASpV,EAAMyG,QAAQ4H,SAASC,UACxC,IAAI+G,EAAO,CAACC,YAAY,SAClBC,EAAcvV,EAAMyG,SAAWzG,EAAMyG,QAAQ4H,UAAYrO,EAAMyG,QAAQ4H,SAASC,SAAWtO,EAAMyG,QAAQ4H,SAASC,SAAW,IAC7HkH,EAAQ,CACV,IAAK,CAAC9X,KAAM,WAAW+X,MAAM,GAC7B,UAAW,CAAC/X,KAAM,SAAS+X,MAAM,GACjC,WAAY,CAAC/X,KAAM,UAAU+X,MAAM,GACnC,UAAW,CAAC/X,KAAM,SAAS+X,MAAM,GACjC,SAAU,CAAC/X,KAAM,WAAW+X,MAAM,GAClC,cAAe,CAAC/X,KAAM,aAAa+X,MAAM,GACzC,YAAa,CAAC/X,KAAM,UAAU+X,MAAM,GACpC,UAAW,CAAC/X,KAAM,SAAS+X,MAAM,GACjC,QAAS,CAAC/X,KAAM,OAAO+X,MAAM,IAI3BC,EAAQpa,OAAOC,KAAKia,GAAOpa,KAAI,SAASua,EAAK5X,GAC/C,IAAM6X,EAAOJ,EAAMG,GACnB,OAAIC,EAAKH,KACDG,EAAKD,KACE,uBAAGxX,IAAKJ,EAAGyC,MAAO6U,EAAQzR,KAAMgS,EAAKD,MAAO,kBAACrV,EAAA,EAAD,CAAQc,QAAQ,WAAYwU,EAAKlY,OAE7E,kBAAC,IAAD,CAAMS,IAAKJ,EAAGyC,MAAO6U,EAAQhS,GAAIsS,GAAO,kBAACrV,EAAA,EAAD,CAAQc,SAAwC,IAA/BmU,EAAY/M,QAAQmN,GAAe,UAAY,WAAYC,EAAKlY,OAGjI,QAGLmY,EAAaL,EAAMD,IAAgBC,EAAMD,GAAaO,cAAgBN,EAAMD,GAAaO,cAAgB,kBAAC,IAAD,CAAMzS,GAAG,SAAS,kBAAC/C,EAAA,EAAD,cAIjI,OAAO,kBAACyV,GAAA,EAAD,CAASC,GAAG,OAAO5U,QAAQ,QAC7BpB,EAAMiW,SAAW,yBAAKzV,MAAO,CAAC+L,SAAS,QAAQ2J,IAAI,EAAEC,KAAK7R,OAAO0K,WAAc1K,OAAO0K,WAAY,EAAI,GAAM,IAAKoH,OAAQ,gBAAiBC,WAAY,OAAQC,QAAS,QAASC,SAAS,QAAS7J,aAAa,QAC5M,kBAACpM,EAAA,EAAD,CAAQc,QAAQ,SAASf,KAAK,KAAMG,MAAO,CAACqC,MAAM,QAASI,WAAY,OAAOyJ,aAAa,OAAO/K,WAAW,OAAQN,QAAS,SAASV,GAAIX,EAAMwJ,eAAe,MAAhK,KAAiLxJ,EAAMiW,SAG3L,yBAAK1S,IAAKiT,KAAYhW,MAAO,CAACkD,OAAO,MAAON,YAAY,SAAUO,IAAI,SAGtE,yBAAKnD,MAAO,CAACiD,MAAO,SACnBiS,GAGA1V,EAAMiW,QACP,kBAACF,GAAA,EAAOU,KAAR,CAAajW,MAAO,CAAC+L,SAAS,QAAS2J,IAAI,MAAOQ,MAAM,OAAQ1V,UAAU,uBAAwB6U,GAClG,yBAAKtS,IAAKoT,KAAchT,IAAI,UAAUnD,MAAO,CAAC+L,SAAS,QAAS2J,IAAI,EAAGQ,MAAM,EAAGE,OAAO,GAAInW,QAAST,EAAM6W,QAAU,QAAU,WAlDtI1B,KAAQ2B,WAAW,gB,wBCIJ,SAASC,GAAa/W,GAAQ,IAChCjD,EAA6BiD,EAA7BjD,KAAMiO,EAAuBhL,EAAvBgL,YAAcxK,EAASR,EAATQ,MADW,EAKhCwP,GAAUhQ,EAAMjD,KAAMiD,EAAMtB,SAAUsB,EAAMgL,YAAahL,EAAMQ,MAAOR,EAAMwJ,gBAF5E2G,EAHgC,EAGhCA,YAAaC,EAHmB,EAGnBA,eAAgBnF,EAHG,EAGHA,eAAgBC,EAHb,EAGaA,kBAAmB+E,EAHhC,EAGgCA,UAAWC,EAH3C,EAG2CA,aAAcpI,EAHzD,EAGyDA,KAAMuI,EAH/D,EAG+DA,OAAQjF,EAHvE,EAGuEA,UAAWmF,EAHlF,EAGkFA,YAClH/E,EAJgC,EAIhCA,YAAaK,EAJmB,EAInBA,cAAe6F,EAJI,EAIJA,cAAcG,EAJV,EAIUA,gBAAkB/F,EAJ5B,EAI4BA,qBAAsBqG,EAJlD,EAIkDA,cAAehB,EAJjE,EAIiEA,kBAAmBqB,EAJpF,EAIoFA,cAAeC,EAJnG,EAImGA,aAAcxG,EAJjH,EAIiHA,WAAaE,EAJ9H,EAI8HA,aAG/J2G,EAAgB9S,EAAMsB,QAAQU,eAAiBhC,EAAMsB,QAAQU,cAAchG,OAAOZ,KAAI,SAAS6G,EAAUxC,GAC1G,OAAO,kBAACQ,EAAA,EAASwB,KAAV,CAAetD,IAAKsB,EAAGpE,MAAO4G,EAAWZ,QAAS,SAASV,GAAI6R,EAAcvQ,KAAgBA,MAGnG8Q,EAAoBhW,GAAQA,EAAKhB,SAAWgB,EAAKhB,SAASX,KAAI,SAASiB,EAAOoD,GAC9E,IAAIuT,EAAgBhT,EAAMsB,QAAQ2R,cAAcjX,OAAOZ,KAAI,SAASgX,EAAU/L,GAC3E,OAAO,kBAACpG,EAAA,EAASwB,KAAV,CAAgBtD,IAAKkI,EAAGhL,MAAO+W,EAAW/Q,QAAS,SAASV,GAAIwQ,EAAkB1R,EAAE2S,KAAgBA,MAE9G,OAAM,kBAACnS,EAAA,EAAD,CAAUO,MAAO,CAACmB,WAAW,SAAUP,QAAQ,OAAQjD,IAAKsB,EAAIS,GAAIC,KACvE,kBAACF,EAAA,EAASG,OAAV,CAAiBgB,QAAQ,OAAQhH,OAAK,EAAEiG,KAAK,KAAMxC,GAAG,yBACtD,kBAACyC,EAAA,EAAD,CAAQc,QAAQ,OAASf,KAAK,KAAMgB,QAAS,SAASV,GAAIwR,EAAc1S,EAAEpD,EAAOC,QACjF,2BAAID,EAAOC,MADX,IAGCD,EAAOhB,MAAQgB,EAAOhB,MAAQ,sBAE/B,kBAACiF,EAAA,EAAD,CAAQc,QAAQ,OAAOf,KAAK,KAAKgB,QAAS,SAASV,GAAI8R,EAAahT,EAAE,MAAtE,KACA,kBAACQ,EAAA,EAASM,KAAV,KACI,0BAAOC,MAAO,CAACC,QAAQ,WACrB,yBAAKO,UAAU,cACb,2BAAO1E,KAAK,OAAO0E,UAAU,eAAeC,SAAU,SAASN,GAAIwQ,EAAkB1R,EAAEkB,EAAEG,OAAOzF,QAClGA,MAAOgB,EAAOC,SAGf0W,OAGR,GAEJ,GAAI/H,GAAmBA,EAAeqG,eAAiBrG,EAAeqG,cAAczW,OAAS,GAAMoQ,EAAeiI,oBAAsBlI,EAAa,CACjJ,IAAIgI,EAAiBhT,EAAMsB,QAAQ2R,eAAiBjT,EAAMsB,QAAQ2R,cAAcjX,OAAOZ,KAAI,SAASgX,EAAU/L,GAC3G,OAAO,kBAACpG,EAAA,EAASwB,KAAV,CAAetD,IAAKkI,EAAGhL,MAAO+W,EAAW/Q,QAAS,SAASV,GAAIwQ,GAAmB,EAAEiB,KAAgBA,MAE9GW,EAAkBjY,KAAK,kBAACmF,EAAA,EAAD,CAAU9B,IAAI,MAAMiD,QAAQ,UAAWlB,GAAIC,KAEnE,kBAACF,EAAA,EAASG,OAAV,CAAiBgB,QAAQ,UAAWhH,OAAK,EAAEiG,KAAK,KAAMxC,GAAG,yBACzD,kBAACyC,EAAA,EAAD,CAASc,QAAQ,UAAUf,KAAK,MAAhC,cAEA,kBAACJ,EAAA,EAASM,KAAV,KACC,0BAAMC,MAAO,CAACC,QAAQ,UAAWC,SAAU,SAASC,GAAIA,EAAEC,iBAAkBuQ,GAAmB,EAAElB,KAC5F,yBAAKjP,UAAU,cACb,2BAAO1E,KAAK,OAAO0E,UAAU,eAAeC,SAAU,SAASN,GAAIuP,EAAavP,EAAEG,OAAOzF,QAC3FA,MAAO4U,MAGR+C,KAKR,OAAOjW,GAAQ,yBAAKyD,MAAOA,EAAOQ,UAAWgK,EAAc,EAAI,cAAgB,gBACvE,yBAAKxK,MAAO,CAAC+L,SAAS,WAAY9I,MAAO,OAAQ+I,UAAU,OAASC,UAAW,qBAEzE1P,EAAKmP,YAAc,kBAAC5L,EAAA,EAAD,CAAQE,MAAO,CAACqC,MAAO,QAASxC,KAAK,KAAKe,QAAQ,YAAYC,QAAS,WAAY4K,EAAWjB,KAAgB,yBAAKxK,MAAO,CAACkD,OAAO,OAAQH,IAAKoH,KAAYhH,IAAI,YACpL5G,EAAKmP,YAAc,kBAAC5L,EAAA,EAAD,CAAQE,MAAO,CAACqC,MAAO,QAASxC,KAAK,KAAKe,QAAQ,UAAUC,QAAS,WAAY8K,EAAanB,KAAgB,yBAAKxK,MAAO,CAACkD,OAAO,OAAQH,IAAKoH,KAAYhH,IAAI,cAElL5G,EAAK8K,QAAU,kBAACvH,EAAA,EAAD,CAASE,MAAO,CAACqC,MAAM,QAASlB,WAAW,SAAWP,QAAQ,UAAWC,QAAS,WAAYrB,EAAMmP,QAAQnE,KAAgB,yBAAKzH,IAAKyT,KAAcrT,IAAI,SAAxJ,UACd5G,GAAQ,kBAACuD,EAAA,EAAD,CAAUE,MAAO,CAACqC,MAAM,QAASlB,WAAW,SAAUP,QAAQ,aAAa,yBAAKmC,IAAKyT,KAAcrT,IAAI,SAAvG,WACV,kBAACrD,EAAA,EAAD,CAASc,QAAQ,SAASZ,MAAO,CAACqC,MAAM,SAAUxB,QAAS,SAASV,GAAIX,EAAMhB,WAAWgM,EAAajO,EAAKc,GAAKd,EAAKc,GAAK,MAAQ,yBAAK0F,IAAK0T,KAAgBtT,IAAI,WAAhK,WAGA,kBAAC1D,EAAA,EAAD,CAAWO,MAAO,CAACqC,MAAM,QAAS3C,GAAIC,KACtC,kBAACF,EAAA,EAASG,OAAV,CAAiBhG,OAAK,EAAEiG,KAAK,KAAMxC,GAAG,yBACtC,kBAACyC,EAAA,EAAD,CAAUD,KAAK,MAAOtD,EAAK8K,OAAS9K,EAAK8K,OAAO9N,WAAa,gBAA7D,KACA,kBAACkG,EAAA,EAASM,KAAV,KACC,0BAAOC,MAAO,CAACC,QAAQ,UAAWC,SAAU,SAASC,GAAIA,EAAEC,iBAAkB4R,EAAcrC,KACtF,yBAAKnP,UAAU,cACb,2BAAO1E,KAAK,OAAO0E,UAAU,eAAe3F,MAAO8U,EAAalP,SAAU,SAASN,GAAIyP,EAAezP,EAAEG,OAAOzF,YAIlHyX,IAGL,0BAAMtS,MAAO,CAACqC,MAAM,SAAUkQ,GAG9B,yBAAKvS,MAAO,CAACqC,MAAM,SAClB,kBAAC,KAAD,CACC+J,gBAAgB,eAChBC,eAAgB,EAChBC,qBAAsB,GACtBC,YAAY,EACZC,UAAU,EACVC,IAAKsD,EACLzI,KAAMuI,EACNnD,oBAAqBd,GACrBe,YAAanN,EAAMsB,QAAQgB,aAAalH,KAAI,SAASmQ,EAAI9L,GAAI,MAAO,CAAC5B,GAAI4B,EAAG/B,KAAM6N,MAClF6B,SAAUsE,EACVrE,WAAYwE,KAGd,yBAAKrR,MAAO,CAACqC,MAAM,SAClB,kBAAC,KAAD,CACC+J,gBAAgB,cAChBC,eAAgB,EAChBC,qBAAsB,GACtBC,YAAY,EACZC,UAAU,EACVC,IAAK7B,EACLtD,KAAMA,EACNoF,oBAAqBd,GACrBe,YAAanN,EAAMsB,QAAQC,WAAWnG,KAAI,SAASmQ,EAAI9L,GAAI,MAAO,CAAC5B,GAAI4B,EAAG/B,KAAM6N,MAChF6B,SAAU5B,EACV6B,WAAYxB,KAGd,2BAECsH,QAAU,SAASxS,GACfuK,EAAkB,OAEtBkI,SAAW,SAASzS,GAClB,IAAI2Q,EAAgBhN,OAAO+O,eAAetZ,WAC1CmR,EAAkB,CAACoG,cAAcA,EAAe4B,kBAAmBlI,EAAauG,mBAAoB5Q,EAAEG,OAAOkQ,eAAgBQ,iBAAkB7Q,EAAEG,OAAOmQ,gBAE1J3U,KAAK,OAASkE,MAAO,CAACpB,MAAM,OAAQqE,MAAM,OAASpI,MAAO0B,EAAKjB,QAAS+B,GAAI,iBAAiBmN,EAC7F/J,SAAU,SAASN,GAAKmL,EAAqBnL,EAAEG,OAAOzF,Y,4CCxHnE6T,GAAY,SAASlP,GACvB,IAAM7E,EAAQ6E,EAAM7E,MACdqF,EAAQR,EAAMQ,MACdzD,EAAOiD,EAAMkF,KAAKlI,MAAM7B,GAE9B,OAAO,kBAAC4b,GAAD,CACFha,KAAMA,EAAOiO,YAAa7P,EAAOqF,MAAOA,EACxC9B,SAAUsB,EAAMkF,KAAKxG,SAAUM,WAAYgB,EAAMkF,KAAKlG,WAAYmQ,QAASnP,EAAMkF,KAAKiK,QACtF7N,QAAStB,EAAMkF,KAAK5D,QAAUkI,eAAgBxJ,EAAMkF,KAAKsE,kBAInD,SAAS0N,GAAgBlX,GAAO,MAGyY4T,GAAa,UAAU,SAAS,UAAW5T,EAAMqP,gBAAgBwE,eAA9e7V,EAHoC,EAGpCA,QAASgB,EAH2B,EAG3BA,WAAYhC,EAHe,EAGfA,MAAQc,EAHO,EAGPA,UAAWkM,EAHJ,EAGIA,aAAcC,EAHlB,EAGkBA,gBAAiB9I,EAHnC,EAGmCA,YAAaD,EAHhD,EAGgDA,eAAgBmB,EAHhE,EAGgEA,cAAeD,EAH/E,EAG+EA,iBAAkBuR,EAHjG,EAGiGA,iBAAkBH,EAHnH,EAGmHA,oBAAqBE,EAHxI,EAGwIA,kBAAmBD,EAH3J,EAG2JA,qBAAsB1R,EAHjL,EAGiLA,eAAgBD,EAHjM,EAGiMA,kBAAmBgM,EAHpN,EAGoNA,QAASjN,EAH7N,EAG6NA,OAAQa,EAHrO,EAGqOA,SAAUa,EAH/O,EAG+OA,WAAYV,EAH3P,EAG2PA,UAAW6I,EAHtQ,EAGsQA,eAAgBE,EAHtR,EAGsRA,UAAYzI,EAHlS,EAGkSA,YAAawM,EAH/S,EAG+SA,aAAcG,EAH7T,EAG6TA,YAAaG,EAH1U,EAG0UA,UAAW2F,EAHrV,EAGqVA,QAASzF,EAH9V,EAG8VA,QAASjM,EAHvW,EAGuWA,cAAe4H,EAHtX,EAGsXA,gBA2Eja,OA1EAhF,qBAAU,WACN9H,MAGF,IAsEK,6BAEH,kBAAC,GAAD,iBAAqBgC,EAArB,CAA4BgK,aAAcA,EAAcC,gBAAiBA,EAAiB0J,iBAAkBA,EAAkBH,oBAAqBA,EAAqB9I,eAAgBA,EAAgBE,UAAWA,EAAWE,gBAAiBA,EAAiBpJ,SAAUA,EAAUa,WAAYA,EAAYmR,kBAAmBA,EAAmBD,qBAAsBA,KAzD5W,SAAsBzT,GAKlB,OAAIkD,GAAiBA,EAAcrI,OAAS,EAYjC,6BACN,0BAAM2F,MAAO,CAACqC,MAAM,OAAQI,WAAW,SAAvC,OAAwDC,EAAcrI,OAAtE,IAA+EmC,EAAMnC,OAArF,aACCmF,EAAMsB,QAAQyD,cAAgB,GAAK,0BAAMvE,MAAO,CAACqC,MAAM,UACrD,sCAAY7C,EAAMsB,QAAQyD,cAA1B,gBACF,kBAAC,EAAD,CAAkB5C,YAAaA,EAAaE,cAAeA,EAAgBD,iBAAkBA,EAAmBd,QAAStB,EAAMsB,QAAUI,SAAUA,EAAUa,WAAYA,IACvK,kBAAC,EAAD,CAAmBV,UAAWA,EAAWE,eAAgBA,EAAgBD,kBAAmBA,EAAoBR,QAAStB,EAAMsB,QAAUI,SAAUA,EAAUa,WAAYA,IACzK,kBAAC,EAAD,CAAgB1B,OAAQA,EAAQM,YAAaA,EAAaD,eAAgBA,EAAiBI,QAAStB,EAAMsB,QAAUI,SAAUA,EAAUa,WAAYA,KAGpJ,kBAACjC,EAAA,EAAD,CAAQE,MAAO,CAACmB,WAAW,OAAQN,QAASuT,EAASxT,QAAQ,WAA7D,iBACA,kBAACd,EAAA,EAAD,CAAQE,MAAO,CAACmB,WAAW,OAAQN,QAAS4N,EAAW7N,QAAQ,UAA/D,oBAMA,kBAAC,KAAD,CACI6L,IAAKa,EACLwB,SAAU,CAACtS,MAAOkG,EAAexE,SAAUiQ,EAAcQ,UAASnQ,aAAYlB,YAAWwD,QAAQtB,EAAMsB,QAASkI,eAAgBxJ,EAAMwJ,gBACtI+F,QAAS,SAAApU,GAAK,OAAIA,GAClB6F,UAAU,OACV0C,OAAQ,IACR8L,UAAWtM,EAAcrI,OACzB4U,SAAUX,EACVrL,MAAO,QACPyL,KAMD,6BACH,yBAAK1O,MAAO,CAACgM,UAAU,WAC3B,6BAAK,sDAA8B,6BAAK,6BADpC,QAC8C,kBAAC,IAAD,CAAMnJ,GAAG,YAAY,kBAAC/C,EAAA,EAAD,KAAQ,yBAAKE,MAAO,CAACkD,OAAO,MAAOyT,aAAa,OAAS5T,IAAK6T,KAAqBzT,IAAI,YAAvF,YADnE,sBACgN,kBAAC,IAAD,CAAMN,GAAG,aAAa,kBAAC/C,EAAA,EAAD,gBAAgB,yBAAKiD,IAAK8T,KAAsB1T,IAAI,UAAUnD,MAAO,CAACkD,OAAO,MAAO4R,YAAY,WADtU,yCASN5F,CAAa1P,I,mFC3GvB,SAASsX,GAAUC,GACf,IAAIC,EAAM,IAAIC,KA0Bd,OAzBC9Y,QAAQC,IAAI,CAAC,MAAM2Y,IACpB,SAASG,EAAoBH,EAAc7N,GACnCzO,MAAMC,QAAQqc,EAAaI,QAC3BJ,EAAaI,MAAMvc,KAAI,SAASiM,GAC5B1I,QAAQC,IAAI,CAAC,WAAWyI,IACxB,IAAIuQ,EAAWvQ,EAAKwQ,QAAUxQ,EAAKwQ,OAAOhd,OAAS,EAAK,CAACgd,QAAQ,GAAQ,GAEzE,OADIxQ,EAAK3J,MAAQ2J,EAAK3J,KAAK7C,OAAS,GAAKwM,EAAK0E,SAASyL,EAAInQ,KAAKqC,EAAK,IAAIrC,EAAK3J,KAAK2J,EAAK0E,QAAS6L,GAC1F,QAGX3c,MAAMC,QAAQqc,EAAaO,UAC3BP,EAAaO,QAAQ1c,KAAI,SAAS2c,GAM9B,OALApZ,QAAQC,IAAI,CAAC,aAAamZ,IACtBA,EAAOra,MAAQqa,EAAOra,KAAK7C,OAAS,GAAG2c,EAAIO,OAAOA,EAAOra,OACxDqa,EAAOJ,OAASI,EAAOJ,MAAM9c,OAAS,GAAOkd,EAAOD,SAAWC,EAAOD,QAAQjd,OAAS,IACxF6c,EAAoBK,EAAQrO,EAAK,IAAIqO,EAAOra,MAEzC,QAMnBga,CAAoBH,EAAa,IAE1B,IAAInZ,SAAQ,SAAS4Z,EAAQC,GAChCT,EAAIU,cAAc,CAAC5b,KAAK,SAAS2B,MAAK,SAAS8N,GAC3CiM,EAAQjM,S,SC3BLoM,G,mFAAf,WAA0B1G,GAA1B,UAAAzW,EAAA,+EACY,IAAIoD,SAAQ,SAAS4Z,EAAQC,GACbza,IAAYC,eAAe,CAC5CC,KAAM,UACNC,UAAc,UAEHY,QAAQ,WAAWN,MAAK,SAAS6K,GAC1C,IAAIsP,EAAK,CAACrQ,WAAY0J,EAAM1J,YAExBC,EAAU,GACVqQ,EAAY,GACZ5G,EAAMzJ,SACN1M,OAAOC,KAAKkW,EAAMzJ,SAAS5M,KAAI,SAAS6G,GACpC,IAAIqW,EAAW7G,EAAMzJ,QAAQ/F,GACxB+F,EAAQ/F,KAAa+F,EAAQ/F,GAAa,CAACvE,KAAKuE,EAAWiG,QAAQ,GAAIE,OAAQ,KACpF,IAAIA,EAAS,GAyBd,OAxBKnN,MAAMC,QAAQod,IACdA,EAASld,KAAI,SAASU,GAUnB,OATAkM,EAAQ/F,GAAWiG,QAAQpN,KAAKe,EAAgBC,EAAQA,QAAQA,EAAQC,WACpEd,MAAMC,QAAQY,EAAQC,WACtBD,EAAQC,SAASX,KAAI,SAASiB,GAI3B,OAHA+L,EAAO/L,EAAOC,OAAQ,EACjBrB,MAAMC,QAAQmd,EAAYhc,EAAOC,SAAQ+b,EAAYhc,EAAOC,MAAQ,IACzE+b,EAAYhc,EAAOC,MAAMxB,KAAKuB,EAAOhB,OAC9B,QAGP,QAGd2M,EAAQ/F,GAAWiG,QAAUnN,EAAciN,EAAQ/F,GAAWiG,SAASlM,OACvEgM,EAAQ/F,GAAWmG,OAAS9M,OAAOC,KAAK6M,GAAQhN,KAAI,SAASiX,GACzD,IAAIkG,EAAiBlG,EAAW,OAMhC,OALIZ,EAAM1V,UAAY0V,EAAM1V,SAASsW,KAAgBZ,EAAM1V,SAASsW,GAAYmG,YAAc/G,EAAM1V,SAASsW,GAAYoG,aACrHF,EAAgB,GACZ9G,EAAM1V,SAASsW,GAAYmG,aAAYD,EAAeG,WAAajH,EAAM1V,SAASsW,GAAYmG,YAC9F/G,EAAM1V,SAASsW,GAAYoG,YAAWF,EAAeI,MAAQlH,EAAM1V,SAASsW,GAAYoG,YAEzF,CAAC/a,KAAM2U,EAAY/V,KAAMic,MAE9B,QAGdH,EAAKpQ,QAAU1M,OAAOM,OAAOoM,GAuB9B,IAAI4Q,EAAW,GACXC,EAAgB,GACpB/P,EAAM1N,KAAI,SAAS2B,GAqBf,OApBKA,EAAK1B,OAAS0B,EAAK1B,MAAMT,OAAOC,OAAS,IACtCkC,EAAK8L,UACA5N,MAAMC,QAAQ2d,EAAc9b,EAAK8L,YAAWgQ,EAAc9b,EAAK8L,SAAW,IAC/E+P,EAAS7b,EAAK1B,OAAS0B,EAAK8L,QAC5BgQ,EAAc9b,EAAK8L,SAAS/N,KAAKiC,EAAK1B,QAE1CC,OAAOC,KAAK8c,GAAajd,KAAI,SAASiX,GAWlC,OAVIZ,EAAM1V,UAAY0V,EAAM1V,SAASsW,IAAgBZ,EAAM1V,SAASsW,GAAYvJ,OAC5E2I,EAAM1V,SAASsW,GAAYvJ,MAAM1N,KAAI,SAAS0d,GAM3C,OAJK/b,GAAQA,EAAK+K,OAAiD,IAAzC/K,EAAK+K,KAAKU,QAAQsQ,IAEvCT,EAAYhG,GAAYvX,KAAKiC,EAAK1B,OAEhC,QAGP,SAGR,QAGXsD,QAAQC,IAAI,CAAC,WAAWga,EAAUC,IAElCT,EAAKW,WAAazd,OAAOC,KAAK8c,GAAajd,KAAI,SAASiX,GAEpD,IAAMzW,EAAS,GAWf,OAVAb,EAAcsd,EAAYhG,IAAarW,OAAOZ,KAAI,SAASC,GAIvD,OAHKud,EAASvd,IACNA,GAASA,EAAMT,OAAOC,OAAS,GAAGe,EAAOd,KAAM,CAACO,MAAMA,IAEvD,QAEXC,OAAOC,KAAKsd,GAAezd,KAAI,SAASyN,GAEpC,OADIA,GAAWA,EAAQjO,OAAOC,OAAS,GAAGe,EAAOd,KAAK,CAACO,MAAMwN,EAAS+P,SAASC,EAAchQ,KACtF,QAEJ,CAACnL,KAAM2U,EAAW,OAAQzW,OAAOA,MAK5C+C,QAAQC,IAAI,CAAC,aAAawZ,EAAKW,aAE/B,IAAMhN,EAAU/F,KAAKY,UAAUwR,GAG9BJ,EAFe,CAACF,QAAQ,CAAC,CAAC,KAAO,SAAUH,MAAM,CAAC,CAACja,KAAK,aAAcqO,QAASA,eAnH5F,4C,sEA4HA,WAA6B0F,GAA7B,UAAAzW,EAAA,kEACWsc,GADX,SAC2Ba,GAAW1G,GADtC,wG,+BCzHeuH,G,mFAAf,WAA6BvH,GAA7B,UAAAzW,EAAA,+EACW,IAAIoD,SAAQ,SAAS4Z,EAAQC,GAChC,IAAIgB,EAAezb,IAAYC,eAAe,CAC3CC,KAAM,UACNC,UAAc,UAEZub,EAAW,GACfD,EAAa1a,QAAQ,WAAWN,MAAK,SAAS6K,GAkB1C,IAAId,EAAQ,GACRyJ,EAAMzJ,SACN1M,OAAOC,KAAKkW,EAAMzJ,SAAS5M,KAAI,SAAS6G,GACpC,IAAIqW,EAAW7G,EAAMzJ,QAAQ/F,GAS9B,OARMhH,MAAMC,QAAQ8M,EAAQ/F,MAAc+F,EAAQ/F,GAAa,IAC1DhH,MAAMC,QAAQod,IACdA,EAASld,KAAI,SAASU,GAEnB,OADAkM,EAAQ/F,GAAWnH,KAAKe,EAAgBC,EAAQA,QAAQA,EAAQC,WACzD,QAGdiM,EAAQ/F,GAAalH,EAAciN,EAAQ/F,IAAYjG,OACjD,QAKd,IAAID,EAAS,GACT0V,EAAM1V,UACNT,OAAOC,KAAKkW,EAAM1V,UAAUX,KAAI,SAASgX,GACrC,IAAI+G,EAAmB,GACnB9c,EAASoV,EAAM1V,SAASqW,GAyB5B,OAxBI/V,EAAOT,SACPud,EAAmBA,EAAiBxd,OAAOU,EAAOT,SAElDS,EAAOyM,QAOTnK,QAAQC,IAAI,CAAC,iBAAiBvC,EAAOyM,QACpCA,EAAM1N,KAAI,SAAS2B,GASf,OARAV,EAAOyM,MAAM1N,KAAI,SAAS2N,GAMtB,OALApK,QAAQC,IAAI,CAACmK,GAAwC,IAAhChM,EAAK+K,KAAKU,QAAQO,GAAiBhM,EAAK+K,OACzD/K,GAAQA,EAAK+K,OAAwC,IAAhC/K,EAAK+K,KAAKU,QAAQO,KACvCpK,QAAQC,IAAI,mBACZua,EAAiBre,KAAKiC,EAAK1B,QAExB,QAEJ,SAGdU,EAASqW,GAAarX,EAAcoe,GAAkBnd,OAC/C,QAIfV,OAAOC,KAAKyM,GAAS5M,KAAI,SAASyM,GAE9B,OADAqR,EAAWpe,KAAK,CAAC4C,KAAKmK,EAAO,UAAUkE,QAAS/D,EAAQH,GAAQvN,KAAK,QAC9D,QAEXgB,OAAOC,KAAKQ,GAAUX,KAAI,SAASiB,GAE/B,OADA6c,EAAWpe,KAAK,CAAC4C,KAAMrB,EAAO,UAAU0P,QAAShQ,EAASM,GAAQ/B,KAAK,QAChE,QAEV0d,EAASkB,UAnFvB,4C,sEAyFA,WAAgCzH,GAAhC,gBAAAzW,EAAA,sEACwBge,GAAcvH,GADtC,cACUkG,EADV,yBAEWL,GAAU,CAACK,MAAMA,KAF5B,4C,sBChGA,IA4HeyB,GA5HO,CAClBC,OAAO,+oBA6BPC,YAAY,szBAiCZC,SAAS,qEAKTC,QAAQ,kCAIRC,cAAe,SAASzY,EAAW0Y,GAC/B,MAAO,sRAUP1Y,EAVO,2DAYG0Y,EAZH,qQAkBgBA,EAlBhB,8JAqBiCA,EArBjC,2CA2BXC,OAAO,mGAMPC,QAAQ,ydAYRC,QAAQ,8FChHX,SAASC,GAAmBC,EAAYC,EAAaC,EAAgBC,EAAeC,EAAeC,EAAoBC,EAAkBC,EAAaC,GACnJ,IAAIC,EAAa,CACb7C,MAAM,CACF,CAACja,KAAK,aAAaqO,QAAQkO,GAC3B,CAACvc,KAAK,aAAaqO,QAAQmO,GAC3B,CAACxc,KAAK,aAAaqO,QAAQoO,GAC3B,CAACzc,KAAK,kBAAkBqO,QAAQqO,GAChC,CAAC1c,KAAK,gBAAgBqO,QAAQsO,IAElCvC,QAAQ,CACJ,CAACpa,KAAK,UAAWia,MAAM2C,GACvB,CAAC5c,KAAK,OACFia,MAAM,CAAC,CAACja,KAAK,SAAUqO,QAASgO,GAAa,CAACrc,KAAK,aAAcqO,QAASwO,GAAwB,KAClGzC,QAAQ,CAAC,CAACpa,KAAK,UAAWia,MAAMqC,OAK5C,OADArb,QAAQC,IAAI,CAAC,WAAW4b,IACjBA,ECnBV,SAASV,GAAmBC,EAAYC,EAAaC,EAAgBC,EAAeC,EAAeC,EAAoBC,EAAkBC,EAAaG,GACnJ,IAAID,EAAa,CACb7C,MAAM,CACF,CAACja,KAAK,aAAaqO,QAAQkO,GAC3B,CAACvc,KAAK,aAAaqO,QAAQmO,GAC3B,CAACxc,KAAK,aAAaqO,QAAQoO,GAC3B,CAACzc,KAAK,kBAAkBqO,QAAQqO,GAChC,CAAC1c,KAAK,gBAAgBqO,QAAQsO,IAElCvC,QAAQ,CACJ,CAACpa,KAAK,UAAWia,MAAM2C,GACvB,CAAC5c,KAAK,OACFia,MAAM,CAAC,CAACja,KAAK,WAAYqO,QAASgO,GAAa,CAACrc,KAAK,aAAcqO,QAAS0O,GAA8B,KAC1G3C,QAAQ,CAAC,CAACpa,KAAK,UAAWia,MAAMqC,OAK5C,OADArb,QAAQC,IAAI,CAAC,WAAW4b,IACjBA,EChBX,IASeE,GATK,CACZ,CAAChd,KAAK,OAAOid,eC+ErB,SAAuBlJ,GACnB,OAAO,IAAIrT,SAAQ,SAAS4Z,EAAQC,IAtFxC,SAAoBxG,GAEhB,OADA9S,QAAQC,IAAI,CAAC,eAAe6S,IACrB,IAAIrT,SAAQ,SAAS4Z,EAAQC,GAC/B,IAAIgB,EAAezb,IAAYC,eAAe,CAC5CC,KAAM,UACNC,UAAc,UAEZid,EAAoBpd,IAAYC,eAAe,CACjDC,KAAM,UACNC,UAAc,eAEhBsb,EAAa1a,QAAQ,WAAWN,MAAK,SAAS6K,GAC1CnK,QAAQC,IAAI,CAAC,QAAQkK,IACtB,IAAI+R,EAAY,GACZpJ,EAAM1V,UACNT,OAAOC,KAAKkW,EAAM1V,UAAUX,KAAI,SAASiB,EAAOoD,GAO5C,OANIgS,EAAM1V,SAASM,IAAWpB,MAAMC,QAAQuW,EAAM1V,SAASM,GAAQyM,QAC/D2I,EAAM1V,SAASM,GAAQyM,MAAM1N,KAAI,SAASgJ,GAEvC,OADAyW,EAAUzW,IAAQ,EACX,QAGP,QAGf,IAAI0W,EAAa,GACjBxf,OAAOC,KAAKsf,GAAWzf,KAAI,SAAS2N,GAElC,OADA+R,EAAW/R,GAAW,GACf,QAETD,EAAM1N,KAAI,SAAS2B,GASf,OARAzB,OAAOC,KAAKsf,GAAWzf,KAAI,SAAS2N,GAMhC,OAJIhM,GAAQA,EAAK+K,OAAwC,IAAhC/K,EAAK+K,KAAKU,QAAQO,IAEvC+R,EAAW/R,GAASjO,KAAKiC,EAAK1B,OAE3B,QAEJ,QAEXoW,EAAM3I,MAAQgS,EAEd,IAAIC,EAAa,GAEjBpc,QAAQC,IAAI,CAAC,kBAAkB6S,EAAMuJ,gBAAiBvJ,EAAMsJ,aACxDtJ,EAAMuJ,iBAAmBvJ,EAAMsJ,WAC/BH,EAAkBrc,QAAQ,WAAWN,MAAK,SAASgd,GAC3ChgB,MAAMC,QAAQ+f,IACdA,EAAc7f,KAAI,SAAS8f,GAevB,OAdIzJ,EAAMsJ,YACNtJ,EAAMsJ,WAAW3f,KAAI,SAAS2N,GAE1B,OADImS,EAAc7f,QAAU0N,IAASgS,EAAWG,EAAc7f,OAAS6f,GAChE,QAIXzJ,EAAMuJ,iBACNvJ,EAAMuJ,gBAAgB5f,KAAI,SAAS2N,GAE/B,OADImS,EAAcpT,OAAiD,IAAzCoT,EAAcpT,KAAKU,QAAQO,KAAiBgS,EAAWG,EAAc7f,OAAS6f,GACjG,QAIR,QAEVvc,QAAQC,IAAI,CAAC,oBAAoBmc,IACjCtJ,EAAM0J,iBAAmBJ,EACzB/C,EAAQvG,IAERuG,EAAQvG,MAMhBuG,EAAQvG,GAEb9S,QAAQC,IAAI,CAAC,eAAe6S,WAShC2J,CAAW3J,GAAOxT,MAAK,SAAS8N,GAC5BpN,QAAQC,IAAI,CAAC,UAAU6S,IACvB,IAAM4J,EAAO,IAAIC,KAAK,CAACtV,KAAKY,UAAUmF,EAAS,KAAM,IAAK,CAACzP,KAAO,qBAClE0b,EAAQqD,WDnFZ,CAAC3d,KAAK,OAAOid,e,8CACb,CAACjd,KAAK,UAAUid,e,8CAEhB,CAACjd,KAAK,gBAAgBid,eFuQ9B,SAAyBlJ,GACrB,OAAO,IAAIrT,SAAQ,SAAS4Z,EAAQC,IAtPxC,SAAsBxG,GAUlB,OADA9S,QAAQC,IAAI,CAAC,eAAe6S,IACrB,IAAIrT,SAAQ,SAAS4Z,EAAQC,GAC/B,IAAIgB,EAAezb,IAAYC,eAAe,CAC5CC,KAAM,UACNC,UAAc,UAEZid,EAAoBpd,IAAYC,eAAe,CACjDC,KAAM,UACNC,UAAc,eAMhBsb,EAAa1a,QAAQ,WAAWN,MAAK,SAAS6K,GAE3CnK,QAAQC,IAAI,CAAC,QAAQkK,IAGrB,IAAIyS,EAAc,GACd9J,EAAM1V,UACNT,OAAOC,KAAKkW,EAAM1V,UAAUX,KAAI,SAASiB,EAAOoD,GAC5C,IAAM+b,EAAc/J,EAAM1V,SAASM,GAiBnC,OAfImf,GAAeA,EAAY5f,SAC3B2f,EAAYlf,GAAUmf,EAAY5f,QAGlC6V,EAAM1V,SAASM,IAAWpB,MAAMC,QAAQuW,EAAM1V,SAASM,GAAQyM,QAC/DA,EAAM1N,KAAI,SAAS6N,EAASK,GAOxB,OANAmI,EAAM1V,SAASM,GAAQyM,MAAM1N,KAAI,SAASqgB,GAIvC,OAHIxS,EAASnB,OAA+C,IAAvCmB,EAASnB,KAAKU,QAAQiT,IACvCF,EAAYlf,GAAQvB,KAAKmO,EAAS5N,OAE/B,QAEH,QAGR,QAGdsD,QAAQC,IAAI,CAAC,SAAS2c,IAEtB,IAAIvB,EAAY,GACZ1Y,EAAU,GACdhG,OAAOC,KAAKggB,GAAangB,KAAI,SAASiB,GAClC,IAAIT,EAAS2f,EAAYlf,GAIzB,OAHA2d,EAAYlf,KAAK,CAAC4C,KAAKrB,EAAO,OAAO0P,QAAQnQ,EAAOtB,KAAK,QACzDgH,EAAQxG,KAAK,aAAauB,GAC1BiF,EAAQxG,KAAK,gBAAgBuB,EAAO,QAC7B,QAMZ,IAAIwc,EAAgB,GACpB/P,EAAM1N,KAAI,SAAS2B,GAQf,OAPKA,EAAK1B,OAAS0B,EAAK1B,MAAMT,OAAOC,OAAS,GACtCkC,EAAK8L,UACA5N,MAAMC,QAAQ2d,EAAc9b,EAAK8L,YAAWgQ,EAAc9b,EAAK8L,SAAW,IAE/EgQ,EAAc9b,EAAK8L,SAAS/N,KAAKiC,EAAK1B,QAGvC,QAEXsD,QAAQC,IAAI,CAAC,WAAWia,IACxB,IAAI6C,EAAc,GAClBpgB,OAAOC,KAAKsd,GAAezd,KAAI,SAASyN,GAQpC,OAPA6S,EAAY5gB,KAAK,cAAc+N,GAC/B9N,EAAc8d,EAAchQ,IAAU7M,OAAOZ,KAAI,SAAS2B,GAGtD,OADA2e,EAAY5gB,KAAK,KAAKiC,GACf,QAEX2e,EAAY5gB,KAAK,MACV,QAEX6D,QAAQC,IAAI,CAAC,eAAe8c,IAG5B,IAAIC,EAAO,GACPlK,EAAMzJ,UACNrJ,QAAQC,IAAI,CAAC,eAAe6S,EAAMzJ,UAClC1M,OAAOC,KAAKkW,EAAMzJ,SAAS5M,KAAI,SAAS6G,GACpC,IAAM2Z,EAAanK,EAAMzJ,QAAQ/F,GACjCtD,QAAQC,IAAI,eAAeqD,EAAU2Z,GACrCD,EAAO7gB,KAAK,aAAamH,GACzB,IAAIqW,EAAW,GAYf,OAXAsD,EAAWxgB,KAAI,SAASU,GAGpB,GADA6C,QAAQC,IAAI,CAAC,OAAO9C,IAChBA,GAAWA,EAAQA,SAAWA,EAAQA,QAAQlB,OAAOC,OAAS,EAAG,CACjE,IAAIsD,EAAM1B,EAA0BX,EAAQA,QAASA,EAAQC,UAC7Duc,EAASna,GAAO,KAAKA,EAEzB,OAAO,SAEXwd,EAAO,GAAD,mBAAKA,GAAL,YAAgBrgB,OAAOM,OAAO0c,MAC7Bxd,KAAK,MACL,SAGf,IAAIif,EAAa4B,EAAOrhB,KAAK,MAAM,KAAKohB,EAAYphB,KAAK,MAAMgH,EAAQhH,KAAK,MAC5EqE,QAAQC,IAAImb,GAEX,IAAIG,EAAgBzI,EAAMoK,WAAapK,EAAMoK,WAAazC,GAAcC,OAErEe,EAAqB3I,EAAMqK,gBAAkBrK,EAAMqK,gBAAkB1C,GAAcE,YACnFe,EAAmB5I,EAAMsK,aAAetK,EAAMsK,aAAe3C,GAAcG,SAG3EU,EAAiBb,GAAcI,QAC/BwC,EAAgB,GAEhB1B,EAAc,GACdrf,MAAMC,QAAQuW,EAAMwK,cACpBxK,EAAMwK,YAAY7gB,KAAI,SAASyB,GAC3B,GAAIA,GAAUA,EAAOjC,OAAOC,OAAS,EAAG,CACpC,IAAIqhB,EAAS3iB,EAAiBJ,EAAYO,EAAiBmD,KACvDsf,EAAQziB,EAAiBwiB,GAAQ,UACrCF,EAAclhB,KAAKqhB,GACnB,IAAIze,EAAOwe,GAAUA,EAAOthB,OAAOC,OAAS,EAAIqhB,EAAO,GAAGziB,cAAgByiB,EAAOE,UAAU,GAAK,GAChG9B,EAAYxf,KAAK,CAAC4C,KAAKA,EAAK,YAAaqO,QAAQqN,GAAcK,cAAc/b,EAAK,SAASye,KAC3FlC,GAAgB,aAAavc,EAAK,YAEtC,OAAO,QAGf,IAAI2e,EAAiB5K,EAAM1V,SAAWT,OAAOC,KAAKkW,EAAM1V,UAAY,GAChEugB,EAAgB7K,EAAMzJ,QAAU1M,OAAOC,KAAKkW,EAAMzJ,SAAW,GAC7DuU,EAAc9K,EAAM+K,MAASlhB,OAAOC,KAAKkW,EAAM+K,OAAU/K,EAAM1V,SAAWT,OAAOC,KAAKkW,EAAM1V,UAAY,GACxG0gB,EAAkB,GACtBF,EAAYnhB,KAAI,SAASshB,GAItB,OAHAD,EAAgBC,GAAQ,CACpBpgB,KAAMmV,EAAM+K,OAAS/K,EAAM+K,MAAME,IAAUjL,EAAM+K,MAAME,GAAMC,SAAWlL,EAAM+K,MAAME,GAAMC,SAAW,gBAElG,QAEVhe,QAAQC,IAAI,CAAC,SAASyd,EAAgBC,EAAeC,EAAaE,IAElE,IAAIG,EAAmB,GACnBN,EAAczhB,OAAS,IACvB+hB,EAAmB9hB,KAAK,YACxBwhB,EAAclhB,KAAI,SAASyM,GAMvB,OALA+U,EAAmB9hB,KAAK,KAAK+M,GAKtB,QAEX+U,EAAmB9hB,KAAK,OAGxBuhB,EAAexhB,OAAS,IACxB+hB,EAAmB9hB,KAAK,aACxBuhB,EAAejhB,KAAI,SAASiB,GAExB,OADAugB,EAAmB9hB,KAAK,KAAKuB,GACtB,QAEXugB,EAAmB9hB,KAAK,OAExByhB,EAAY1hB,OAAS,IACrB+hB,EAAmB9hB,KAAK,UACxByhB,EAAYnhB,KAAI,SAASshB,EAAKjd,GAG1B,OAFAmd,EAAmB9hB,KAAK,KAAK4hB,EAAK,KAClCE,EAAmB9hB,KAAK,aAAa2hB,EAAgBC,GAAMpgB,MACpD,QAEXsgB,EAAmB9hB,KAAK,OAGxB2W,EAAMoL,aAAapL,EAAMoL,YAAYjiB,OAAOR,MAAM,MAAMgB,KAAI,SAAS0hB,GACrEF,EAAmB9hB,KAAKgiB,MAI5B,IAAI/B,EAAa,GACbtJ,EAAMuJ,iBAAmBvJ,EAAMsJ,WAC/BH,EAAkBrc,QAAQ,WAAWN,MAAK,SAASgd,GAC3ChgB,MAAMC,QAAQ+f,IACdA,EAAc7f,KAAI,SAAS8f,GAcvB,OAbIzJ,EAAMsJ,YACNtJ,EAAMsJ,WAAW3f,KAAI,SAAS2N,GAE1B,OADImS,EAAc7f,QAAU0N,IAASgS,EAAWG,EAAc7f,OAAS6f,GAChE,QAGXzJ,EAAMuJ,iBACNvJ,EAAMuJ,gBAAgB5f,KAAI,SAAS2N,GAE/B,OADImS,EAAcpT,OAAiD,IAAzCoT,EAAcpT,KAAKU,QAAQO,KAAiBgS,EAAWG,EAAc7f,OAAS6f,GACjG,QAIR,QAON5f,OAAOC,KAAKwf,GAAYlgB,OAAS,IACjC+hB,EAAmB9hB,KAAK,cACxBQ,OAAOC,KAAKwf,GAAY3f,KAAI,SAAS2hB,GAC9B,IAAIC,EAAYjC,EAAWgC,GAS3B,OARAH,EAAmB9hB,KAAK,SAAS3B,EAAY6jB,EAAU3hB,QACvDuhB,EAAmB9hB,KAAK,WAAWkiB,EAAU3hB,OACzC2hB,EAAUpE,UAAYoE,EAAUpE,SAAS/d,OAAS,GAClDmiB,EAAUpE,SAASxd,KAAI,SAASyN,GAE5B,OADA+T,EAAmB9hB,KAAK,WAAW+N,GAC5B,QAGR,SAGlBmP,EAAQ8B,GAAmBC,EAAYC,EAAaC,EAAgBC,EAAe0C,EAAmBtiB,KAAK,MAAO8f,EAAoBC,EAAkBC,EAAa7I,EAAMwL,eAE5KjF,EAAQ8B,GAAmBC,EAAYC,EAAaC,EAAgBC,EAAe0C,EAAmBtiB,KAAK,MAAO8f,EAAoBC,EAAkBC,EAAa7I,EAAMwL,iBAMnLjF,EAAQ8B,GAAmBC,EAAYC,EAAaC,EAAgBC,EAAe0C,EAAmBtiB,KAAK,MAAO8f,EAAoBC,EAAkBC,EAAa7I,EAAMwL,qBAUnLC,CAAazL,GAAOxT,MAAK,SAASiH,GAC9BoS,GAAUpS,GAAMjH,MAAK,SAASO,GAC1BwZ,EAAQxZ,cE1QhB,CAACd,KAAK,YAAYid,eD0R1B,SAA2BlJ,GACvB,OAAO,IAAIrT,SAAQ,SAAS4Z,EAAQC,IA3QxC,SAAwBxG,GAUpB,OADA9S,QAAQC,IAAI,CAAC,eAAe6S,IACrB,IAAIrT,SAAQ,SAAS4Z,EAAQC,GAC/B,IAAIgB,EAAezb,IAAYC,eAAe,CAC5CC,KAAM,UACNC,UAAc,UAEZid,EAAoBpd,IAAYC,eAAe,CACjDC,KAAM,UACNC,UAAc,eAMhBsb,EAAa1a,QAAQ,WAAWN,MAAK,SAAS6K,GAE3CnK,QAAQC,IAAI,CAAC,QAAQkK,IAGrB,IAAIyS,EAAc,GACd9J,EAAM1V,UACNT,OAAOC,KAAKkW,EAAM1V,UAAUX,KAAI,SAASiB,EAAOoD,GAC5C,IAAM+b,EAAc/J,EAAM1V,SAASM,GAiBnC,OAfImf,GAAeA,EAAY5f,SAC3B2f,EAAYlf,GAAUmf,EAAY5f,QAGlC6V,EAAM1V,SAASM,IAAWpB,MAAMC,QAAQuW,EAAM1V,SAASM,GAAQyM,QAC/DA,EAAM1N,KAAI,SAAS6N,EAASK,GAOxB,OANAmI,EAAM1V,SAASM,GAAQyM,MAAM1N,KAAI,SAASqgB,GAIvC,OAHIxS,EAASnB,OAA+C,IAAvCmB,EAASnB,KAAKU,QAAQiT,IACvCF,EAAYlf,GAAQvB,KAAKmO,EAAS5N,OAE/B,QAEH,QAGR,QAGdsD,QAAQC,IAAI,CAAC,SAAS2c,IAEtB,IAAIvB,EAAY,GACZ1Y,EAAU,GACdhG,OAAOC,KAAKggB,GAAangB,KAAI,SAASiB,GAClC,IAAIT,EAAS2f,EAAYlf,GAIzB,OAHA2d,EAAYlf,KAAK,CAAC4C,KAAKrB,EAAO,OAAO0P,QAAQnQ,EAAOtB,KAAK,QACzDgH,EAAQxG,KAAK,aAAauB,GAC1BiF,EAAQxG,KAAK,gBAAgBuB,EAAO,QAC7B,QAMZ,IAAIwc,EAAgB,GAChB/P,GAAOA,EAAM1N,KAAI,SAAS2B,GAQ1B,OAPKA,EAAK1B,OAAS0B,EAAK1B,MAAMT,OAAOC,OAAS,GACtCkC,EAAK8L,UACA5N,MAAMC,QAAQ2d,EAAc9b,EAAK8L,YAAWgQ,EAAc9b,EAAK8L,SAAW,IAE/EgQ,EAAc9b,EAAK8L,SAAS/N,KAAKiC,EAAK1B,QAGvC,QAEXsD,QAAQC,IAAI,CAAC,WAAWia,IAexB,IAAI8C,EAAO,GACPlK,EAAMzJ,UACNrJ,QAAQC,IAAI,CAAC,eAAe6S,EAAMzJ,UAClC1M,OAAOC,KAAKkW,EAAMzJ,SAAS5M,KAAI,SAAS6G,GACpC,IAAM2Z,EAAanK,EAAMzJ,QAAQ/F,GACjCtD,QAAQC,IAAI,eAAeqD,EAAU2Z,GAqBrC,OAlBAA,EAAWxgB,KAAI,SAASU,GAEpB,GAAIA,GAAWA,EAAQA,SAAWA,EAAQA,QAAQlB,OAAOC,OAAS,EAAG,CACjE8D,QAAQC,IAAI,CAAC,OAAO9C,IACpB,IAAIqC,EAAM1B,EAA0BX,EAAQA,QAASA,EAAQC,UAC7D4f,EAAOxd,GAAO,CACV,KAAOA,EACP,OAAS8D,EACT,SAAWnG,EAAQC,SAAWD,EAAQC,SAASX,KAAI,SAASiB,GACxD,MAAO,CAAC,IAAMA,EAAOE,IAAI,OAASF,EAAOC,KAAK,MAAQD,EAAOH,MAAM,MAAQG,EAAOhB,UACjF,IAIb,OAAO,QAIJ,SAGf,IAAI0e,EAAW/T,KAAKY,UAAU,CAC1B,cAAgB,CACZ,eAAiB,GACjB,gBAAkBtL,OAAOC,KAAKsd,GAAezd,KAAI,SAASyN,GAEvD,MAAO,CAAC+P,SAASC,EAAchQ,GAAYxN,MAAMwN,MAEpD,gBAAkBvN,OAAOM,OAAO+f,MAQxChd,QAAQC,IAAImb,GAEZ,IAAIG,EAAgBzI,EAAMoK,WAAapK,EAAMoK,WAAazC,GAAcC,OAEpEe,EAAqB3I,EAAMqK,gBAAkBrK,EAAMqK,gBAAkB1C,GAAcE,YACnFe,EAAmB5I,EAAMsK,aAAetK,EAAMsK,aAAe3C,GAAcG,SAG3EU,EAAiBb,GAAcI,QAC/BwC,EAAgB,GAEhB1B,EAAc,GACdrf,MAAMC,QAAQuW,EAAMwK,cACpBxK,EAAMwK,YAAY7gB,KAAI,SAASyB,GAC3B,GAAIA,GAAUA,EAAOjC,OAAOC,OAAS,EAAG,CACpC,IAAIqhB,EAAS3iB,EAAiBJ,EAAYO,EAAiBmD,KACvDsf,EAAQziB,EAAiBwiB,GAAQ,UACrCF,EAAclhB,KAAKqhB,GACnB,IAAIze,EAAOwe,GAAUA,EAAOthB,OAAOC,OAAS,EAAIqhB,EAAO,GAAGziB,cAAgByiB,EAAOE,UAAU,GAAK,GAChG9B,EAAYxf,KAAK,CAAC4C,KAAKA,EAAK,YAAaqO,QAAQqN,GAAcK,cAAc/b,EAAK,SAASye,KAC3FlC,GAAgB,aAAavc,EAAK,YAEtC,OAAO,QAGf,IAAI2e,EAAiB5K,EAAM1V,SAAWT,OAAOC,KAAKkW,EAAM1V,UAAY,GAChEugB,EAAgB7K,EAAMzJ,QAAU1M,OAAOC,KAAKkW,EAAMzJ,SAAW,GAC7DuU,EAAc9K,EAAM+K,MAASlhB,OAAOC,KAAKkW,EAAM+K,OAAU/K,EAAM1V,SAAWT,OAAOC,KAAKkW,EAAM1V,UAAY,GACxG0gB,EAAkB,GACtBF,EAAYnhB,KAAI,SAASshB,GAItB,OAHAD,EAAgBC,GAAQ,CACpBpgB,KAAMmV,EAAM+K,OAAS/K,EAAM+K,MAAME,IAAUjL,EAAM+K,MAAME,GAAMC,SAAWlL,EAAM+K,MAAME,GAAMC,SAAW,gBAElG,QAEVhe,QAAQC,IAAI,CAAC,SAASyd,EAAgBC,EAAeC,EAAaE,IAElE,IAAIG,EAAmB,GACnBN,EAAczhB,OAAS,IACvB+hB,EAAmB9hB,KAAK,YACxBwhB,EAAclhB,KAAI,SAASyM,GAMvB,OALA+U,EAAmB9hB,KAAK,KAAK+M,GAKtB,QAEX+U,EAAmB9hB,KAAK,OAGxBuhB,EAAexhB,OAAS,IACxB+hB,EAAmB9hB,KAAK,aACxBuhB,EAAejhB,KAAI,SAASiB,GAExB,OADAugB,EAAmB9hB,KAAK,KAAKuB,GACtB,QAEXugB,EAAmB9hB,KAAK,OAExByhB,EAAY1hB,OAAS,IACrB+hB,EAAmB9hB,KAAK,UACxByhB,EAAYnhB,KAAI,SAASshB,EAAKjd,GAG1B,OAFAmd,EAAmB9hB,KAAK,KAAK4hB,EAAK,KAClCE,EAAmB9hB,KAAK,aAAa2hB,EAAgBC,GAAMpgB,MACpD,QAEXsgB,EAAmB9hB,KAAK,OAGxB2W,EAAMoL,aAAapL,EAAMoL,YAAYjiB,OAAOR,MAAM,MAAMgB,KAAI,SAAS0hB,GACrEF,EAAmB9hB,KAAKgiB,MAI5B,IAAI/B,EAAa,GACbtJ,EAAMuJ,iBAAmBvJ,EAAMsJ,WAC/BH,EAAkBrc,QAAQ,WAAWN,MAAK,SAASgd,GAC3ChgB,MAAMC,QAAQ+f,IACdA,EAAc7f,KAAI,SAAS8f,GAcvB,OAbIzJ,EAAMsJ,YACNtJ,EAAMsJ,WAAW3f,KAAI,SAAS2N,GAE1B,OADImS,EAAc7f,QAAU0N,IAASgS,EAAWG,EAAc7f,OAAS6f,GAChE,QAGXzJ,EAAMuJ,iBACNvJ,EAAMuJ,gBAAgB5f,KAAI,SAAS2N,GAE/B,OADImS,EAAcpT,OAAiD,IAAzCoT,EAAcpT,KAAKU,QAAQO,KAAiBgS,EAAWG,EAAc7f,OAAS6f,GACjG,QAIR,QAON5f,OAAOC,KAAKwf,GAAYlgB,OAAS,IACjC+hB,EAAmB9hB,KAAK,cACxBQ,OAAOC,KAAKwf,GAAY3f,KAAI,SAAS2hB,GAC9B,IAAIC,EAAYjC,EAAWgC,GAS3B,OARAH,EAAmB9hB,KAAK,SAAS3B,EAAY6jB,EAAU3hB,QACvDuhB,EAAmB9hB,KAAK,WAAWkiB,EAAU3hB,OACzC2hB,EAAUpE,UAAYoE,EAAUpE,SAAS/d,OAAS,GAClDmiB,EAAUpE,SAASxd,KAAI,SAASyN,GAE5B,OADA+T,EAAmB9hB,KAAK,WAAW+N,GAC5B,QAGR,SAGlBmP,EAAQ8B,GAAmBC,EAAYC,EAAaC,EAAgBC,EAAe0C,EAAmBtiB,KAAK,MAAO8f,EAAoBC,EAAkBC,EAAa7I,EAAMwL,eAE5KjF,EAAQ8B,GAAmBC,EAAYC,EAAaC,EAAgBC,EAAe0C,EAAmBtiB,KAAK,MAAO8f,EAAoBC,EAAkBC,EAAa7I,EAAMwL,iBAMnLjF,EAAQ8B,GAAmBC,EAAYC,EAAaC,EAAgBC,EAAe0C,EAAmBtiB,KAAK,MAAO8f,EAAoBC,EAAkBC,EAAa7I,EAAMwL,qBAUnLE,CAAe1L,GAAOxT,MAAK,SAASiH,GAChCoS,GAAUpS,GAAMjH,MAAK,SAASO,GAC1BwZ,EAAQxZ,eG7QT4e,GA3BW,SAASpd,GAAQ,IAAD,EAEFyC,mBAASzC,EAAM3E,MAAQ2E,EAAM3E,MAAQ,IAFnC,mBAEjCgiB,EAFiC,KAEpBC,EAFoB,KAItC,OAAO,kBAACrd,EAAA,EAAD,CAAWC,GAAIC,KAChB,kBAACF,EAAA,EAASG,OAAV,CAAiBhG,OAAK,EAAEiG,KAAK,KAAMxC,GAAG,yBACtC,kBAACyC,EAAA,EAAD,CAAUD,KAAK,MAAOL,EAAM3E,MAAQ2E,EAAMwE,MAAQ,MAAQxE,EAAM3E,MAAQ2E,EAAMwE,MAA9E,KACA,kBAACvE,EAAA,EAASM,KAAV,KACK,0BAAOC,MAAO,CAACC,QAAQ,UAAWC,SAAU,SAASC,GAAIA,EAAEC,mBAC1D,kBAACG,EAAA,EAAD,KACE,2BAAOzE,KAAK,OAAO0E,UAAU,eAAeC,SAAU,SAASN,GAAI2c,EAAe3c,EAAEG,OAAOzF,QAC7FA,MAAOgiB,MAIRpiB,MAAMC,QAAQ8E,EAAM4X,UAAY5X,EAAM4X,QAAQxc,KAAI,SAASmiB,EAAU9d,GAG7D,OAAO,kBAACQ,EAAA,EAASwB,KAAV,CAAejB,MAAO,CAAC8F,UAAU,SAAUnI,IAAKsB,EAAGpE,MAAOkiB,EAAWlc,QAAS,SAASV,GAAI2c,EAAeC,GAAYvd,EAAMiM,WAAWsR,KACxIA,GAAwB,0C,SCQrC,SAASC,GAAgBxd,GAAQ,IAAD,EAC4B4T,GAAa,UAAU,WAAW,UAAW5T,EAAMqP,gBAAgBwE,eAApI7V,EADqC,EACrCA,QAAS2V,EAD4B,EAC5BA,iBAAkBH,EADU,EACVA,oBAAqBtQ,EADX,EACWA,cADX,EAEFT,mBAAS,IAFP,mBAErCgb,EAFqC,KAEtBC,EAFsB,OAGRjb,mBAAS,IAHD,mBAGrCsF,EAHqC,KAGzB4V,EAHyB,OAIIlb,mBAAS,IAJb,mBAIrCmb,EAJqC,KAInBC,EAJmB,OAKApb,mBAAS,IALT,mBAKrCqb,EALqC,KAKrBC,EALqB,OAMJtb,mBAAS,CAAC5E,GAAGjE,IAAoBmO,WAAW,GAAIvD,MAAMmP,EAAkB5X,SAAS,KAN7E,mBAMrCiiB,EANqC,KAMvBC,EANuB,KAQtCC,EAAehhB,EAAM,UAAU,SARO,EAUFuF,mBAAS,IAVP,mBAUrC0b,EAVqC,KAUtBC,EAVsB,OAWJ3b,mBAAS,IAXL,mBAWrC4b,EAXqC,KAWvBC,EAXuB,OAYA7b,mBAAS,IAZT,mBAYrC8b,EAZqC,KAYrBC,GAZqB,QAaJ/b,mBAAS,IAbL,qBAarCgc,GAbqC,MAavBC,GAbuB,MAcxCC,GAAgBnhB,IAAYC,eAAe,CAC5CC,KAAM,UACNC,UAAc,WASjB,SAASihB,KACL,OAAO,IAAIxgB,SAAQ,SAAS4Z,EAAQC,GAC5BtE,GAGEgL,GAAcpgB,QAAQoV,GAAkB,SAAUkL,EAAKpN,GAErD,GAAIoN,EAAK,MAAM,IAAI5hB,MAAM4hB,GACrBpN,IACAwM,EAAgBxM,GAChBkM,EAAclM,EAAM1J,aAExBiQ,EAAQvG,SAqLxB,SAASqN,KACLf,EAAkB/X,KAAKY,UAAU,CAACoX,EAAanB,YAAamB,EAAajC,aAAaiC,EAAalC,gBAAgBkC,EAAaf,YAAYe,EAAanC,WAAWmC,EAAa/B,YAAY+B,EAAae,eAAef,EAAajiB,SAASiiB,EAAajD,WAAWiD,EAAahD,gBAAiBgD,EAAaxB,SAoGtT,SAASwC,GAAQthB,EAAK8e,GAClB,GAAI9e,GAAQA,EAAK9C,OAAOC,OAAS,EAAG,CAC3B2hB,IAAOA,EAAQ,IACpBA,EAAM9e,GAAQ,GACd,IAAI+T,EAAQuM,EACZvM,EAAM+K,MAAQA,EACdyB,EAAgBxM,GAChBiN,GAAgB,IAChB/f,QAAQC,IAAI,YACZD,QAAQC,IAAI6S,GACZqN,MAoER,SAASG,GAAajC,GAElB,GAAIgB,GAAgBhB,EAAW,CAC3B,IAAIvL,EAAQuM,EAQZ,GAPK/iB,MAAMC,QAAQuW,EAAMsJ,cAAatJ,EAAMsJ,WAAW,IACvDtJ,EAAMsJ,WAAWjgB,KAAKkiB,EAAUtf,MAChC+T,EAAMsJ,WAAahgB,EAAc0W,EAAMsJ,YACvCkD,EAAgBxM,GAChB9S,QAAQC,IAAI,QACZD,QAAQC,IAAI6S,IAEPzR,EAAMsB,QAAQ4d,sBAAsBlC,EAAUtf,QAAUsC,EAAMsB,QAAQ6d,kBAAkBnC,EAAUtf,MAAO,CAC1G,IAAI0hB,EAAmB5hB,IAAYC,eAAe,CAC/CC,KAAM,UACNC,UAAc,eAEhByhB,EAAiB7gB,QAAQ,WAAW,SAAUsgB,EAAI9D,GAC9C,GAAI8D,EAAK,MAAM,IAAI5hB,MAAM4hB,GACrB5jB,MAAMC,QAAQ6f,KACdA,EAAWvQ,QAAQ,CAAC3M,GAAGjE,IAAoByB,MAAM2hB,EAAUtf,KAAMkb,SAAS,GAAI9Q,KAAK,KACnFsX,EAAiBtgB,QAAQ,UAAUic,OAIhD+D,MA8SR,OAtqBAhZ,qBAAU,WACN8Y,KAAY3gB,MAAK,eAEjBD,IACAkgB,EAAalgB,UACbgC,EAAMqP,gBAAgBU,qBAExB,IAGFjK,qBAAU,WACN8Y,OAEF,CAACjL,IAGH7N,qBAAU,WACFoY,EAAalhB,MAAMnC,OAAS,GAE5BmF,EAAMqP,gBAAgB5B,YAAYyQ,EAAalhB,MAAM,MAG3D,CAACkhB,EAAalhB,QAGhB8I,qBAAU,WACN,IAAI/J,EAAW,GAEXd,MAAMC,QAAQgI,IACdA,EAAc9H,KAAI,SAAU2B,EAAKwS,GAe/B,OAdItU,MAAMC,QAAQ6B,EAAKhB,WACnBgB,EAAKhB,SAASX,KAAI,SAASiB,EAAO+V,GAU/B,OATI/V,GAAUA,EAAOC,MAAQD,EAAOC,KAAKzB,OAAS,IACT,kBAA1BkB,EAASM,EAAOC,QAAoBP,EAASM,EAAOC,MAAQ,IAElErB,MAAMC,QAAQa,EAASM,EAAOC,MAAMV,UAAUG,EAASM,EAAOC,MAAMV,OAAS,IAC9EoiB,GAAgBA,EAAajiB,UAAYiiB,EAAajiB,SAASM,EAAOC,OAAQ0hB,EAAajiB,SAASM,EAAOC,MAAMmc,YAAW1c,EAASM,EAAOC,MAAMmc,UAAYuF,EAAajiB,SAASM,EAAOC,MAAMmc,WACjMuF,GAAgBA,EAAajiB,UAAYiiB,EAAajiB,SAASM,EAAOC,OAAQ0hB,EAAajiB,SAASM,EAAOC,MAAMkc,aAAYzc,EAASM,EAAOC,MAAMkc,WAAawF,EAAajiB,SAASM,EAAOC,MAAMkc,YACnMwF,GAAgBA,EAAajiB,UAAYiiB,EAAajiB,SAASM,EAAOC,OAAQ0hB,EAAajiB,SAASM,EAAOC,MAAMwM,QAAO/M,EAASM,EAAOC,MAAMwM,MAAQkV,EAAajiB,SAASM,EAAOC,MAAMwM,OAC7L/M,EAASM,EAAOC,MAAMV,OAAOd,KAAKuB,EAAOhB,QAEtC,QAGP,QAIb,IAAImhB,EAAQwB,EAAaxB,MAAQwB,EAAaxB,MAAQ,GACtDlhB,OAAOC,KAAKQ,GAAUX,KAAI,SAASikB,EAAWjN,GAC3C,IAAM/V,EAASN,EAASsjB,GAOxB,OANAhjB,EAAOT,OAASb,EAAcsB,EAAOT,QAAQI,OAEzCwgB,EAAM6C,KAEN7C,EAAM6C,GAAc,CAACzjB,OAAO,KAEzB,QAEViiB,EAAoB9hB,GACpB,IAAIujB,EAAetB,EACnBsB,EAAavjB,SAAWA,EACxBujB,EAAa9C,MAAQA,EAErByB,EAAgBliB,GAEf,IAAIwjB,EAAmBpB,EACnBqB,EAAoBjB,EACpBkB,EAAkB,GACtB,GAAIvc,EAAe,CACfA,EAAc9H,KAAI,SAAS2B,GAezB,OAdKA,EAAK8K,SACA0X,EAAiBxiB,EAAK8K,UAAS0X,EAAiBxiB,EAAK8K,QAAQ,IAClE2X,EAAkBziB,EAAK8K,QAAa2X,EAAkBziB,EAAK8K,QAAU,EAAK2X,EAAkBziB,EAAK8K,QAAU,EAAI,EAE3G0X,EAAiBxiB,EAAK8K,QAAQ/M,KAAK,CAACgB,QAASiB,EAAKjB,QAASC,SAAUgB,EAAKhB,YAI9Ed,MAAMC,QAAQ6B,EAAK+K,OACnB/K,EAAK+K,KAAK1M,KAAI,SAASmQ,GAEnB,OADAkU,EAAgBlU,IAAO,EAChB,QAGT,QAET6S,EAAiBmB,GACjBf,GAAkBgB,GAClBlB,EAAgBmB,GAChB,IAAI7N,EAAWoM,EACVpM,EAAS5J,UACXrJ,QAAQC,IAAI,CAAC,qCAAqCuf,IACjDvM,EAAS5J,QAAUmW,GAEvBvM,EAAS9J,KAAOxM,OAAOC,KAAK8iB,GAC5BJ,EAAgBrM,MAGvB,CAAC1O,IAEH4C,qBAAU,cAGR,CAACqY,EAAcE,IAGjBvY,qBAAU,WACN,GAAIkY,EAAc,CAEhB,IAAIvM,EAAQuM,EACZvM,EAAM1J,WAAaA,EACnBkW,EAAgBxM,MAIpB,CAAC1J,IAEHjC,qBAAU,WAEN,IAAI2L,EAAQuM,EACRvM,GAASA,EAAMjN,OAASiN,EAAMjN,MAAM3J,OAAS,IAC7C8D,QAAQC,IAAI,yBAKRgf,GACAtiB,OAAOC,KAAKqiB,GAAkBxiB,KAAI,SAASiB,GAIxC,OAHIoV,EAAM1V,UAAY0V,EAAM1V,SAASM,KACjCoV,EAAM1V,SAASM,GAAQT,OAASgiB,EAAiBvhB,GAAQT,QAEtD,QAId6V,EAAM1J,WAAaA,EACnB0J,EAAMzJ,QAAUmW,EAChBxf,QAAQC,IAAI,CAAC,cAAc+U,EAAiBqK,IAC5CW,GAAc7f,QAAQ6U,EAAkBqK,GAAc,SAAUa,GAE5D,GADAlgB,QAAQC,IAAI,CAAC,iBACTigB,EAEA,MADAlgB,QAAQC,IAAIigB,GACN,IAAI5hB,MAAM4hB,SAgB9B,CAACb,EAAaF,EAAgB/V,KAggBZ/H,EAAMsB,QAAQgB,cAAgBtC,EAAMsB,QAAQgB,aAAatG,OAAOZ,KAAI,SAASoG,EAAS/B,GACpG,OAAO,kBAACQ,EAAA,EAASwB,KAAV,CAAetD,IAAKsB,EAAGpE,MAAOmG,EAAUH,QAAS,SAASV,GAAI6S,EAAoBhS,KAAeA,OAE9FgJ,QAAQ,kBAACvK,EAAA,EAASwB,KAAV,CAAetD,IAAK,wBAAyB9C,MAAO,GAAIgG,QAAS,SAASV,GAAI6S,EAAoB,MAAlG,SAIjB,6BACDG,GAAoBA,EAAiB9Y,OAAS,GAAK,kBAACoF,EAAA,EAAD,CAAUO,MAAO,CAACqC,MAAM,QAAQlB,WAAW,SAAWzB,GAAIC,KAC7G,kBAACF,EAAA,EAASG,OAAV,CAAiBhG,OAAK,EAACgH,QAAQ,UAAWvD,GAAG,yBAC7C,kBAACyC,EAAA,EAAD,CAASc,QAAQ,WAAjB,UACA,kBAACnB,EAAA,EAASM,KAAV,CAAea,QAAQ,WAClBsZ,GAActf,KAAI,SAASskB,EAAajgB,GACrC,IAAI+E,EAAQ,eAAekb,EAAahiB,KAAK,IAAI7D,KAAK8lB,MACxD,OAAO,kBAAC1f,EAAA,EAASwB,KAAV,CAAeL,QAAQ,UAAUjD,IAAKsB,EAAGpE,MAAOqkB,EAAahiB,KACpE2D,QAAS,SAASV,GAId+e,EAAa/E,eAAeqD,GAAc/f,MAAK,SAAS2hB,GACpDjhB,QAAQC,IAAI,CAAC,aAAa4F,EAAMob,IACR,SAApBF,EAAahiB,KACbmiB,kBAAOD,EAASpb,EAAM,SAEtBqb,kBAAOD,EAASpb,EAAM,aAE1Bkb,EAAahiB,WAzRjC,SAAsBsC,GAElB,KAAI2T,GAAoBA,EAAiB9Y,OAAS,GAgP3C,CACH,IAAMilB,EAAa9f,EAAMsB,QAAQgB,aAAetC,EAAMsB,QAAQgB,aAAalH,KAAI,SAASqW,EAAMhS,GAAI,OAAO,kBAACa,EAAA,EAAD,CAAQnC,IAAKsB,EAAI4B,QAAS,SAASV,GAAI6S,EAAoB/B,IAAUjR,MAAO,CAACmB,WAAW,QAAU8P,MAAuB,GAClO,OAAO,6BACH,sCACCqO,EAAWjlB,OAAS,GAAKilB,EACzBA,EAAWjlB,QAAU,GAAK,0EACmB,kBAAC,IAAD,CAAMwI,GAAG,YAAW,kBAAC/C,EAAA,EAAD,mBAnPtE,GAAI4C,GAAiBA,EAAcrI,OAAS,EAAG,CAExC,IAAMklB,EAAgB/B,GAAgBA,EAAajD,WAAaiD,EAAajD,WAAW3f,KAAI,SAAS6N,EAAS+W,GAAc,MAAO,CAACniB,GAAGmiB,EAAatiB,KAAKuL,MAAe,GACrKgX,EAAoBjC,GAAgBA,EAAahD,gBAAkBgD,EAAahD,gBAAgB5f,KAAI,SAAS6N,EAAS+W,GAAc,MAAO,CAACniB,GAAGmiB,EAAatiB,KAAKuL,MAAe,GAChLuT,EAAQwB,EAAaxB,MAAQwB,EAAaxB,MAAQoB,EACxD,OAAO,6BACF,6BAAK,4BAAKjK,EAAL,MACF,6BAEA,2BAAOnT,MAAO,CAACyC,WAAW,OAAQtB,WAAW,UAA7C,eAAoE,2BAAOrF,KAAK,OAAOjB,MAAO0M,EAAY9G,SAAU,SAASN,GAAIgd,EAAchd,EAAEG,OAAOzF,YAExJ,yBAAKmF,MAAO,CAACmM,UAAU,QAASuT,aAAa,UACzC,uBAAG1f,MAAO,CAAC4C,YAAY,MAAOzB,WAAW,UAAzC,QACA,8BAAOqc,EAAalW,KAAKxN,KAAK,QAElC,yBAAKkG,MAAO,CAACmM,UAAU,QAASuT,aAAa,QAASzT,UAAW,oBAC7D,uBAAGjM,MAAO,CAAC4C,YAAY,MAAOzB,WAAW,UAAzC,WACA,8BAAOrG,OAAOC,KAAK4iB,GAAeniB,OAAOZ,KAAI,SAAS+kB,EAAgB1gB,GAC9D,IAAI2gB,EAAmB3C,GAAgCniB,OAAOC,KAAK4iB,GAAe,GAC9EkC,EAAoB,SAUxB,OATIlC,EAAcgC,GAAgBtlB,OAAS,IACvCwlB,EAAoB,UACblC,EAAcgC,GAAgBtlB,OAAS,IAC9CwlB,EAAoB,UACblC,EAAcgC,GAAgBtlB,OAAS,KAC9CwlB,EAAoB,WAIpBlC,EAAcgC,GAAgBtlB,SAAY0jB,EAAe4B,GAC9C,kBAAC,IAAD,CAAMhiB,IAAKgiB,EAAgB9c,GAAI,mBAAmBsQ,EAAiB,WAAWwM,GAAiB,kBAAC7f,EAAA,EAAD,CAAQnC,IAAKgiB,EAAgB/e,QAAS+e,IAAmBC,EAAmB,UAAY,kBAAmB/e,QAAS,WAAYqc,EAAiByC,KACnP,kBAACG,GAAA,EAAD,CAAOlf,QAASif,GAAhB,IAAsClC,EAAcgC,GAAgBtlB,OAApE,KADkG,OAE3FslB,IAGR,kBAAC,IAAD,CAAMhiB,IAAKgiB,EAAgB9c,GAAI,mBAAmBsQ,EAAiB,WAAWwM,GAAiB,kBAAC7f,EAAA,EAAD,CAAQc,QAAS+e,IAAmBC,EAAmB,UAAY,kBAAmB/e,QAAS,WAAYqc,EAAiByC,KAC1N,kBAACG,GAAA,EAAD,CAAOlf,QAAQ,UAAf,IAA2B+c,EAAcgC,GAAgBtlB,OAAzD,IAAkE0jB,EAAe4B,GAAjF,KAD8F,OAEvFA,SAM/B,yBAAK3f,MAAO,CAACmM,UAAU,QAASF,UAAW,oBAC7C,uBAAGjM,MAAO,CAAC4C,YAAY,MAAOzB,WAAW,UAAzC,YAAgE,kBAAC0C,EAAA,EAAD,KAAY/I,OAAOC,KAAKqiB,GAAkBxiB,KAAI,SAASmlB,EAAgB9gB,GAG7H,IAAM+gB,EAAWxC,GAAgBA,EAAajiB,UAAYiiB,EAAajiB,SAASwkB,IAAmBvC,EAAajiB,SAASwkB,GAAgBzX,MAAQkV,EAAajiB,SAASwkB,GAAgBzX,MAAM1N,KAAI,SAAS6N,EAAS+W,GAAc,MAAO,CAACniB,GAAGmiB,EAAatiB,KAAKuL,MAAe,GAEzQ,OAAO,kBAAC5E,EAAA,EAAU5C,KAAX,CAAgBtD,IAAKoiB,GAEnB,0BAAM/f,MAAO,CAACmB,WAAW,MAAOkB,MAAM,OAAQI,WAAW,SAAzD,OAAyEsd,GAE1E,0BAAM/f,MAAO,CAACmB,WAAW,MAAOkB,MAAM,SAAtC,OAAsD+a,EAAiB2C,IAAmB3C,EAAiB2C,GAAgB3kB,QAAUgiB,EAAiB2C,GAAgB3kB,OAAOvB,MAAM,EAAE,GAAGC,KAAK,MAAOsjB,EAAiB2C,IAAmB3C,EAAiB2C,GAAgB3kB,QAAUgiB,EAAiB2C,GAAgB3kB,OAAOf,OAAS,EAAI,kBAACylB,GAAA,EAAD,YAAY1C,EAAiB2C,IAAmB3C,EAAiB2C,GAAgB3kB,QAAUgiB,EAAiB2C,GAAgB3kB,OAAOf,OAAS,EAA5I,UAA+J,IACve,0BAAM2F,MAAO,CAACmB,WAAW,MAAOkB,MAAM,SACvC,+BAAO,4BAAP,IAAe,kBAAC,KAAD,CACd+J,gBAAgB,wBAChBC,eAAgB,EAChBC,qBAAsB,GACtBC,YAAY,EACZC,UAAU,EACVlF,KAAM0Y,EACNtT,oBAAqBd,GACrBe,YAAanN,EAAMsB,QAAQyB,aAAa3H,KAAI,SAASmQ,EAAI9L,GAAI,MAAO,CAAC5B,GAAI4B,EAAG/B,KAAM6N,MAClF6B,SAAU,SAASjS,IA1R3D,SAAmCkB,EAAQokB,GACzC,IAAIhP,EAAQuM,EAEZ,GAAIvM,GAASA,EAAM1V,UAAYM,GAAUoV,EAAM1V,SAASM,IAAWoV,EAAM1V,SAASM,GAAQyM,MAAO,CAC7F,IAAIA,EAAQ2I,EAAM1V,SAASM,GAAQyM,MAEnCA,EAAQA,EAAMzO,MAAM,EAAGomB,GAAW9kB,OAAOmN,EAAMzO,MAAMomB,EAAY,IAEjEhP,EAAM1V,SAASM,GAAQyM,MAAQA,EAC/BmV,EAAgBxM,GAChBqN,MAgR6D4B,CAA0BH,EAAgBplB,IACrEkS,WAAY,SAAS9B,IArT7D,SAA8BlP,EAAO+H,GAEnC,GAAI/H,GAAU+H,GAAQA,EAAK1G,KAAM,CAC3B,IAAI+T,EAAQuM,EACPvM,EAAM1V,WAAU0V,EAAM1V,SAAS,IAC/B0V,EAAM1V,SAASM,KAASoV,EAAM1V,SAASM,GAAU,CAACyM,MAAM,KACxD7N,MAAMC,QAAQuW,EAAM1V,SAASM,GAAQyM,SAAQ2I,EAAM1V,SAASM,GAAQyM,MAAQ,IAGjF2I,EAAM1V,SAASM,GAAQyM,MAAMhO,KAAKsJ,EAAK1G,MACvC+T,EAAM1V,SAASM,GAAQyM,MAAQ/N,EAAc0W,EAAM1V,SAASM,GAAQyM,OAAO9M,OAE3EiiB,EAAgBxM,GAEhBqN,UAQDngB,QAAQC,IAAI,CAAC,kBA+R+C+hB,CAAqBJ,EAAgBhV,MAVjE,MAaC,yBAAK/K,MAAO,CAACqC,MAAM,UACf,kBAAC,GAAD,CAAmB+U,QAAO,CAAG,IAAH,mBAAS1e,IAAoBsL,MAAM,QAAQnJ,MAAO2iB,EAAajiB,UAAYiiB,EAAajiB,SAASwkB,IAAmBvC,EAAajiB,SAASwkB,GAAgB9H,UAAYuF,EAAajiB,SAASwkB,GAAgB9H,UAAY,GAAIxM,WAAY,SAASoG,IA/PvT,SAA4BhW,EAAQC,GAChC,GAAI0hB,GAAgB3hB,EAAQ,CACxB,IAAIoV,EAAQuM,EACPvM,EAAM1V,WAAU0V,EAAM1V,SAAS,IAC/B0V,EAAM1V,SAASM,KAASoV,EAAM1V,SAASM,GAAU,IACtDoV,EAAM1V,SAASM,GAAQoc,UAAYnc,EACnC2hB,EAAgBxM,GAChB9S,QAAQC,IAAI,SACZD,QAAQC,IAAI6S,GACZqN,MAuPwC8B,CAAmBL,EAAelO,MAF1C,WAIgB,kBAAC,GAAD,CAAmBuF,QAAO,CAAG,IAAH,mBAAS3e,IAA8BuL,MAAM,SAASnJ,MAAO2iB,EAAajiB,UAAYiiB,EAAajiB,SAASwkB,IAAoBvC,EAAajiB,SAASwkB,GAAgB/H,WAAawF,EAAajiB,SAASwkB,GAAgB/H,WAAa,GAAKvM,WAAY,SAASoG,IA7QlV,SAAsChW,EAAQC,GAC1C,GAAI0hB,GAAgB3hB,EAAQ,CACxB,IAAIoV,EAAQuM,EACPvM,EAAM1V,WAAU0V,EAAM1V,SAAS,IAC/B0V,EAAM1V,SAASM,KAASoV,EAAM1V,SAASM,GAAU,IACtDoV,EAAM1V,SAASM,GAAQmc,WAAalc,EACpC2hB,EAAgBxM,GACjBqN,MAuQyC+B,CAA6BN,EAAelO,aASxE,yBAAK7R,MAAO,CAACmM,UAAU,QAAShL,WAAW,QAAS8K,UAAW,oBAC3D,6BAAM,0CACR,yBAAKjM,MAAO,CAACpB,MAAM,SACZ,yBAAKoB,MAAO,CAACmB,WAAW,QACzB,4CACA,kBAAC,KAAD,CACAiL,gBAAgB,iBAChBC,eAAgB,EAChBC,qBAAsB,GACtBC,YAAY,EACZC,UAAU,EACVlF,KAAMiY,EACN7S,oBAAqBd,GACrBe,YAAanN,EAAMsB,QAAQ6d,kBAAoBnf,EAAMsB,QAAQ6d,kBAAkB/jB,KAAI,SAASmQ,EAAI9L,GAAI,MAAO,CAAC5B,GAAI4B,EAAG/B,KAAM6N,MAAO,GAChI6B,SAAU,SAASjS,IAzI/C,SAAyBA,GAErB,GADAwD,QAAQC,IAAI,CAAC,eAAezD,IACP,kBAAVA,GAAsB6iB,GAAgBA,EAAajD,YAAciD,EAAajD,WAAWlgB,OAASM,EAAO,CAChH,IAAIsW,EAAQuM,EACZvM,EAAMsJ,WAAN,sBAAuBtJ,EAAMsJ,WAAW1gB,MAAM,EAAEc,IAAhD,YAA0DsW,EAAMsJ,WAAW1gB,MAAMc,EAAM,KACvF8iB,EAAgBxM,GAChB9S,QAAQC,IAAI,QACZD,QAAQC,IAAI6S,GACZqN,MAiI+CgC,CAAgB3lB,IAC3CkS,WAAY,SAAS9B,GAAM0T,GAAa1T,MAXxC,MAcC,yBAAK/K,MAAO,CAACmB,WAAW,QACzB,iDACA,kBAAC,KAAD,CACAiL,gBAAgB,uBAChBC,eAAgB,EAChBC,qBAAsB,GACtBC,YAAY,EACZC,UAAU,EACVlF,KAAMmY,EACN/S,oBAAqBd,GACrBe,YAAanN,EAAMsB,QAAQsO,qBAAuB5P,EAAMsB,QAAQsO,qBAAqBxU,KAAI,SAASmQ,EAAI9L,GAAI,MAAO,CAAC5B,GAAI4B,EAAG/B,KAAM6N,MAAS,GACxI6B,SAAU,SAASjS,IA/H/C,SAA6BA,GACzB,GAAqB,kBAAVA,GAAsB6iB,GAAgBA,EAAahD,gBAAiB,CAC3E,IAAIvJ,EAAQuM,EACZvM,EAAMuJ,gBAAN,sBAA4BvJ,EAAMuJ,gBAAgB3gB,MAAM,EAAEc,IAA1D,YAAoEsW,EAAMuJ,gBAAgB3gB,MAAMc,EAAM,KACtG8iB,EAAgBxM,GAChB9S,QAAQC,IAAI,QACZD,QAAQC,IAAI6S,GACZqN,MAwH+CiC,CAAoB5lB,IAC/CkS,WAAY,SAAS9B,IA9IjD,SAA0ByR,GAEpB,GADAre,QAAQC,IAAI,CAAC,qBAAqBoe,EAAWgB,IACzCA,GAAgBhB,EAAW,CAC7B,IAAIvL,EAAQuM,EACP/iB,MAAMC,QAAQuW,EAAMuJ,mBAAkBvJ,EAAMuJ,gBAAgB,IACjEvJ,EAAMuJ,gBAAgBlgB,KAAKkiB,EAAUtf,MACrC+T,EAAMuJ,gBAAkBjgB,EAAc0W,EAAMuJ,iBAC5CiD,EAAgBxM,GAChB9S,QAAQC,IAAI,eACZD,QAAQC,IAAI6S,EAAMuJ,iBAClB8D,MAoI+CkC,CAAiBzV,MAX5C,QAkBV,yBAAK/K,MAAO,CAACmM,UAAU,QAASF,UAAW,oBACzC,6BAAK,wCACL,kBAACwU,GAAA,EAAD,CAAMC,iBAAiB,OAAOrjB,GAAG,iBAC/B,kBAACsjB,GAAA,EAAD,CAAKC,SAAS,OAAO5c,MAAM,QACrB,yBAAKhE,MAAO,CAACmM,UAAU,QAAShL,WAAW,UACvC,kBAACsf,GAAA,EAAD,CAAMC,iBAAiB,QAAQrjB,GAAG,iBAC9B,kBAACsjB,GAAA,EAAD,CAAKC,SAAS,QAAQ5c,MAAM,SACvB,yBAAKhE,MAAO,CAACmB,WAAW,QAASgL,UAAU,QAASF,UAAW,oBAC3D,0BAAM/L,SAAU,SAASC,GAAIA,EAAEC,iBAAkBoe,GAAQP,GAAajC,KAAU,2BAAOnhB,MAAOojB,GAAcxd,SAAU,SAASN,GAAI+d,GAAgB/d,EAAEG,OAAOzF,UAAW,kBAACiF,EAAA,EAAD,CAAQD,KAAK,KAAKgB,QAAS,WAAY2d,GAAQP,GAAajC,KAA5D,aAEtK,kBAACnY,EAAA,EAAD,KAAY/I,OAAOC,KAAKihB,GAAOphB,KAAI,SAASmlB,EAAgB9gB,GACtD,OAAO,kBAAC4E,EAAA,EAAU5C,KAAX,CAAgBtD,IAAKoiB,GACX,0BAAM/f,MAAO,CAACmB,WAAW,MAAOkB,MAAM,OAAQI,WAAW,SAAzD,OAAyEsd,GAE1E,yBAAK/f,MAAO,CAACqC,MAAM,UACb+a,EAAiB2C,IAAoB,kBAAC,GAAD,CAAmB3I,QAAS9e,EAAKE,gBAAiBwL,MAAM,WAAWnJ,MAAO2iB,EAAaxB,OAASwB,EAAajiB,SAASwkB,IAAmBvC,EAAaxB,MAAM+D,GAAgBc,cAAgBrD,EAAaxB,MAAM+D,GAAgBc,aAAazmB,OAAOC,OAAS,EAAImjB,EAAaxB,MAAM+D,GAAgBc,aAAe,MAAOpV,WAAY,SAASoG,IAvS7b,SAA6BhW,EAAQC,EAAMkgB,GAGvC,GAAIwB,GAAgB3hB,GAAUC,EAAM,CAChC,IAAImV,EAAQuM,EACZxB,EAAMngB,GAAQglB,aAAe/kB,EAC7BmV,EAAM+K,MAAQA,EACd7d,QAAQC,IAAI,CAAC,gBAAgBof,EAAc3hB,EAAOC,EAAMkgB,IACxDyB,EAAgBxM,GAChB9S,QAAQC,IAAI6S,GACZqN,MA8RoEwC,CAAoBf,EAAelO,EAAWmK,MAFtD,WAKI,kBAAC,GAAD,CAAmB5E,QAAStc,OAAOC,KAAKzC,EAAKC,WAAYyL,MAAM,OAAOnJ,MAAO2iB,EAAaxB,OAASwB,EAAaxB,MAAM+D,IAAmBvC,EAAaxB,MAAM+D,GAAgB5D,SAAWqB,EAAaxB,MAAM+D,GAAgB5D,SAAW,eAAgB1Q,WAAY,SAASoG,IAvTlV,SAAyBhW,EAAQC,EAAMkgB,GACnC,GAAIwB,GAAgB3hB,GAAUC,EAAM,CAChC,IAAImV,EAAQuM,EACZxB,EAAMngB,GAAQsgB,SAAWrgB,EACzBmV,EAAM+K,MAAQA,EACdyB,EAAgBxM,GAChB9S,QAAQC,IAAI,QACZD,QAAQC,IAAI6S,GACZqN,MAgToEyC,CAAgBhB,EAAelO,EAAWmK,MAE9C,kBAAClc,EAAA,EAAD,CAAQc,QAAQ,SAAUf,KAAK,KAAKG,MAAO,CAACmB,WAAW,QAASkB,MAAM,QAASI,WAAW,OAAQyJ,aAAa,OAAQC,UAAU,SAAUtL,QAAS,SAASV,IAlRrO,SAAoB+b,EAAMF,GACtB,GAAIwB,GAAgBtB,GAAQF,EAAQ,CAChC,IAAI/K,EAAQuM,SACLxB,EAAME,GACbjL,EAAM+K,MAAQA,EACdyB,EAAgBxM,GAChB9S,QAAQC,IAAI,YACZD,QAAQC,IAAI6S,GACZqN,MA0QiO0C,CAAWjB,EAAe/D,KAA3L,aAUtC,kBAAC2E,GAAA,EAAD,CAAKC,SAAS,UAAU5c,MAAM,WAC5B,yBAAKhE,MAAO,CAACmM,UAAU,QAAShL,WAAW,QAAS8K,UAAW,oBAC7D,+BAEE,yBAAKjM,MAAO,CAACihB,UAAU,WAAvB,uDACA,8BAAUjhB,MAAO,CAACiD,MAAM,OAAQC,OAAO,QAAUrI,MAAOJ,MAAMC,QAAQ8iB,EAAa/B,aAAe+B,EAAa/B,YAAY3hB,KAAK,MAAQ,GAAI2G,SAAU,SAASN,IArRvM,SAAwBuE,GAClB,GAAI8Y,GAAgB9Y,EAAM,CACxB,IAAIuM,EAAQuM,EACZvM,EAAMwK,YAAc/W,EACpB+Y,EAAgBxM,GAChBqN,MAgRmM4C,CAAe/gB,EAAEG,OAAOzF,MAAQsF,EAAEG,OAAOzF,MAAMjB,MAAM,MAAQ,KAAM8P,YAAW,yDAOtP,kBAACiX,GAAA,EAAD,CAAKC,SAAS,SAAS5c,MAAM,UAC5B,yBAAKhE,MAAO,CAACmM,UAAU,QAAShL,WAAW,QAAS8K,UAAW,oBAC7D,+BAEE,8BAAUjM,MAAO,CAACiD,MAAM,OAAQC,OAAO,QAAUrI,MAAO2iB,EAAanC,WAAamC,EAAanC,WAAa,GAAI5a,SAAU,SAASN,IAvR3K,SAAuBuE,GACjB,GAAI8Y,EAAc,CAChB,IAAIvM,EAAQuM,EACZvM,EAAMoK,WAAa3W,EACnB+Y,EAAgBxM,GAChBqN,MAkRuK6C,CAAchhB,EAAEG,OAAOzF,QAAS6O,YAAakP,GAAcC,YAIzM,kBAAC8H,GAAA,EAAD,CAAKC,SAAS,UAAU5c,MAAM,WAC3B,yBAAKhE,MAAO,CAACmM,UAAU,QAAShL,WAAW,QAAS8K,UAAW,oBAC7D,+BAEE,8BAAUjM,MAAO,CAACiD,MAAM,OAAQC,OAAO,QAAUrI,MAAO2iB,EAAaf,YAAce,EAAaf,YAAc,GAAIhc,SAAU,SAASN,IAtR7K,SAAwBuE,GAClB,GAAI8Y,EAAc,CAChB,IAAIvM,EAAQuM,EACZvM,EAAMwL,YAAc/X,EACpB+Y,EAAgBxM,GAChBqN,MAiRyK8C,CAAejhB,EAAEG,OAAOzF,QAAS6O,YAAakP,GAAcQ,aAI5M,kBAACuH,GAAA,EAAD,CAAKC,SAAS,cAAc5c,MAAM,eAC/B,yBAAKhE,MAAO,CAACmM,UAAU,QAAShL,WAAW,QAAS8K,UAAW,oBAC7D,+BAEE,8BAAUjM,MAAO,CAACiD,MAAM,OAAQC,OAAO,QAAUrI,MAAO2iB,EAAalC,gBAAkBkC,EAAalC,gBAAkB1C,GAAcE,YAAarY,SAAU,SAASN,IA9Q5M,SAA4BuE,GACtB,GAAI8Y,EAAc,CAChB,IAAIvM,EAAQuM,EACZvM,EAAMqK,gBAAkB5W,EACxB+Y,EAAgBxM,GAChBqN,MAyQwM+C,CAAmBlhB,EAAEG,OAAOzF,aAK5M,kBAAC8lB,GAAA,EAAD,CAAKC,SAAS,YAAY5c,MAAM,aAC5B,yBAAKhE,MAAO,CAACmM,UAAU,QAAShL,WAAW,QAAS8K,UAAW,oBAC7D,+BAEE,8BAAUjM,MAAO,CAACiD,MAAM,OAAQC,OAAO,QAAUrI,MAAO2iB,EAAajC,aAAeiC,EAAajC,aAAe3C,GAAcG,SAAUtY,SAAU,SAASN,IA/RnM,SAAyBuE,GACnB,GAAI8Y,EAAc,CAChB,IAAIvM,EAAQuM,EACZvM,EAAMsK,aAAe7W,EACrB+Y,EAAgBxM,GAChBqN,MA0R+LgD,CAAgBnhB,EAAEG,OAAOzF,aAKjM,kBAAC8lB,GAAA,EAAD,CAAKC,SAAS,UAAU5c,MAAM,kBACzB,yBAAKhE,MAAO,CAACmM,UAAU,QAAShL,WAAW,QAAS8K,UAAW,oBAC7D,+BAEE,8BAAUjM,MAAO,CAACiD,MAAM,OAAQC,OAAO,QAAUrI,MAAO2iB,EAAanB,YAAcmB,EAAanB,YAAczD,GAAcS,QAAS5Y,SAAU,SAASN,IAvRhM,SAAwBuE,GACrB,GAAI8Y,EAAc,CACb,IAAIvM,EAAQuM,EACZvM,EAAMoL,YAAc3X,EACpB+Y,EAAgBxM,GAChBqN,MAkR4LiD,CAAephB,EAAEG,OAAOzF,gBAUtM,kBAAC8lB,GAAA,EAAD,CAAKC,SAAS,UAAU5c,MAAM,WAC5B,yBAAKhE,MAAO,CAACmM,UAAU,QAAShL,WAAW,UACvC,wCAGL,kBAACwf,GAAA,EAAD,CAAKC,SAAS,OAAO5c,MAAM,QAC1B,yBAAKhE,MAAO,CAACmM,UAAU,QAAShL,WAAW,UACvC,wCAGN,kBAACwf,GAAA,EAAD,CAAKC,SAAS,OAAO5c,MAAM,SACzB,yBAAKhE,MAAO,CAACmM,UAAU,QAAShL,WAAW,UACvC,wCAGN,kBAACwf,GAAA,EAAD,CAAKC,SAAS,mBAAmB5c,MAAM,oBACrC,yBAAKhE,MAAO,CAACmM,UAAU,QAAShL,WAAW,UACvC,4CAoDtB+N,CAAa1P,ICrvBRgiB,OAdf,SAAoBhiB,GAIhB,OAAO,6BACP,sCACA,uBAAGc,OAAO,OAAO8C,KAAK,mDAAmD,kBAACtD,EAAA,EAAD,2BCqB7E,SAAS2hB,GAASjiB,GACd,IAAIqV,EAAO,CAACC,YAAY,SACxB,OAAO,yBAAK9U,MAAO,CAACmB,WAAW,UACvB,oCAEI,kBAAC,IAAD,CAAMnB,MAAO6U,EAAQhS,GAAG,YAAY,kBAAC/C,EAAA,EAAD,iBACpC,kBAAC,IAAD,CAAME,MAAO6U,EAAQhS,GAAG,WAAW,kBAAC/C,EAAA,EAAD,gBACnC,kBAAC,IAAD,CAAME,MAAO6U,EAAQhS,GAAG,aAAa,kBAAC/C,EAAA,EAAD,kBACrC,kBAAC,IAAD,CAAME,MAAO6U,EAAQhS,GAAG,WAAW,kBAAC/C,EAAA,EAAD,iBACnC,kBAAC,IAAD,CAAME,MAAO6U,EAAQhS,GAAG,WAAW,kBAAC/C,EAAA,EAAD,4BAmQpC4hB,OA/Pf,WAAgB,IAAD,EAEmBzf,oBAAS,GAF5B,mBAEJoU,EAFI,KAEKsL,EAFL,OAG2B1f,mBAAS,IAHpC,mBAGJ2f,EAHI,KAGS5Y,EAHT,OAO+B/G,mBAAS,IAPxC,mBAOJT,EAPI,KAOWqgB,EAPX,OAQ+B5f,mBAAS,IARxC,mBAQJwQ,EARI,KAQWqP,EARX,OASyB7f,mBAAS,IATlC,mBASJlB,EATI,KASQghB,EATR,OAU6B9f,mBAAS,IAVtC,mBAUJH,EAVI,KAUUkgB,EAVV,OAW4B/f,mBAAS,IAXrC,mBAWJM,EAXI,KAWU0f,EAXV,OAY+BhgB,mBAAS,GAZxC,mBAYJsC,EAZI,KAYW2d,EAZX,OAauCjgB,mBAAS,IAbhD,mBAaJ0c,EAbI,KAaewD,EAbf,OAc+ClgB,mBAAS,IAdxD,mBAcJyc,EAdI,KAcmB0D,EAdnB,OAe6CngB,mBAAS,IAftD,mBAeJmN,EAfI,KAekBiT,EAflB,QAkBuBpgB,mBAAS,GAlBhC,qBAkBJqgB,GAlBI,MAkBOC,GAlBP,SAmBuCtgB,mBAAS,GAnBhD,qBAmBJgI,GAnBI,MAmBeuY,GAnBf,SAoBmCvgB,mBAAS,IApB5C,qBAoBJwgB,GApBI,MAoBaC,GApBb,SAqBmDzgB,mBAAS,IArB5D,qBAqBJ0gB,GArBI,MAqBqBC,GArBrB,SAyBqC3gB,mBAAS,IAzB9C,qBAyBJkR,GAzBI,MAyBcH,GAzBd,MA6BX,SAAS6P,KACLlB,GAAW,GAGf,SAASmB,KACL7Z,YAAW,WACP0Y,GAAW,KACb,KA6HN,IAAM7gB,GAAU,CAACsO,qBAAqBA,EAAqBuP,kBAAkBA,EAAkBD,sBAAsBA,EAAsBld,gBAAciR,gBAAc1R,aAAWe,eAAcyC,gBAAehC,eAAc+f,aAAWrY,qBAAmBwY,mBAAiBE,4BACtQ9T,GAAkB,CAACwE,cA9CzB,SAAuB7W,GAEnB,GAAIA,GAASA,EAAMnC,OAAS,EAAG,CAC3B,IAAIiN,EAAO,GACPE,EAAU,GACVjM,EAAW,GACXsU,EAAS,GACTkT,EAAW,EACfvmB,EAAM5B,KAAI,SAAS2B,GAyBhB,OAxBKA,IACIA,EAAKmP,aAAYqX,GAAsB,GAC5Cvb,EAAQjL,EAAK8K,SAAU,EACnB9K,EAAK+K,MAAQ/K,EAAK+K,KAAKjN,OAAS,GAChCkC,EAAK+K,KAAK1M,KAAI,SAASmQ,GAEpB,OADAzD,EAAKyD,IAAO,EACL,QAGVxO,EAAKsT,QAAUtT,EAAKsT,OAAOxV,OAAS,GACpCkC,EAAKsT,OAAOjV,KAAI,SAASqW,GAEtB,OADApB,EAAOoB,IAAS,EACT,QAGV1U,EAAKhB,UAAYgB,EAAKhB,SAASlB,OAAS,GACxCkC,EAAKhB,SAASX,KAAI,SAASiB,GAIxB,OAHIA,EAAOC,OACPP,EAASM,EAAOC,OAAQ,GAErB,SAIX,QAEV,IAAMknB,EAAW,SAASnoB,EAAMF,EAAMsoB,GAClC,OAAOA,EAAKjb,QAAQnN,KAAWF,GAEnCknB,EAAiB,GAAG1mB,OAAOL,OAAOC,KAAKyM,GAAShG,GAAe1C,OAAOkkB,IACtElB,EAAiB,GAAG3mB,OAAOL,OAAOC,KAAKQ,GAAUkX,GAAe3T,OAAOkkB,IACvEjB,EAAc,GAAG5mB,OAAOL,OAAOC,KAAKuM,GAAMvG,GAAYjC,OAAOkkB,IAC7DhB,EAAgB,GAAG7mB,OAAOL,OAAOC,KAAK8U,GAAQ/N,GAAchD,OAAOkkB,IACnEd,EAAiBa,KAIe9V,YAjFxC,SAAqB3E,GACjB,GAAIA,EAAO,CACP,IAAI4a,EAAmB,GACnBC,EAAW,GACXC,EAAQ,EACP7e,EAAgB,EACrB+D,EAAM1N,KAAI,SAAS6N,GAkBf,OAjBIA,GAAYA,EAASnB,MAAQmB,EAASnB,KAAKjN,OAAS,IAChDoO,EAASiD,aACJnH,GAAiB,GAE1BkE,EAASnB,KAAK1M,KAAI,SAASmQ,GASvB,OARIA,GAAOA,EAAI3Q,OAAOC,OAAS,IACvBoO,EAASiD,YACRyX,EAASpY,GAAQoY,EAASpY,GAAO,EAAKoY,EAASpY,GAAO,EAAI,EAC1DmY,EAAiBnY,GAAQmY,EAAiBnY,GAAO,EAAKmY,EAAiBnY,GAAO,EAAI,GAEnFoY,EAASpY,GAAQoY,EAASpY,GAAM,EAAKoY,EAASpY,GAAO,EAAI,GAG1D,QAEXqY,GAAS,GAEN,QAEXb,GAAaa,GACbZ,GAAqBje,GACrBqe,GAA2BM,GAC3BR,GAAmBS,GACnBlB,EAAgBnnB,OAAOC,KAAKooB,MAmDiB5T,iBA3HrD,WACIpR,QAAQC,IAAI,qBACWpB,IAAYC,eAAe,CAC/CC,KAAM,UACNC,UAAc,eAECY,QAAQ,WAAW,SAAUsgB,EAAI9D,GAC3C,IAAI8I,EAAe,GACfC,EAAe,GACf/D,EAAc,GAEd9kB,MAAMC,QAAQ6f,KACdA,EAAW3f,KAAI,SAAS4hB,EAAUvd,GAiB7B,OAhBDd,QAAQC,IAAI,CAAC,mBAAmBoe,IAC3BA,EAAU3hB,QACVyoB,EAAe9G,EAAU3hB,QAAO,GAEhC2hB,EAAUnU,SACVmU,EAAUnU,QAAQzO,MAAM,MAAMgB,KAAI,SAASmQ,GAEvC,OADAsY,EAAetY,IAAO,EACf,QAGXyR,EAAUlV,MAAQkV,EAAUlV,KAAKjN,OAAS,GACxCmiB,EAAUlV,KAAK1M,KAAI,SAASmQ,GAEzB,OADAwU,EAAcxU,IAAO,EACd,QAGT,QAEZoX,EAAqBrnB,OAAOC,KAAKuoB,IACjCjB,EAAwBvnB,OAAOC,KAAKwkB,IACpC6C,EAAyBtnB,OAAOC,KAAKsoB,KAEzCllB,QAAQC,IAAI,CAAC,oBAAoBklB,EAAeD,SAyF9D,OACE,yBAAK7iB,UAAU,kBAEX,kBAAC,IAAD,KACQ,kBAAC,IAAD,CAAO4I,OAAK,EAACF,KAAK,IAAIC,OAClB,SAAC3J,GACG,OAAO,kBAACkV,GAAD,CAAiB2B,QAASA,EAASpQ,QAASzG,EAAMyG,QAASwP,QAASmM,EAAa5Y,eAAgBA,OAIhH,kBAAC,IAAD,CAAOI,OAAK,EAACF,KAAK,QAAQqa,UAAW9B,KACrC,kBAAC,IAAD,CAAOvY,KAAK,WAAWC,OACnB,SAAC3J,GAAD,OAAW,kBAAC8G,GAAD,iBAA+B9G,EAA/B,CAAuCqjB,aAAcA,GAAcC,YAAaA,GAAe9Z,eAAgBA,EAAiB6F,gBAAiBA,GAAiB/N,QAASA,SAE1L,kBAAC,IAAD,CAAOsI,OAAK,EAACF,KAAK,UAAUC,OACxB,SAAC3J,GAAD,OAAW,kBAACkX,GAAD,iBAAqBlX,EAArB,CAAmCsB,QAASA,GAAY+hB,aAAcA,GAAcC,YAAaA,GAAcjU,gBAAiBA,GAAkB7F,eAAgBA,QAIjL,kBAAC,IAAD,CAAOI,OAAK,EAACF,KAAK,yBAAyBC,OACvC,SAAC3J,GAAD,OAAW,kBAACkX,GAAD,iBAAqBlX,EAArB,CAAmCsB,QAASA,GAAY+hB,aAAcA,GAAcC,YAAaA,GAAcjU,gBAAiBA,GAAkB7F,eAAgBA,QAIjL,kBAAC,IAAD,CAAOI,OAAK,EAACF,KAAK,2BAA2BC,OACzC,SAAC3J,GAAD,OAAW,kBAACkX,GAAD,iBAAqBlX,EAArB,CAAmCsB,QAASA,GAAY+hB,aAAcA,GAAcC,YAAaA,GAAcjU,gBAAiBA,GAAiB7F,eAAgBA,QAIhL,kBAAC,IAAD,CAAOE,KAAK,0CAA0CC,OAClD,SAAC3J,GAAD,OAAW,kBAACkX,GAAD,iBAAqBlX,EAArB,CAAmCsB,QAASA,GAAY+hB,aAAcA,GAAcC,YAAaA,GAAcjU,gBAAiBA,GAAiB7F,eAAgBA,QAKhL,kBAAC,IAAD,CAAOI,OAAK,EAAEF,KAAK,YAAYC,OAAQ,SAAC3J,GAAD,OAAW,kBAACiV,GAAD,iBAAsBjV,EAAtB,CAAiCsB,QAASA,GAAU+hB,aAAcA,GAAcC,YAAaA,GAAajU,gBAAiBA,GAAkB7F,eAAgBA,QAG/M,kBAAC,IAAD,CAAOI,OAAK,EAACF,KAAK,2BAA2BC,OAAQ,SAAC3J,GAAD,OAAW,kBAACiV,GAAD,iBAAsBjV,EAAtB,CAAiCsB,QAASA,GAAU+hB,aAAcA,GAAcC,YAAaA,GAAajU,gBAAiBA,GAAkB7F,eAAgBA,QAG7N,kBAAC,IAAD,CAAOE,KAAK,6BAA6BC,OAAQ,SAAC3J,GAAD,OAAW,kBAACiV,GAAD,iBAAsBjV,EAAtB,CAAiCsB,QAASA,GAAU+hB,aAAcA,GAAcC,YAAaA,GAAajU,gBAAiBA,GAAkB7F,eAAgBA,QAGzN,kBAAC,IAAD,CAAOI,OAAK,EAACF,KAAK,4CAA4CC,OAAQ,SAAC3J,GAAD,OAAW,kBAACiV,GAAD,iBAAsBjV,EAAtB,CAAiCsB,QAASA,GAAU+hB,aAAcA,GAAcC,YAAaA,GAAajU,gBAAiBA,GAAkB7F,eAAgBA,QAG9O,kBAAC,IAAD,CAAOI,OAAK,EAACF,KAAK,mBAAmBC,OAAQ,SAAC3J,GAAD,OAAW,kBAACwd,GAAD,iBAAqBxd,EAArB,CAAgCsB,QAASA,GAAU+hB,aAAcA,GAAcC,YAAaA,GAAajU,gBAAiBA,GAAkB7F,eAAgBA,QAGpN,kBAAC,IAAD,CAAOI,OAAK,EAACF,KAAK,yBAAyBC,OAAQ,SAAC3J,GAAD,OAAW,kBAACwd,GAAD,iBAAqBxd,EAArB,CAAgCsB,QAASA,GAAU+hB,aAAcA,GAAcC,YAAaA,GAAajU,gBAAiBA,GAAkB7F,eAAgBA,QAGzN,kBAAC,IAAD,CAAOI,OAAK,EAACF,KAAK,UAAUC,OAAQ,SAAC3J,GAAD,OAAW,kBAACwd,GAAD,iBAAqBxd,EAArB,CAA4B2T,iBAAkBA,GAAkBH,oBAAqBA,GAAyBlS,QAASA,GAAU+hB,aAAcA,GAAcC,YAAaA,GAAajU,gBAAiBA,GAAkB7F,eAAgBA,QAI1R,kBAAC,IAAD,CAAOI,OAAK,EAACF,KAAK,SAASC,OACvB,SAAC3J,GAAD,OAAW,kBAACoP,GAAD,iBAAkBpP,EAAlB,CAA2BsB,QAASA,GAAY+hB,aAAcA,GAAcC,YAAaA,GAAcjU,gBAAiBA,GAAkB7F,eAAgBA,QAGzK,kBAAC,IAAD,CAAOI,OAAK,EAACF,KAAK,iBAAiBC,OAC/B,SAAC3J,GAAD,OAAW,kBAACoP,GAAD,iBAAkBpP,EAAlB,CAA2BsB,QAASA,GAAY+hB,aAAcA,GAAcC,YAAaA,GAAcjU,gBAAiBA,GAAkB7F,eAAgBA,QAKzK,kBAAC,IAAD,CAAOI,OAAK,EAACF,KAAK,cAAcC,OAC5B,SAAC3J,GAAD,OAAW,kBAAC8P,GAAD,iBAAuB9P,EAAvB,CAAgCsB,QAASA,GAAY+hB,aAAcA,GAAcC,YAAaA,GAAe9Z,eAAgBA,EAAiB6F,gBAAiBA,SAG9K,kBAAC,IAAD,CAAOzF,OAAK,EAACF,KAAK,sBAAsBC,OACpC,SAAC3J,GAAD,OAAW,kBAAC8P,GAAD,iBAAuB9P,EAAvB,CAAgCsB,QAASA,GAAY+hB,aAAcA,GAAcC,YAAaA,GAAe9Z,eAAgBA,EAAiB6F,gBAAiBA,SAK9K,kBAAC,IAAD,CAAOzF,OAAK,EAACF,KAAK,QAAQqa,UAAWzgB,IACrC,kBAAC,IAAD,CAAOsG,OAAK,EAACF,KAAK,cAAcqa,UAAWlgB,IAC3C,kBAAC,IAAD,CAAO+F,OAAK,EAACF,KAAK,cAAcqa,UAAWhgB,IAC3C,kBAAC,IAAD,CAAO6F,OAAK,EAACF,KAAK,aAAaqa,UAAWjgB,IAEzC,kBAAC,IAAD,CAAO8F,OAAK,EAACF,KAAK,UAAUqa,UAAW/B,KACxC,kBAAC,IAAD,CAAOpY,OAAK,EAACF,KAAK,IAAIqa,UAAWzgB,KAEzC,6BACA,6BACA,+BC3RF0gB,GAAcC,QACW,cAA7B3f,OAAO+J,SAAS6V,UAEe,UAA7B5f,OAAO+J,SAAS6V,UAEhB5f,OAAO+J,SAAS6V,SAASjgB,MACvB,2DAsCN,SAASkgB,GAAgBC,EAAO/K,GAC9BgL,UAAUC,cACPC,SAASH,GACTnmB,MAAK,SAAAumB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9nB,QACfynB,UAAUC,cAAcO,YAI1BlmB,QAAQC,IACN,iHAKEya,GAAUA,EAAOyL,UACnBzL,EAAOyL,SAASN,KAMlB7lB,QAAQC,IAAI,sCAGRya,GAAUA,EAAO0L,WACnB1L,EAAO0L,UAAUP,WAO5BQ,OAAM,SAAAC,GACLtmB,QAAQsmB,MAAM,4CAA6CA,MC1FjEC,IAASvb,OACP,kBAAC,IAAMwb,WAAP,KACE,kBAAC,GAAD,OAEF7S,SAASC,eAAe,SDYnB,SAAkB8G,GACvB,GAA6C,kBAAmBgL,UAAW,CAGzE,GADkB,IAAIe,IAAIC,GAAwB/gB,OAAO+J,SAASzK,MACpD0hB,SAAWhhB,OAAO+J,SAASiX,OAIvC,OAGFhhB,OAAOihB,iBAAiB,QAAQ,WAC9B,IAAMnB,EAAK,UAAMiB,GAAN,sBAEPrB,KAgEV,SAAiCI,EAAO/K,GAEtCmM,MAAMpB,EAAO,CACXqB,QAAS,CAAE,iBAAkB,YAE5BxnB,MAAK,SAAAynB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYnd,QAAQ,cAG5C6b,UAAUC,cAAcwB,MAAM7nB,MAAK,SAAAumB,GACjCA,EAAauB,aAAa9nB,MAAK,WAC7BqG,OAAO+J,SAAS2X,eAKpB7B,GAAgBC,EAAO/K,MAG1B2L,OAAM,WACLrmB,QAAQC,IACN,oEAvFAqnB,CAAwB7B,EAAO/K,GAI/BgL,UAAUC,cAAcwB,MAAM7nB,MAAK,WACjCU,QAAQC,IACN,iHAMJulB,GAAgBC,EAAO/K,OClC/BiL,I,mBChBA4B,EAAOC,QAAU,IAA0B,mC,wCCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,+C","file":"static/js/main.6c0bed79.chunk.js","sourcesContent":["//const yaml = require('js-yaml');\n// FUNCTIONS \n\nconst RASA = {\n    slotTypes : {\n        'unfeaturized': {},\n        'text': {},\n        'bool': {},\n        'list': {},\n        'float': {'min_value':'int', 'max_value':'int'},\n        'categorical': {'values':'list'}\n    },\n    autofillOptions: ['Yes','No']\n}\n\n// https://cloud.google.com/dialogflow/docs/reference/system-entities\nconst GoogleAssistant = {\n    entityTypes: [\"@sys.date-time\",\"@sys.date\",\"@sys.date-period\",\"@sys.time\",\"@sys.time-period\",\"@sys.number\",\"@sys.cardinal\",\"@sys.ordinal\",\"@sys.number-integer\",\"@sys.number-sequence\",\"@sys.flight-number\",\"@sys.unit-area\",\"@sys.unit-currency\",\"@sys.unit-length\",\"@sys.unit-speed\",\"@sys.unit-volume\",\"@sys.unit-weight\",\"@sys.unit-information\",\"@sys.percentage\",\"@sys.temperature\",\"@sys.duration\",\"@sys.age\",\"@sys.currency-name\",\"@sys.unit-area-name\",\"@sys.unit-length-name\",\"@sys.unit-speed-name\",\"@sys.unit-volume-name\",\"@sys.unit-weight-name\",\"@sys.unit-information-name\",\"@sys.address\",\"@sys.zip-code\",\"@sys.geo-capital\",\"@sys.geo-country\",\"@sys.geo-country-code\",\"@sys.geo-city\",\"@sys.geo-state\",\"@sys.place-attraction\",\"@sys.airport\",\"@sys.location\",\"@sys.email\",\"@sys.phone-number\",\"@sys.person\",\"@sys.music-artist\",\"@sys.music-genre\",\"@sys.color\",\"@sys.language\",\"@sys.any\",\"@sys.url\"]\n}\n\n//https://developer.amazon.com/en-US/docs/alexa/custom-skills/slot-type-reference.html\",\nconst Alexa = {\n    entityTypes: [\"AMAZON.DATE\",\"AMAZON.DURATION\",\"AMAZON.FOUR_DIGIT_NUMBER\",\"AMAZON.NUMBER\",\"AMAZON.Ordinal\",\"AMAZON.PhoneNumber\",\"AMAZON.TIME\",\"AMAZON.SearchQuery\",\"AMAZON.Actor\",\"AMAZON.Airline\",\"AMAZON.Airport\",\"AMAZON.Anaphor\",\"AMAZON.Animal\",\"AMAZON.Artist\",\"AMAZON.Author\",\"AMAZON.Book\",\"AMAZON.City\",\"AMAZON.Color\",\"AMAZON.Corporation\",\"AMAZON.Country\",\"AMAZON.CreativeWorkType\",\"AMAZON.DayOfWeek\",\"AMAZON.FictionalCharacter\",\"AMAZON.FirstName\",\"AMAZON.Food\",\"AMAZON.Genre\",\"AMAZON.Language\",\"AMAZON.Month\",\"AMAZON.Movie\",\"AMAZON.MusicAlbum\",\"AMAZON.MusicGroup\",\"AMAZON.Musician\",\"AMAZON.MusicRecording\",\"AMAZON.Person\",\"AMAZON.RadioChannel\",\"AMAZON.Region\",\"AMAZON.RelativePosition\",\"AMAZON.Room\",\"AMAZON.Sport\",\"AMAZON.StreetName\",\"AMAZON.TVSeries\",\"AMAZON.VideoGame\",\"AMAZON.VisualModeTrigger\"]\n}\n\n\nfunction toSnakeCase(str) {\n    return str.toLowerCase().replace(/[^a-z]/g, '_').replace('__','_')\n}\n\nconst snakeToCamelCase = (str) => str.replace(\n    /([-_][a-z])/g,\n    (group) => group.toUpperCase()\n                    .replace('-', '')\n                    .replace('_', '')\n);\n\nconst camelToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\n\n\n\nfunction generateObjectId() {\n    var timestamp = (new Date().getTime() / 1000 | 0).toString(16);\n    return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function() {\n        return (Math.random() * 16 | 0).toString(16);\n    }).toLowerCase();\n}\n   \nfunction parentUrl(url) {\n    return url.split(\"/\").slice(0,-1).join(\"/\") \n}\n\nfunction concatText(text,words) {\n   let parts = text.split(' ')\n   let shorter = parts.slice(0,20).join(' ')\n   return (shorter.length < text.length) ? shorter + '...' : shorter;\n}\n\nfunction splitSentences(text) {\n      var final = []\n      if (text) {\n          // split by newline and full stop\n         var splits = text.split('\\n').join('::::').split('.').join('::::').split('::::') //.map(function(value) { return value.trim()})\n        // trim all splits\n        for (var splitText in splits) {\n            if(splitText.trim().length > 0) final.push(splits[splitText])\n        }\n     }\n     return final;\n}\n\n\n    \n    function findFirstDiffPos(a, b) {\n      if (a === b) return -1;\n      for (var i=0; a[i] === b[i]; i++) {}\n      return i;\n    }\n    \n    function uniquifyArray(a) {\n        //console.log(['UNIQARRAY',a])\n        if (Array.isArray(a)) {\n            var index = {}\n            a.map(function(value) {\n                index[value] = true \n                return null\n            })\n            return Object.keys(index)\n        } else {\n            return []\n        }\n    }\n\n    function uniquifyArrayOfObjects(a,field) {\n         if (Array.isArray(a)) {\n             var index = {}\n            var emptyIndex = null\n            a.map(function(value) {\n                if (value) {\n                    if (value[field]) {\n                        index[value[field]] = value \n                    } else {\n                        emptyIndex = value\n                    }\n                }\n                return null\n            })\n            if (emptyIndex) return [emptyIndex].concat(Object.values(index))\n            else return Object.values(index)\n        } else {\n            return []\n        }\n    }\n    function replaceEntities(example,entities) {\n        // replace entity values with {entityName}\n        // first sort entities by start key\n        entities = entities.sort(function(a,b) {\n          if (a.start < b.start) return -1\n          else return 1  \n        })\n        var offset = 0\n        var newExample = example\n        entities.map(function(entity) {\n            newExample = newExample.slice(0,entity.start + offset)+\"{\"+entity.type+\"}\"+newExample.slice(entity.end + offset)\n            var diff = (entity.end - entity.start) - (entity.type.length + 2)\n            offset -= diff\n            return null\n        })\n        return newExample\n    }\n    \n    function replaceEntitiesWithValues(example,entities) {\n        // replace entity values with {entityName}\n        // first sort entities by start key\n        if (example && Array.isArray(entities)) {\n                entities = entities.sort(function(a,b) {\n              if (a.start < b.start) return -1\n              else return 1  \n            })\n            var offset = 0\n            var newExample = example\n            entities.map(function(entity) {\n                var replacement = \"[\"+entity.value+\"](\"+entity.type+\")\"\n                newExample = newExample.slice(0,entity.start + offset)+replacement+newExample.slice(entity.end + offset)\n                var diff = (entity.end - entity.start) - (replacement.length)\n                offset -= diff\n                return null\n            })\n            return newExample\n        } else {\n            return example\n        }\n    }\n    \n    \nexport {generateObjectId, parentUrl, concatText , findFirstDiffPos, splitSentences,uniquifyArray, uniquifyArrayOfObjects, replaceEntities,replaceEntitiesWithValues,  RASA, GoogleAssistant, Alexa, snakeToCamelCase, camelToSnakeCase, toSnakeCase }\n","import {useReducer} from 'react';\nimport {generateObjectId} from './utils'\nimport localforage from 'localforage'\n\n// handle list updates with minimum disruption to top level items\nfunction reducer(state, action) {\n    const index = parseInt(action.index)\n switch (action.type) {\n    case \"append\":\n      if (action.item) {\n        return [...state, action.item];\n      } else return state\n    case \"insert\":\n      if (action.item && typeof index === \"number\" ) {\n          if (state.length > 0) {\n              return [\n                ...state.slice(0, index),\n                action.item,\n                ...state.slice(index)\n              ];\n          } else return state\n        } else return state\n    case \"remove\":\n      if (typeof index === \"number\" ) {\n          return [\n            ...state.slice(0, index),\n            ...state.slice(index + 1)\n          ];\n       } else return state \n    case \"update\":\n       if (action.item && typeof index === \"number\" ) {\n           return  [\n            ...state.slice(0, index),\n            action.item,\n            ...state.slice(index + 1)\n          ];\n        } else return state \n    case \"replaceall\":\n        if (typeof action.items === \"object\") {\n            return action.items\n        } else return state\n    default:\n      throw new Error('Invalid reduction in useDB');\n  }\n}\n   \n\n// state manager with local storage backing\nexport default function useDB(database, databaseTable) {\n     const [items, dispatch] = useReducer(reducer,[]);\n     var localforageStorage = localforage.createInstance({\n       name: database ? database : \"localstoragemanager\",\n       storeName   : databaseTable ? databaseTable : 'data',\n     });\n\n    function getId(item) {\n        if (item && item.id) {\n            return item.id\n        } else {\n            throw new Error(\"Missing ID value in getId\")\n        }\n    }\n    function getIdForIndex(index) {\n        if (items && items[index] && items[index].id) {\n            return items[index].id\n        } else {\n            throw new Error(\"Missing ID value in getIdForIndex\")\n        }\n    }\n    \n\n    function loadAll() {\n        localforageStorage.keys().then(function(keys) {\n            var ipromises = []\n            keys.map(function(key) {\n                ipromises.push(new Promise(function(iresolve,ireject) {\n                   localforageStorage.getItem(key).then(function(res) {\n                       iresolve(res)\n                   })\n                }))\n                return null\n            })\n            Promise.all(ipromises).then(function(res) {\n                dispatch({ type: \"replaceall\", items: res });\n            })\n        })\n        \n    }\n\n    \n    // save or create\n    function saveItem(item,index) {\n        if (item) {\n            console.log(['SAVEDB',item,index])\n            // update sources and save text in seperate localstorage\n            // ensure id\n            var isNewItem = false;\n            if (!item.id) {\n                isNewItem = true;\n                item.id = generateObjectId()\n            }\n            localforageStorage.setItem(item.id,item)\n            if (items.length === 0) {\n                console.log(['SAVEDB len0',item,index])\n                dispatch({ type: \"append\",item: item });\n            } else {\n                if ((index === null || index === undefined)  || isNewItem) {\n                    console.log(['SAVEDB append',item,index])\n                    dispatch({ type: \"append\",item: item });\n                } else {\n                    console.log(['SAVEDB update',item,index])\n                    dispatch({ type: \"update\",item: item, index: index });\n                }\n            }\n            \n        }\n    }\n    \n\n    function findBy(field,value) {\n        var key = findKeyBy(field,value)\n        if (key) return items[key];\n        return null\n    }\n    \n    function findKeyBy(field,value) {\n        for (var k in items) {\n            if (items[k] && items[k][field] === value) return k\n        }\n        return null\n    }\n\n\n    function setItemsWrap(items) {\n        localforageStorage.clear().then(function() {\n            dispatch({ type: \"replaceall\", items: items})\n            if (items) {\n                items.map(function(item) { localforageStorage.setItem(getId(item),item); return null})\n            }\n        })\n        \n    }\n    \n    function deleteItem(index) {\n        var id = getIdForIndex(index)\n        if (id) {\n            localforageStorage.removeItem(id).then(function() {\n                dispatch({ type: \"remove\", index: index})\n            })\n        }\n        \n    }\n    \n    function filter(matchFunction) {\n        var filtered = []\n        if (matchFunction) {\n            items.map(function(item,i) {\n              if (matchFunction(item)) {\n                  filtered.push(item)\n              }  \n              return null\n            })\n        }\n        return filtered\n        \n    }\n    \n    return {getId:getId, loadAll:loadAll, saveItem:saveItem, deleteItem:deleteItem , items:items, setItems:setItemsWrap, findKeyBy:findKeyBy, findBy:findBy, filter: filter}\n    \n}\n","import {splitSentences, generateObjectId} from './utils'\n\nfunction cleanListItem(text) {\n    return text ? text.replace(/[^0-9a-z ,]/gi, '') : ''\n}\n\nfunction extractSynonym(text) {\n    if (text) { \n        var parts = text.split(':')\n        if (parts.length > 1) {\n           return [parts[0],parts.slice(1).join(\":\")]   \n        } else {\n            return ['',text]\n        }\n    } else {\n        return ['','']\n    }\n}\n\nfunction sortListSplits(a,b) {\n    if (a.value < b.value) return -1;  else return 1;\n}\n\nfunction sortExampleSplits(a,b) {\n    if (a.example < b.example) return -1 ;else return 1;\n}\n\nfunction parseLists(text,listName) {\n        var key = listName ? listName : '___'\n        // plain text\n        function generateSplits() {\n            var newTextSplits=[]\n            const splits = splitSentences(text)\n            splits.map(function(textInner,i) {\n                var [synonym, value] = extractSynonym(textInner)\n                value = value.trim().replace(/[^0-9a-z ]/gi, '')\n                if (value && value.length > 0) {\n                    newTextSplits.push({'id':generateObjectId(), 'value':value,'synonym':synonym})\n                }\n                return null\n            })\n            return newTextSplits.sort(sortListSplits);\n        }\n        try {\n            var json = JSON.parse(text)\n            //  JSON ARRAY FORMAT\n            if (Array.isArray(json)) {\n                // value and optional synonyn\n                var lists = {}\n                //console.log(['LISTS',lists])\n                if (json.length > 0 && json[0].value && json[0].value.trim().length > 0) {\n                    for (var i in json) {\n                        var entity = json[i]\n                        if (entity.value && entity.value.trim().length > 0) {\n                            var listKey = entity.list ? entity.list : key\n                            //console.log(['reset push',listKey,lists])\n                            if (!lists[listKey]  ) {\n                                lists[listKey] = []\n                            }\n                            lists[listKey].push({'id':generateObjectId(), 'value':cleanListItem(entity.value),'synonym':entity.synonym})\n                        }\n                    }\n                    // now sort and uniquify each list\n                    \n                    Object.keys(lists).map(function(listKey) {\n                        var list = lists[listKey]\n                        var uniqueKeys = {}\n                        list.map(function(listItem) {\n                           uniqueKeys[listItem.value+':'+listItem.synonym] = listItem\n                           return null\n                        })\n                        lists[listKey] = Object.values(uniqueKeys).sort(sortListSplits)\n                        return null\n                    })\n                    \n                // array of text\n                } else {\n                    var newSplits=[]\n                    for (var q in json) {\n                        var textInner = json[q].trim().replace(/[^0-9a-z]/gi, '')\n                        if (textInner && textInner.length > 0) {\n                            const [synonym, value] = extractSynonym(textInner)\n                            newSplits.push({'id':generateObjectId(), 'value':value,'synonym':synonym, 'list':listName})\n                        }\n                    }\n                    lists[key] = newSplits.sort(sortListSplits)\n                }\n                //console.log(['LISTS',lists])\n                return lists\n                //return items.sort(sortListSplits) \n            // PLAIN TEXT LIST\n            }  else {\n                lists = {}\n                lists[key] = generateSplits() \n                return lists\n            }\n        } catch (e) {\n            console.log(e)\n            // TODO try for yaml\n            //try {\n              //const doc = yaml.safeLoad(text);\n              //console.log(doc);\n            //} catch (e) {\n               // finally text\n                lists = {}\n                lists[key] = generateSplits() \n                return lists\n            //}\n           \n        }  \n}\n\n\nfunction parseImportText(text) {\n        var items = []\n        function generateSplits() {\n            const splits = splitSentences(text)\n            var newSplits=[]\n            splits.map(function(text,i) {\n                if (text && text.trim().length > 0) {\n                 newSplits.push({'id':generateObjectId(), 'example':text,'intent':'',\"entities\":[], \"tags\":[]})\n                }\n                return null\n            })\n            return newSplits.sort(sortExampleSplits)\n        }\n        try {\n            var json = JSON.parse(text)\n            // RASA JSON FORMAT\n            if (json && json.rasa_nlu_data && json.rasa_nlu_data.common_examples) {\n                for (var i in json.rasa_nlu_data.common_examples) {\n                    var entity = json.rasa_nlu_data.common_examples[i]\n                    var cleanEntities = entity.entities && entity.entities.map(function(el,j) { return {type:el.entity, value:el.value, start:el.start, end:el.end} })\n                    if (entity.text && entity.text.trim().length > 0) {\n                        items.push({'id':generateObjectId(), 'example':entity.text,'intent':entity.intent,\"entities\":cleanEntities, tags:[]})\n                    }\n                }\n                return items.sort(sortExampleSplits)\n            // JOVO JSON { \"invocation\": \"my test app\", \"intents\": [{\"name\": \"HelloWorldIntent\",\"phrases\": [\"hello\",\"say hello\"]}] } ,\n            } else if (json && json.invocation && json.intents) {\n                for (var l in json.intents) {\n                    if (json.intents[l] && json.intents[l].phrases) {\n                        for (var k in json.intents[l].phrases) {\n                            if (json.intents[l].phrases[k] && json.intents[l].phrases[k].trim().length > 0)  {\n                                 var phrase = json.intents[l].phrases[k]\n                                 var entities = []\n                                if (json.intents[l].inputs) {\n                                    for (var inputKey in json.intents[l].inputs) {\n                                       var input = json.intents[l].inputs[inputKey]\n                                       //console.log([phrase,input.name])\n                                       const markerStart = phrase.indexOf(\"{\"+input.name+\"}\")\n                                       if (markerStart !== -1)  {\n                                           phrase = phrase.replace(\"{\"+input.name+\"}\",input.name)\n                                       }\n                                       var entityi = {type:input.name, value:input.name , start: markerStart , end: markerStart + input.name.length  }\n                                       entities.push(entityi)\n                                       return null\n                                    }\n                                }\n                                items.push({'id':generateObjectId(), 'example':phrase.trim(),'intent':json.intents[l].name,\"entities\": entities, tags: []})\n                            }\n                        }\n                    }\n                    //console.log(['JOVO IMPORT',items])\n                    //var entity = json.rasa_nlu_data.common_examples[i]\n                    //var cleanEntities = entity.entities && entity.entities.map(function(el,j) { return {type:el.entity, value:el.value, start:el.start, end:el.end} })\n                    //if (entity.text && entity.text.trim().length > 0) items.push({'id':generateObjectId(), 'example':entity.text,'intent':entity.intent,\"entities\":cleanEntities, tags:[]})\n                }\n                return items.sort(sortExampleSplits) //[items, intents, entities, tags]\n            // VANILLA JSON [{example:'',intent:'',entities:[{value:'',start:33,end:45}], tags:['dd']}]\n            } else if (json && json.length > 0 && json[0].example && json[0].example.trim().length > 0) {\n                for (var j in json) {\n                    var item = json[j]\n                    if (item) {\n                        if (item.example && item.example.trim().length > 0) items.push({'id':generateObjectId(), 'example':item.example,'intent':item.intent,\"entities\":item.entities && item.entities.length > 0 && item.entities[0].value ? item.entities : [], tags:item.tags ? item.tags : []})\n                    }\n                }\n                return items.sort(sortExampleSplits) \n            // PLAIN TEXT LIST\n            }  else {\n                return generateSplits()\n            }\n        } catch (e) {\n            console.log(e)\n            // TODO try for yaml\n            //try {\n              //const doc = yaml.safeLoad(text);\n              //console.log(doc);\n            //} catch (e) {\n               // finally text\n            return generateSplits()\n            //}\n           \n        }   \n    }\n    \nexport {parseImportText, parseLists}    \n    \n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst TagAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Tag'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                value={props.tagAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.tagAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setTagAllValue(skillKey); props.tagAll(skillKey)}} >Add {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.untagAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n      \n              //return <Dropdown  as={ButtonGroup}>\n              //<Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              //<Button   size=\"sm\" >{'Tag'} </Button>\n              //<Dropdown.Menu>\n               //<form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                    //<div className=\"form-group\">\n                      //<input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                    //value={props.tagAllValue} />\n                    //</div>\n                  //</form>\n                  //{props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n                      //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {props.setTagAllValue(tagKey); props.tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n                   //})}\n              //</Dropdown.Menu>\n          //</Dropdown>\n}\nexport default TagAllDropDown\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\n\nconst IntentAllDropDown = function(props) {\n    return  <Dropdown  as={ButtonGroup}>\n              <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button   size=\"sm\" >{'Intent'} </Button>\n              <Dropdown.Menu>\n               <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.intentAll(e.target.value)}} >\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setIntentAllValue(e.target.value)}}\n                    value={props.intentAllValue} />\n                    </div>\n                  </form>\n                  {props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n                      return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {props.setIntentAllValue(intentKey); props.intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n                   })}\n              </Dropdown.Menu>\n          </Dropdown>\n}\nexport default IntentAllDropDown\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst SkillAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Skill'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.skillSetAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setSkillAllValue(e.target.value)}}\n                value={props.skillAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.skillSetAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setSkillAllValue(skillKey); props.skillSetAll(skillKey)}} >Add to {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.unskillAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n      \n      \n    \n    //return <Dropdown  as={ButtonGroup}>\n          //<Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          //<Button   size=\"sm\" >{'Skill'} </Button>\n          //<Dropdown.Menu>\n           //<form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.skillSetAll(e.target.value)}} >\n                //<div className=\"form-group\">\n                  //<input type=\"text\" className=\"form-control\" onChange={function(e) {props.setSkillAllValue(e.target.value)}}\n                //value={props.skillAllValue} />\n                //</div>\n              //</form>\n              //{props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n              //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {props.setSkillAllValue(skillKey); props.skillSetAll(skillKey)}}  >{skillKey}</Dropdown.Item>\n    //})}\n          //</Dropdown.Menu>\n      //</Dropdown>\n}\nexport default SkillAllDropDown\n","import React, {useState} from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst ImportListsDropDown = function(props) {\n    //console.log(props)\n    const [importToValue,setImportToValue] = useState(props.importTo ? props.importTo : '')\n    return <Dropdown style={{float:'right', marginLeft:'0.5em'}} variant=\"success\"  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"md\" variant=\"success\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button variant=\"success\"  size=\"md\" >{'Import Entities as'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.importListTo(importToValue)}} >\n                <div className=\"form-group\">\n                <InputGroup> \n                    <input type=\"text\" className=\"form-control\" onChange={function(e) {setImportToValue(e.target.value)}}\n                value={importToValue} />\n                    <Button size=\"sm\"  onClick={function(e) {props.importListTo(importToValue)}} >Import</Button>\n                </InputGroup>\n                </div>\n              </form>\n              {props && props.lookups && props.lookups.listsLookups && props.lookups.listsLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setImportToValue(skillKey); props.importListTo(skillKey)}}  >{skillKey}</Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n}\nexport default ImportListsDropDown\n","/* global window */\nimport {Link} from 'react-router-dom'\nimport {Button, ListGroup } from 'react-bootstrap'\nimport React, {Fragment} from 'react';\nimport FileReaderInput from 'react-file-reader-input';\n\nimport TagAllDropDown from './TagAllDropDown'\nimport IntentAllDropDown from './IntentAllDropDown'\nimport SkillAllDropDown from './SkillAllDropDown'\n\nimport ImportListsDropDown from './ImportListsDropDown'\nimport helpSVG from '../images/helpoverview.svg'\n\nfunction MatchesTallies(props) {\n    return <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{props.filteredItems.length}/{props.items.length} matches </span>\n}\n\nfunction HelpMenu(props) {\n    return <div>\n        <Link style={{marginRight:'1em'}} to=\"/help\" ><Button>Home</Button></Link>\n        <Link style={{marginRight:'1em'}} to=\"/helpimport\" ><Button>Import</Button></Link>\n        <Link style={{marginRight:'1em'}} to=\"/helpexport\" ><Button>Export</Button></Link>\n        <Link style={{marginRight:'1em'}} to=\"/helpabout\" ><Button>About</Button></Link>\n    </div>\n}\n\nfunction HelpText(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n        <HelpMenu/>\n        <h1>NLU tool</h1>\n        <img src={helpSVG} style={{width: '80%', height:'15em' }} alt=\"Help Overview\"/>\n        <div>This tool is intended to help collect open licensed NLU data. Specifically, it captures sentences with related intent and entity maps.</div>\n        <div>Examples can be tagged for organisation and collected into your own skills for export into various NLU training data formats including RASA, JOVO (Alexa, Google), Mycroft and native JSON.</div>\n        <hr/>\n        <div>This tool is a Progressive Web Application. It works without the Internet. All data is stored locally in your web browser. Source Code at <a target=\"_new\" href=\"https://github.com/syntithenai/opennludata\" >Github</a></div>\n        <div>When the Internet is available, <b>this site uses Google Analytics to measure engagement and improve future versions.</b></div>\n       <hr/>\n       \n        <p>Create <Link to=\"/sources\" ><Button>Sources</Button></Link> from pasted text or uploaded files.</p>\n        <p>Use the <Link to=\"/import\" ><Button>Import</Button></Link> page to break text into sentences and create NLU example records.</p>\n        <p><Link to=\"/examples\" ><Button>Organise</Button></Link> your examples using tags and cleanup untagged examples.</p>\n        <p><Link to=\"/search\" ><Button>Search </Button></Link> the community database of NLU example records.</p>\n        <p><Link to=\"/skills\" ><Button>Collect </Button></Link> examples into a skill for export in various training formats.</p>\n        </div>\n}\n\nfunction HelpTextImport(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n    <HelpMenu/>\n            <h1>Importing Data</h1>\n            <div>This tool can import files two types of data, entities and intents.\n            <ul>\n                <li><h3>Entity Values</h3>\n                    \n                </li>\n                <li><h3>Intent Examples</h3>\n                \n                </li>\n            </ul>\n            \n            </div>\n            <hr/>\n        </div>\n}\n\nfunction HelpTextAbout(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n    <HelpMenu/>\n            <h1>About</h1>\n<br/>\n            <div><h3>Bugs/Feedback</h3>Please share any feedback on the <a target=\"_new\" href=\"https://github.com/syntithenai/opennludata/issues\" >Github Issues Page</a></div>\n            <br/>\n             <div>The source code for this tools is available under an MIT Open Source Licence. It is built using create-react-app with localForage for cross platform local persistence.</div>\n            <hr/>\n            <div>MIT Licenced Open Source Licence  - CopyLeft Steve Ryan (syntithenai@gmail.com)</div>\n            \n             <div>Icons from  The Noun Project and others.</div>\n             <ul>\n             <li>Man Singing by Gan Khoon Lay from  <a href='https://thenounproject.com/term/man-singing/642288/' target=\"_new\" >The Noun Project</a></li>\n             <li>Head by hunotika from <a href='https://thenounproject.com/term/head/184237/' target=\"_new\" >The Noun Project</a></li>\n             </ul>\n            <hr/>\n        </div>\n}\n\nfunction HelpTextExport(props) { \n    return <div style={{marginLeft:'0.5em'}}>\n    <HelpMenu/>\n            <h1>Exporting</h1>\n            <div>This tool can currently export to a number of formats including\n            <ul>\n                <li>Native JSON format</li>\n                <li>Mycroft intents and entities for Padatious NLU</li>\n                <li>RASA training data</li>\n                <li>JOVO model files</li>\n            </ul>\n            </div>\n\n        </div>\n}\n\n\nfunction NewFileButtons(props) {\n    return <span>\n        <Link to={props.match.url + '/text'} style={{float:'right'}} ><Button>Paste Text</Button></Link>\n        <FileSelector {...props}/>   \n    </span>\n}\n\nfunction FilesList(props) {\n    //console.log(['man fl ',props])\n     const { items} = props  \n     if (items) {\n       const list = Object.values(items).map(function(item,i) {\n            return <ListGroup.Item  key={i}  >\n                   <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"danger\" onClick={function(e) {if(window.confirm('Really delete source '+items[i].title)) props.deleteItem(i)}} >Delete</Button>\n                   <Link to={props.match.url+\"/text/\"+item.id} ><Button style={{float:'right',marginLeft:'0.5em'}}  >Edit</Button></Link>\n                   <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"success\" onClick={function(e) { props.importExamples(items[i]) }}    >Import Intents</Button>\n                   <ImportListsDropDown lookups={props.lookups} importListTo={function(listName) {props.importLists(items[i],listName)}} importTo={items[i].title} />\n                   <span style={{width:'90%'}}  >{item.title}</span>\n               </ListGroup.Item>\n        })\n        return <ListGroup>{list}</ListGroup>\n    } else {\n        return null\n    }\n}\n\nfunction ListsList(props) {\n     const { items} = props  \n     if (items) {\n       const list = Object.values(items).map(function(item,i) {\n            return <ListGroup.Item  key={i}  >\n                   <Button style={{float:'right', marginLeft:'0.5em'}} variant=\"danger\" onClick={function(e) {if(window.confirm('Really delete list '+items[i].title)) props.deleteItem(i)}} >Delete</Button>\n                   <Link to={props.match.url+\"/text/\"+item.id} ><Button style={{float:'right',marginLeft:'0.5em'}}  >Edit</Button></Link>\n                   <span style={{width:'90%'}}  >{item.title}</span>\n               </ListGroup.Item>\n        })\n        return <ListGroup>{list}</ListGroup>\n    } else {\n        return null\n    }\n}\n\nfunction FileSelector(props) {\n    return <form onSubmit={function(e) {e.preventDefault()}} style={{float:'right'}}>\n            <FileReaderInput multiple as=\"binary\" id=\"my-file-input\"\n                             onChange={props.handleFileSelection}>\n              <Button style={{ marginRight:'0.5em'}} >Select files</Button>\n            </FileReaderInput>\n          </form>\n}\n\nfunction WithSelectedDropDowns(props) {\n    return <Fragment>\n        <span>With {props.lookups.selectedTally} selected&nbsp;</span>\n               \n        <SkillAllDropDown skillSetAll={props.skillSetAll} skillAllValue={props.skillAllValue}  setSkillAllValue={props.setSkillAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n        <IntentAllDropDown intentAll={props.intentAll} intentAllValue={props.intentAllValue} setIntentAllValue={props.setIntentAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n        <TagAllDropDown tagAll={props.tagAll} tagAllValue={props.tagAllValue} setTagAllValue={props.setTagAllValue}  lookups={props.lookups} untagAll={props.untagAll} unskillAll={props.unskillAll} />\n    </Fragment>\n\n}\n\nexport { MatchesTallies,  HelpTextImport,HelpTextExport,HelpTextAbout,HelpText, NewFileButtons, FilesList, ListsList, FileSelector, WithSelectedDropDowns}\n","import {Link} from 'react-router-dom'\nimport {Button,  Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React, {useState, useEffect} from 'react';\n//import FileReaderInput from 'react-file-reader-input';\nimport {generateObjectId, parentUrl} from '../utils'\nimport { JsonEditor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\n//import useDB from './useDB'\n//import useDBSingleKey from './useDBSingleKey'\n//import {parseImportText} from './utils'\n//import localforage from 'localforage'\n//import {NewFileButtons, FileSelector, FilesList} from './Components'\n\nexport default function JSONTextEditor(props) {\n    const [title,setTitle] = useState(props.item && props.item.title ? props.item.title : '')\n    const [text, setText ] = useState(props.item && props.item.data ? props.item.data : '') \n    const [isJson, setIsJson ] = useState(false) \n    const [json, setJson ] = useState([]) \n    const [editorMode, setEditorMode] = useState('json')\n    const [editorOptions, setEditorOptions] = useState(['json','text'])\n    \n    const id = props.match.params.itemId ? props.match.params.itemId  : generateObjectId()\n    const { findKeyBy} = props  \n    const index = findKeyBy('id',id)\n   \n    \n    useEffect(() => {\n        try {\n            if ((text[0] === \"[\" && text[text.length - 1] === \"]\") || (text[0] === \"{\" && text[text.length - 1] === \"}\")) {\n                var jsonParsed = JSON.parse(text)\n                setJson(jsonParsed)\n                setIsJson(true)\n                setEditorOptions(['json','text'])\n                setEditorMode('json')\n            } else {\n                setIsJson(false)\n                setEditorOptions(['text'])\n                setEditorMode('text')\n            }\n        } catch (e) {\n            setIsJson(false)\n            setEditorOptions(['text'])\n            setEditorMode('text')\n        }\n    \n    },[text])\n     \n    var parentLink = parentUrl(props.match.url)\n    var linkParts = props.match.url.split(\"/\")\n    // link up two where id is present\n    if (linkParts[linkParts.length -1] !== \"text\") {\n       parentLink = parentUrl(parentUrl(props.match.url)) \n    }\n    var editorModeOptions = editorOptions.map(function(value,j) {\n      return <Dropdown.Item key={j} value={value} onClick={function(e) {setEditorMode(value); }}  >{value}</Dropdown.Item>\n   })\n    \n    return <div style={{minHeight:'60em'}}>\n          <Dropdown variant='info'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button variant='info'   size=\"sm\"  >\n          <b>{editorMode}</b>\n          </Button>\n          <Dropdown.Menu>\n              {editorModeOptions}\n          </Dropdown.Menu>\n        </Dropdown>\n\n            <span style={{float:'right'}} >\n                \n                {(text && title) && <Link to={parentLink} ><Button onClick={function(e) {props.saveItem({id:id,title:title,data:text},index)}} variant='success' >Save</Button></Link>}\n                {!(text && title) && <Button variant='secondary' >Save</Button>}\n                \n                <Link  to={parentLink} ><Button variant=\"danger\" >Cancel</Button></Link>\n            </span>\n            <label>&nbsp;Title <input size={60}  type='text' onChange={function(e) { setTitle(e.target.value)}}  value={title} /></label>\n            {(!isJson || editorMode === \"text\") && <textarea style={{marginLeft: '0.2em', height:'100%', minHeight:'60em', width:'98%'}}  onChange={function(e) { setText(e.target.value)}}  value={text} ></textarea>}\n            {(isJson && editorMode === \"json\") && <div style={{marginLeft: '0.2em', height:'100%', minHeight:'60em', width:'98%'}} >\n                <JsonEditor\n                value={json}\n                theme={\"ace/theme/github\"}\n                ace={ace}\n                history={true}\n                mode={'code'}\n                allowedModes={['tree','code']}\n                onChange={function(value) { setText(JSON.stringify(value))}}\n            /></div>}\n           \n    </div>\n}\n","import {Route} from 'react-router-dom'\nimport React, {useEffect} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport useDB from './useDB'\nimport {parseImportText, parseLists} from './parsers'\nimport localforage from 'localforage'\nimport {NewFileButtons, FilesList} from './components/Components'\nimport JSONTextEditor from './components/JSONTextEditor'\nimport {generateObjectId, uniquifyArray } from './utils'\n\n// COMPONENTS\nfunction IndexPage(props) {\n    //console.log(['man index ',props])\n    return <div>\n                 <NewFileButtons {...props} />\n                 <h1>Sources</h1>\n                 <FilesList {...props} />\n            </div>\n}\n\nexport default function LocalStorageUploadManager(props) {\n    //console.log('man')\n    //console.log(props)\n     var localforageStorageImport = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'import',\n     });\n     var localforageStorageLists = localforage.createInstance({\n       name: 'nlutool',\n       storeName   :'lists',\n     });\n\n\n     const {loadAll, saveItem, deleteItem ,items, findKeyBy, findBy} = useDB('nlutool','sources');\n    \n    // just on mount \n    useEffect(() => {\n        loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    \n    \n    function handleFileSelection(ev, results) {\n        ev.preventDefault()\n        if (results) {\n            results.forEach(result => {\n              const [e, file] = result;\n               var item = {id:null, data:e.target.result, title:file.name}\n                saveItem(item)\n            });\n            \n        }\n    }    \n  \n    function importExamples(item) {\n         //console.log(['import examples',item])\n        if (item && item.id && item.data) {\n            var parsed = parseImportText(item.data)\n            localforageStorageImport.getItem('alldata').then(function(res) {\n                //console.log('IMPORT MERGE',res,parsed,[].concat(parsed,res))\n                localforageStorageImport.setItem('alldata',[].concat(parsed,res)) \n                props.history.push('/import') \n            })\n          } else {\n            throw new Error(\"Missing import data\")\n        }\n    }\n    \n    function importLists(item,title) {\n        //console.log(['import lists',item,title])\n        if (item && item.id && item.data) {\n            var parsed = parseLists(item.data)\n            //console.log(['import lists',parsed])\n            if (parsed) {\n                localforageStorageLists.getItem('alldata').then(function(allLists) {\n                    //console.log(['got list ',allLists])\n                    var allListsIndex = {}\n                    if (!allLists) {\n                        allLists = []\n                    }\n                    // index by value\n                    allLists.map(function(listItem) {\n                        if (listItem && listItem.value && listItem.value.trim().length > 0)  {\n                            allListsIndex[listItem.value] = listItem\n                        }\n                        return null\n                    })\n                    // update incoming list values\n                    Object.keys(parsed).map(function(listName,i) {\n                        var list = parsed[listName]  \n                        if (list) {\n                            list.map(function(listItem,listItemIndex) {\n                                var newListItem = listItem;\n                                // already there, just update tags\n                                if (allListsIndex[listItem.value]) {\n                                    if (listName !== '___') {\n                                        if (listItem.tags) newListItem.tags.push(listName)\n                                        else newListItem.tags = [listName]\n                                    } else {\n                                        newListItem.tags = []\n                                    }\n                                    if (title && title.trim().length > 0) newListItem.tags.push(title.trim())\n                                    // uniquify and sort tags\n                                    newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                                    //var tagsClean = {}\n                                    //newListItem.tags.map(function(tag) {\n                                        //tagsClean[tag] = true \n                                    //})\n                                    //newListItem.tags = Object.keys(tagsClean).sort()\n                                    \n                                    allListsIndex[newListItem.value] = newListItem\n                                // new list item    \n                                } else {\n                                    newListItem = {id: generateObjectId() , value: newListItem.value, synonym: newListItem.synonym ? newListItem.synonym : '', tags:[]}\n                                    \n                                    if (listName !== '___') {\n                                        if (listItem.tags) newListItem.tags.push(listName)\n                                        else newListItem.tags = [listName]\n                                    }\n                                    if (title && title.trim().length > 0) newListItem.tags.push(title.trim())\n                                    // uniquify and sort tags\n                                    newListItem.tags = uniquifyArray(newListItem.tags).sort()\n                                    \n                                    allListsIndex[newListItem.value] = newListItem\n                                }\n                                return null\n                            })\n                        }\n                        return null\n                    })\n                    //console.log('IMPORT MERGE',res,parsed,[].concat(parsed,res))\n                    localforageStorageLists.setItem('alldata',Object.values(allListsIndex)) \n                    props.history.push('/lists') \n                    //props.setPageMessage(<div><b>sdfsdf</b><br/><b>sdfsdf</b><br/><b>sdfsdf</b><br/><b>sdfsdf</b><br/></div>)\n                    props.setPageMessage('Imported '+Object.keys(allListsIndex).length +' entities into the list '+ title)\n                    setTimeout(function() {\n                        props.setPageMessage('')\n                    },2000)\n                })\n            } else {\n                throw new Error(\"Failed import\")\n            }\n        } else {\n            throw new Error(\"Missing import data\")\n        }\n    }\n    \n    //console.log(['RENDER LOMAN',props])\n    return (\n        <div className=\"LocalStorageUploadManager\" >\n            <Route \n                path={[`${props.match.path}/text/:itemId?`, `${props.match.path}/text`]}  \n                render={(props) => <JSONTextEditor {...props} \n                    item={findBy('id',props.match.params.itemId)} \n                    saveItem={saveItem} deleteItem={deleteItem} findKeyBy={findKeyBy} \n                    \n                />}     \n            />\n            <Route {...props} exact path={props.match.path} \n                render={function(iprops) { return  <IndexPage {...props} \n                    items={items}\n                    deleteItem={deleteItem} saveItem={saveItem} importExamples={importExamples} importLists={importLists}\n                    handleFileSelection={handleFileSelection}\n                />}} \n            />\n\n        </div>\n    );\n}\n","import React from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst ListAllDropDown = function(props) {\n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{'Set List'} </Button>\n          <Dropdown.Menu>\n           <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; props.tagAll(e.target.value)}} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {props.setTagAllValue(e.target.value)}}\n                value={props.tagAllValue} />\n                <Button variant=\"success\" onClick={function(e) {props.tagAll(props.tagAllValue)}} >Add</Button>\n                </InputGroup>\n                \n              </form>\n              {props.lookups.listsLookups && props.lookups.listsLookups.sort().map(function(skillKey,i) {\n              return <Dropdown.Item key={i} value={skillKey}  >\n                <Button variant=\"success\" onClick={function(e) {props.setTagAllValue(skillKey); props.tagAll(skillKey)}} >Add to {skillKey}</Button>\n                <Button variant=\"danger\" onClick={function(e) { props.untagAll(skillKey)}} style={{marginLeft: '0.5em'}}>Remove</Button></Dropdown.Item>\n    })}\n          </Dropdown.Menu>\n      </Dropdown>\n}\nexport default ListAllDropDown\n","import React from 'react'\nconst SearchInput = function({searchFilter,setSearchFilter}) {\n    return (<input style={{marginLeft:'0.5em'}}  type='text' value={searchFilter} \n            onChange={\n                function(e) {\n                    const filter = e.target.value\n                    setSearchFilter(filter); \n                }\n            } placeholder='Search' />)\n}\n    \nexport default SearchInput\n","import React, {useEffect, useState} from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\nimport checkImage from '../images/check.svg'\n\n\nconst ListsManagerSearchBar = function(props) {\n    const [topTagOptions,setTopTagOptions] = useState([])\n    useEffect(() => {\n        //console.log(['kust nabager ',props.lookups.listsLookups])\n        var topTagOptionss = props.lookups.listsLookups && props.lookups.listsLookups.sort().map(function(listKey,i) {\n              return <Dropdown.Item key={i} value={listKey} onClick={function(e) {props.setListFilterValue(listKey)}}  >{listKey}</Dropdown.Item>\n        })\n        topTagOptionss.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setListFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        topTagOptionss.push(<Dropdown.Item key={'Not In A List'} value={'Not In A List'} onClick={function(e) {props.setListFilterValue('Not In A List')}}  ><b>Not In A List</b></Dropdown.Item>)\n        setTopTagOptions(topTagOptionss)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.lookups])\n    \n    return <div>\n            {<span>\n            \n                {props.lookups.selectedListTally > 0 && <Button size=\"lg\"  onClick={function(e) { props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedListTally <= 0 && <Button size=\"lg\" onClick={function(e) { props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button> }\n                \n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'List'+(props.listFilterValue ? ' - '+ props.listFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topTagOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n              <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.listFilterValue)}} >New Entity</Button>\n        </div>\n}\nexport default ListsManagerSearchBar\n","import React, {useState, useEffect} from 'react'\nimport {uniquifyArray, uniquifyArrayOfObjects} from './utils'\nfunction useListItemRow(item, saveItem, splitNumber, style) {\n    const [selectionState, setSelectionState] = useState({})\n    //const [newEntity, setNewEntity] = useState('')\n    // for ReactTags format using objects\n    const [tags, setTags] = useState([])\n    //console.log(['USENLUROW',splitNumber])\n    const reactTags = React.createRef()\n     // tags\n    useEffect(() => {\n        if (item.tags) setTags(item.tags.map(function(tag,i) {return {id:i, name:tag}}))\n    },[item])\n\n     function onTagDelete (i) {\n        const newTags = tags.slice(0)\n        newTags.splice(i, 1)\n        setTags(newTags)\n        var newItem = item\n        newItem.tags = newTags.map(function(newTag) { return newTag.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onTagAddition (tag) {\n         if (tag && tag.name.trim().length > 0) {\n            const newTags = [].concat(tags, tag)\n            setTags(uniquifyArrayOfObjects(newTags,'name').sort(function(a,b) {if (a.name > b.name) return 1; else return -1} ))\n            var newItem = item\n            newItem.tags = uniquifyArray(newTags.map(function(newTag) { return newTag.name})).sort()\n            saveItem(newItem,splitNumber)\n        }\n      }\n    \n    function updateExampleContent(content) {\n        //console.log(['UPDTEXT', item, content])\n        if (item && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = item //JSON.parse(JSON.stringify(item));\n            \n            newItem.value = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n     function updateExampleSynonym(content) {\n        //console.log('UPDTEXT')\n        if (item && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = item //JSON.parse(JSON.stringify(item));\n            \n            newItem.synonym = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    \n    function selectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = true;\n        saveItem(newItem,splitNumber)\n    }\n   \n    \n    function deselectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = false;\n        saveItem(newItem,splitNumber)\n    } \n    \n    return {    \n        selectionState, setSelectionState, tags, setTags, reactTags, onTagDelete, onTagAddition, updateExampleContent, updateExampleSynonym, selectItem, deselectItem\n    }\n    \n}\nexport default useListItemRow\n","import React from 'react';\nexport default function SuggestionComponent({ item, query }) {\n  return (\n    <span  id={item.id} className={item.name === query ? 'match' : 'no-match'}>\n      {item.name}\n    </span>\n  )\n}\n","/* global window */\nimport {Button } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useListItemRow from './useListItemRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\n\nexport default function ListsManagerRow(props) {\n        const  {item, splitNumber , style} = props;\n       const {    \n            tags, reactTags, \n            onTagDelete, onTagAddition, updateExampleContent,updateExampleSynonym,  selectItem, deselectItem\n        } = useListItemRow(props.item, props.saveItem, props.splitNumber, props.style)\n            \n       \n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                   \n                   <div style={{float:'right'}} > \n                        <Button  variant=\"danger\"  size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} >X</Button>\n               \n                    </div>\n                   \n                  <div style={{float:'left'}}>\n                     {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Select\"  /></Button>}\n                      {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\"  /></Button>}\n                </div>\n                \n                <input style={{float:'left'}} size='25'   \n                       type='text'  value={item.value}  onChange={function(e) { updateExampleContent(e.target.value)}} />\n                    \n                     \n                   \n                     <label style={{float:'left', marginLeft:'0.5em'}} >Synonym <input size='15' type='text' value={item.synonym} onChange={function(e) {updateExampleSynonym(e.target.value)}} /></label>\n                     <label style={{float:'left', marginLeft:'0.5em'}} >\n                     <span  style={{float:'left', marginRight:'0.5em'}}>Lists </span>\n                     <span  style={{float:'left'}}>\n                       <ReactTags\n                        placeholderText=\"Add to list\"\n                        minQueryLength={0}\n                        maxSuggestionsLength={50}\n                        autoresize={false}\n                        allowNew={true}\n                        ref={reactTags}\n                        tags={tags}\n                        suggestionComponent={SuggestionComponent}\n                        suggestions={props.lookups.listsLookups.map(function(listName,i) {return {id: i, name: listName}})}\n                        onDelete={onTagDelete}\n                        onAddition={onTagAddition} /> \n                        </span>\n                    </label>\n                  </div> \n               \n                \n                 \n           \n      </div>\n}\n","// USE A SINGLE LOCALSTORAGE KEY FOR PERSISTENCE\n// this is much faster than using set/getItem for each item\n// workable for many thousands of rows\nimport { useEffect, useReducer} from 'react';\n\nimport {generateObjectId} from './utils'\nimport localforage from 'localforage'\n\n// handle list updates with minimum disruption to top level items\nfunction reducer(state, action) {\n    const index = parseInt(action.index)\n \n    switch (action.type) {\n    case \"append\":\n      if (action.item) {\n        return [...state, action.item];\n      } else return state\n    case \"prepend\":\n      if (action.item) {\n        return [action.item,...state];\n      } else return state\n    case \"insert\":\n      if (action.item && typeof index === \"number\" ) {\n          if (state.length > 0) {\n              return [\n                ...state.slice(0, index),\n                action.item,\n                ...state.slice(index)\n              ];\n          } else return state\n        } else return state\n    case \"remove\":\n      if (typeof index === \"number\" ) {\n          return [\n            ...state.slice(0, index),\n            ...state.slice(index + 1)\n          ];\n       } else return state \n    case \"update\":\n       if (action.item && typeof index === \"number\" ) {\n           return  [\n            ...state.slice(0, index),\n            action.item,\n            ...state.slice(index + 1)\n          ];\n        } else return state \n    case \"replaceall\":\n        if (typeof action.items === \"object\") {\n            return action.items\n        } else return state\n    default:\n      throw new Error('Invalid reduction in useDBSingleKey');\n  }\n    \n}\n\n// state manager with local storage backing\nexport default function useDB(database, databaseTable,singleKey) {\n    if (!singleKey) singleKey = 'data'\n     const [items, dispatch] = useReducer(reducer,[]);\n     var localforageStorage = localforage.createInstance({\n       name: database ? database : \"localstoragemanager\",\n       storeName   : databaseTable ? databaseTable : 'single_key_data',\n     });\n\n    useEffect(function() {\n        localforageStorage.setItem(singleKey,items)  \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items])\n\n    function getId(item) {\n        if (item && item.id) {\n            return item.id\n        } else {\n            throw new Error(\"Missing ID value in getId\")\n        }\n    }\n\n    function loadAll() {\n        localforageStorage.getItem(singleKey).then(function(res) {\n          //console.log(['loadall',database, databaseTable,singleKey,res])\n          dispatch({ type: \"replaceall\", items: res ? res : []});\n        })\n    }\n\n    \n    // save or create\n    function saveItem(item,index) {\n        //console.log(['save',item,index])\n        if (item) {\n            // update sources and save text in seperate localstorage\n            // ensure id\n            var isNewItem = false;\n            if (!item.id) {\n                isNewItem = true;\n                item.id = generateObjectId()\n            }\n            if (items.length === 0) {\n                //console.log(['save append len '])\n        \n                dispatch({ type: \"append\",item: item });\n            } else {\n                if ((index === null || index === undefined)  || isNewItem) {\n                //console.log(['save append'])\n                    dispatch({ type: \"prepend\",item: item });\n                } else {\n                    //console.log(['save update'])\n                    dispatch({ type: \"update\",item: item, index: index });\n                }\n            }   \n            \n        }\n    }\n    \n    function findBy(field,value) {\n        var key = findKeyBy(field,value)\n        return items[key];\n    }\n    \n    function findKeyBy(field,value) {\n        for (var k in items) {\n            if (items[k] && items[k][field] === value) return k\n        }\n    }\n\n    function setItemsWrap(items) {\n        localforageStorage.clear().then(function() {\n            dispatch({ type: \"replaceall\", items: items})\n        })\n    }\n    \n    function filter(matchFunction) {\n        var filtered = []\n        if (matchFunction) {\n            items.map(function(item,i) {\n              if (item && matchFunction(item)) {\n                  filtered.push(item)\n              } \n              return null \n            })\n        }\n        return filtered\n        \n    }\n    \n    function deleteItem(index) {\n        dispatch({ type: \"remove\", index: index})\n    }\n    return {getId:getId, loadAll:loadAll, saveItem:saveItem, deleteItem:deleteItem , items:items, setItems:setItemsWrap, findKeyBy:findKeyBy, findBy:findBy, filter: filter}\n    \n}\n","import React, {useState, useEffect} from 'react';\nimport useDBSingleKey from './useDBSingleKey'\nimport {useParams, useHistory} from 'react-router-dom'\n\nfunction useListItemEditor(database, databaseTable, databaseKey, updateLists) {\n    const {loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter} = useDBSingleKey(database, databaseTable, databaseKey)\n    const [filteredItems, setFilteredItems] = useState([])\n    const [filteredItemsKeys, setFilteredItemsKeys] = useState([])\n    const [searchFilter, setSearchFilter] = useState('')\n    const [tagAllValue, setTagAllValue] = useState('')\n    const listRef = React.createRef()\n    //const [listFilterValue, setListFilterValue] = useState('')\n    \n    var params = useParams()\n    var listFilterValue = params.listId ? params.listId : '';\n    var history = useHistory()\n    function setListFilterValue(value) {\n        var root = history.location.pathname.split(\"/\")\n        var parts=['/'+root[1]]\n        parts.push('/'+value)\n        history.push(parts.join(''))\n    }\n   \n      \n    useEffect(() => {\n         var filteredItems = filter(function(item) {\n            //return true;\n            var matchText = true\n            if (searchFilter && searchFilter.trim().length >0) {\n                if (item.value.indexOf(searchFilter) !== -1) {\n                    matchText = true\n                } else {\n                    matchText = false\n                }\n            }\n            var matchPicklist = true\n            if (listFilterValue === \"Not In A List\") {\n                //console.log(['tags',item.tags])\n                if (!item.tags || (item.tags && item.tags.length === 0)) {\n                    matchPicklist =  true\n                } else {\n                    matchPicklist = false\n                }\n            } else if (listFilterValue && listFilterValue.trim().length >0) {\n                if (item.tags && item.tags.indexOf(listFilterValue) !== -1) {\n                    matchPicklist = true\n                } else {\n                    matchPicklist = false\n                }\n            }\n            \n            return matchText && matchPicklist\n            //return (item.value.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)) ? true : false\n        })\n        var itemKeys = {}\n        filteredItems.map(function(item) {if (item.id) itemKeys[item.id] = true; return null})\n        filteredItems.sort(function(a,b) { return a.value < b.value ? true : false})\n        setFilteredItems(filteredItems)\n        setFilteredItemsKeys(itemKeys)\n        updateLists(items)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items, searchFilter, listFilterValue])\n    \n    function deleteAll(e)  {\n        if (window.confirm('Really delete all selected')) {\n                if (items) {\n                var newItems = []\n                items.map(function(item,i) {\n                    if (item.id && filteredItemsKeys[item.id]) {\n                       if (!item.isSelected) {\n                           newItems.push(item)\n                       }\n                    } else {\n                        newItems.push(item)\n                    }\n                    return null\n                })\n                setItems(newItems)\n                listRef.current.resetAfterIndex(0);\n            }\n        }\n         \n    }\n    \n    function tagAll(val) {\n        console.log(['tagall',tagAllValue,val])\n        var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.tags) newItem.tags=[]\n                   if (newItem.tags.indexOf(tagValue) === -1) newItem.tags.push(tagValue)\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n\n    function untagAll(val) {\n        console.log(['untagall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.tags) newItem.tags=[]\n                   var finalTags = []\n                   newItem.tags.map(function(tag) {\n                       if (tag !== val) {\n                           finalTags.push(tag)\n                       }  \n                       return null\n                   })\n                   newItem.tags = finalTags\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    \n    function resetSelection() {\n         //console.log('reset sa')\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n               var newItem = item\n               newItem.isSelected = false\n               newItems.push(newItem)\n               return null\n            })\n            setItems(newItems)\n            \n        }\n    }\n    \n     function selectAll() {\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item) {\n                    if (item.id && filteredItemsKeys[item.id]) {\n                       var newItem = item\n                       newItem.isSelected = true\n                       newItems.push(newItem)\n                    } else {\n                        newItem.isSelected = false\n                        newItems.push(newItem)\n                    }\n                }\n                return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    function saveItemWrap(item,index) {\n        saveItem(item,index)\n        listRef.current.resetAfterIndex(index);\n        updateLists(items)\n    }\n    \n    function getItemSize(index) {\n        //console.log(window.innerWidth,window.innerHeight)\n        // set parameters for full size > 1024\n        var baseSize = 40\n        //// tiny screen mobile \n        if (window.innerWidth < 430) {\n            baseSize = 120\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n            baseSize = 70\n        }\n        return baseSize\n    }\n    \n   function createEmptyItem(list) {\n       var tags=[]\n        if (list && list !== \"Not In A List\" && list.trim().length > 0) tags.push(list)\n        setSearchFilter('')\n        saveItem({id:null, value:'', synonym:'',tags:tags})\n   }\n    \n    return {\n        loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter, filteredItems, setFilteredItems,\n        searchFilter, setSearchFilter, tagAllValue, setTagAllValue,listRef, listFilterValue, setListFilterValue,\n        tagAll,untagAll, resetSelection, selectAll, saveItemWrap, getItemSize, deleteAll, createEmptyItem\n    }\n}\nexport default useListItemEditor\n","import React, { useEffect} from 'react';\nimport './App.css';\n//import {Link, useParams, useHistory} from 'react-router-dom'\nimport {Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport ListAllDropDown from './components/ListAllDropDown'\n\nimport ListsManagerSearchBar from './components/ListsManagerSearchBar'\nimport ListsManagerRow from './ListsManagerRow'\nimport useListItemEditor from './useListItemEditor'\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <ListsManagerRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups} />\n}\n\nexport default  function ListsManager(props) {\n    const {listFilterValue, setListFilterValue, loadAll, deleteItem ,items, findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, listRef, tagAll,untagAll, resetSelection, selectAll, saveItemWrap, getItemSize,  filteredItems, deleteAll, createEmptyItem} = useListItemEditor('nlutool','lists','alldata', props.updateFunctions.updateLists)\n    //const [currentList, setCurrentList] = useState('')\n\n    useEffect(() => {\n        loadAll()\n        props.updateFunctions.updateLists(items)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    //useEffect(() => {\n        //if (importFrom) {\n            //var parsed = parseImportText(importFrom)\n            //setItems(parsed)\n            //props.setImportFrom('')\n        //}\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[props.importFrom])\n    \n    \n  \n    \n    function renderEditor(props) {\n       \n        //if (listFilterValue && listFilterValue.length > 0) {\n            \n            // filter rendered list using callback \n            //var filteredItems = filter(function(item) {\n                //if (!searchFilter || searchFilter.length <=0 ) return true;\n                //const matchSearchFilter = item.example.indexOf(searchFilter) !== -1 \n                        //|| item.intent.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)\n                //return matchSearchFilter && skillFilterValue && item.skills && item.skills.indexOf(skillFilterValue) !== -1\n                \n            //})\n             //var collatedItems={}\n             //var collatedCounts={}\n             //if (filteredItems) {\n                 //filteredItems.map(function(item) {\n                    //if (item.value) {\n                        //if (!collatedItems[item.value]) collatedItems[item.value]=[]\n                        //collatedCounts[item.value] =   (collatedCounts[item.value] > 0) ? collatedCounts[item.value] + 1 : 1;\n                        ////if (collatedItems[item.intent].length < 300) {\n                            //collatedItems[item.value].push(item)\n                        ////}\n                        \n                    //}\n                   //return null;  \n                 //})\n             //}   \n                \n                \n            if (filteredItems && filteredItems.length > 0) {\n               \n               //var tagOptions = props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n                  //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {setTagAllValue(tagKey); tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n               //})\n               //var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n                  //return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {setIntentAllValue(intentKey);intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n               //})\n                return <div>\n                    <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length} matches </span>\n                    \n                     \n                     {props.lookups.selectedListTally > 0 && <span style={{float:'right'}}> \n                        \n                        <span>With {props.lookups.selectedListTally} selected&nbsp;</span>\n                        <ListAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue} untagAll={untagAll} lookups={props.lookups}/>\n                        <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                    </span>} \n                    \n                      <div style={{clear:'both'}}>\n                        <div style={{clear:'both'}}>\n                            <List\n                                key=\"list\"\n                                ref={listRef}\n                                itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups}}\n                                itemKey={index => index}  \n                                className=\"List\"\n                                height={700}\n                                itemCount={filteredItems.length}\n                                itemSize={getItemSize}\n                                width={'100%'}\n                              >{RenderRow}\n                            </List>\n                        </div>\n                    </div>\n               </div>\n\n            }\n                 //<span>{Object.keys(collatedItems).map(function(collatedList, i) {\n                                //var useCurrentList = currentList ? currentList : Object.keys(collatedItems)[0]\n                                \n                                ////const warning = <b>{collatedItems[collatedIntent].length}/{collatedCounts[collatedIntent].length}</b>\n                                ////collatedItems[collatedIntent].length  === collatedCounts[collatedIntent].length ? <b>/dd{collatedCounts[collatedIntent].length}</b> : <b>/{collatedCounts[collatedIntent].length}</b>\n                                //var completionVariant = 'danger'\n                                //if (collatedItems[collatedList].length > 300) {\n                                    //completionVariant = 'success'\n                                //} else if (collatedItems[collatedList].length > 100) {\n                                    //completionVariant = 'primary'\n                                //} else if (collatedItems[collatedList].length > 10) {\n                                    //completionVariant = 'warning'\n                                //} \n                                \n                                \n                                //if (collatedItems[collatedList].length  === collatedCounts[collatedList]) {\n                                        //return <Button key={collatedList} variant={collatedList === useCurrentList ? \"primary\" : \"outline-primary\"} onClick={function() {setCurrentList(collatedList)}}>\n                                            //<Badge variant={completionVariant} > {collatedItems[collatedList].length} </Badge>\n                                            //&nbsp;{collatedList}\n                                        //</Button>\n                                //} else {\n                                    //return <Button variant={collatedList === useCurrentList ? \"primary\" : \"outline-primary\"} onClick={function() {setCurrentList(collatedList)}}>\n                                            //<Badge variant=\"danger\" > {collatedItems[collatedList].length}/{collatedCounts[collatedList]} </Badge>\n                                            //&nbsp;{collatedList}\n                                        //</Button>\n                                //}\n                                \n                        //})}</span>\n                                   \n                                 //} else {\n                                    //return null\n                                //}\n                            //})}\n             //{Object.keys(collatedItems).map(function(collatedList, i) {\n                                //var useCurrentList = currentList ? currentList : Object.keys(collatedItems)[0]\n                                //if (collatedList === useCurrentList) {\n                                    //return \n        //} else {\n            //const skillsList = props.lookups.listLookups ? props.lookups.listLookups.map(function(listItem,i) {return <Button key={i}  onClick={function(e) {setListFilterValue(listItem)}}  style={{marginLeft:'1em'}} >{listItem}</Button>} )   : []\n            //return <div>\n                //<h1>Skills</h1>\n                //{skillsList.length > 0 && skillsList}\n                //{skillsList.length <= 0 && <div>\n                    //You dont have any skills yet. Import some <Link to='/sources'><Button>Sources</Button></Link> \n                //</div>}\n            //</div>\n        //}\n    }\n    \n  \n    return <div>\n       \n                   \n        {<ListsManagerSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} listFilterValue={listFilterValue} setListFilterValue={setListFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} />}\n         \n         \n         {renderEditor(props)}\n    </div>\n            \n}\n      \n\n //{JSON.stringify(items)}\n    //<hr/>\n    \n    \n    //<hr/>\n    //{JSON.stringify(filteredItems)}\n\n\n","import React, {useEffect, useState} from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\nimport checkImage from '../images/check.svg'\n\n\nconst UtterancesManagerSearchBar = function(props) {\n    const [topTagOptions,setTopTagOptions] = useState([])\n    useEffect(() => {\n        //console.log(['kust nabager ',props.lookups.listsLookups])\n        var topTagOptionss = props.lookups.utteranceTagsLookups && props.lookups.utteranceTagsLookups.sort().map(function(listKey,i) {\n              return <Dropdown.Item key={i} value={listKey} onClick={function(e) {props.setListFilterValue(listKey)}}  >{listKey}</Dropdown.Item>\n        })\n        topTagOptionss.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setListFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        topTagOptionss.push(<Dropdown.Item key={'Not In A List'} value={'Not In A List'} onClick={function(e) {props.setListFilterValue('Not In A List')}}  ><b>Not In A List</b></Dropdown.Item>)\n        setTopTagOptions(topTagOptionss)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.lookups])\n    \n    return <div>\n            {<span>\n            \n                {props.lookups.selectedListTally > 0 && <Button size=\"lg\"  onClick={function(e) { props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedListTally <= 0 && <Button size=\"lg\" onClick={function(e) { props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button> }\n                \n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'List'+(props.listFilterValue ? ' - '+ props.listFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topTagOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n              <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.listFilterValue)}} >New Utterance</Button>\n        </div>\n}\nexport default UtterancesManagerSearchBar\n","/* global window */\nimport {Button } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useListItemRow from './useListItemRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\n\nexport default function UtterancesManagerRow(props) {\n        const  {item, splitNumber , style} = props;\n       const {    \n            tags, reactTags, \n            onTagDelete, onTagAddition, updateExampleContent,updateExampleSynonym,  selectItem, deselectItem\n        } = useListItemRow(props.item, props.saveItem, props.splitNumber, props.style)\n            \n       \n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                   \n                   <div style={{float:'right'}} > \n                        <Button  variant=\"danger\"  size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} >X</Button>\n               \n                    </div>\n                   \n                  <div style={{float:'left'}}>\n                     {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Select\"  /></Button>}\n                      {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\"  /></Button>}\n                </div>\n                \n                <input style={{float:'left'}} size='25'   \n                       type='text'  value={item.value}  onChange={function(e) { updateExampleContent(e.target.value)}} />\n                    \n                     \n                     <label style={{float:'left', marginLeft:'0.5em'}} >\n                     <span  style={{float:'left', marginRight:'0.5em'}}>Lists </span>\n                     <span  style={{float:'left'}}>\n                       <ReactTags\n                        placeholderText=\"Add to list\"\n                        minQueryLength={0}\n                        maxSuggestionsLength={50}\n                        autoresize={false}\n                        allowNew={true}\n                        ref={reactTags}\n                        tags={tags}\n                        suggestionComponent={SuggestionComponent}\n                        suggestions={props.lookups.utteranceTagsLookups.map(function(listName,i) {return {id: i, name: listName}})}\n                        onDelete={onTagDelete}\n                        onAddition={onTagAddition} /> \n                        </span>\n                        </label>\n                        \n                        \n                        \n                    <label style={{float:'left', marginLeft:'0.5em'}} ><span style={{float:'left', marginRight:'0.5em'}}>Alternatives</span> \n                        <textarea style={{width:\"34em\", height:\"5em\"}} type='text' value={item.synonym} onChange={function(e) {updateExampleSynonym(e.target.value)}} />\n                    </label>\n                  </div> \n               \n                \n                 \n           \n      </div>\n}\n","/* global window */\nimport React, { useEffect} from 'react';\nimport './App.css';\n//import {Link, useParams, useHistory} from 'react-router-dom'\nimport {Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport ListAllDropDown from './components/ListAllDropDown'\n\nimport UtterancesManagerSearchBar from './components/UtterancesManagerSearchBar'\nimport UtterancesManagerRow from './UtterancesManagerRow'\nimport useListItemEditor from './useListItemEditor'\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <UtterancesManagerRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups} />\n}\n\nexport default  function UtterancesManager(props) {\n    const {listFilterValue, setListFilterValue, loadAll, deleteItem , findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, listRef, tagAll,untagAll, resetSelection, selectAll, saveItemWrap,  filteredItems, deleteAll, createEmptyItem} = useListItemEditor('nlutool','utterances','alldata', props.updateFunctions.updateUtterances)\n    //const [currentList, setCurrentList] = useState('')\n\n    function getItemSize() {\n        if (window.innerWidth < 430) {\n               return 220\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n               return 160\n        } else {\n            return 130\n        }\n    }\n\n    useEffect(() => {\n        loadAll()\n        //props.updateFunctions.updateLists(items)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n   \n    \n    function renderEditor(props) {\n            if (filteredItems && filteredItems.length > 0) {\n            \n                return <div>\n                    <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length} matches </span>\n                     \n                     {props.lookups.selectedListTally > 0 && <span style={{float:'right'}}> \n                        \n                        <span>With {props.lookups.selectedListTally} selected&nbsp;</span>\n                        <ListAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue} untagAll={untagAll} lookups={props.lookups}/>\n                        <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                    </span>} \n                    \n                      <div style={{clear:'both'}}>\n                        <div style={{clear:'both'}}>\n                            <List\n                                key=\"list\"\n                                ref={listRef}\n                                itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups}}\n                                itemKey={index => index}  \n                                className=\"List\"\n                                height={700}\n                                itemCount={filteredItems.length}\n                                itemSize={getItemSize}\n                                width={'100%'}\n                              >{RenderRow}\n                            </List>\n                        </div>\n                    </div>\n               </div>\n\n            }\n              \n    }\n    \n  \n    return <div>\n       \n                   \n        {<UtterancesManagerSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} listFilterValue={listFilterValue} setListFilterValue={setListFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} />}\n         \n         \n         {renderEditor(props)}\n    </div>\n            \n}\n      \n\n //{JSON.stringify(items)}\n    //<hr/>\n    \n    \n    //<hr/>\n    //{JSON.stringify(filteredItems)}\n\n\n","import React, {useState, useEffect} from 'react'\nimport {findFirstDiffPos, uniquifyArray, uniquifyArrayOfObjects } from './utils'\nfunction useNluRow(item, saveItem, splitNumber, style, setPageMessage) {\n    const [selectionState, setSelectionState] = useState({})\n    const [newEntity, setNewEntity] = useState('')\n    const [intentTitle, setIntentTitle] = useState(item && item.intent ? item.intent : '')\n    // for ReactTags format using objects\n    const [tags, setTags] = useState([])\n    const [skills, setSkills] = useState([])\n    //console.log(['USENLUROW',splitNumber])\n    const reactTags = React.createRef()\n    const reactSkills = React.createRef()\n     // tags\n    useEffect(() => {\n        if (item.tags) setTags(item.tags.map(function(tag,i) {return {id:i, name:tag}}))\n        if (item.skills) setSkills(item.skills.map(function(skill,i) {return {id:i, name:skill}}))\n    },[item])\n\n     function onTagDelete (i) {\n        const newTags = tags.slice(0)\n        newTags.splice(i, 1)\n        setTags(newTags)\n        var newItem = item\n        newItem.tags = newTags.map(function(newTag) { return newTag.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onTagAddition (tag) {\n        if (tag && tag.name.trim().length > 0) {\n            const newTags = [].concat(tags, tag)\n            setTags(uniquifyArrayOfObjects(newTags,'name').sort(function(a,b) {if (a.name > b.name) return 1; else return -1} ))\n            var newItem = item\n            newItem.tags = uniquifyArray(newTags.map(function(newTag) { return newTag.name})).sort()\n            saveItem(newItem,splitNumber)\n        }\n      }\n      \n      function onSkillDelete (i) {\n        const newSkills = skills.slice(0)\n        newSkills.splice(i, 1)\n        setSkills(newSkills)\n        var newItem = item\n        newItem.skills = newSkills.map(function(newSkill) { return newSkill.name})\n        saveItem(newItem,splitNumber)\n      }\n     \n     function onSkillAddition (skill) {\n         if (skill && skill.name.trim().length > 0) {\n            const newSkills = [].concat(skills, skill)\n            setSkills(uniquifyArrayOfObjects(newSkills,'name').sort(function(a,b) {if (a.name > b.name) return 1 ;else return -1} ))\n            var newItem = item\n            newItem.skills = uniquifyArray(newSkills.map(function(newSkill) { return newSkill.name})).sort()\n            saveItem(newItem,splitNumber)\n        }\n     }\n    \n        \n    function createSelection(field, start, end) {\n        if (field) {\n            if( field.createTextRange ) {\n                var selRange = field.createTextRange();\n                selRange.collapse(true);\n                selRange.moveStart('character', start);\n                selRange.moveEnd('character', end-start);\n                selRange.select();\n            } else if( field.setSelectionRange ) {\n                field.setSelectionRange(start, end);\n            } else if( field.selectionStart ) {\n                field.selectionStart = start;\n                field.selectionEnd = end;\n            }\n            field.focus();\n        }\n    }\n    \n    function updateExampleContent(content) {\n        //console.log('UPDTEXT')\n        if (item && typeof item.example === \"string\" && typeof content === \"string\") {\n            //console.log('UPDTEXTREAL')\n            const newItem = JSON.parse(JSON.stringify(item));\n            if (item.entities && item.entities.length > 0) {\n                var entities = item.entities\n                // deal with entity ranges * allow for delete multiple\n                const diffPos = findFirstDiffPos(content,item.example)\n                // insertion\n                if (content.length - item.example.length > 0) {\n                    \n                    //console.log('UPDTEXT insert')\n                    const insertionLength = content.length - item.example.length\n                    // update start and end subtract deletionLength\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos < entity.start) {\n                            entity.start += insertionLength\n                            entity.end += insertionLength;\n                        } else if (diffPos < entity.end) {\n                            // update entity value\n                            entity.end += insertionLength;\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                // replace    \n                } \n                else if (content.length === item.example.length) {\n                    //console.log('UPDTEXT replace')\n                    // check if was inside an entity and update value as required\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos >= entity.start && diffPos < entity.end) {\n                            // update entity value\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                // deletion\n                } else {\n                    //console.log('UPDTEXT delete')\n                    const deletionLength = content.length - item.example.length\n                    // update start and end subtract deletionLength\n                    newItem.entities = entities.map(function(entity,entityIndex) {\n                        if (diffPos < entity.start) {\n                            entity.start += deletionLength\n                            entity.end += deletionLength;\n                        } else if (diffPos < entity.end) {\n                            // update entity value\n                            entity.end += deletionLength;\n                            entity.value = content.slice(entity.start,entity.end)\n                        }\n                        return entity \n                    })\n                }\n            }\n            newItem.example = content;\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    function entityClicked(entityKey,entityType) {\n        if (item.entities)  {\n            var entities = item.entities\n            if (! selectionState || !selectionState.textSelection || selectionState.textSelection.length === 0) {\n                // select text in string\n                if (entities[entityKey]) {\n                   createSelection(document.getElementById('example_input_'+splitNumber),entities[entityKey].start,entities[entityKey].end)\n                }\n            } else {\n                entityTypeChanged(entityKey,entityType);\n            }\n        }\n    }\n    \n    function entityTypeChanged(entityNumber,type) {\n        console.log(['ENTY TYPE CHANGE',entityNumber,type])\n        var newItem = item\n        if (!Array.isArray(item.entities)) {\n            item.entities = []\n        }\n         console.log(['ENTY TYPE CHANGE ITEM ENT',item.entities])\n        var newEntities = item.entities \n        var entity = newEntities[entityNumber] ? newEntities[entityNumber] : {}\n        //const typeChanged = !(type && type.length > 0 && type === entity.type)\n    \n        entity.type = type\n        if (selectionState && selectionState.textSelection) {\n            console.log(['HAVE SLE',selectionState.textSelection])\n            //const start = selectionState.startTextSelection\n            //const end = selectionState.endTextSelection\n            var isOverlapProblem = false;\n            //if (start > 0 && end > 0) {\n                //item.entities.map(function(entity) {\n                    //// is OK if updating entity \n                    //const bypass = !typeChanged && entity.type == type\n                    //const isOverlap = (start > entity.start && start < entity.end) || (end > entity.start && end < entity.end)\n                    //console.log(['CHECK ENTITY',entity.type,start,end,entity.start,entity.end,bypass, isOverlap])\n                    //if (!bypass && isOverlap) isOverlapProblem = true\n                //})\n            //}\n            if (isOverlapProblem) {\n                setPageMessage('Overlap with existing entity !')\n                setTimeout(function() {\n                    setPageMessage('')\n                },2000)\n            } else {\n                entity.value = selectionState.textSelection\n                entity.start = selectionState.startTextSelection\n                entity.end = selectionState.endTextSelection\n                if (!newEntities[entityNumber]) newEntities.push(entity)\n                else newEntities[entityNumber] = entity\n                newItem.entities = newEntities\n                setSelectionState(null)\n                saveItem(newItem,splitNumber)\n            }\n        } else {\n            if (!newEntities[entityNumber]) newEntities.push(entity)\n            else newEntities[entityNumber] = entity\n            newItem.entities = newEntities\n            setSelectionState(null)\n            saveItem(newItem,splitNumber)\n        }\n        \n    }\n    \n    function intentChanged(intent) {\n        var newItem = item \n        newItem.intent = intent\n        saveItem(newItem,splitNumber)\n    }\n \n    \n    function entityDelete(entityNumber) {\n        if (item.entities) {\n            var newItem = item \n            var newEntities = item.entities.slice(0,entityNumber).concat(item.entities.slice(entityNumber + 1))\n            newItem.entities = newEntities\n            saveItem(newItem,splitNumber)\n        }\n    }\n    \n    function selectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = true;\n        saveItem(newItem,splitNumber)\n    }\n    \n    \n    function setSkill(skill, splitNumber) {\n        //var newItem = item\n        //item.isSelected = true;\n        //props.saveItem(newItem,splitNumber)\n    }\n    \n    function deselectItem(splitNumber) {\n        var newItem = item\n        item.isSelected = false;\n        saveItem(newItem,splitNumber)\n    } \n    \n    return {    \n        intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, setTags, skills, setSkills, reactTags, reactSkills, onTagDelete, onTagAddition, onSkillDelete,onSkillAddition, createSelection, updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem, setSkill, deselectItem\n    }\n    \n}\nexport default useNluRow\n","/* global window */\nimport {Button,   Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React, {useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useNluRow from './useNluRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\nimport thumbdownImage from './images/thumb-down.svg'\n\nexport default function NluExampleRow(props) {\n       const  {item, splitNumber , style} = props;\n       const {    \n            intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, skills, reactTags, reactSkills, \n            onTagDelete, onTagAddition, onSkillDelete,onSkillAddition, updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem,  deselectItem\n        } = useNluRow(props.item, props.saveItem, props.splitNumber, props.style)\n        const [textInput, setTextInput] = useState(props.item && props.item.example ? props.item.example  : '')\n         \n       var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {intentChanged(intentKey)}}  >{intentKey}</Dropdown.Item>\n       })\n       //var skillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n          //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkill(skillKey,props.splitNumber)}}  >{skillKey}</Dropdown.Item>\n       //})\n       // ONE PER ENTITY FOR THIS EXAMPLE\n       var entitiesDropdowns = item && item.entities ? item.entities.map(function(entity,i) {\n           var entityOptions = props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item  key={j} value={entityKey} onClick={function(e) {entityTypeChanged(i,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           return<Dropdown style={{marginLeft:'0.2em'}} variant='info'  key={i}  as={ButtonGroup}>\n              <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button variant='info'   size=\"sm\"  onClick={function(e) {entityClicked(i,entity.type)}} >\n              <b>{entity.type}</b> \n                -\n              {entity.value ? entity.value : 'Select Entity Type'}\n              </Button>\n              <Button variant=\"info\" size=\"sm\" onClick={function(e) {entityDelete(i,'')}} >X</Button>\n              <Dropdown.Menu>\n                  <form  style={{display:'inline'}}>\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {entityTypeChanged(i,e.target.value)}}\n                    value={entity.type} />\n                    </div>\n                  </form>\n                  {entityOptions}\n              </Dropdown.Menu>\n            </Dropdown>\n       }) : [];\n        //PLUS CREATE NEW WHEN TEXT IS SELECTED\n       if (selectionState  && selectionState.textSelection && selectionState.textSelection.length > 0 &&  selectionState.textSelectionFrom === splitNumber) {\n           var entityOptions =  props.lookups.entityLookups && props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item key={j} value={entityKey} onClick={function(e) {entityTypeChanged(-1,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           entitiesDropdowns.push(<Dropdown key=\"new\" variant='success'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='success'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant='success' size=\"sm\" >New Entity</Button>\n\n          <Dropdown.Menu>\n           <form style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); entityTypeChanged(-1,newEntity)}}>\n                <div className=\"form-group\">\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {setNewEntity(e.target.value)}}\n                value={newEntity} />\n                </div>\n              </form>\n              {entityOptions}\n          </Dropdown.Menu>\n        </Dropdown>)\n       }\n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                  \n                   {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img  style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button>}\n                  {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img  style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button>}\n                  \n                <Button  variant=\"danger\" style={{float:'right'}} size=\"sm\" style={{float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}}onClick={function(e) {if (window.confirm('Really delete')) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}}} >X</Button>\n                 \n                 \n                  <Dropdown  style={{float:'left'}} as={ButtonGroup}>\n                  <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button   size=\"sm\" >{item.intent ? item.intent.toString() : 'Select Intent'} </Button>\n                  <Dropdown.Menu>\n                   <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); intentChanged(intentTitle)}}>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" value={intentTitle} onChange={function(e) {setIntentTitle(e.target.value)}}\n                         />\n                        </div>\n                      </form>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                  </Dropdown>\n                  <span style={{float:'left'}}>{entitiesDropdowns}</span>\n                 \n                   <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add to skill\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactSkills}\n                    tags={skills}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.skillLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onSkillDelete}\n                    onAddition={onSkillAddition} /> \n                    </div>\n                    \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add new tag\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactTags}\n                    tags={tags}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.tagLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onTagDelete}\n                    onAddition={onTagAddition} /> \n                    </div>\n                  \n                  <input     \n                   onFocus={ function(e) {\n                       setSelectionState(null)\n                    }}\n                   onSelect={ function(e) {\n                     var textSelection = window.getSelection().toString(); \n                     setSelectionState({textSelection:textSelection, textSelectionFrom: splitNumber, startTextSelection: e.target.selectionStart, endTextSelection: e.target.selectionEnd})\n                  }}  \n                   type='text' style={{width:'80%'}} value={textInput} id={\"example_input_\"+splitNumber} onChange={function(e) { setTextInput(e.target.value); updateExampleContent(e.target.value)}} />\n                  \n                  \n                \n                \n            </div>\n      </div>\n}\n","import React from 'react';\n//import {Link} from 'react-router-dom'\nimport {Button, Dropdown, ButtonGroup} from 'react-bootstrap'\nimport SearchInput from './SearchInput'\nimport checkImage from '../images/check.svg'\n\nconst EditorSearchBar = function(props) {\n    var topskillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n          return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {props.setSkillFilterValue(skillKey)}}  >{skillKey}</Dropdown.Item>\n    })\n    topskillOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setSkillFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        \n    var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {props.setIntentFilterValue(intentKey)}}  >{intentKey}</Dropdown.Item>\n    })\n    intentOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {props.setIntentFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n        \n    return <div>\n            {<span>\n            \n                {props.lookups.selectedTally > 0 && <Button size=\"lg\"  onClick={function(e) { props.resetSelection(e) }} variant=\"success\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button> }\n                {props.lookups.selectedTally <= 0 && <Button size=\"lg\" onClick={function(e) { props.selectAll(e) }} variant=\"secondary\"  ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button> }\n                \n                \n           </span>}   \n            {<span style={{marginLeft:'0.4em'}}><SearchInput searchFilter={props.searchFilter} setSearchFilter={props.setSearchFilter} /></span>}   \n            \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'Intent '+(props.intentFilterValue ? ' - '+ props.intentFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n            \n            {<Dropdown style={{marginLeft:'0.5em'}}  as={ButtonGroup}>\n                  <Dropdown.Toggle split   id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button  >{'Skill '+(props.skillFilterValue ? ' - '+ props.skillFilterValue : '')} </Button>\n                  <Dropdown.Menu>\n                      {topskillOptions}\n                  </Dropdown.Menu>\n                </Dropdown>}\n             <Button  style={{marginLeft:'1em'}} variant=\"success\" onClick={function(e) {props.createEmptyItem(props.skillFilterValue, props.intentFilterValue)}} >New Intent</Button>\n        </div>\n}\nexport default EditorSearchBar\n","import React, {useState, useEffect} from 'react';\nimport localforage from 'localforage'\nimport useDBSingleKey from './useDBSingleKey'\nimport {uniquifyArray} from './utils'\nimport {useParams, useHistory} from 'react-router-dom'\n\nfunction useNluEditor(database, databaseTable, databaseKey, updateLookups) {\n    const {loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter} = useDBSingleKey(database, databaseTable, databaseKey)\n    const [filteredItems, setFilteredItems] = useState([])\n    const [filteredItemsKeys, setFilteredItemsKeys] = useState([])\n    const [searchFilter, setSearchFilter] = useState('')\n    const [tagAllValue, setTagAllValue] = useState('')\n    const [skillAllValue, setSkillAllValue] = useState('')\n    //const [skillFilterValue, setSkillFilterValue] = useState('')\n    //const [intentFilterValue, setIntentFilterValue] = useState('')\n    const [intentAllValue, setIntentAllValue] = useState('')\n    const listRef = React.createRef()\n    \n    const params = useParams()\n    const history = useHistory()\n    var skillFilterValue = params.skillId ? params.skillId : '';\n    function setSkillFilterValue(value) {\n        //console.log('SETSKILLVAL')\n        //console.log(history)\n        var root = history.location.pathname.split(\"/\")\n        var parts=['/'+root[1]]\n        skillFilterValue = value;\n        if (skillFilterValue.length > 0) {\n            parts.push('/skill/'+skillFilterValue)\n        }\n        if (intentFilterValue.length > 0) {\n            parts.push('/intent/'+intentFilterValue)\n        }\n        //console.log(['ssv',parts,value])\n        history.push(parts.join(''))\n    }\n    var intentFilterValue = params.intentId ? params.intentId : '';\n    \n    function setIntentFilterValue(value) {\n        var root = history.location.pathname.split(\"/\")\n        var parts=['/'+root[1]]\n        intentFilterValue = value;\n        if (skillFilterValue.length > 0) {\n            parts.push('/skill/'+skillFilterValue)\n        }\n        if (intentFilterValue.length > 0) {\n            parts.push('/intent/'+intentFilterValue)\n        }\n        history.push(parts.join(''))\n    }\n    \n    //const examplesDB = useDBSingleKey('nlutool','examples','alldata')\n    //var updateLookupsTimeout = null\n    //var updateFilteredTimeout = null\n    //useEffect(() => {\n        ////clearTimeout(updateLookupsTimeout)\n        ////updateLookupsTimeout = setTimeout(function() {\n            \n        ////},2000)\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[items])\n     \n    useEffect(() => {\n        //clearTimeout(updateFilteredTimeout)\n        //console.log('UPDATE FILTERED'+intentFilterValue)\n        //updateFilteredTimeout = setTimeout(function() {\n             //console.log('UPDATE FILTERED NOW')\n             var filteredItems = filter(function(item) {\n                if ((!searchFilter || searchFilter.trim().length <=0 ) && (!skillFilterValue || skillFilterValue.trim().length <=0 ) && (!intentFilterValue || intentFilterValue.trim().length <=0 )) return true;\n                var intentFilter = true\n                if (intentFilterValue && intentFilterValue.length > 0) {\n                    if (item.intent === intentFilterValue) {\n                        intentFilter = true\n                    } else {\n                        intentFilter = false\n                    }\n                }\n                var skillFilter = true\n                if (skillFilterValue && skillFilterValue.length > 0) {\n                    if (item.skills && item.skills.indexOf(skillFilterValue) !== -1) {\n                        skillFilter = true\n                    } else {\n                        skillFilter = false\n                    }\n                }\n                var searchFilterBool = true\n                if (searchFilter && searchFilter.length > 0) {\n                    if (item.example && item.example.indexOf(searchFilter) !== -1 ) {\n                        searchFilterBool = true\n                    } else {\n                        searchFilterBool = false\n                    }\n                }         \n                return searchFilterBool && skillFilter && intentFilter;       \n                //intentFilterValue\n                //return (item.example.indexOf(searchFilter) !== -1 \n                            //&& intentFilter \n                            //&& ((skillFilterValue.length <= 0 || (skillFilterValue.length > 0 && typeof item.skills ===\"object\" && item.skills.indexOf(skillFilterValue) !== -1)) ? true : false\n            })\n            var itemKeys = {}\n            filteredItems.map(function(item) {if (item.id) itemKeys[item.id] = true; return null})\n            filteredItems.sort(function(a,b) { return a.example < b.example ? true : false})\n            setFilteredItems(filteredItems)\n            setFilteredItemsKeys(itemKeys)\n            updateLookups(filteredItems)\n        //},800)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[items, searchFilter, skillFilterValue, intentFilterValue])\n    \n    function deleteAll(e)  {\n        if (window.confirm('Really delete all selected examples')) {\n                if (items) {\n                var newItems = []\n                items.map(function(item,i) {\n                    if (item.id && filteredItemsKeys[item.id]) {\n                       if (!item.isSelected) {\n                           newItems.push(item)\n                       }\n                    } else {\n                        newItems.push(item)\n                    }\n                    return null\n                })\n                setItems(newItems)\n                listRef.current.resetAfterIndex(0);\n            }\n        }\n         \n    }\n    \n    function tagAll(val) {\n        //console.log(['tagall',tagAllValue,val])\n        var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.tags) newItem.tags=[]\n                   if (newItem.tags.indexOf(tagValue) === -1) newItem.tags.push(tagValue)\n                   newItem.tags = uniquifyArray(newItem.tags)\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    function intentAll(val) {\n        //console.log(['intentall',intentAllValue,val])\n        var intentValue = val ? val : intentAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = item\n                   newItem.intent = intentValue\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    function resetSelection() {\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n               var newItem = item\n               newItem.isSelected = false\n               newItems.push(newItem)\n               return null\n            })\n            setItems(newItems)\n            \n        }\n    }\n    \n     function selectAll() {\n         if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                if (item) {\n                    var newItem = item\n                       \n                    if (item.id && filteredItemsKeys[item.id]) {\n                       newItem.isSelected = true\n                       newItems.push(newItem)\n                    } else {\n                        newItem.isSelected = false\n                        newItems.push(newItem)\n                    }\n                }\n                return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n     function skillSetAll(val) {\n         //console.log(['set skill all',tagAllValue,val])\n        var skillValue = val ? val : skillAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.skills) newItem.skills=[]\n                   if (newItem.skills.indexOf(skillValue) === -1) newItem.skills.push(skillValue)\n                   newItem.skills = uniquifyArray(newItem.skills)\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n       \n    function saveAll(e)  {\n        //console.log(['save akk',filteredItems])\n        if (items) {\n            var newItems = []\n            var lsItems = []\n            filteredItems.map(function(item,i) {\n                if (item.intent && item.intent.length > 0 && item.id && filteredItemsKeys[item.id]) {\n                   if (item.isSelected) {\n                       lsItems.push(item)\n                   } else {\n                       newItems.push(item)\n                   }\n                } else {\n                    newItems.push(item)\n               }\n               return null\n            })\n            saveLSItems(lsItems)\n            setItems(newItems)\n            listRef.current.resetAfterIndex(0);\n        }\n         \n    }\n   \n    function createEmptyItem(skill, intent) {\n        setSearchFilter('')\n        var skills=[]\n        if (skill && skill.trim().length > 0) skills.push(skill)\n        var newIntent=''\n        if (intent && intent.trim().length > 0) newIntent = intent\n        saveItem({id:null, example:'', intent:newIntent, skills:skills,tags:[]})\n   }\n    \n    function saveItemWrap(item,index) {\n        saveItem(item,index)\n        listRef.current.resetAfterIndex(index);\n        updateLookups(items)\n    }\n    \n    function getItemSize(index) {\n        //console.log(window.innerWidth,window.innerHeight)\n        // set parameters for full size > 1024\n        var baseSize = 100\n        var heightPerLine = 70\n        var tagsPerLine = 10\n        var entitiesPerLine = 8\n        var skillsPerLine = 6\n        // tiny screen mobile \n        if (window.innerWidth < 430) {\n            baseSize = 140\n            heightPerLine = 50\n            tagsPerLine = 4\n            entitiesPerLine = 1\n            skillsPerLine = 1\n        // medium screen tablet\n        } else if (window.innerWidth <= 768) {\n            baseSize = 120\n            heightPerLine = 30\n            tagsPerLine = 2\n            entitiesPerLine = 1\n            skillsPerLine = 2\n        }\n        var tallyExtras = 0;\n        var item = items[index]\n        if (item && item.entities) tallyExtras += item.entities.length/entitiesPerLine;\n        if (item && item.tags) tallyExtras += item.tags.length/tagsPerLine;\n        if (item && item.skills) tallyExtras += item.skills.length/skillsPerLine;\n        var size = baseSize + (Math.round(tallyExtras)) * heightPerLine\n        //console.log(['ITEM SIZE',size, baseSize,heightPerLine,tagsPerLine,entitiesPerLine,tallyExtras,item])\n        return size \n    }\n    \n    function saveLSItem(item) {\n        var localforageStorage = localforage.createInstance({\n           name: 'nlutool',\n           storeName   :'examples',\n         });\n         localforageStorage.getItem('alldata').then(function(exampleItems) {\n                exampleItems.push(item)\n                localforageStorage.setItem('alldata',exampleItems)\n         })\n       \n    }\n    \n    function saveLSItems(newItems) {\n        if (newItems) {\n            var localforageStorage = localforage.createInstance({\n               name: 'nlutool',\n               storeName   :'examples',\n             });\n             localforageStorage.getItem('alldata').then(function(exampleItems) {\n                 if (exampleItems) {\n                    newItems.map(function(newItem) { exampleItems.push(newItem ); return null})\n                    localforageStorage.setItem('alldata',exampleItems)\n                 }\n             })\n        }\n    }\n\n     \n    function saveNlu(splitNumber) {\n        if (items && items[splitNumber]) {\n            //props.saveNluItem(items[splitNumber]) \n            saveLSItem(items[splitNumber])\n            deleteItem(splitNumber)\n        }\n    }\n    \n      function untagAll(val) {\n        //console.log(['untagall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.tags) newItem.tags=[]\n                   var finalTags = []\n                   newItem.tags.map(function(tag) {\n                       if (tag !== val) {\n                           finalTags.push(tag)\n                       }  \n                       return null\n                   })\n                   newItem.tags = finalTags\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n       function unskillAll(val) {\n        //console.log(['unskillall',tagAllValue,val])\n        //var tagValue = val ? val : tagAllValue;\n        if (items) {\n            var newItems = []\n            items.map(function(item,i) {\n                \n               if (item.isSelected && item.id && filteredItemsKeys[item.id]) {\n                   var newItem = JSON.parse(JSON.stringify(item));\n                   if (!newItem.skills) newItem.skills=[]\n                   var finalTags = []\n                   newItem.skills.map(function(tag) {\n                       if (tag !== val) {\n                           finalTags.push(tag)\n                       }  \n                       return null\n                   })\n                   newItem.skills = finalTags\n                   newItems.push(newItem)\n               } else {\n                   newItems.push(item)\n               }  \n               return null\n            })\n            setItems(newItems)\n        }\n    }\n    \n    //function sortItems() {\n        \n    //}\n    \n\n    \n    return {\n        loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter, filteredItems, setFilteredItems,createEmptyItem, \n        searchFilter, setSearchFilter, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue, skillFilterValue, setSkillFilterValue,intentFilterValue, setIntentFilterValue,\n         intentAllValue, setIntentAllValue, listRef, \n        tagAll,untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, saveAll, saveNlu\n    }\n}\nexport default useNluEditor\n","import React, { useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport NluExampleRow from './NluExampleRow'\nimport EditorSearchBar from './components/EditorSearchBar'\nimport useNluEditor from './useNluEditor'\nimport {MatchesTallies,WithSelectedDropDowns} from './components/Components'\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    return <NluExampleRow  \n         item={item} splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} \n         lookups={props.data.lookups} setPageMessage={props.data.setPageMessage} />\n}\n\nexport default function NluExampleEditor(props) {\n    const {loadAll, deleteItem , items, findKeyBy, searchFilter, setSearchFilter, skillFilterValue, setSkillFilterValue, intentFilterValue, setIntentFilterValue, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue,  intentAllValue, setIntentAllValue, listRef, tagAll,untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, filteredItems, createEmptyItem} = useNluEditor('nlutool','examples','alldata', props.updateFunctions.updateLookups)\n    useEffect(() => {\n        loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    //useEffect(() => {\n        //if (importFrom) {\n            //var parsed = parseImportText(importFrom)\n            //setItems(parsed)\n            //props.setImportFrom('')\n        //}\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[props.importFrom])\n    \n\n    function renderEditor(props) {\n        // filter rendered list using callback \n       //var filteredItems = filter(function(item) {\n                //if (!searchFilter || searchFilter.length <=0 ) return true;\n                //const matchSearchFilter = item.example.indexOf(searchFilter) !== -1 \n                        //|| item.intent.indexOf(searchFilter) !== -1 \n                        //|| (item.tags && item.tags.indexOf(searchFilter) !== -1)\n                //return matchSearchFilter && skillFilterValue && item.skills && item.skills.indexOf(skillFilterValue) !== -1\n            //})\n            \n        if (filteredItems && filteredItems.length > 0) {\n            return <div>\n            <MatchesTallies items={items} filteredItems={filteredItems}/>\n             {props.lookups.selectedTally > 0 && <span style={{float:'right'}}> \n                 <WithSelectedDropDowns\n                  skillSetAll={skillSetAll} skillAllValue={skillAllValue}  setSkillAllValue={setSkillAllValue}  untagAll={untagAll} unskillAll={unskillAll} \n                     intentAll={intentAll} intentAllValue={intentAllValue} setIntentAllValue={setIntentAllValue}  \n                     tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue}  lookups={props.lookups}\n                 />\n                 \n                        \n                \n                 <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n               \n            </span> } \n               \n                <List\n                    ref={listRef}\n                    itemData={{items: filteredItems, saveItem: saveItemWrap, deleteItem, findKeyBy, lookups: props.lookups, setPageMessage: props.setPageMessage}}\n                    itemKey={index => index}  \n                    className=\"List\"\n                    height={700}\n                    itemCount={filteredItems.length}\n                    itemSize={getItemSize}\n                    width={'100%'}\n                  >{RenderRow}</List>\n            </div>\n        } else {\n            //{JSON.stringify(filteredItems)}\n            return <div >\n             \n                <div style={{textAlign:'center'}}>\n            <br/><b>No items</b><br/><br/>Upload <Link to=\"/sources\" ><Button>Sources</Button></Link> then <Link to=\"/import\" ><Button>Import</Button></Link>.</div></div>\n        }\n    }\n    \n     return <div>\n        <EditorSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} skillFilterValue={skillFilterValue} setSkillFilterValue={setSkillFilterValue} resetSelection={resetSelection} selectAll={selectAll}  createEmptyItem={createEmptyItem} intentFilterValue={intentFilterValue} setIntentFilterValue={setIntentFilterValue} untagAll={untagAll} unskillAll={unskillAll}  />\n         {renderEditor(props)}\n    </div>\n    \n}\n      \n\n\n\n\n","/* global window */\nimport React  from 'react';\nimport {Button, Navbar } from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport fireImage from '../images/singingman.svg'\nimport waitingImage from '../images/waiting.gif'\nimport ReactGA from 'react-ga';\n\n\nReactGA.initialize('UA-3712973-4');\n\nexport default function NavbarComponent(props) {\n    //console.log(props)\n    ReactGA.pageview(props.history.location.pathname);\n    var astyle={paddingLeft:'0.3em'}\n    const currentPage = props.history && props.history.location && props.history.location.pathname ? props.history.location.pathname : '/'\n    const pages = {\n        '/': {name: 'NLU Tool',show: false},\n        '/search': {name: 'Search',show: true},//link:'https://github.com/syntithenai/opennludata/wiki'\n        '/sources': {name: 'Sources',show: true},\n        '/import': {name: 'Import',show: true},\n        '/lists': {name: 'Entities',show: true},\n        '/utterances': {name: 'Utterances',show: true},\n        '/examples': {name: 'Intents',show: true},\n        '/skills': {name: 'Skills',show: true},\n        '/help': {name: 'Help',show: false},\n        \n    }\n    \n    const links = Object.keys(pages).map(function(link,k) {\n        const page = pages[link]\n        if (page.show) {\n            if (page.link) {\n                return <a key={k} style={astyle} href={page.link} ><Button variant='primary' >{page.name}</Button></a>                \n            } else {\n                return <Link key={k} style={astyle} to={link} ><Button variant={currentPage.indexOf(link) !== -1 ? 'success' : 'primary'}>{page.name}</Button></Link>\n            }\n        }\n        return null\n    })\n    \n    const helpButton = pages[currentPage] && pages[currentPage].helpComponent ? pages[currentPage].helpComponent : <Link to=\"/help\" ><Button>Help</Button></Link>\n    \n//        <Navbar.Text><Button><img src='/menu.svg' alt='menu' /></Button></Navbar.Text>\n\n    return <Navbar  bg=\"dark\" variant=\"dark\"  >\n        {props.message && <div style={{position:'fixed',top:5,left:window.innerWidth ? (window.innerWidth /2 - 40) : 100, border: '2px solid red', background: 'pink', padding: '0.5em', minWidth:'400px' ,borderRadius:'5px'}} >\n            <Button variant=\"danger\" size=\"sm\"  style={{float:'right', fontWeight: 'bold',borderRadius:'20px',marginLeft:'1em'}} onClick={function(e) {props.setPageMessage('')}}>X</Button>{props.message} \n        </div>}\n    \n        <img src={fireImage}  style={{height:'5em', marginRight:'0.4em'}} alt=\"logo\"/>\n        \n         \n        <div style={{width: '100%'}}>\n        {links}\n        </div>\n        \n        {props.message}\n        <Navbar.Text style={{position:'fixed', top:'2px', right:'2px'}} className=\"justify-content-end\" >{helpButton}</Navbar.Text>\n        <img src={waitingImage} alt='waiting' style={{position:'fixed', top:5, right:5, zIndex:99, display: props.waiting ? 'block' : 'none' }} />\n    </Navbar>\n}\n\n\n        //<Navbar.Text><Link to=\"/organise\" ><Button>Organise</Button></Link></Navbar.Text>\n        //<Navbar.Text><Link to=\"/skills\" ><Button>My Skills</Button></Link></Navbar.Text>\n        //<Navbar.Text><Link to=\"/search\" ><Button>Search Community</Button></Link></Navbar.Text>\n","/* global window */\nimport {Button,   Dropdown, ButtonGroup } from 'react-bootstrap'\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactTags from 'react-tag-autocomplete'\nimport useNluRow from './useNluRow'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport checkImage from './images/check.svg'\nimport thumbdownImage from './images/thumb-down.svg'\nimport thumbupImage from './images/thumb-up.svg'\n\n\nexport default function NluImportRow(props) {\n     const  {item, splitNumber , style} = props;\n       const {    \n            intentTitle, setIntentTitle, selectionState, setSelectionState, newEntity, setNewEntity, tags, skills, reactTags, reactSkills, \n            onTagDelete, onTagAddition, onSkillDelete,onSkillAddition,  updateExampleContent, entityClicked, entityTypeChanged, intentChanged, entityDelete, selectItem,  deselectItem\n        } = useNluRow(props.item, props.saveItem, props.splitNumber, props.style, props.setPageMessage)\n                \n       var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n          return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {intentChanged(intentKey)}}  >{intentKey}</Dropdown.Item>\n       })\n       // ONE PER ENTITY FOR THIS EXAMPLE\n       var entitiesDropdowns = item && item.entities ? item.entities.map(function(entity,i) {\n           var entityOptions = props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item  key={j} value={entityKey} onClick={function(e) {entityTypeChanged(i,entityKey)}}  >{entityKey}</Dropdown.Item>\n           }) \n           return<Dropdown style={{marginLeft:'0.2em'}} variant='info'  key={i}  as={ButtonGroup}>\n              <Dropdown.Toggle variant='info'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n              <Button variant='info'   size=\"sm\"  onClick={function(e) {entityClicked(i,entity.type)}} >\n              <b>{entity.type}</b> \n                -\n              {entity.value ? entity.value : 'Select Entity Type'}\n              </Button>\n              <Button variant=\"info\" size=\"sm\" onClick={function(e) {entityDelete(i,'')}} >X</Button>\n              <Dropdown.Menu>\n                  <form  style={{display:'inline'}}>\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control\" onChange={function(e) {entityTypeChanged(i,e.target.value)}}\n                    value={entity.type} />\n                    </div>\n                  </form>\n                  {entityOptions}\n              </Dropdown.Menu>\n            </Dropdown>\n       }): [] ;\n        //PLUS CREATE NEW WHEN TEXT IS SELECTED\n       if (selectionState  && selectionState.textSelection && selectionState.textSelection.length > 0 &&  selectionState.textSelectionFrom === splitNumber) {\n           var entityOptions =  props.lookups.entityLookups && props.lookups.entityLookups.sort().map(function(entityKey,j) {\n              return <Dropdown.Item key={j} value={entityKey} onClick={function(e) {entityTypeChanged(-1,entityKey)}}  >{entityKey}</Dropdown.Item>\n           })\n           entitiesDropdowns.push(<Dropdown key=\"new\" variant='success'  as={ButtonGroup}>\n\n          <Dropdown.Toggle variant='success'  split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant='success' size=\"sm\" >New Entity</Button>\n\n          <Dropdown.Menu>\n           <form style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); entityTypeChanged(-1,newEntity)}}>\n                <div className=\"form-group\">\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {setNewEntity(e.target.value)}}\n                value={newEntity} />\n                </div>\n              </form>\n              {entityOptions}\n          </Dropdown.Menu>\n        </Dropdown>)\n       }\n       //var buttonImageStyle={color:'white', height:'2em'}\n       return item && <div style={style} className={splitNumber % 2 ? 'ListItemOdd' : 'ListItemEven'}>\n               <div style={{position:'relative', width: '100%', textAlign:'left',  borderTop: '2px solid black'}}>\n                  \n                   {!item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"secondary\" onClick={function() {selectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Select\" /></Button>}\n                  {item.isSelected && <Button style={{float: 'left'}} size=\"lg\" variant=\"success\" onClick={function() {deselectItem(splitNumber)}} ><img style={{height:'1em'}} src={checkImage} alt=\"Deselect\" /></Button>}\n                  \n                  {item.intent && <Button  style={{float:'right', marginLeft:'0.2em'}}  variant=\"success\"  onClick={function() {props.saveNlu(splitNumber)}} ><img src={thumbupImage} alt=\"Save\" /> Save</Button>}\n                  {!item && <Button   style={{float:'right', marginLeft:'0.2em'}} variant=\"secondary\" ><img src={thumbupImage} alt=\"Save\" /> Import</Button>} \n                  <Button  variant=\"danger\" style={{float:'right'}} onClick={function(e) {props.deleteItem(splitNumber,(item.id ? item.id : ''))}} ><img src={thumbdownImage} alt=\"Delete\" /> Delete</Button>\n                  \n                 \n                  <Dropdown  style={{float:'left'}} as={ButtonGroup}>\n                  <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n                  <Button   size=\"sm\" >{item.intent ? item.intent.toString() : 'Select Intent'} </Button>\n                  <Dropdown.Menu>\n                   <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault(); intentChanged(intentTitle)}}>\n                        <div className=\"form-group\">\n                          <input type=\"text\" className=\"form-control\" value={intentTitle} onChange={function(e) {setIntentTitle(e.target.value)}}\n                         />\n                        </div>\n                      </form>\n                      {intentOptions}\n                  </Dropdown.Menu>\n                  </Dropdown>\n                  <span style={{float:'left'}}>{entitiesDropdowns}</span>\n                 \n                  \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add to skill\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactSkills}\n                    tags={skills}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.skillLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onSkillDelete}\n                    onAddition={onSkillAddition} /> \n                    </div>\n                    \n                  <div style={{float:'left'}}>\n                   <ReactTags\n                    placeholderText=\"Add new tag\"\n                    minQueryLength={0}\n                    maxSuggestionsLength={50}\n                    autoresize={false}\n                    allowNew={true}\n                    ref={reactTags}\n                    tags={tags}\n                    suggestionComponent={SuggestionComponent}\n                    suggestions={props.lookups.tagLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                    onDelete={onTagDelete}\n                    onAddition={onTagAddition} /> \n                    </div>\n                  \n                  <input  \n                 \n                   onFocus={ function(e) {\n                       setSelectionState(null)\n                    }}\n                   onSelect={ function(e) {\n                     var textSelection = window.getSelection().toString(); \n                     setSelectionState({textSelection:textSelection, textSelectionFrom: splitNumber, startTextSelection: e.target.selectionStart, endTextSelection: e.target.selectionEnd})\n                  }}  \n                   type='text'   style={{clear:'both', width:'80%'}}  value={item.example} id={\"example_input_\"+splitNumber} \n                   onChange={function(e) { updateExampleContent(e.target.value)}} />\n                  \n                  \n                \n                \n            </div>\n      </div>\n}\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { VariableSizeList as List } from 'react-window';\nimport NluImportRow from './NluImportRow'\nimport EditorSearchBar from './components/EditorSearchBar'\nimport useNluEditor from './useNluEditor'\nimport TagAllDropDown from './components/TagAllDropDown'\nimport IntentAllDropDown from './components/IntentAllDropDown'\nimport SkillAllDropDown from './components/SkillAllDropDown'\nimport arrowthickleftImage from './images/arrow-thick-left.svg'\nimport arrowthickrightImage from './images/arrow-thick-right.svg'\n\n\nconst RenderRow = function(props) {\n    const index = props.index\n    const style = props.style\n    const item = props.data.items[index]\n    //console.log(['USENLUROW rr',index])\n    return <NluImportRow  \n         item={item}  splitNumber={index} style={style}\n         saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         lookups={props.data.lookups}  setPageMessage={props.data.setPageMessage} />\n}\n\n\nexport default function NluImportEditor(props) {\n    \n    //const examplesDB = useDBSingleKey('nlutool','examples','alldata')\n    const {loadAll, deleteItem ,items,  findKeyBy, searchFilter, setSearchFilter, tagAllValue, setTagAllValue, skillAllValue, setSkillAllValue, skillFilterValue, setSkillFilterValue, intentFilterValue, setIntentFilterValue, intentAllValue, setIntentAllValue, listRef, tagAll, untagAll, unskillAll, intentAll, resetSelection, selectAll,  skillSetAll, saveItemWrap, getItemSize, deleteAll, saveAll, saveNlu, filteredItems, createEmptyItem} = useNluEditor('nlutool','import','alldata', props.updateFunctions.updateLookups)\n    useEffect(() => {\n        loadAll()\n        //examplesDB.loadAll()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    //useEffect(() => {\n        //if (importFrom) {\n            //var parsed = parseImportText(importFrom)\n            //setItems(parsed)\n            //props.setImportFrom('')\n        //}\n    //// eslint-disable-next-line react-hooks/exhaustive-deps\n    //},[props.importFrom])\n    \n    \n    \n   \n    \n    function renderEditor(props) {\n        // filter rendered list using callback \n       \n         //filteredItems.sort(function(oldItem,item) {console.log( ['SORT',oldItem.example,item.example]); return (item.example && oldItem.example && item.example.trim().toLowerCase <= oldItem.example.trim().toLowerCase) })\n           \n        if (filteredItems && filteredItems.length > 0) {\n            \n           //var skillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n                  //return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkillAllValue(skillKey); skillSetAll(skillKey)}}  >{skillKey}</Dropdown.Item>\n            //})\n            \n            //var tagOptions = props.lookups.tagLookups && props.lookups.tagLookups.sort().map(function(tagKey,i) {\n              //return <Dropdown.Item key={i} value={tagKey} onClick={function(e) {setTagAllValue(tagKey); tagAll(tagKey)}}  >{tagKey}</Dropdown.Item>\n           //})\n           //var intentOptions = props.lookups.intentLookups && props.lookups.intentLookups.sort().map(function(intentKey,i) {\n              //return <Dropdown.Item key={i} value={intentKey} onClick={function(e) {setIntentAllValue(intentKey);intentAll(intentKey)}}  >{intentKey}</Dropdown.Item>\n           //})\n            return <div>\n             <span style={{float:'left', fontWeight:'bold'}} >&nbsp;{filteredItems.length}/{items.length} matches </span>\n             {props.lookups.selectedTally > 0 && <span style={{float:'right'}}> \n                <span>With {props.lookups.selectedTally} selected&nbsp;\n              <SkillAllDropDown skillSetAll={skillSetAll} skillAllValue={skillAllValue}  setSkillAllValue={setSkillAllValue}  lookups={props.lookups}  untagAll={untagAll} unskillAll={unskillAll}/>\n                <IntentAllDropDown intentAll={intentAll} intentAllValue={intentAllValue} setIntentAllValue={setIntentAllValue}  lookups={props.lookups}  untagAll={untagAll} unskillAll={unskillAll}/>\n                <TagAllDropDown tagAll={tagAll} tagAllValue={tagAllValue} setTagAllValue={setTagAllValue}  lookups={props.lookups}  untagAll={untagAll} unskillAll={unskillAll}/>\n                \n                </span>\n                <Button style={{marginLeft:'1em'}} onClick={saveAll} variant=\"success\"  >Save Selected</Button> \n                <Button style={{marginLeft:'1em'}} onClick={deleteAll} variant=\"danger\"  >Delete Selected</Button> \n                \n            </span> } \n                \n              \n                \n                <List\n                    ref={listRef}\n                    itemData={{items: filteredItems, saveItem: saveItemWrap, saveNlu, deleteItem, findKeyBy, lookups:props.lookups, setPageMessage: props.setPageMessage}}\n                    itemKey={index => index}  \n                    className=\"List\"\n                    height={700}\n                    itemCount={filteredItems.length}\n                    itemSize={getItemSize}\n                    width={'100%'}\n                  >{RenderRow}</List>\n            </div>\n            \n            \n        } else {\n            //{JSON.stringify(filteredItems)}\n            return <div >\n                <div style={{textAlign:'center'}}>\n            <br/><b>No more items to import</b><br/><br/>Open <Link to=\"/sources\" ><Button><img style={{height:'1em', paddingRight:'1em'}}  src={arrowthickleftImage} alt=\"Sources\" />Sources</Button></Link> to create more or <Link to=\"/examples\" ><Button>Organise<img src={arrowthickrightImage} alt=\"Intents\" style={{height:'1em', paddingLeft:'1em'}}  /></Button></Link> what you have imported into skills.\n            </div></div>\n        }\n    }\n    // {JSON.stringify(items)}\n    return <div>\n         \n        <EditorSearchBar {...props} searchFilter={searchFilter} setSearchFilter={setSearchFilter} skillFilterValue={skillFilterValue} setSkillFilterValue={setSkillFilterValue} resetSelection={resetSelection} selectAll={selectAll} createEmptyItem={createEmptyItem} untagAll={untagAll} unskillAll={unskillAll} intentFilterValue={intentFilterValue} setIntentFilterValue={setIntentFilterValue}  />\n         {renderEditor(props)}\n    </div>\n    \n    \n}\n      \n\n","import JSZip from 'jszip'\n\nfunction createZip(zipStructure) {\n    var zip = new JSZip();\n     console.log(['ZIP',zipStructure])\n    function recurseZipStructure(zipStructure, path) {\n        if (Array.isArray(zipStructure.files)) {\n            zipStructure.files.map(function(file) {\n                console.log(['ZIP file',file])\n                var options = (file.base64 && file.base64.length > 0) ? {base64: true} : {} \n                if (file.name && file.name.length > 0 && file.content) zip.file(path+\"/\"+file.name,file.content, options);\n                return null\n            })\n        }\n        if (Array.isArray(zipStructure.folders)) {\n            zipStructure.folders.map(function(folder) {\n                console.log(['ZIP folder',folder])\n                if (folder.name && folder.name.length > 0) zip.folder(folder.name);\n                if ((folder.files && folder.files.length > 0) || (folder.folders && folder.folders.length > 0)) {\n                    recurseZipStructure(folder, path+\"/\"+folder.name)\n                }\n                return null\n            })\n        }\n         \n    } \n     \n    recurseZipStructure(zipStructure,'')\n     \n    return new Promise(function(resolve,reject) {\n        zip.generateAsync({type:\"blob\"}).then(function(content) {\n            resolve(content)\n        })\n    })\n}\n\nexport {createZip}\n","import {  uniquifyArray, replaceEntities } from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\n\nasync function exportJOVO(skill) {\n     return new Promise(function(resolve,reject) {\n         var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         listsStorage.getItem('alldata').then(function(lists) {\n             var jovo={invocation: skill.invocation}\n             //console.log(['JVO export',skill])\n             var intents = {}\n             var entityTypes={}\n             if (skill.intents) {\n                 Object.keys(skill.intents).map(function(intentKey) {\n                     var examples = skill.intents[intentKey]\n                     if (!intents[intentKey])  intents[intentKey] = {name:intentKey, phrases:[], inputs: []}\n                     var inputs = {}\n                     if (Array.isArray(examples)) {\n                         examples.map(function(example) {\n                            intents[intentKey].phrases.push(replaceEntities(example.example,example.entities))\n                            if (Array.isArray(example.entities)) {\n                                example.entities.map(function(entity) {\n                                   inputs[entity.type] = true  \n                                   if (!Array.isArray(entityTypes[entity.type])) entityTypes[entity.type] = []\n                                   entityTypes[entity.type].push(entity.value)\n                                   return null\n                                })\n                            }\n                            return null\n                         })\n                     }\n                     intents[intentKey].phrases = uniquifyArray(intents[intentKey].phrases).sort()\n                     intents[intentKey].inputs = Object.keys(inputs).map(function(entityType) { \n                         var entityTypeName = entityType+\"Type\"\n                         if (skill.entities && skill.entities[entityType] && (skill.entities[entityType].googleType || skill.entities[entityType].alexaType)) {\n                             entityTypeName ={}\n                             if (skill.entities[entityType].googleType) entityTypeName.dialogflow = skill.entities[entityType].googleType\n                             if (skill.entities[entityType].alexaType) entityTypeName.alexa = skill.entities[entityType].alexaType\n                         } \n                         return {name: entityType, type: entityTypeName} \n                    })\n                    return null\n                 }) \n             }\n             jovo.intents = Object.values(intents)\n             //console.log(['skill lists',entityTypes, skill.lists])\n             //var usedLists = {}\n             //if (skill.entities) {\n                //Object.keys(skill.entities).map(function(entity,i) {\n                    //if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        //skill.entities[entity].lists.map(function(list) {\n                           //usedLists[list] = true  \n                        //})\n                    //}\n                //})\n             //}\n            \n             //lists.map(function(item) {\n                 //console.log(['LIST',item])\n                 //Object.keys(usedLists).map(function(listKey) {\n                    //console.log([listKey,item.tags.indexOf(listKey) !== -1, item.tags])\n                    //if (item && item.tags && item.tags.indexOf(listKey) !== -1) {\n                        //console.log('list item used ')\n                        //entityTypes[listKey].push(item.value)\n                    //}\n                //})\n            //})\n            var synonyms = {}\n            var synonymsIndex = {}\n            lists.map(function(item) {\n                 if (item.value && item.value.trim().length > 0) {\n                    if (item.synonym) {\n                        if (!Array.isArray(synonymsIndex[item.synonym])) synonymsIndex[item.synonym] = [] \n                        synonyms[item.value] = item.synonym\n                        synonymsIndex[item.synonym].push(item.value)\n                    }\n                    Object.keys(entityTypes).map(function(entityType) {\n                        if (skill.entities && skill.entities[entityType]  && skill.entities[entityType].lists)  {\n                            skill.entities[entityType].lists.map(function(entityExtrasList) {\n                                //console.log(['li',entityExtrasList,item.tags,item.tags.indexOf(entityExtrasList)])\n                                if (item && item.tags && item.tags.indexOf(entityExtrasList) !== -1) {\n                                    //console.log(['USE ENTITY',entityType, entityExtrasList,lists[entityExtrasList]])\n                                    entityTypes[entityType].push(item.value)\n                               }\n                               return null\n                            })\n                        }\n                        return null\n                    })\n                }\n                return null\n            })\n             \n            console.log(['synonyms',synonyms, synonymsIndex])\n        \n            jovo.inputTypes = Object.keys(entityTypes).map(function(entityType) {\n            //console.log(['JOVOEX',lists,entityType])\n                const values = []\n                uniquifyArray(entityTypes[entityType]).sort().map(function(value) {\n                    if (!synonyms[value]) {\n                        if (value && value.trim().length > 0) values.push( {value:value})\n                    }\n                    return null\n                })\n                Object.keys(synonymsIndex).map(function(synonym) {\n                    if (synonym && synonym.trim().length > 0) values.push({value:synonym, synonyms:synonymsIndex[synonym] })\n                    return null\n                })\n                return {name: entityType+\"Type\", values:values}  \n            })\n                    \n            \n            \n            console.log(['inputtypes',jovo.inputTypes])\n            //console.log(['JVO final',jovo])\n            const content = JSON.stringify(jovo)\n             const final =  {folders:[{'name':'models', files:[{name:'en-US.json', content: content}] }]   }\n             //console.log(['JVO final',final])\n             resolve(final)\n              \n        })\n    })\n}\n\n\nasync function exportJOVOZip(skill) {\n    return createZip(await exportJOVO(skill))\n}\n\nexport {exportJOVO, exportJOVOZip}\n","import {  uniquifyArray, replaceEntities } from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\n\n\n\n\nasync function exportMycroft(skill) {\n    return new Promise(function(resolve,reject) {\n        var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         var modelFiles=[]\n         listsStorage.getItem('alldata').then(function(lists) {\n            //var usedLists = {}\n            //if (skill.entities) {\n                //Object.keys(skill.entities).map(function(entity,i) {\n                    //if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        //skill.entities[entity].lists.map(function(list) {\n                           //usedLists[list] = true  \n                        //})\n                    //}\n                    //return null\n                //})\n            //}\n           \n            \n            \n           \n             // intents - \n             // collate examples, one file per intent\n             var intents={}\n             if (skill.intents) {\n                 Object.keys(skill.intents).map(function(intentKey) {\n                     var examples = skill.intents[intentKey]\n                     if (!Array.isArray(intents[intentKey]))  intents[intentKey] = []\n                     if (Array.isArray(examples)) {\n                         examples.map(function(example) {\n                            intents[intentKey].push(replaceEntities(example.example,example.entities))\n                            return null\n                         })\n                     }\n                     intents[intentKey] = uniquifyArray(intents[intentKey]).sort()\n                    return null\n                 }) \n             }\n             // one per file\n             // entities - merge values and lists values , one entity per file\n             var entities={}\n             if (skill.entities) { \n                 Object.keys(skill.entities).map(function(entityKey) {\n                     var combinedEntities = []\n                     var entity = skill.entities[entityKey]\n                     if (entity.values) {\n                         combinedEntities = combinedEntities.concat(entity.values)\n                     } \n                     if (entity.lists) {\n                         //var skillLists = {}\n                         //Object.keys(usedLists).map(function(listKey) {\n                          //skillLists[listKey] = []  \n                          //return null\n                        //})\n                       \n                       console.log(['add from lists',entity.lists])\n                        lists.map(function(item) {\n                            entity.lists.map(function(listKey) {\n                                console.log([listKey,item.tags.indexOf(listKey) !== -1, item.tags])\n                                if (item && item.tags && item.tags.indexOf(listKey) !== -1) {\n                                    console.log('list item used ')\n                                    combinedEntities.push(item.value)\n                                }\n                                return null\n                            })\n                            return null\n                        })\n                     }\n                     entities[entityKey] = uniquifyArray(combinedEntities).sort()\n                     return null\n                 }) \n             }\n             \n             Object.keys(intents).map(function(intent) {\n                 modelFiles.push({name:intent+'.intent',content: intents[intent].join(\"\\n\")})\n                 return null\n             })\n             Object.keys(entities).map(function(entity) {\n                 modelFiles.push({name: entity+'.entity',content: entities[entity].join(\"\\n\")})\n                 return null\n             })\n              resolve( modelFiles)\n        })\n    })\n}\n\n\nasync function exportMycroftZip(skill) {\n    const files = await exportMycroft(skill)\n    return createZip({files:files})\n}\n\nexport {exportMycroft, exportMycroftZip}\n\n","const RASATemplates = {\n    config: `\nlanguage: en\npipeline:\n  - name: WhitespaceTokenizer\n  - name: RegexFeaturizer\n  - name: LexicalSyntacticFeaturizer\n  - name: CountVectorsFeaturizer\n  - name: CountVectorsFeaturizer\n    analyzer: \"char_wb\"\n    min_ngram: 1\n    max_ngram: 4\n  - name: ResponseSelector\n    epochs: 100\n  - name: DIETClassifier\n    epochs: 100\n  - name: EntitySynonymMapper\n\npolicies:\n  - name: FormPolicy\n  - name: MemoizationPolicy\n  - name: TEDPolicy\n    max_history: 5\n    epochs: 100\n  - name: MappingPolicy\n  - name: \"FallbackPolicy\"\n    nlu_threshold: 0.5\n    core_threshold: 0.3\n    fallback_action_name: \"action_default_fallback\"\n    `,\n    credentials: `\n# This file contains the credentials for the voice & chat platforms\n# which your bot is using.\n# https://rasa.com/docs/rasa/user-guide/messaging-and-voice-channels/\n\nrest:\n#  # you don't need to provide anything here - this channel doesn't\n#  # require any credentials\n\n\n#facebook:\n#  verify: \"<verify>\"\n#  secret: \"<your secret>\"\n#  page-access-token: \"<your page access token>\"\n\n#slack:\n#  slack_token: \"<your slack token>\"\n#  slack_channel: \"<the slack channel>\"\n\n#socketio:\n#  user_message_evt: <event name for user message>\n#  bot_message_evt: <event name for but messages>\n#  session_persistence: <true/false>\n\n#mattermost:\n#  url: \"https://<mattermost instance>/api/v4\"\n#  token: \"<bot token>\"\n#  webhook_url: \"<callback URL>\"\n\n#rasa:\n  #url: \"http://localhost:5002/api\"\n \n    `,\n    endpoint: `\n#action_endpoint:\n#  url: http://localhost:5055/webhook\n\n    `,\n    actions:  `\n\"\"\" RASA actions \"\"\"\n \n    `,\n    single_action: function(className, actionName) {\n        return `\n\"\"\" RASA action \"\"\"\nimport sys\nimport logging\nfrom typing import Any, Text, Dict, List\nfrom datetime import datetime\nfrom rasa_sdk import Action, Tracker\nfrom rasa_sdk.executor import CollectingDispatcher\nfrom rasa_sdk.events import SlotSet, FollowupAction\n\nclass `+className+`(Action):\n    def name(self) -> Text:\n        return \"`+actionName+`\"\n    def run(self, dispatcher: CollectingDispatcher,\n            tracker: Tracker,\n            domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:\n        var slotsets = []\n        logger = logging.getLogger(__name__)    \n        logger.debug('Action `+actionName+`')\n        return [SlotSet(\"hermod_force_end\", \"true\"),SlotSet(\"hermod_force_continue\", None)] \n        \n        dispatcher.utter_message(text=\"Action `+actionName+`\")\n        return slotsets\n    \n    `\n    }\n    ,\n    domain: `\nsession_config:\n  carry_over_slots_to_new_session: true\n  session_expiration_time: 5    \n\n`,\n    stories:`\n## greet + location/price + cuisine + num people    <!-- name of the story - just for debugging -->\n* greet\n   - action_ask_howcanhelp\n* inform{\"location\": \"rome\", \"price\": \"cheap\"}  <!-- user utterance, in format intent{entities} -->\n   - action_on_it\n   - action_ask_cuisine\n* inform{\"cuisine\": \"spanish\"}\n   - action_ask_numpeople        <!-- action that the bot should execute -->\n* inform{\"people\": \"six\"}\n   - action_ack_dosearch    \n`,\n    session:`\nsession_config:\n  carry_over_slots_to_new_session: true\n  session_expiration_time: 5\n`\n}\nexport default RASATemplates\n","import { replaceEntitiesWithValues, uniquifyArray, snakeToCamelCase, camelToSnakeCase, toSnakeCase} from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\nimport RASATemplates from './RASATemplates'\n\n\n function generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContent, credentialsContent, endpointsContent, actionFiles, storyData) {\n    var folderTree = {\n        files:[\n            {name:'actions.py',content:actionsContent},\n            {name:'config.yml',content:configContent},\n            {name:'domain.yml',content:domainContent},\n            {name:'credentials.yml',content:credentialsContent},\n            {name:'endpoints.yml',content:endpointsContent}\n        ], \n        folders:[\n            {name:'actions', files:actionFiles}, \n            {name:'data', \n                files:[{name:'nlu.md', content: nluContent}, {name:'stories.md', content: storyData ? storyData : ''}], \n                folders:[{name:'lookups', files:fileLookups}]\n            }\n        ]\n    }\n    console.log(['TREE GEN',folderTree])\n    return folderTree\n}\n\n// just the models subfolder\n// one file per intent\n// one file per entity\nfunction exportRASAMD(skill) {\n     //\"rasa_nlu_data\": {\n        //\"common_examples\": [],\n        //\"regex_features\" : [],\n        //\"lookup_tables\"  : [],\n        //\"entity_synonyms\": []\n    //}\n    //{\"rasa_nlu_data\":{\"regex_features\":[],\"entity_synonyms\":[{\"synonyms\":[\"biggest city\",\"capital city\"],\"value\":\"capital\"}],\"common_examples\":[{\"text\":\"sounds good sounds good thank you\",\"intent\":\"affirmative\",\"entities\":[]},\n      //{\"text\":\"what is the use of a actinometer\",\"intent\":\"ask_attribute\",\"entities\":[{\"end\":15,\"entity\":\"attribute\",\"start\":12,\"value\":\"use\"},{\"end\":32,\"entity\":\"thing\",\"start\":21,\"value\":\"actinometer\"}]}\n    console.log(['EXPPORT RASA',skill])\n    return new Promise(function(resolve,reject) {\n         var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         var utterancesStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"utterances\",\n         });\n        \n        //resolve({files:[{name:'nlu.md', content: content}]})\n         \n         // LOAD ENTITY LISTS\n         listsStorage.getItem('alldata').then(function(lists) {\n            \n            console.log(['LISTS',lists])\n            \n            // for each entity, collate entity values and lists values\n            var entityLists = {}\n            if (skill.entities) {\n                Object.keys(skill.entities).map(function(entity,i) {\n                    const entityValue = skill.entities[entity]\n                    // values from examples\n                    if (entityValue && entityValue.values) {\n                        entityLists[entity] = entityValue.values\n                    } \n                    // values from tags\n                    if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        lists.map(function(listItem,listItemIndex) {\n                            skill.entities[entity].lists.map(function(entityList) {\n                               if (listItem.tags && listItem.tags.indexOf(entityList) !== -1) {\n                                   entityLists[entity].push(listItem.value)\n                               }\n                               return null\n                            })\n                            return null\n                        })\n                    }\n                    return null\n                })\n            }\n             console.log(['LISTS2',entityLists])\n             // lookup lists\n             var fileLookups=[]\n             var lookups = []\n             Object.keys(entityLists).map(function(entity) {\n                 var values = entityLists[entity]\n                 fileLookups.push({name:entity+\".txt\",content:values.join(\"\\n\")})\n                 lookups.push('## lookup:'+entity)\n                 lookups.push(\"data/lookups/\"+entity+\".txt\")\n                 return null\n             })\n             \n            \n            // collate synonyms\n            //var synonyms = {}\n            var synonymsIndex = {}\n            lists.map(function(item) {\n                 if (item.value && item.value.trim().length > 0) {\n                    if (item.synonym) {\n                        if (!Array.isArray(synonymsIndex[item.synonym])) synonymsIndex[item.synonym] = [] \n                        //synonyms[item.value] = item.synonym\n                        synonymsIndex[item.synonym].push(item.value)\n                    }\n                }\n                return null\n            })\n            console.log(['synonyms',synonymsIndex])\n            var synonymsOut = []\n            Object.keys(synonymsIndex).map(function(synonym) {\n                synonymsOut.push('## synonym:'+synonym)\n                uniquifyArray(synonymsIndex[synonym]).sort().map(function(item) {\n                    // TODO CONVERT TO RASA MD EXAMPLE WITH ENTITIES\n                    synonymsOut.push('- '+item)\n                    return null\n                }) \n                synonymsOut.push(\"\\n\")\n                return null\n            })\n            console.log(['synonyms OUT',synonymsOut])\n            \n            // COMMON EXAMPLES  \n            var nluOut=[]\n            if (skill.intents) {\n                console.log(['have intents',skill.intents])\n                Object.keys(skill.intents).map(function(intentKey) {\n                    const intentItem = skill.intents[intentKey]\n                    console.log('have intent ',intentKey,intentItem)\n                    nluOut.push('## intent:'+intentKey)\n                    var examples = []\n                    intentItem.map(function(example) {\n                        // TODO CONVERT TO RASA MD EXAMPLE WITH ENTITIES\n                        console.log(['INTY',example])\n                        if (example && example.example && example.example.trim().length > 0) {  \n                            var key = replaceEntitiesWithValues(example.example, example.entities)\n                            examples[key] = '- '+key\n                        }\n                        return null\n                    }) \n                    nluOut=[...nluOut, ...Object.values(examples)]\n                    nluOut.push(\"\\n\")\n                    return null\n                })\n            }\n            var nluContent = nluOut.join(\"\\n\")+\"\\n\"+synonymsOut.join(\"\\n\")+lookups.join(\"\\n\")\n            console.log(nluContent)\n            // CONSTANTS\n             var configContent = skill.rasaConfig ? skill.rasaConfig : RASATemplates.config\n            //var domainContent = ''\n            var credentialsContent = skill.rasaCredentials ? skill.rasaCredentials : RASATemplates.credentials\n            var endpointsContent = skill.rasaEndpoint ? skill.rasaEndpoint : RASATemplates.endpoint\n            \n            // RASA ACTIONS\n            var actionsContent = RASATemplates.actions\n            var domainActions = []\n            \n            var actionFiles = []\n            if (Array.isArray(skill.rasaActions)) {\n                skill.rasaActions.map(function(action) {\n                    if (action && action.trim().length > 0) {\n                        var string = snakeToCamelCase(toSnakeCase(camelToSnakeCase(action)))\n                        var snake = camelToSnakeCase(string)+'_action'\n                        domainActions.push(snake)\n                        var name = string && string.trim().length > 0 ? string[0].toUpperCase() + string.substring(1) : ''\n                        actionFiles.push({name:name+'Action.py', content:RASATemplates.single_action(name+'Action',snake)})\n                        actionsContent+=\"\\n import \"+name+'Action.py'\n                    }\n                    return null\n                })\n            }\n            var domainEntities = skill.entities ? Object.keys(skill.entities) : []\n            var domainIntents = skill.intents ? Object.keys(skill.intents) : []\n            var domainSlots = skill.slots ?  Object.keys(skill.slots) : (skill.entities ? Object.keys(skill.entities) : [])\n            var domainSlotsMeta = {}\n            domainSlots.map(function(slot) {\n               domainSlotsMeta[slot] = {\n                   type: skill.slots && skill.slots[slot] &&  skill.slots[slot].slotType ? skill.slots[slot].slotType : 'unfeaturized'\n                }\n               return null\n            })\n            console.log(['DOMAIN',domainEntities, domainIntents, domainSlots, domainSlotsMeta])\n            \n            var domainContentParts=[]\n            if (domainIntents.length > 0) {\n                domainContentParts.push(\"intents:\")\n                domainIntents.map(function(intent) {\n                    domainContentParts.push(\"- \"+intent)\n                    // TODO\n                    // TODO +\":\" plus intent entities\n                    // domainContentParts.push(\"  use_entities:\\n\")\n                    // domainContentParts.push(\"  - \"+entityForIntent)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            \n            if (domainEntities.length > 0) {\n                domainContentParts.push(\"entities:\")\n                domainEntities.map(function(entity) {\n                    domainContentParts.push(\"- \"+entity)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            if (domainSlots.length > 0) {\n                domainContentParts.push(\"slots:\")\n                domainSlots.map(function(slot,i) {\n                    domainContentParts.push(\"  \"+slot+\":\")\n                    domainContentParts.push(\"    type: \"+domainSlotsMeta[slot].type)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            // append session config\n            if (skill.rasaSession) skill.rasaSession.trim().split(\"\\n\").map(function(line) {\n                domainContentParts.push(line)\n            })\n            \n            // UTTERANCES\n            var utterances = {}\n            if (skill.utterancesLists || skill.utterances) { \n                utterancesStorage.getItem('alldata').then(function(allUtterances) {\n                    if (Array.isArray(allUtterances)) {\n                        allUtterances.map(function(thisUtterance) {\n                            if (skill.utterances) { \n                                skill.utterances.map(function(listKey) {\n                                    if (thisUtterance.value === listKey) utterances[thisUtterance.value] = thisUtterance  \n                                    return null\n                                })\n                            }\n                            if (skill.utterancesLists) { \n                                skill.utterancesLists.map(function(listKey) {\n                                    if (thisUtterance.tags && thisUtterance.tags.indexOf(listKey) !== -1) utterances[thisUtterance.value] = thisUtterance  \n                                    return null\n                                })\n                                \n                            }\n                            return null\n                        })\n                        \n                         //fileLookups.push({name:toSnakeCase(utterance.value)+'.txt',content:''})\n                             \n                        \n                         // generate domainContent\n                         if (Object.keys(utterances).length > 0) {\n                             domainContentParts.push('responses:')\n                             Object.keys(utterances).map(function(utteranceKey) {\n                                    var utterance = utterances[utteranceKey]\n                                    domainContentParts.push('utter_'+toSnakeCase(utterance.value))\n                                    domainContentParts.push('- text: '+utterance.value)\n                                    if (utterance.synonyms && utterance.synonyms.length > 0) {\n                                        utterance.synonyms.map(function(synonym) {\n                                            domainContentParts.push('- text: '+synonym)\n                                            return null\n                                        })\n                                    } \n                                    return null\n                             })\n                         }\n                         resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n                    } else {\n                        resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n                    }\n                })\n               \n                \n            } else {\n                resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n            }\n        })\n        \n    })\n}\n\n\nfunction exportRASAMDZip(skill) {\n    return new Promise(function(resolve,reject) {\n        exportRASAMD(skill).then(function(data) {\n            createZip(data).then(function(res) {\n                resolve(res)\n            })\n        })\n    })\n}\n\nexport {exportRASAMD, exportRASAMDZip}\n","import { replaceEntitiesWithValues, uniquifyArray, snakeToCamelCase, camelToSnakeCase, toSnakeCase} from '../utils';\nimport {createZip} from './createZip'\nimport localforage from 'localforage'\nimport RASATemplates from './RASATemplates'\n\n function generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContent, credentialsContent, endpointsContent, actionFiles, storyContent) {\n    var folderTree = {\n        files:[\n            {name:'actions.py',content:actionsContent},\n            {name:'config.yml',content:configContent},\n            {name:'domain.yml',content:domainContent},\n            {name:'credentials.yml',content:credentialsContent},\n            {name:'endpoints.yml',content:endpointsContent}\n        ], \n        folders:[\n            {name:'actions', files:actionFiles}, \n            {name:'data', \n                files:[{name:'nlu.json', content: nluContent}, {name:'stories.md', content: storyContent ? storyContent : ''}], \n                folders:[{name:'lookups', files:fileLookups}]\n            }\n        ]\n    }\n    console.log(['TREE GEN',folderTree])\n    return folderTree\n}\n\n// just the models subfolder\n// one file per intent\n// one file per entity\nfunction exportRASAJSON(skill) {\n //\"rasa_nlu_data\": {\n        //\"common_examples\": [],\n        //\"regex_features\" : [],\n        //\"lookup_tables\"  : [],\n        //\"entity_synonyms\": []\n    //}\n    //{\"rasa_nlu_data\":{\"regex_features\":[],\"entity_synonyms\":[{\"synonyms\":[\"biggest city\",\"capital city\"],\"value\":\"capital\"}],\"common_examples\":[{\"text\":\"sounds good sounds good thank you\",\"intent\":\"affirmative\",\"entities\":[]},\n      //{\"text\":\"what is the use of a actinometer\",\"intent\":\"ask_attribute\",\"entities\":[{\"end\":15,\"entity\":\"attribute\",\"start\":12,\"value\":\"use\"},{\"end\":32,\"entity\":\"thing\",\"start\":21,\"value\":\"actinometer\"}]}\n    console.log(['EXPPORT RASA',skill])\n    return new Promise(function(resolve,reject) {\n         var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         var utterancesStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"utterances\",\n         });\n        \n        //resolve({files:[{name:'nlu.md', content: content}]})\n         \n         // LOAD ENTITY LISTS\n         listsStorage.getItem('alldata').then(function(lists) {\n            \n            console.log(['LISTS',lists])\n            \n            // for each entity, collate entity values and lists values\n            var entityLists = {}\n            if (skill.entities) {\n                Object.keys(skill.entities).map(function(entity,i) {\n                    const entityValue = skill.entities[entity]\n                    // values from examples\n                    if (entityValue && entityValue.values) {\n                        entityLists[entity] = entityValue.values\n                    } \n                    // values from tags\n                    if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        lists.map(function(listItem,listItemIndex) {\n                            skill.entities[entity].lists.map(function(entityList) {\n                               if (listItem.tags && listItem.tags.indexOf(entityList) !== -1) {\n                                   entityLists[entity].push(listItem.value)\n                               }\n                               return null\n                            })\n                            return null\n                        })\n                    }\n                    return null\n                })\n            }\n             console.log(['LISTS2',entityLists])\n             // lookup lists\n             var fileLookups=[]\n             var lookups = []\n             Object.keys(entityLists).map(function(entity) {\n                 var values = entityLists[entity]\n                 fileLookups.push({name:entity+\".txt\",content:values.join(\"\\n\")})\n                 lookups.push('## lookup:'+entity)\n                 lookups.push(\"data/lookups/\"+entity+\".txt\")\n                 return null\n             })\n             \n            \n            // collate synonyms\n            //var synonyms = {}\n            var synonymsIndex = {}\n            if (lists) lists.map(function(item) {\n                 if (item.value && item.value.trim().length > 0) {\n                    if (item.synonym) {\n                        if (!Array.isArray(synonymsIndex[item.synonym])) synonymsIndex[item.synonym] = [] \n                        //synonyms[item.value] = item.synonym\n                        synonymsIndex[item.synonym].push(item.value)\n                    }\n                }\n                return null\n            })\n            console.log(['synonyms',synonymsIndex])\n            //var synonymsOut = []\n            //Object.keys(synonymsIndex).map(function(synonym) {\n                //synonymsOut.push('## synonym:'+synonym)\n                //uniquifyArray(synonymsIndex[synonym]).sort().map(function(item) {\n                    //// TODO CONVERT TO RASA MD EXAMPLE WITH ENTITIES\n                    //synonymsOut.push('- '+item)\n                    //return null\n                //}) \n                //synonymsOut.push(\"\\n\")\n                //return null\n            //})\n            //console.log(['synonyms OUT',synonymsOut])\n            \n            // COMMON EXAMPLES  \n            var nluOut={}\n            if (skill.intents) {\n                console.log(['have intents',skill.intents])\n                Object.keys(skill.intents).map(function(intentKey) {\n                    const intentItem = skill.intents[intentKey]\n                    console.log('have intent ',intentKey,intentItem)\n                    //nluOut.push('## intent:'+intentKey)\n                    var examples = []\n                    intentItem.map(function(example) {\n                        // TODO CONVERT TO RASA MD EXAMPLE WITH ENTITIES\n                        if (example && example.example && example.example.trim().length > 0) {\n                            console.log(['INTY',example])\n                            var key = replaceEntitiesWithValues(example.example, example.entities)\n                            nluOut[key] = {\n                                \"text\":key,\n                                \"intent\":intentKey,\n                                \"entities\":example.entities ? example.entities.map(function(entity) {\n                                    return {\"end\":entity.end,\"entity\":entity.type,\"start\":entity.start,\"value\":entity.value}\n                                }) : []\n                            }\n                        }\n                        //'- '+replaceEntitiesWithValues(example.example, example.entities))\n                        return null\n                    }) \n                    //nluOut=[...nluOut, ...uniquifyArray(examples)]\n                    //nluOut.push(\"\\n\")\n                    return null\n                })\n            }\n            var nluContent=JSON.stringify({\n                \"rasa_nlu_data\":{\n                    \"regex_features\":[],\n                    \"entity_synonyms\":Object.keys(synonymsIndex).map(function(synonym) {\n                       //var synValues =synonymsIndex[synonym]  \n                       return {synonyms:synonymsIndex[synonym]  , value:synonym}\n                    }),\n                    \"common_examples\":Object.values(nluOut)\n                }\n            })\n            \n           \n            //var nluContent = nluOut.join(\"\\n\")+\"\\n\"+synonymsOut.join(\"\\n\")+lookups.join(\"\\n\")\n            \n            \n            console.log(nluContent)\n            // CONSTANTS\n            var configContent = skill.rasaConfig ? skill.rasaConfig : RASATemplates.config\n            //var domainContent = ''\n            var credentialsContent = skill.rasaCredentials ? skill.rasaCredentials : RASATemplates.credentials\n            var endpointsContent = skill.rasaEndpoint ? skill.rasaEndpoint : RASATemplates.endpoint\n            \n            // RASA ACTIONS\n            var actionsContent = RASATemplates.actions\n            var domainActions = []\n            \n            var actionFiles = []\n            if (Array.isArray(skill.rasaActions)) {\n                skill.rasaActions.map(function(action) {\n                    if (action && action.trim().length > 0) {\n                        var string = snakeToCamelCase(toSnakeCase(camelToSnakeCase(action)))\n                        var snake = camelToSnakeCase(string)+'_action'\n                        domainActions.push(snake)\n                        var name = string && string.trim().length > 0 ? string[0].toUpperCase() + string.substring(1) : ''\n                        actionFiles.push({name:name+'Action.py', content:RASATemplates.single_action(name+'Action',snake)})\n                        actionsContent+=\"\\n import \"+name+'Action.py'\n                    }\n                    return null\n                })\n            }\n            var domainEntities = skill.entities ? Object.keys(skill.entities) : []\n            var domainIntents = skill.intents ? Object.keys(skill.intents) : []\n            var domainSlots = skill.slots ?  Object.keys(skill.slots) : (skill.entities ? Object.keys(skill.entities) : [])\n            var domainSlotsMeta = {}\n            domainSlots.map(function(slot) {\n               domainSlotsMeta[slot] = {\n                   type: skill.slots && skill.slots[slot] &&  skill.slots[slot].slotType ? skill.slots[slot].slotType : 'unfeaturized'\n                }\n               return null\n            })\n            console.log(['DOMAIN',domainEntities, domainIntents, domainSlots, domainSlotsMeta])\n            \n            var domainContentParts=[]\n            if (domainIntents.length > 0) {\n                domainContentParts.push(\"intents:\")\n                domainIntents.map(function(intent) {\n                    domainContentParts.push(\"- \"+intent)\n                    // TODO\n                    //+\":\" to intent line\n                    // domainContentParts.push(\"  use_entities:\\n\")\n                    // domainContentParts.push(\"  - \"+entityForIntent)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            \n            if (domainEntities.length > 0) {\n                domainContentParts.push(\"entities:\")\n                domainEntities.map(function(entity) {\n                    domainContentParts.push(\"- \"+entity)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            if (domainSlots.length > 0) {\n                domainContentParts.push(\"slots:\")\n                domainSlots.map(function(slot,i) {\n                    domainContentParts.push(\"  \"+slot+\":\")\n                    domainContentParts.push(\"    type: \"+domainSlotsMeta[slot].type)\n                    return null\n                })\n                domainContentParts.push(\"\\n\")\n            }\n            // append session config\n            if (skill.rasaSession) skill.rasaSession.trim().split(\"\\n\").map(function(line) {\n                domainContentParts.push(line)\n            })\n            \n            // UTTERANCES\n            var utterances = {}\n            if (skill.utterancesLists || skill.utterances) { \n                utterancesStorage.getItem('alldata').then(function(allUtterances) {\n                    if (Array.isArray(allUtterances)) {\n                        allUtterances.map(function(thisUtterance) {\n                            if (skill.utterances) { \n                                skill.utterances.map(function(listKey) {\n                                    if (thisUtterance.value === listKey) utterances[thisUtterance.value] = thisUtterance  \n                                    return null\n                                })\n                            }\n                            if (skill.utterancesLists) { \n                                skill.utterancesLists.map(function(listKey) {\n                                    if (thisUtterance.tags && thisUtterance.tags.indexOf(listKey) !== -1) utterances[thisUtterance.value] = thisUtterance  \n                                    return null\n                                })\n                                \n                            }\n                            return null\n                        })\n                        \n                         //fileLookups.push({name:toSnakeCase(utterance.value)+'.txt',content:''})\n                             \n                        \n                         // generate domainContent\n                         if (Object.keys(utterances).length > 0) {\n                             domainContentParts.push('responses:')\n                             Object.keys(utterances).map(function(utteranceKey) {\n                                    var utterance = utterances[utteranceKey]\n                                    domainContentParts.push('utter_'+toSnakeCase(utterance.value))\n                                    domainContentParts.push('- text: '+utterance.value)\n                                    if (utterance.synonyms && utterance.synonyms.length > 0) {\n                                        utterance.synonyms.map(function(synonym) {\n                                            domainContentParts.push('- text: '+synonym)\n                                            return null\n                                        })\n                                    } \n                                    return null\n                             })\n                         }\n                         resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n                    } else {\n                        resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n                    }\n                })\n               \n                \n            } else {\n                resolve(generateFolderTree(nluContent, fileLookups, actionsContent, configContent, domainContentParts.join(\"\\n\"), credentialsContent, endpointsContent, actionFiles, skill.rasaStories) )\n            }\n        })\n        \n    })\n}\n\n\nfunction exportRASAJSONZip(skill) {\n    return new Promise(function(resolve,reject) {\n        exportRASAJSON(skill).then(function(data) {\n            createZip(data).then(function(res) {\n                resolve(res)\n            })\n        })\n    })\n}\n\nexport {exportRASAJSON, exportRASAJSONZip}\n","import {exportJOVOZip} from './exportJOVO'\nimport {exportJSONZip} from './exportJSON'\nimport {exportMycroftZip} from './exportMycroft'\n//import {exportRASAZip} from './exportRASA'\nimport {exportRASAMDZip} from './exportRASAMD'\nimport {exportRASAJSONZip} from './exportRASAJSON'\n\nvar exportFormats = [\n        {name:'JSON',exportFunction:exportJSONZip},\n        {name:'JOVO',exportFunction:exportJOVOZip},\n        {name:'Mycroft',exportFunction:exportMycroftZip},\n        //{name:'RASA',exportFunction:exportRASAZip},\n        {name:'RASA Markdown',exportFunction:exportRASAMDZip},\n        {name:'RASA JSON',exportFunction:exportRASAJSONZip}\n    ]\n\nexport default exportFormats\n\n","import localforage from 'localforage'\n\nfunction exportJSON(skill) {\n    console.log(['EXPPORT JSON',skill])\n    return new Promise(function(resolve,reject) {\n         var listsStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"lists\",\n         });\n         var utterancesStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"utterances\",\n         });\n         listsStorage.getItem('alldata').then(function(lists) {\n             console.log(['LISTS',lists])\n            var usedLists = {}\n            if (skill.entities) {\n                Object.keys(skill.entities).map(function(entity,i) {\n                    if (skill.entities[entity] && Array.isArray(skill.entities[entity].lists)) {\n                        skill.entities[entity].lists.map(function(list) {\n                           usedLists[list] = true  \n                           return null\n                        })\n                    }\n                    return null\n                })\n            }\n            var skillLists = {}\n            Object.keys(usedLists).map(function(listKey) {\n              skillLists[listKey] = []  \n              return null\n            })\n            lists.map(function(item) {\n                Object.keys(usedLists).map(function(listKey) {\n                    //console.log([listKey,item.tags.indexOf(listKey) !== -1, item.tags])\n                    if (item && item.tags && item.tags.indexOf(listKey) !== -1) {\n                        //console.log('list item used ')\n                        skillLists[listKey].push(item.value)\n                    }\n                    return null\n                })\n                return null\n            })\n            skill.lists = skillLists\n            \n            var utterances = {}\n            \n            console.log(['SHOULD ADD UTTS',skill.utterancesLists, skill.utterances])\n            if (skill.utterancesLists || skill.utterances) { \n                utterancesStorage.getItem('alldata').then(function(allUtterances) {\n                    if (Array.isArray(allUtterances)) {\n                        allUtterances.map(function(thisUtterance) {\n                            if (skill.utterances) { \n                                skill.utterances.map(function(listKey) {\n                                    if (thisUtterance.value === listKey) utterances[thisUtterance.value] = thisUtterance  \n                                    return null\n                                })\n                                \n                            }\n                            if (skill.utterancesLists) { \n                                skill.utterancesLists.map(function(listKey) {\n                                    if (thisUtterance.tags && thisUtterance.tags.indexOf(listKey) !== -1) utterances[thisUtterance.value] = thisUtterance  \n                                    return null\n                                })\n                                \n                            }\n                            return null \n                        })\n                         console.log(['SET UITTER GLOLBA',utterances])\n                         skill.utteranceLookups = utterances\n                         resolve(skill)\n                    } else {\n                         resolve(skill)\n                    }\n                })\n               \n                \n            } else {\n                 resolve(skill)\n            }\n            console.log(['resolve JSON',skill])\n           \n        })\n        \n    })\n}\n\nfunction exportJSONZip(skill) {\n    return new Promise(function(resolve,reject) {\n        exportJSON(skill).then(function(content) {\n            console.log(['content',skill])\n            const blob = new Blob([JSON.stringify(content, null, 2)], {type : 'application/json'});\n            resolve(blob)\n        })\n    })\n    //return createZip({files:[{name:'skill.json', content: await exportJSON(skill)}]})\n}\n\nexport {exportJSON, exportJSONZip}\n","import React, {useState} from 'react';\nimport {Button, Dropdown, ButtonGroup, InputGroup} from 'react-bootstrap'\n\nconst DropDownComponent = function(props) {\n    \n    var [filterValue, setFilterValue] = useState(props.value ? props.value : '')\n    \n    return <Dropdown  as={ButtonGroup}>\n          <Dropdown.Toggle split  size=\"sm\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button   size=\"sm\" >{props.value ? props.title + \" - \" + props.value : props.title} </Button>\n          <Dropdown.Menu>\n               <form  style={{display:'inline'}} onSubmit={function(e) {e.preventDefault() ; }} >\n                <InputGroup>\n                  <input type=\"text\" className=\"form-control\" onChange={function(e) {setFilterValue(e.target.value)}}\n                value={filterValue} />\n                </InputGroup>\n                \n              </form>\n              {Array.isArray(props.options) && props.options.map(function(optionKey,i) {\n                  //console.log([optionKey, filterValue])\n                   //if (filterValue.trim().length == 0 || optionKey.toLowerCase().indexOf(filterValue.toLowerCase()) !== -1) {\n                       return <Dropdown.Item style={{minHeight:'1.4em'}} key={i} value={optionKey} onClick={function(e) {setFilterValue(optionKey); props.selectItem(optionKey)}}  >\n                            {optionKey ? optionKey : <b>None</b>}\n                        </Dropdown.Item>\n                    //} else return null;\n              })}\n          </Dropdown.Menu>\n      </Dropdown>\n\n}\nexport default DropDownComponent\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom'\nimport {Button, Dropdown, Badge,ButtonGroup, ListGroup , Tabs, Tab} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport useNluEditor from './useNluEditor'\nimport exportFormats from './export/index'\n//import {exportJSON} from './export/exportJSON'\nimport useDB from './useDB'\nimport {generateObjectId, uniquifyArray, RASA, GoogleAssistant, Alexa} from './utils'\nimport ReactTags from 'react-tag-autocomplete'\nimport SuggestionComponent from './components/SuggestionComponent'\nimport DropDownComponent from './components/DropDownComponent'\nimport RASATemplates from './export/RASATemplates'\n//import ExportPage from './ExportPage'\nimport { saveAs } from 'file-saver';\n\n\nimport localforage from 'localforage'\n//const RenderRow = function(props) {\n    //const index = props.index\n    //const style = props.style\n    //const item = props.data.items[index]\n    //return <NluSkillsRow  \n         //item={item}  splitNumber={index} style={style}\n         //saveItem={props.data.saveItem} deleteItem={props.data.deleteItem} saveNlu={props.data.saveNlu}\n         //lookups={props.data.lookups}  setPageMessage={props.setPageMessage} />\n//}\n\n\nexport default  function NluSkillsEditor(props) {\n    const {loadAll, skillFilterValue, setSkillFilterValue, filteredItems} = useNluEditor('nlutool','examples','alldata', props.updateFunctions.updateLookups)\n    const [currentIntent, setCurrentIntent] = useState('')\n    const [invocation, setInvocation] = useState('')\n    const [entitiesForSkill, setEntitiesForSkill] = useState({})\n    const [listsForEntity, setListsForEntity] = useState({})\n    const [currentSkill, setCurrentSkill] = useState({id:generateObjectId(), invocation:'', title:skillFilterValue, entities:{}})\n    //const skillsManager = useDB('nlutool','skills')\n    const listsManager = useDB('nlutool','lists')\n    //const [showExportDialog, setShowExportDialog] = useState(false)\n    const [collatedItems, setCollatedItems] = useState({})\n    const [collatedTags, setCollatedTags] = useState({})\n    const [collatedCounts, setCollatedCounts] = useState({})\n    const [newSlotValue, setNewSlotValue] = useState('')\n    var skillsStorage = localforage.createInstance({\n       name: \"nlutool\",\n       storeName   : \"skills\",\n     });\n    //const params = useParams()\n    //skillFilterValue = params.skillId;\n    //function setSkillFilterValueWrap(value) {\n        //setSkill\n        //props.history.push('/skills/'+value)\n    //}\n    //const {loadAll, saveItem, deleteItem , items, setItems, findKeyBy, filter} = \n    function loadSkill() {\n        return new Promise(function(resolve,reject) { \n            if (skillFilterValue) {\n                //localforage.setItem('key', 'value', function (err) {\n                  //// if err is non-null, we got an error\n                  skillsStorage.getItem(skillFilterValue, function (err, skill) {\n                    // if err is non-null, we got an error. otherwise, value is the value\n                    if (err) throw new Error(err)\n                    if (skill) {\n                        setCurrentSkill(skill)\n                        setInvocation(skill.invocation)\n                    }\n                    resolve(skill)\n                  });\n                //});\n            } \n        })\n    }\n    \n    // load all on init\n    useEffect(() => {\n        loadSkill().then(function() {\n        })\n        loadAll()\n        listsManager.loadAll()\n        props.updateFunctions.updateUtterances()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n    \n    // load skill on change skillFilterValue\n    useEffect(() => {\n        loadSkill()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[skillFilterValue])\n \n    // load list lookups\n    useEffect(() => {\n        if (listsManager.items.length > 0) { \n            //console.log(['UPD ITEMS',listsManager.items,listsManager.items[0]])\n            props.updateFunctions.updateLists(listsManager.items[0])\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[listsManager.items])\n    \n    // collate entitiesForSkills from filtered example \n    useEffect(() => {\n        var entities = {}\n        // collate entities from filteredItems\n        if (Array.isArray(filteredItems)) {\n            filteredItems.map(function (item,itemKey) {\n              if (Array.isArray(item.entities)) {\n                  item.entities.map(function(entity,entityKey) {\n                     if (entity && entity.type && entity.type.length > 0) {\n                         if (typeof entities[entity.type] !== \"object\") entities[entity.type] = {} //\n                         //currentSkill.entities && currentSkill.entities[entity.type] ?  currentSkill.entities[entity.type] : {}\n                         if (!Array.isArray(entities[entity.type].values )) entities[entity.type].values = []\n                         if (currentSkill && currentSkill.entities && currentSkill.entities[entity.type]&& currentSkill.entities[entity.type].alexaType) entities[entity.type].alexaType = currentSkill.entities[entity.type].alexaType\n                         if (currentSkill && currentSkill.entities && currentSkill.entities[entity.type]&& currentSkill.entities[entity.type].googleType) entities[entity.type].googleType = currentSkill.entities[entity.type].googleType\n                         if (currentSkill && currentSkill.entities && currentSkill.entities[entity.type]&& currentSkill.entities[entity.type].lists) entities[entity.type].lists = currentSkill.entities[entity.type].lists\n                         entities[entity.type].values.push(entity.value)\n                     }\n                     return null\n                  })\n              }\n              return null\n            })\n        }\n        // sort and uniquify\n        var slots = currentSkill.slots ? currentSkill.slots : {}\n        Object.keys(entities).map(function(entityName,entityKey) {\n           const entity = entities[entityName]\n           entity.values = uniquifyArray(entity.values).sort()\n           \n           if (slots[entityName]) {\n           } else {\n               slots[entityName] = {values:[]}\n           }\n           return null\n        })\n        setEntitiesForSkill(entities)\n        var updatedSkill = currentSkill\n        updatedSkill.entities = entities\n        updatedSkill.slots = slots\n        \n        setCurrentSkill(entities)\n        // collate intents and tags from items\n         var newCollatedItems = collatedItems\n         var newCollatedCounts = collatedCounts\n         var newCollatedTags = {}\n         if (filteredItems) {\n             filteredItems.map(function(item) {\n                if (item.intent) {\n                    if (!newCollatedItems[item.intent]) newCollatedItems[item.intent]=[]\n                    newCollatedCounts[item.intent] =   (newCollatedCounts[item.intent] > 0) ? newCollatedCounts[item.intent] + 1 : 1;\n                    //if (collatedItems[item.intent].length < 300) {\n                        newCollatedItems[item.intent].push({example: item.example, entities: item.entities})\n                    //}\n                    \n                }\n                if (Array.isArray(item.tags)) {\n                    item.tags.map(function(tag) {\n                        newCollatedTags[tag] = true\n                        return null\n                    })\n                } \n               return null;  \n             })\n             setCollatedItems(newCollatedItems)\n             setCollatedCounts(newCollatedCounts)\n             setCollatedTags(newCollatedTags)\n             var newSkill = currentSkill;\n             if (!newSkill.intents) {\n                console.log(['UPDATE INTENTS WITH COLLATED ITEMS',collatedItems])\n                 newSkill.intents = collatedItems\n            }\n             newSkill.tags = Object.keys(collatedTags)\n             setCurrentSkill(newSkill)\n         }   \n    // eslint-disable-next-line react-hooks/exhaustive-deps   \n    },[filteredItems])\n    \n    useEffect(() => {\n        \n        //console.log(['UDPATE SKILL WITH INTENTS',JSON.parse(JSON.stringify(newSkill))])  \n    },[collatedItems,collatedTags])\n    \n     // load invocation into skill\n    useEffect(() => {\n        if (currentSkill) {\n          //console.log(['SET INVOCK HAVE CURRENT SKILL',currentSkill,invocation])\n          var skill = currentSkill\n          skill.invocation = invocation\n          setCurrentSkill(skill)\n          //skillsManager.saveItem(currentSkill,null)\n      }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[invocation])\n    \n    useEffect(() => {\n        //console.log('change cs or inv',currentSkill)\n        var skill = currentSkill\n        if (skill && skill.title && skill.title.length > 0) {\n            console.log('change cs or inv real')\n            \n            //var index = skillsManager.findKeyBy('id',newCurrentSkill.id)\n            //if (index != null) {\n            // merge in entity values\n            if (entitiesForSkill) {\n                Object.keys(entitiesForSkill).map(function(entity) {\n                   if (skill.entities && skill.entities[entity]) {\n                       skill.entities[entity].values = entitiesForSkill[entity].values;\n                   }  \n                   return null\n                })\n            }\n            // merge in intents\n            skill.invocation = invocation;\n            skill.intents = collatedItems\n            console.log(['save skill ',skillFilterValue,currentSkill])\n            skillsStorage.setItem(skillFilterValue, currentSkill, function (err) {\n                console.log(['saved skill '])\n                if (err)  {\n                    console.log(err)\n                    throw new Error(err)\n                }\n            })\n              //// if err is non-null, we got an error\n            \n            //skillsManager.saveItem(newCurrentSkill,index)\n            //}\n            //\n            //currentSkill.entities = entitiesForSkill\n            //newCurrentSkill.invocation = invocation;\n            //newCurrentSkill.title = skillFilterValue;\n            //console.log(['save now ',index,newCurrentSkill])\n            //setCurrentSkill(newCurrentSkill)\n            \n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[currentSkill,listsForEntity, invocation])\n    \n  \n  \n  //function setInvocation(val) {\n      //console.log('SET INVOCK')\n      ////if (currentSkill) {\n          ////console.log(['SET INVOCK HAVE CURRENT SKILL',currentSkill,val])\n          ////var skill = currentSkill\n          ////skill.invocation = val \n          ////setCurrentSkill(skill)\n      ////}\n  //}\n\n    function forceReload() {\n        setListsForEntity(JSON.stringify([currentSkill.rasaSession, currentSkill.rasaEndpoint,currentSkill.rasaCredentials,currentSkill.rasaStories,currentSkill.rasaConfig,currentSkill.rasaActions,currentSkill.rasaExtraSlots,currentSkill.entities,currentSkill.utterances,currentSkill.utterancesLists, currentSkill.slots]))  \n    }\n\n    function addListToSkillEntity(entity,list) {\n      //console.log(['ADSKOI',currentSkill,currentSkill.entities,entity,list])\n      if (entity && list && list.name) {\n            var skill = currentSkill;\n            if (!skill.entities) skill.entities={}\n            if (!skill.entities[entity]) skill.entities[entity] = {lists:[]}\n            if (!Array.isArray(skill.entities[entity].lists)) skill.entities[entity].lists = []\n            //var newListsForEntity = listsForEntity\n            //console.log(['ADSKOI1.5',skill])\n            skill.entities[entity].lists.push(list.name)\n            skill.entities[entity].lists = uniquifyArray(skill.entities[entity].lists).sort()\n           //newListsForEntity[entity] = uniquifyArray(newListsForEntity).sort()\n            setCurrentSkill(skill)  \n            // force render\n            forceReload()  \n            //} else {\n                //console.log(['ADSKOI new'])\n               //newListsForEntity[entity] = [list.name]\n            //}\n             //console.log(['ADSKOI2 final',newListsForEntity])\n            //setListsForEntity(newListsForEntity)\n       } else {\n           console.log([' missing data'])\n       }\n    }\n  \n    function removeListFromSkillEntity(entity, listIndex) {\n      var skill = currentSkill\n      //console.log(['REMOVESKILLFROMLIST',entity,listIndex])\n      if (skill && skill.entities && entity && skill.entities[entity] && skill.entities[entity].lists) {\n          var lists = skill.entities[entity].lists\n          //lists = uniquifyArray([lists.slice(0, listIndex),lists.slice(listIndex + 1)]).sort()\n          lists = lists.slice(0, listIndex).concat(lists.slice(listIndex + 1))\n          \n          skill.entities[entity].lists = lists\n          setCurrentSkill(skill)  \n          forceReload()  \n          //console.log(['REMOVESKILLFROMLIST ddd',lists])\n      } \n       //var newEntitiesForSkill = entitiesForSkill\n       //if (newEntitiesForSkill[entity]) {\n           //var lists = newEntitiesForSkill[entity].lists && Array.isArray(newEntitiesForSkill[entity].lists) ? newEntitiesForSkill[entity].lists : [];\n           //newEntitiesForSkill[entity].lists = uniquifyArray([lists.slice(0, listIndex),lists.slice(listIndex + 1)]).sort()\n           //setEntitiesForSkill(newEntitiesForSkill)\n       //}\n    }\n  \n    function setGoogleAssistantEntityType(entity, type) {\n        if (currentSkill && entity) {\n            var skill = currentSkill;\n            if (!skill.entities) skill.entities={}\n            if (!skill.entities[entity]) skill.entities[entity] = {}\n            skill.entities[entity].googleType = type\n            setCurrentSkill(skill)  \n           forceReload()  \n       } \n    }\n    \n    function setAlexaEntityType(entity, type) {\n        if (currentSkill && entity) {\n            var skill = currentSkill;\n            if (!skill.entities) skill.entities={}\n            if (!skill.entities[entity]) skill.entities[entity] = {}\n            skill.entities[entity].alexaType = type\n            setCurrentSkill(skill)  \n            console.log('ALEXA')\n            console.log(skill)\n            forceReload()  \n       } \n    }\n    \n    function setRASASlotType(entity, type, slots) {\n        if (currentSkill && entity && type) {\n            var skill = currentSkill;\n            slots[entity].slotType = type\n            skill.slots = slots\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()  \n       } \n    }\n       \n    function setRASASlotAutofill(entity, type, slots) {\n        \n            \n        if (currentSkill && entity && type) {\n            var skill = currentSkill;\n            slots[entity].slotAutofill = type\n            skill.slots = slots\n            console.log(['RASA autofill',currentSkill ,entity,type, slots])\n            setCurrentSkill(skill)  \n            console.log(skill)\n            forceReload()  \n       } \n    }\n    \n    function newSlot(name,slots) {\n        if (name && name.trim().length > 0) {\n            if (!slots) slots = {}\n            slots[name] = {}\n            var skill = currentSkill;\n            skill.slots = slots\n            setCurrentSkill(skill)  \n            setNewSlotValue('')\n            console.log('new slot')\n            console.log(skill)\n            forceReload()  \n        }\n    }\n    \n    function deleteSlot(slot, slots) {\n        if (currentSkill && slot && slots ) {\n            var skill = currentSkill;\n            delete slots[slot]\n            skill.slots = slots\n            setCurrentSkill(skill)  \n            console.log('del slot')\n            console.log(skill)\n            forceReload()  \n        }\n    }\n\n    function setRASAActions(data) {\n          if (currentSkill && data) {\n            var skill = currentSkill;\n            skill.rasaActions = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }\n    \n    function setRASAConfig(data) {\n          if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasaConfig = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }\n    \n    function setRASAStories(data) {\n          if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasaStories = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }\n    function setRASAEndpoint(data) {\n          if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasaEndpoint = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }\n    function setRASACredentials(data) {\n          if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasaCredentials = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }  \n    \n    function setRASASession(data) {\n       if (currentSkill) {\n            var skill = currentSkill;\n            skill.rasaSession = data\n            setCurrentSkill(skill)  \n            forceReload()  \n       }\n    }  \n        \n    function addUtterance(utterance) {\n       \n        if (currentSkill && utterance) {\n            var skill = currentSkill;\n            if (!Array.isArray(skill.utterances)) skill.utterances=[]\n            skill.utterances.push(utterance.name)\n            skill.utterances = uniquifyArray(skill.utterances)\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            // if this is a new utterance, add it to the main database\n            if (!props.lookups.utteranceListsLookups[utterance.name] && !props.lookups.utterancesLookups[utterance.name]) {\n                var utteranceStorage = localforage.createInstance({\n                   name: \"nlutool\",\n                   storeName   : \"utterances\",\n                 });\n                 utteranceStorage.getItem('alldata', function (err,utterances) {\n                     if (err) throw new Error(err)\n                     if (Array.isArray(utterances)) {\n                         utterances.unshift({id:generateObjectId(), value:utterance.name, synonyms:'', tags:[]})\n                         utteranceStorage.setItem('alldata',utterances)\n                     }\n                 })\n            }\n            forceReload()\n       } \n    }\n    \n    function removeUtterance(index) {\n        console.log(['RE UTTERANCE',index])\n        if (typeof index === \"number\" && currentSkill && currentSkill.utterances && currentSkill.utterances.length > index) {\n            var skill = currentSkill;\n            skill.utterances = [...skill.utterances.slice(0,index),...skill.utterances.slice(index+1)]\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()\n        }\n    }\n    function addUtteranceList(utterance) {\n          console.log(['ADD UTTERANCE LIST',utterance, currentSkill])\n          if (currentSkill && utterance) {\n            var skill = currentSkill;\n            if (!Array.isArray(skill.utterancesLists)) skill.utterancesLists=[]\n            skill.utterancesLists.push(utterance.name)\n            skill.utterancesLists = uniquifyArray(skill.utterancesLists)\n            setCurrentSkill(skill)  \n            console.log('add ut list')\n            console.log(skill.utterancesLists)\n            forceReload()\n       } \n    }\n     \n    function removeUtteranceList(index) {\n        if (typeof index === \"number\" && currentSkill && currentSkill.utterancesLists) {\n            var skill = currentSkill;\n            skill.utterancesLists = [...skill.utterancesLists.slice(0,index),...skill.utterancesLists.slice(index+1)]\n            setCurrentSkill(skill)  \n            console.log('RASA')\n            console.log(skill)\n            forceReload()\n        }\n    }    \n    \n    function renderEditor(props) {\n       \n        if (skillFilterValue && skillFilterValue.length > 0) {\n               \n                \n            if (filteredItems && filteredItems.length > 0) {\n               \n                   const utteranceTags = currentSkill && currentSkill.utterances ? currentSkill.utterances.map(function(listItem,listItemKey) {return {id:listItemKey, name:listItem} }) : []\n                const utteranceListTags = currentSkill && currentSkill.utterancesLists ? currentSkill.utterancesLists.map(function(listItem,listItemKey) {return {id:listItemKey, name:listItem} }) : []\n                const slots = currentSkill.slots ? currentSkill.slots : entitiesForSkill;\n                return <div>\n                     <div><h3>{skillFilterValue} </h3></div>\n                        <div>\n                       \n                        <label style={{fontWeight:'bold', marginLeft:'0.5em'}} > Invocation <input type='text' value={invocation} onChange={function(e) {setInvocation(e.target.value)}} /></label>\n                        </div>\n                        <div style={{marginTop:'0.7em', marginBottom:'0.7em'}} >\n                            <b style={{marginRight:'1em', marginLeft:'0.5em'}} >Tags</b>\n                            <span>{currentSkill.tags.join(\", \")}</span>\n                        </div>\n                        <div style={{marginTop:'0.7em', marginBottom:'0.7em', borderTop: '2px solid black'}} >\n                            <b style={{marginRight:'1em', marginLeft:'0.5em'}} >Intents</b>\n                            <span>{Object.keys(collatedItems).sort().map(function(collatedIntent, i) {\n                                    var useCurrentIntent = currentIntent ? currentIntent : Object.keys(collatedItems)[0]\n                                    var completionVariant = 'danger'\n                                    if (collatedItems[collatedIntent].length > 300) {\n                                        completionVariant = 'success'\n                                    } else if (collatedItems[collatedIntent].length > 100) {\n                                        completionVariant = 'primary'\n                                    } else if (collatedItems[collatedIntent].length > 10) {\n                                        completionVariant = 'warning'\n                                    } \n                                    \n                                    \n                                    if (collatedItems[collatedIntent].length  === collatedCounts[collatedIntent]) {\n                                            return <Link key={collatedIntent} to={\"/examples/skill/\"+skillFilterValue+\"/intent/\"+collatedIntent} ><Button key={collatedIntent} variant={collatedIntent === useCurrentIntent ? \"primary\" : \"outline-primary\"} onClick={function() {setCurrentIntent(collatedIntent)}}>\n                                                <Badge variant={completionVariant} > {collatedItems[collatedIntent].length} </Badge>\n                                                &nbsp;{collatedIntent}\n                                            </Button></Link>\n                                    } else {\n                                        return <Link key={collatedIntent} to={\"/examples/skill/\"+skillFilterValue+\"/intent/\"+collatedIntent} ><Button variant={collatedIntent === useCurrentIntent ? \"primary\" : \"outline-primary\"} onClick={function() {setCurrentIntent(collatedIntent)}}>\n                                                <Badge variant=\"danger\" > {collatedItems[collatedIntent].length}/{collatedCounts[collatedIntent]} </Badge>\n                                                &nbsp;{collatedIntent}\n                                            </Button></Link>\n                                    }\n                                    \n                            })}</span>\n                        </div>\n                        <div style={{marginTop:'0.7em', borderTop: '2px solid black'}} >\n                      <b style={{marginRight:'1em', marginLeft:'0.5em'}} >Entities</b><ListGroup>{Object.keys(entitiesForSkill).map(function(collatedEntity, i) {\n                                \n                               \n                                const listTags = currentSkill && currentSkill.entities && currentSkill.entities[collatedEntity] && currentSkill.entities[collatedEntity].lists ? currentSkill.entities[collatedEntity].lists.map(function(listItem,listItemKey) {return {id:listItemKey, name:listItem} }) : []\n                                //console.log(listTags)\n                                    return <ListGroup.Item key={collatedEntity} >\n                                            \n                                             <span style={{marginLeft:'1em', float:'left', fontWeight:'bold'}}>&nbsp;{collatedEntity}</span>\n                                          \n                                            <span style={{marginLeft:'1em', float:'left'}}>&nbsp;{entitiesForSkill[collatedEntity] && entitiesForSkill[collatedEntity].values && entitiesForSkill[collatedEntity].values.slice(0,5).join(\", \")}{entitiesForSkill[collatedEntity] && entitiesForSkill[collatedEntity].values && entitiesForSkill[collatedEntity].values.length > 5 ? <Badge>... {entitiesForSkill[collatedEntity] && entitiesForSkill[collatedEntity].values && entitiesForSkill[collatedEntity].values.length - 5} more </Badge> : ''}</span>\n                                            <span style={{marginLeft:'1em', float:'left'}}>\n                                           <label><i></i> <ReactTags\n                                            placeholderText=\"Also use values from \"\n                                            minQueryLength={0}\n                                            maxSuggestionsLength={50}\n                                            autoresize={true}\n                                            allowNew={false}\n                                            tags={listTags}\n                                            suggestionComponent={SuggestionComponent}\n                                            suggestions={props.lookups.listsLookups.map(function(tag,i) {return {id: i, name: tag}})}\n                                            onDelete={function(index) {removeListFromSkillEntity(collatedEntity, index)}}\n                                            onAddition={function(tag) {addListToSkillEntity(collatedEntity, tag)}} /> </label>\n                                            </span>\n                                            \n                                            <div style={{float:'right'}} >\n                                                <DropDownComponent options={[\"\",...Alexa.entityTypes]} title=\"Alexa\" value={currentSkill.entities && currentSkill.entities[collatedEntity] && currentSkill.entities[collatedEntity].alexaType ? currentSkill.entities[collatedEntity].alexaType : ''} selectItem={function(entityType) {\n                                                    setAlexaEntityType(collatedEntity,entityType)\n                                                }} />\n                                                &nbsp;&nbsp;<DropDownComponent options={[\"\",...GoogleAssistant.entityTypes]} title=\"Google\" value={currentSkill.entities && currentSkill.entities[collatedEntity] &&  currentSkill.entities[collatedEntity].googleType ? currentSkill.entities[collatedEntity].googleType : ''}  selectItem={function(entityType) {\n                                                    setGoogleAssistantEntityType(collatedEntity,entityType)\n                                                }} />\n                                            </div>\n                                        </ListGroup.Item>\n                                //}\n                                \n                        })}</ListGroup>\n                        </div>\n               \n                        <div style={{marginTop:'0.7em', marginLeft:'0.4em', borderTop: '2px solid black'}} >\n                            <div ><b>Utterances</b></div>\n                          <div style={{clear:'both'}}>\n                                 <div style={{marginLeft:'1em'}}>\n                                <label>Utterances\n                                <ReactTags\n                                placeholderText=\"Use utterance \"\n                                minQueryLength={0}\n                                maxSuggestionsLength={50}\n                                autoresize={true}\n                                allowNew={true}\n                                tags={utteranceTags}\n                                suggestionComponent={SuggestionComponent}\n                                suggestions={props.lookups.utterancesLookups ? props.lookups.utterancesLookups.map(function(tag,i) {return {id: i, name: tag}}):[]}\n                                onDelete={function(index) {removeUtterance(index)}}\n                                onAddition={function(tag) {addUtterance(tag)}} /> </label>\n                                </div>\n                                \n                                 <div style={{marginLeft:'1em'}}>\n                                <label>Utterance Lists\n                                <ReactTags\n                                placeholderText=\"Use utterances from \"\n                                minQueryLength={0}\n                                maxSuggestionsLength={50}\n                                autoresize={true}\n                                allowNew={false}\n                                tags={utteranceListTags}\n                                suggestionComponent={SuggestionComponent}\n                                suggestions={props.lookups.utteranceTagsLookups ? props.lookups.utteranceTagsLookups.map(function(tag,i) {return {id: i, name: tag}}) : []}\n                                onDelete={function(index) {removeUtteranceList(index)}}\n                                onAddition={function(tag) {addUtteranceList(tag)}} /> </label>\n                                </div>\n                                \n                                \n                            </div>\n                    </div>\n                   \n                      <div style={{marginTop:'0.7em', borderTop: '2px solid black'}} >\n                        <div><b>Platform</b></div>\n                        <Tabs defaultActiveKey=\"rasa\" id=\"platform-tabs\">\n                          <Tab eventKey=\"rasa\" title=\"RASA\">\n                                <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                                    <Tabs defaultActiveKey=\"slots\" id=\"platform-rasa\">\n                                        <Tab eventKey=\"slots\" title=\"Slots\">\n                                             <div style={{marginLeft:'1.4em', marginTop:'0.7em', borderTop: '2px solid black'}} >\n                                                 <form onSubmit={function(e) {e.preventDefault(); newSlot(newSlotValue,slots)}} ><input value={newSlotValue} onChange={function(e) {setNewSlotValue(e.target.value)}} /><Button size=\"sm\" onClick={function() {newSlot(newSlotValue,slots)}}>New Slot</Button>\n                                                 </form>\n                                                  <ListGroup>{Object.keys(slots).map(function(collatedEntity, i) { \n                                                        return <ListGroup.Item key={collatedEntity} >\n                                                                         <span style={{marginLeft:'1em', float:'left', fontWeight:'bold'}}>&nbsp;{collatedEntity}</span>\n                                                                        \n                                                                        <div style={{float:'right'}} >\n                                                                             {entitiesForSkill[collatedEntity] &&  <DropDownComponent options={RASA.autofillOptions} title=\"Autofill\" value={currentSkill.slots && currentSkill.entities[collatedEntity] && currentSkill.slots[collatedEntity].slotAutofill && currentSkill.slots[collatedEntity].slotAutofill.trim().length > 0 ? currentSkill.slots[collatedEntity].slotAutofill : 'Yes'} selectItem={function(entityType) {\n                                                                                setRASASlotAutofill(collatedEntity,entityType,slots)\n                                                                            }} />}\n                                                                            &nbsp;&nbsp;\n                                                                            <DropDownComponent options={Object.keys(RASA.slotTypes)} title=\"Slot\" value={currentSkill.slots && currentSkill.slots[collatedEntity] && currentSkill.slots[collatedEntity].slotType ? currentSkill.slots[collatedEntity].slotType : 'unfeaturized'} selectItem={function(entityType) {\n                                                                                setRASASlotType(collatedEntity,entityType,slots)\n                                                                            }} />\n                                                                            <Button variant=\"danger\"  size=\"sm\" style={{marginLeft:'0.5em', float:'right', fontWeight:'bold', borderRadius:'15px', marginTop:'0.2em'}} onClick={function(e) {deleteSlot(collatedEntity,slots)}}>X</Button>\n                                                                        </div>\n                                                                    </ListGroup.Item>\n                                                            //}\n                                                            \n                                                    })}</ListGroup>\n                                            </div>\n                                   \n                              \n                                     </Tab>\n                                      <Tab eventKey=\"actions\" title=\"Actions\">\n                                        <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                          <label>\n                                          \n                                            <div style={{fontStyle:'italic'}}>One per line, _action will be appended to each line</div>\n                                            <textarea style={{width:'40em', height:'10em'}}  value={Array.isArray(currentSkill.rasaActions) ? currentSkill.rasaActions.join(\"\\n\") : ''} onChange={function(e) {setRASAActions(e.target.value ? e.target.value.split(\"\\n\") : [])}} placeholder={`fred\n    findSname\n    is_whatsi\n    blah name`} ></textarea>\n                                          </label>\n                                    </div>\n                                      </Tab>\n                                       <Tab eventKey=\"config\" title=\"Config\">\n                                        <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                          <label>\n                                        \n                                            <textarea style={{width:'60em', height:'30em'}}  value={currentSkill.rasaConfig ? currentSkill.rasaConfig : ''} onChange={function(e) {setRASAConfig(e.target.value)}} placeholder={RASATemplates.config} ></textarea>\n                                          </label>\n                                    </div>\n                                      </Tab>\n                                     <Tab eventKey=\"stories\" title=\"Stories\">\n                                        <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                          <label>\n                                        \n                                            <textarea style={{width:'60em', height:'30em'}}  value={currentSkill.rasaStories ? currentSkill.rasaStories : ''} onChange={function(e) {setRASAStories(e.target.value)}} placeholder={RASATemplates.stories} ></textarea>\n                                          </label>\n                                    </div>\n                                      </Tab> \n                                     <Tab eventKey=\"credentials\" title=\"Credentials\">\n                                        <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                          <label>\n                                        \n                                            <textarea style={{width:'60em', height:'30em'}}  value={currentSkill.rasaCredentials ? currentSkill.rasaCredentials : RASATemplates.credentials} onChange={function(e) {setRASACredentials(e.target.value)}}  ></textarea>\n                                          </label>\n                                    </div>\n                                      </Tab> \n                                                            \n                                    <Tab eventKey=\"endpoints\" title=\"Endpoints\">\n                                        <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                          <label>\n                                        \n                                            <textarea style={{width:'60em', height:'30em'}}  value={currentSkill.rasaEndpoint ? currentSkill.rasaEndpoint : RASATemplates.endpoint} onChange={function(e) {setRASAEndpoint(e.target.value)}}  ></textarea>\n                                          </label>\n                                    </div>\n                                      </Tab> \n                                  \n                                   <Tab eventKey=\"session\" title=\"Session Config\">\n                                        <div style={{marginTop:'0.7em', marginLeft:'1.4em', borderTop: '2px solid black'}} >\n                                          <label>\n                                        \n                                            <textarea style={{width:'60em', height:'30em'}}  value={currentSkill.rasaSession ? currentSkill.rasaSession : RASATemplates.session} onChange={function(e) {setRASASession(e.target.value)}}  ></textarea>\n                                          </label>\n                                    </div>\n                                      </Tab> \n                                  \n                                </Tabs>\n                                      \n                              </div>  \n                          </Tab>\n                          \n                          <Tab eventKey=\"mycroft\" title=\"Mycroft\">\n                            <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                                <b>not yet</b>\n                            </div>\n                          </Tab>\n                           <Tab eventKey=\"jovo\" title=\"JOVO\">\n                            <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                                <b>not yet</b>\n                            </div>\n                          </Tab>\n                          <Tab eventKey=\"alex\" title=\"Alexa\">\n                            <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                                <b>not yet</b>\n                            </div>\n                          </Tab>\n                          <Tab eventKey=\"google_assistant\" title=\"Google Assistant\">\n                            <div style={{marginTop:'0.7em', marginLeft:'1.4em'}} >\n                                <b>not yet</b>\n                            </div>\n                          </Tab>\n                        </Tabs>\n                     </div>\n                     \n                </div>\n            }\n            \n        } else {\n            const skillsList = props.lookups.skillLookups ? props.lookups.skillLookups.map(function(skill,i) {return <Button key={i}  onClick={function(e) {setSkillFilterValue(skill)}}  style={{marginLeft:'1em'}} >{skill}</Button>} )   : []\n            return <div>\n                <h1>Skills</h1>\n                {skillsList.length > 0 && skillsList}\n                {skillsList.length <= 0 && <div>\n                    You dont have any skills yet. Import some <Link to='/sources'><Button>Sources</Button></Link> \n                </div>}\n            </div>\n        }\n    }\n    \n    \n     var skillOptions = props.lookups.skillLookups && props.lookups.skillLookups.sort().map(function(skillKey,i) {\n          return <Dropdown.Item key={i} value={skillKey} onClick={function(e) {setSkillFilterValue(skillKey)}}  >{skillKey}</Dropdown.Item>\n       })\n       skillOptions.unshift(<Dropdown.Item key={'empty_key_value_empty'} value={''} onClick={function(e) {setSkillFilterValue('')}}  >&nbsp;</Dropdown.Item>)\n   \n        //<Button style={{float:'right',marginLeft:'0.5em'}}  variant=\"success\" onClick={function() {setShowExportDialog(true)}} >Publish</Button>\n         \n    return <div>\n         {skillFilterValue && skillFilterValue.length > 0 && <Dropdown style={{float:'right',marginLeft:'0.5em'}}  as={ButtonGroup}>\n          <Dropdown.Toggle split variant=\"success\"  id=\"dropdown-split-basic\" ></Dropdown.Toggle>\n          <Button  variant=\"success\">Export</Button>\n          <Dropdown.Menu variant=\"success\" >\n              {exportFormats.map(function(exportFormat,i) {\n                  var title = 'opennludata_'+exportFormat.name+'_'+Date.now()\n                return <Dropdown.Item variant=\"success\" key={i} value={exportFormat.name} \n                onClick={function(e) {\n                    var skill = currentSkill\n                    //skill.intents = \n                    //skill.entities = \n                    exportFormat.exportFunction(currentSkill).then(function(zipBody) {\n                        console.log(['TRIGGER DL',title,zipBody])\n                        if (exportFormat.name==='JSON') {\n                            saveAs(zipBody, title+'.json')\n                        } else {\n                            saveAs(zipBody, title+'.zip')\n                        }\n                })}}  >{exportFormat.name}</Dropdown.Item>\n           })}\n          </Dropdown.Menu>\n        </Dropdown>}\n         {renderEditor(props)}\n    </div>\n            \n}\n      \n","import React from 'react';\n//import {CopyToClipboard} from 'react-copy-to-clipboard';\nimport {Button} from 'react-bootstrap'\n//import { Link  } from 'react-router-dom'\n\nfunction SearchPage(props) {\n    //const [copied, setCopied] = useState(false)\n    \n    \n    return <div>\n    <h3>Search</h3>\n    <a target=\"_new\" href=\"https://github.com/syntithenai/opennludata/wiki\" ><Button>Search the WIKI</Button></a>\n    \n    \n    </div>\n    \n    \n}\n\nexport default SearchPage\n","import React from 'react';\nimport {useState} from 'react';\nimport {BrowserRouter as  Router, Route, Link  } from 'react-router-dom'\nimport LocalStorageUploadManager from './LocalStorageUploadManager'\nimport ListsManager from './ListsManager'\nimport UtterancesManager from './UtterancesManager'\nimport NluExampleEditor from './NluExampleEditor'\nimport NavbarComponent from './components/NavbarComponent'\nimport {HelpText, HelpTextImport, HelpTextExport, HelpTextAbout} from './components/Components'\nimport NluImportEditor from './NluImportEditor'\nimport NluSkillsEditor from './NluSkillsEditor'\nimport SearchPage from './SearchPage'\nimport {Button} from 'react-bootstrap'\nimport localforage from 'localforage'\nconst gaTrackingCode = 'UA-3712973-4'\n\n\n\n//import images from './images'\n//console.log(images)\n//const axios = require('axios');\n  //axios.get('https://github.com/syntithenai/opennludata/wiki/test-skill')\n  //.then(function (response) {\n    //// handle success\n    //console.log(response);\n  //})\n  //.catch(function (error) {\n    //// handle error\n    //console.log(error);\n  //})\n//\n\nfunction SiteMenu(props) {\n    var astyle={paddingLeft:'0.3em'}\n    return <div style={{marginLeft:'0.5em'}}>\n            <h1>Menu</h1>\n            \n                <Link style={astyle} to=\"/sources\" ><Button>Sources</Button></Link>\n                <Link style={astyle} to=\"/import\" ><Button>Import</Button></Link>\n                <Link style={astyle} to=\"/examples\" ><Button>Organise</Button></Link>\n                <Link style={astyle} to=\"/skills\" ><Button>Skills </Button></Link>\n                <Link style={astyle} to=\"/search\" ><Button>Search Community </Button></Link>\n        </div>\n}\n\nfunction App() {\n    \n    const [waiting, setWaiting] = useState(false)\n    const [pageMessage, setPageMessage] = useState('')  \n    \n    //const [importFrom, setImportFrom] = useState(null)\n    // example summaries\n    const [intentLookups, setIntentLookups] = useState([])\n    const [entityLookups, setEntityLookups] = useState([])\n    const [tagLookups, setTagLookups] = useState([])\n    const [skillLookups, setSkillLookups] = useState([])\n    const [listsLookups, setListsLookups]= useState([])\n    const [selectedTally, setSelectedTally] = useState(0)\n    const [utterancesLookups, setUtterancesLookups] = useState([])\n    const [utteranceListsLookups, setUtteranceListsLookups] = useState([])\n    const [utteranceTagsLookups, setUtteranceTagsLookups] = useState([])\n    \n    // list summaries\n    const [listTally, setListTally] = useState(0)\n    const [selectedListTally, setSelectedListTally] = useState(0)\n    const [listTallyByList, setListTallyByList] = useState({})\n    const [selectedListTallyByList, setSelectedListTallyByList] = useState({})\n    \n    // search bar\n    //https://github.com/search?q=repo:syntithenai/opennludata&type=Wikis\n    const [skillFilterValue, setSkillFilterValue] = useState('')\n  \n\n    \n    function startWaiting() {\n        setWaiting(true)\n    }\n    \n    function stopWaiting() {\n        setTimeout(function() {\n            setWaiting(false)\n        },300)\n    }\n\n    function updateUtterances() {\n        console.log('UPDATE UTTERANCES')\n        var utteranceStorage = localforage.createInstance({\n           name: \"nlutool\",\n           storeName   : \"utterances\",\n         });\n         utteranceStorage.getItem('alldata', function (err,utterances) {\n                var utteranceLists={}\n                var utteranceIndex={}\n                var utteranceTags={}\n                //console.log(['UPDATE UTTERANCES',err,utterances])\n                if (Array.isArray(utterances)) {\n                    utterances.map(function(utterance,i) {\n                        console.log(['UPDATE UTTERANCE',utterance])\n                         if (utterance.value) {\n                             utteranceIndex[utterance.value]=true\n                         }\n                         if (utterance.synonym) {\n                             utterance.synonym.split(\"\\n\").map(function(tag) {\n                                 utteranceLists[tag] = true\n                                 return null\n                             })\n                         } \n                         if (utterance.tags && utterance.tags.length > 0) {\n                               utterance.tags.map(function(tag) {\n                                  utteranceTags[tag] = true  \n                                  return null\n                               })\n                         }\n                         return null\n                    })\n                    setUtterancesLookups(Object.keys(utteranceIndex))\n                    setUtteranceTagsLookups(Object.keys(utteranceTags))\n                    setUtteranceListsLookups(Object.keys(utteranceLists))\n                }\n                console.log(['UPDATE UTTERANCES',utteranceIndex,utteranceLists])\n                    \n              });\n            //});\n  \n    }\n\n    function updateLists(lists) {\n        if (lists) {\n            var newSelectedLists = {}\n            var newLists = {}\n            var tally = 0;\n             var selectedTally = 0;\n            lists.map(function(listItem) {\n                if (listItem && listItem.tags && listItem.tags.length > 0) {\n                    if (listItem.isSelected) {\n                             selectedTally += 1\n                    }\n                    listItem.tags.map(function(tag) {\n                        if (tag && tag.trim().length > 0) {\n                            if (listItem.isSelected) {\n                                 newLists[tag] = (newLists[tag] > 0) ? newLists[tag] + 1 : 1\n                                 newSelectedLists[tag] = (newSelectedLists[tag] > 0) ? newSelectedLists[tag] + 1 : 1\n                            } else {\n                                newLists[tag] = (newLists[tag] >0) ? newLists[tag] + 1 : 1\n                            }\n                        }\n                        return null\n                    })\n                    tally += 1;\n                }\n                return null\n            })\n            setListTally(tally)\n            setSelectedListTally(selectedTally)\n            setSelectedListTallyByList(newSelectedLists)\n            setListTallyByList(newLists)\n            setListsLookups(Object.keys(newLists))\n            //console.log('updated lists', newLists)\n        }\n    }\n\n    function updateLookups(items) {\n        //console.log(['UPDATELOOKUPS',items])\n        if (items && items.length > 0) {\n            var tags = {}\n            var intents = {}\n            var entities = {}\n            var skills = {}\n            var selected = 0;\n            items.map(function(item) {\n                if (item) {\n                    if (item.isSelected) selected = selected + 1;\n                   intents[item.intent] = true\n                   if (item.tags && item.tags.length > 0) {\n                       item.tags.map(function(tag) {\n                          tags[tag] = true  \n                          return null\n                       })\n                   }\n                   if (item.skills && item.skills.length > 0) {\n                       item.skills.map(function(skill) {\n                          skills[skill] = true  \n                          return null\n                       })\n                   }\n                   if (item.entities && item.entities.length > 0) {\n                       item.entities.map(function(entity) {\n                          if (entity.type) {\n                              entities[entity.type] = true  \n                          }\n                          return null\n                       })\n                   }\n                }\n               return null\n            })\n            const distinct = function(value,index,self) {\n                return self.indexOf(value) === index;\n            }\n            setIntentLookups([].concat(Object.keys(intents),intentLookups).filter(distinct))\n            setEntityLookups([].concat(Object.keys(entities),entityLookups).filter(distinct))\n            setTagLookups([].concat(Object.keys(tags),tagLookups).filter(distinct))\n            setSkillLookups([].concat(Object.keys(skills),skillLookups).filter(distinct))\n            setSelectedTally(selected)\n        }\n    }\n    const lookups = {utteranceTagsLookups:utteranceTagsLookups,utterancesLookups:utterancesLookups,utteranceListsLookups:utteranceListsLookups,intentLookups,entityLookups,tagLookups,skillLookups, selectedTally, listsLookups, listTally, selectedListTally, listTallyByList, selectedListTallyByList}\n    const updateFunctions = {updateLookups, updateLists, updateUtterances}\n  return (\n    <div className=\"OpenNluDataApp\">\n           \n        <Router>\n                <Route exact path='*' render={\n                    (props) => {\n                        return <NavbarComponent waiting={waiting} history={props.history} message={pageMessage} setPageMessage={setPageMessage}    />\n                    }}\n                />\n                \n                <Route exact path='/menu' component={SiteMenu} />\n                <Route path='/sources' render={\n                    (props) => <LocalStorageUploadManager {...props}  startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions} lookups={lookups}  />\n                }/>\n                <Route exact path='/import' render={\n                    (props) => <NluImportEditor {...props}        lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />}\n                          \n                />\n                \n                <Route exact path='/import/skill/:skillId' render={\n                    (props) => <NluImportEditor {...props}        lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />}\n                          \n                />\n                \n                <Route exact path='/import/intent/:intentId' render={\n                    (props) => <NluImportEditor {...props}        lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions} setPageMessage={setPageMessage}    />}\n                          \n                />\n                \n                <Route path='/import/skill/:skillId/intent/:intentId' render={\n                    (props) => <NluImportEditor {...props}        lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions} setPageMessage={setPageMessage}    />}\n                          \n                />\n                \n                \n                <Route exact  path='/examples' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route exact path='/examples/skill/:skillId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route path='/examples/intent/:intentId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route exact path='/examples/skill/:skillId/intent/:intentId' render={(props) => <NluExampleEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route exact path='/skills/:skillId' render={(props) => <NluSkillsEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                />\n                \n                <Route exact path='/skills/skill/:skillId' render={(props) => <NluSkillsEditor {...props}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                />\n\n                 <Route exact path='/skills' render={(props) => <NluSkillsEditor {...props} skillFilterValue={skillFilterValue} setSkillFilterValue={setSkillFilterValue}     lookups={lookups}  startWaiting={startWaiting} stopWaiting={stopWaiting} updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />} \n                />\n                \n               \n                <Route exact path='/lists' render={\n                    (props) => <ListsManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions}  setPageMessage={setPageMessage}    />}\n                          \n                />\n                <Route exact path='/lists/:listId' render={\n                    (props) => <ListsManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}  updateFunctions={updateFunctions}  setPageMessage={setPageMessage}   />}\n                          \n                />\n                \n                \n                <Route exact path='/utterances' render={\n                    (props) => <UtterancesManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions}   />}\n                          \n                />\n                <Route exact path='/utterances/:listId' render={\n                    (props) => <UtterancesManager {...props}   lookups={lookups}    startWaiting={startWaiting} stopWaiting={stopWaiting}   setPageMessage={setPageMessage}  updateFunctions={updateFunctions}  />}\n                          \n                />\n                \n                \n                <Route exact path='/help' component={HelpText}     />\n                <Route exact path='/helpimport' component={HelpTextImport}     />\n                <Route exact path='/helpexport' component={HelpTextExport}     />\n                <Route exact path='/helpabout' component={HelpTextAbout}     />\n                \n                 <Route exact path='/search' component={SearchPage}     />\n                <Route exact path='/' component={HelpText} />\n        </Router>\n        <br/>\n        <br/>\n        <br/>\n    </div>\n  );\n}\n                \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/check.8ab01baf.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumb-down.73b0ce24.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumb-up.f18de183.svg\";","module.exports = __webpack_public_path__ + \"static/media/helpoverview.a30e207d.svg\";","module.exports = __webpack_public_path__ + \"static/media/singingman.5d08cb4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/waiting.d362cb3f.gif\";","module.exports = __webpack_public_path__ + \"static/media/arrow-thick-left.f29ee705.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-thick-right.9ba7683e.svg\";"],"sourceRoot":""}